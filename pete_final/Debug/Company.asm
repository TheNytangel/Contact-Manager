; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	S:\Chris\OneDrive - UAT\C++ Programming II\pete_final\pete_final\Company.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0exception@std@@QAE@QBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	?compare@?$char_traits@D@std@@SAHPBD0I@Z	; std::char_traits<char>::compare
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAPADPADID@Z	; std::char_traits<char>::assign
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z	; std::char_traits<char>::eq_int_type
PUBLIC	?eof@?$char_traits@D@std@@SAHXZ			; std::char_traits<char>::eof
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
PUBLIC	??1_Container_base12@std@@QAE@XZ		; std::_Container_base12::~_Container_base12
PUBLIC	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QAE@ABU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Clrcont@_Iterator_base12@std@@QAEXXZ		; std::_Iterator_base12::_Clrcont
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ	; std::_Iterator_base12::_Getpnext
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	?_Allocate@std@@YAPAXII_N@Z			; std::_Allocate
PUBLIC	?_Deallocate@std@@YAXPAXII@Z			; std::_Deallocate
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@U_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	?address@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEPADAAD@Z ; std::_Wrap_alloc<std::allocator<char> >::address
PUBLIC	?address@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEPBDABD@Z ; std::_Wrap_alloc<std::allocator<char> >::address
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAU01@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	??4?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEAAU01@$$QAU01@@Z ; std::_Wrap_alloc<std::allocator<char> >::operator=
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
PUBLIC	??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
PUBLIC	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Move_alloc@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Move_alloc
PUBLIC	?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
PUBLIC	?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
PUBLIC	?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
PUBLIC	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace
PUBLIC	?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace
PUBLIC	?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace
PUBLIC	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
PUBLIC	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
PUBLIC	?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
PUBLIC	?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Traits_compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAHQBDI0I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Traits_compare
PUBLIC	?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
PUBLIC	?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	?name@type_info@@QBEPBDXZ			; type_info::name
PUBLIC	??0bad_cast@std@@QAE@XZ				; std::bad_cast::bad_cast
PUBLIC	??1bad_cast@std@@UAE@XZ				; std::bad_cast::~bad_cast
PUBLIC	??0bad_cast@std@@QAE@ABV01@@Z			; std::bad_cast::bad_cast
PUBLIC	??_Gbad_cast@std@@UAEPAXI@Z			; std::bad_cast::`scalar deleting destructor'
PUBLIC	??0locale@std@@QAE@XZ				; std::locale::locale
PUBLIC	??1locale@std@@QAE@XZ				; std::locale::~locale
PUBLIC	?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z	; std::locale::_Getfacet
PUBLIC	??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<char> >
PUBLIC	??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_flags_saver::ios_flags_saver
PUBLIC	??1ios_flags_saver@io@boost@@QAE@XZ		; boost::io::ios_flags_saver::~ios_flags_saver
PUBLIC	?restore@ios_flags_saver@io@boost@@QAEXXZ	; boost::io::ios_flags_saver::restore
PUBLIC	??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_precision_saver::ios_precision_saver
PUBLIC	??1ios_precision_saver@io@boost@@QAE@XZ		; boost::io::ios_precision_saver::~ios_precision_saver
PUBLIC	?restore@ios_precision_saver@io@boost@@QAEXXZ	; boost::io::ios_precision_saver::restore
PUBLIC	??_Darchive_exception@archive@boost@@QAEXXZ	; boost::archive::archive_exception::`vbase destructor'
PUBLIC	??0library_version_type@archive@boost@@QAE@ABI@Z ; boost::archive::library_version_type::library_version_type
PUBLIC	??Mlibrary_version_type@archive@boost@@QBE_NABV012@@Z ; boost::archive::library_version_type::operator<
PUBLIC	??0version_type@archive@boost@@QAE@ABI@Z	; boost::archive::version_type::version_type
PUBLIC	??Bversion_type@archive@boost@@QAEAAIXZ		; boost::archive::version_type::operator unsigned int &
PUBLIC	??B?$integral_constant@_N$00@boost@@QBEABU?$bool_@$00@mpl@1@XZ ; boost::integral_constant<bool,1>::operator boost::mpl::bool_<1> const &
PUBLIC	?get_debug_info@extended_type_info_typeid_0@typeid_system@serialization@boost@@EBEPBDXZ ; boost::serialization::typeid_system::extended_type_info_typeid_0::get_debug_info
PUBLIC	??0version_type@serialization@boost@@QAE@I@Z	; boost::serialization::version_type::version_type
PUBLIC	??Bversion_type@serialization@boost@@QBEABIXZ	; boost::serialization::version_type::operator unsigned int const &
PUBLIC	??0collection_size_type@serialization@boost@@QAE@XZ ; boost::serialization::collection_size_type::collection_size_type
PUBLIC	??0collection_size_type@serialization@boost@@QAE@ABI@Z ; boost::serialization::collection_size_type::collection_size_type
PUBLIC	??0collection_size_type@serialization@boost@@QAE@ABV012@@Z ; boost::serialization::collection_size_type::collection_size_type
PUBLIC	??Bcollection_size_type@serialization@boost@@QBEIXZ ; boost::serialization::collection_size_type::operator unsigned int
PUBLIC	??Bcollection_size_type@serialization@boost@@QAEAAIXZ ; boost::serialization::collection_size_type::operator unsigned int &
PUBLIC	?serialized_as_pointer@basic_iserializer@detail@archive@boost@@QBE_NXZ ; boost::archive::detail::basic_iserializer::serialized_as_pointer
PUBLIC	??0item_version_type@serialization@boost@@QAE@I@Z ; boost::serialization::item_version_type::item_version_type
PUBLIC	??0item_version_type@serialization@boost@@QAE@ABV012@@Z ; boost::serialization::item_version_type::item_version_type
PUBLIC	??4item_version_type@serialization@boost@@QAEAAV012@V012@@Z ; boost::serialization::item_version_type::operator=
PUBLIC	??Bitem_version_type@serialization@boost@@QBEIXZ ; boost::serialization::item_version_type::operator unsigned int
PUBLIC	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
PUBLIC	?load@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVitem_version_type@serialization@3@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load
PUBLIC	?serialized_as_pointer@basic_oserializer@detail@archive@boost@@QBE_NXZ ; boost::archive::detail::basic_oserializer::serialized_as_pointer
PUBLIC	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
PUBLIC	?save@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVitem_version_type@serialization@3@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save
PUBLIC	??0CCompany@@QAE@XZ				; CCompany::CCompany
PUBLIC	??0CCompany@@QAE@_N@Z				; CCompany::CCompany
PUBLIC	??1CCompany@@UAE@XZ				; CCompany::~CCompany
PUBLIC	?classType@CCompany@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CCompany::classType
PUBLIC	?display@CCompany@@UAEXXZ			; CCompany::display
PUBLIC	?displayName@CCompany@@UAEXXZ			; CCompany::displayName
PUBLIC	?getContactInformation@CCompany@@UAEXXZ		; CCompany::getContactInformation
PUBLIC	?contains@CCompany@@UAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CCompany::contains
PUBLIC	??8CCompany@@UBE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CCompany::operator==
PUBLIC	?getSortableName@CCompany@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CCompany::getSortableName
PUBLIC	?save@CCompany@@UBEXAAVtext_oarchive@archive@boost@@I@Z ; CCompany::save
PUBLIC	?load@CCompany@@UAEXAAVtext_iarchive@archive@boost@@I@Z ; CCompany::load
PUBLIC	??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
PUBLIC	?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate
PUBLIC	?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAIABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Free_proxy
PUBLIC	?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getpfirst
PUBLIC	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myproxy
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Orphan_all
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myend
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myend
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>
PUBLIC	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::reserve
PUBLIC	?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
PUBLIC	?_Unused_capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unused_capacity
PUBLIC	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
PUBLIC	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
PUBLIC	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
PUBLIC	?resize@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::resize
PUBLIC	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
PUBLIC	?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
PUBLIC	?_Pop_back_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Pop_back_n
PUBLIC	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
PUBLIC	?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEII@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Grow_to
PUBLIC	?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reallocate
PUBLIC	?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve
PUBLIC	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
PUBLIC	?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
PUBLIC	?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range
PUBLIC	??_G?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::`scalar deleting destructor'
PUBLIC	?generateMenus@CCompany@@EAEXXZ			; CCompany::generateMenus
PUBLIC	?getPhoneNumbers@CCompany@@AAEXXZ		; CCompany::getPhoneNumbers
PUBLIC	?getFaxNumbers@CCompany@@AAEXXZ			; CCompany::getFaxNumbers
PUBLIC	?getEmailAddresses@CCompany@@AAEXXZ		; CCompany::getEmailAddresses
PUBLIC	?greater@CCompany@@EAE_NAAVCContact@@@Z		; CCompany::greater
PUBLIC	??_GCCompany@@UAEPAXI@Z				; CCompany::`scalar deleting destructor'
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>
PUBLIC	??4?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAEAAU01@$$QAU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>::operator=
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Compat
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator=
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??4?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator=
PUBLIC	??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
PUBLIC	??$to_upper_copy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@ABVlocale@3@@Z ; boost::algorithm::to_upper_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?ODU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator><char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?6V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$?6V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$?5V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$?5V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@$$QAU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>
PUBLIC	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEABDXZ ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
PUBLIC	??E?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAEAAV01@XZ ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator++
PUBLIC	??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator-
PUBLIC	??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator==
PUBLIC	?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEXABV12@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_Compat
PUBLIC	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
PUBLIC	??G?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator-
PUBLIC	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$_Debug_pointer@$$CBD@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char const >
PUBLIC	??$?9V?$allocator@D@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z ; std::operator!=<std::allocator<char>,std::allocator<char> >
PUBLIC	??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
PUBLIC	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$move@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<char> > &>
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1><>
PUBLIC	??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAV?$allocator@D@1@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> >
PUBLIC	??$_Pocma@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z ; std::_Pocma<std::_Wrap_alloc<std::allocator<char> > >
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$addressof@PAD@std@@YAPAPADAAPAD@Z		; std::addressof<char *>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$_Unfancy@D@std@@YAPADPAD@Z			; std::_Unfancy<char>
PUBLIC	??$_Debug_pointer_if@$$CBD@std@@YAX_NPBDPB_WI@Z	; std::_Debug_pointer_if<char const >
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$?0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$_Unfancy@$$CBD@std@@YAPBDPBD@Z		; std::_Unfancy<char const >
PUBLIC	?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z ; std::pointer_traits<char *>::pointer_to
PUBLIC	??$?0AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<char> > &>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z ; std::pointer_traits<std::_Container_proxy *>::pointer_to
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??0?$to_upperF@D@detail@algorithm@boost@@QAE@ABVlocale@std@@@Z ; boost::algorithm::detail::to_upperF<char>::to_upperF<char>
PUBLIC	??R?$to_upperF@D@detail@algorithm@boost@@QBEDD@Z ; boost::algorithm::detail::to_upperF<char>::operator()
PUBLIC	??$transform_range_copy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$to_upperF@D@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV34@U?$to_upperF@D@012@@Z ; boost::algorithm::detail::transform_range_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::to_upperF<char> >
PUBLIC	??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
PUBLIC	??$save_override@$$CBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const >
PUBLIC	??$load_override@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$load_override@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$?8V?$allocator@D@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z ; std::operator==<std::allocator<char>,std::allocator<char> >
PUBLIC	??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z		; std::operator==<char,char>
PUBLIC	??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
PUBLIC	??$_Pocma@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@0U?$integral_constant@_N$00@0@@Z ; std::_Pocma<std::_Wrap_alloc<std::allocator<char> > >
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$forward@AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>
PUBLIC	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$_Destroy_range1@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Destroy_range1<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$forward@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<char> > &>
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??$?0ABV?$allocator@D@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::allocator<char> const &,void>
PUBLIC	??$begin@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_adl_barrier@boost@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; boost::range_adl_barrier::begin<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$make_transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@iterators@boost@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@U?$to_upperF@D@detail@algorithm@1@@Z ; boost::iterators::make_transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > > >
PUBLIC	??D?$iterator_facade_base@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH$0A@$0A@@detail@iterators@boost@@QBEDXZ ; boost::iterators::detail::iterator_facade_base<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int,0,0>::operator*
PUBLIC	??E?$iterator_facade_base@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH$0A@$0A@@detail@iterators@boost@@QAEAAV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@23@XZ ; boost::iterators::detail::iterator_facade_base<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int,0,0>::operator++
PUBLIC	?derived@?$iterator_facade_base@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH$0A@$0A@@detail@iterators@boost@@IAEAAV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@34@XZ ; boost::iterators::detail::iterator_facade_base<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int,0,0>::derived
PUBLIC	?derived@?$iterator_facade_base@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH$0A@$0A@@detail@iterators@boost@@IBEABV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@34@XZ ; boost::iterators::detail::iterator_facade_base<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int,0,0>::derived
PUBLIC	??0?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QAE@ABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@Z ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>
PUBLIC	?base@?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QBEABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@XZ ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::base
PUBLIC	?increment@?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@AAEXXZ ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::increment
PUBLIC	??1?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QAE@XZ ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::~iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>
PUBLIC	??0?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QAE@ABV012@@Z ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>
PUBLIC	??0?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QAE@$$QAV012@@Z ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>
PUBLIC	??0?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@ABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@U?$to_upperF@D@detail@algorithm@2@@Z ; boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>
PUBLIC	?dereference@?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@ABEDXZ ; boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>::dereference
PUBLIC	??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ ; boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>::~transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>
PUBLIC	??0?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@ABV012@@Z ; boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>
PUBLIC	??0?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@$$QAV012@@Z ; boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>
PUBLIC	??$end@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_adl_barrier@boost@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; boost::range_adl_barrier::end<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$?0V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@X@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0ABV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,void>
PUBLIC	??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
PUBLIC	??$save_override@$$CBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const >
PUBLIC	??$load_override@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$load_override@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$forward@ABV?$allocator@D@std@@@std@@YAABV?$allocator@D@0@ABV10@@Z ; std::forward<std::allocator<char> const &>
PUBLIC	??$?0ABV?$allocator@D@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@D@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
PUBLIC	??$range_begin@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; boost::range_detail::range_begin<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
PUBLIC	??$range_end@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; boost::range_detail::range_end<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
PUBLIC	??$_Debug_range@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WI@Z ; std::_Debug_range<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >
PUBLIC	??$_Unchecked@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V123@@Z ; std::_Unchecked<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >
PUBLIC	??$_Construct@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0Uinput_iterator_tag@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >
PUBLIC	??$save@Vtext_oarchive@archive@boost@@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@archive@boost@@YAXAAVtext_oarchive@01@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::save<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
PUBLIC	??$save@Vtext_oarchive@archive@boost@@$$CBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@archive@boost@@YAXAAVtext_oarchive@01@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::save<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const >
PUBLIC	??$load_override@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$load_override@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$?0ABV?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> const &>
PUBLIC	??$_Debug_range2@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WIUinput_iterator_tag@0@@Z ; std::_Debug_range2<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >
PUBLIC	??$?9V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@12@DHV012@DU312@DH@iterators@boost@@YA_NABV?$iterator_facade@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH@01@0@Z ; boost::iterators::operator!=<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int,boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int>
PUBLIC	??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$invoke@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$load@Vtext_iarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@archive@boost@@YAXAAVtext_iarchive@01@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::load<boost::archive::text_iarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$load@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@archive@boost@@YAXAAVtext_iarchive@01@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::load<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$increment@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@iterator_core_access@iterators@boost@@CAXAAV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@12@@Z ; boost::iterators::iterator_core_access::increment<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >
PUBLIC	??$dereference@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@iterator_core_access@iterators@boost@@CADABV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@12@@Z ; boost::iterators::iterator_core_access::dereference<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >
PUBLIC	?pointer_to@?$pointer_traits@PBD@std@@SAPBDABD@Z ; std::pointer_traits<char const *>::pointer_to
PUBLIC	??$addressof@$$CBD@std@@YAPBDABD@Z		; std::addressof<char const >
PUBLIC	??$?8V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@12@DHV012@DU312@DH@iterators@boost@@YA_NABV?$iterator_facade@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH@01@0@Z ; boost::iterators::operator==<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int,boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int>
PUBLIC	??$equal@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V123@@iterator_core_access@iterators@boost@@CA_NABV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@12@0U?$bool_@$00@mpl@2@@Z ; boost::iterators::iterator_core_access::equal<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >
PUBLIC	??$check_object_versioning@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$check_object_versioning@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$invoke@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@save_standard@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_standard::invoke<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$check_const_loading@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$check_const_loading@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$invoke@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$dereference@$$CBU?$bool_@$00@mpl@boost@@@?$integral_constant@_N$00@boost@@SAABU?$bool_@$00@mpl@1@PBU231@@Z ; boost::integral_constant<bool,1>::dereference<boost::mpl::bool_<1> const >
PUBLIC	??$toupper@D@std@@YADDABVlocale@0@@Z		; std::toupper<char>
PUBLIC	??$equal@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@ABE_NABV012@@Z ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::equal<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>
PUBLIC	??$save_primitive@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?use@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@@Z ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::use
PUBLIC	?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance
PUBLIC	?get_const_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@SAABV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_const_instance
PUBLIC	??0?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@QAE@XZ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	?save_object_data@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBEXAAVbasic_oarchive@234@PBX@Z ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::save_object_data
PUBLIC	?class_info@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NXZ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::class_info
PUBLIC	?tracking@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NI@Z ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::tracking
PUBLIC	?version@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE?AVversion_type@34@XZ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::version
PUBLIC	?is_polymorphic@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NXZ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::is_polymorphic
PUBLIC	??1?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UAE@XZ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??_G?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UAEPAXI@Z ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`scalar deleting destructor'
PUBLIC	??$check_object_level@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$check_object_level@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$invoke@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@load_standard@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_standard::invoke<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??1?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??0?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??_G?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`scalar deleting destructor'
PUBLIC	??__Ft@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ@YAXXZ ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::`dynamic atexit destructor for 't''
PUBLIC	?use@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAXPBV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@@Z ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::use
PUBLIC	?get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance
PUBLIC	?get_const_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@SAABV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_const_instance
PUBLIC	??0?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@QAE@XZ ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??1?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UAE@XZ ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	?construct@?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UBAPAXIZZ ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::construct
PUBLIC	?destroy@?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UBEXQBX@Z ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::destroy
PUBLIC	??_G?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UAEPAXI@Z ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`scalar deleting destructor'
PUBLIC	??$destroy@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@access@serialization@boost@@SAXPBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::serialization::access::destroy<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$__vcrt_va_start_verify_argument_type@I@@YAXXZ ; __vcrt_va_start_verify_argument_type<unsigned int>
PUBLIC	??$factory@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$0A@@serialization@boost@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAD@Z ; boost::serialization::factory<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0>
PUBLIC	??$factory@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$00@serialization@boost@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAD@Z ; boost::serialization::factory<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>
PUBLIC	??$factory@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$01@serialization@boost@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAD@Z ; boost::serialization::factory<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,2>
PUBLIC	??$factory@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$02@serialization@boost@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAD@Z ; boost::serialization::factory<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,3>
PUBLIC	??$factory@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$03@serialization@boost@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAD@Z ; boost::serialization::factory<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,4>
PUBLIC	??1?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??0?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@QAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??_G?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@UAEPAXI@Z ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`scalar deleting destructor'
PUBLIC	??__Ft@?1??get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ@YAXXZ ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::`dynamic atexit destructor for 't''
PUBLIC	??$guid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@YAPBDXZ ; boost::serialization::guid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$smart_cast_reference@AAVtext_oarchive@archive@boost@@Vbasic_oarchive@detail@23@@serialization@boost@@YAAAVtext_oarchive@archive@1@AAVbasic_oarchive@detail@31@@Z ; boost::serialization::smart_cast_reference<boost::archive::text_oarchive &,boost::archive::detail::basic_oarchive>
PUBLIC	??$serialize_adl@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ; boost::serialization::serialize_adl<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$load_primitive@Vtext_iarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?use@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@@Z ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::use
PUBLIC	?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance
PUBLIC	?get_const_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@SAABV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_const_instance
PUBLIC	?destroy@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@EBEXPAX@Z ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::destroy
PUBLIC	??0?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@IAE@XZ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	?load_object_data@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBEXAAVbasic_iarchive@234@PAXI@Z ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::load_object_data
PUBLIC	?class_info@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NXZ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::class_info
PUBLIC	?tracking@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NI@Z ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::tracking
PUBLIC	?version@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE?AVversion_type@34@XZ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::version
PUBLIC	?is_polymorphic@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NXZ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::is_polymorphic
PUBLIC	??1?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UAE@XZ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??_G?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UAEPAXI@Z ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`scalar deleting destructor'
PUBLIC	?call@?$guid_impl@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@ext@serialization@boost@@SAPBDXZ ; boost::serialization::ext::guid_impl<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::call
PUBLIC	??$save@I@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABI@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<unsigned int>
PUBLIC	??1?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??0?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??_G?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`scalar deleting destructor'
PUBLIC	??__Ft@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ@YAXXZ ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::`dynamic atexit destructor for 't''
PUBLIC	??$cast@Vbasic_oarchive@detail@archive@boost@@@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@3@AAVbasic_oarchive@detail@53@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::cast<boost::archive::detail::basic_oarchive>
PUBLIC	??$serialize@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ; boost::serialization::serialize<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$smart_cast_reference@AAVtext_iarchive@archive@boost@@Vbasic_iarchive@detail@23@@serialization@boost@@YAAAVtext_iarchive@archive@1@AAVbasic_iarchive@detail@31@@Z ; boost::serialization::smart_cast_reference<boost::archive::text_iarchive &,boost::archive::detail::basic_iarchive>
PUBLIC	??$serialize_adl@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ; boost::serialization::serialize_adl<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<unsigned int>
PUBLIC	??$load@I@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAI@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<unsigned int>
PUBLIC	??$cast@Vbasic_oarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@4@AAVbasic_oarchive@detail@64@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::polymorphic::cast<boost::archive::detail::basic_oarchive>
PUBLIC	??$split_free@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ; boost::serialization::split_free<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$cast@Vbasic_iarchive@detail@archive@boost@@@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@3@AAVbasic_iarchive@detail@53@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::cast<boost::archive::detail::basic_iarchive>
PUBLIC	??$serialize@Vtext_iarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ; boost::serialization::serialize<boost::archive::text_iarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
PUBLIC	??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<unsigned int>
PUBLIC	??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<unsigned int>
PUBLIC	??$cast@Vbasic_oarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@5@AAVbasic_oarchive@detail@75@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::polymorphic::cross::cast<boost::archive::detail::basic_oarchive>
PUBLIC	?invoke@?$free_saver@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@SAXAAVtext_oarchive@archive@3@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ; boost::serialization::free_saver<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::invoke
PUBLIC	??$cast@Vbasic_iarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@4@AAVbasic_iarchive@detail@64@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::polymorphic::cast<boost::archive::detail::basic_iarchive>
PUBLIC	??$split_free@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ; boost::serialization::split_free<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$save@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_oarchive@archive@1@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ; boost::serialization::save<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$cast@Vbasic_iarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@5@AAVbasic_iarchive@detail@75@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::polymorphic::cross::cast<boost::archive::detail::basic_iarchive>
PUBLIC	?invoke@?$free_loader@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@SAXAAVtext_iarchive@archive@3@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ; boost::serialization::free_loader<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::invoke
PUBLIC	??$save@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_oarchive@archive@1@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IU?$bool_@$0A@@mpl@1@@Z ; boost::serialization::save<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$load@Vtext_iarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ; boost::serialization::load<boost::archive::text_iarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$save_collection@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_oarchive@archive@2@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::serialization::stl::save_collection<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$load@Vtext_iarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IU?$bool_@$0A@@mpl@1@@Z ; boost::serialization::load<boost::archive::text_iarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$save_collection@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_oarchive@archive@2@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@@Z ; boost::serialization::stl::save_collection<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$make_nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@YA?BU?$nvp@Vcollection_size_type@serialization@boost@@@01@PBDAAVcollection_size_type@01@@Z ; boost::serialization::make_nvp<boost::serialization::collection_size_type>
PUBLIC	??0?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QAE@PBDAAVcollection_size_type@12@@Z ; boost::serialization::nvp<boost::serialization::collection_size_type>::nvp<boost::serialization::collection_size_type>
PUBLIC	?value@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QBEAAVcollection_size_type@23@XZ ; boost::serialization::nvp<boost::serialization::collection_size_type>::value
PUBLIC	?const_value@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QBEABVcollection_size_type@23@XZ ; boost::serialization::nvp<boost::serialization::collection_size_type>::const_value
PUBLIC	??$?5$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::serialization::nvp<boost::serialization::collection_size_type> const >
PUBLIC	??$make_nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@YA?BU?$nvp@Vitem_version_type@serialization@boost@@@01@PBDAAVitem_version_type@01@@Z ; boost::serialization::make_nvp<boost::serialization::item_version_type>
PUBLIC	??0?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@QAE@PBDAAVitem_version_type@12@@Z ; boost::serialization::nvp<boost::serialization::item_version_type>::nvp<boost::serialization::item_version_type>
PUBLIC	?value@?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@QBEAAVitem_version_type@23@XZ ; boost::serialization::nvp<boost::serialization::item_version_type>::value
PUBLIC	??$?5$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@ABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::serialization::nvp<boost::serialization::item_version_type> const >
PUBLIC	??$collection_load_impl@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_iarchive@archive@2@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@Vitem_version_type@12@@Z ; boost::serialization::stl::collection_load_impl<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$?6U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::serialization::nvp<boost::serialization::collection_size_type> >
PUBLIC	??$make_nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@YA?BU?$nvp@$$CBVitem_version_type@serialization@boost@@@01@PBDABVitem_version_type@01@@Z ; boost::serialization::make_nvp<boost::serialization::item_version_type const >
PUBLIC	??0?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@QAE@PBDABVitem_version_type@12@@Z ; boost::serialization::nvp<boost::serialization::item_version_type const >::nvp<boost::serialization::item_version_type const >
PUBLIC	?const_value@?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@QBEABVitem_version_type@23@XZ ; boost::serialization::nvp<boost::serialization::item_version_type const >::const_value
PUBLIC	??$?6U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::serialization::nvp<boost::serialization::item_version_type const > >
PUBLIC	??$save_construct_data_adl@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; boost::serialization::save_construct_data_adl<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$make_nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@YA?BU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@PBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::serialization::make_nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
PUBLIC	??0?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QAE@PBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
PUBLIC	?const_value@?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::const_value
PUBLIC	??$?6U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >
PUBLIC	??$load_override@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@2@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<boost::serialization::collection_size_type> const >
PUBLIC	??$load_override@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@2@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<boost::serialization::item_version_type> const >
PUBLIC	??$make_nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@YA?BU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@PBDAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::serialization::make_nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QAE@PBDAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?value@?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::value
PUBLIC	??$?5$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@ABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >
PUBLIC	??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$?0AAPBDPAVitem_version_type@serialization@boost@@X$0A@@?$pair@PBDPAVitem_version_type@serialization@boost@@@std@@QAE@AAPBD$$QAPAVitem_version_type@serialization@boost@@@Z ; std::pair<char const *,boost::serialization::item_version_type *>::pair<char const *,boost::serialization::item_version_type *><char const * &,boost::serialization::item_version_type *,void,0>
PUBLIC	??$?0AAPBDPAVcollection_size_type@serialization@boost@@X$0A@@?$pair@PBDPAVcollection_size_type@serialization@boost@@@std@@QAE@AAPBD$$QAPAVcollection_size_type@serialization@boost@@@Z ; std::pair<char const *,boost::serialization::collection_size_type *>::pair<char const *,boost::serialization::collection_size_type *><char const * &,boost::serialization::collection_size_type *,void,0>
PUBLIC	??$_Uninitialized_default_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z ; std::_Uninitialized_default_fill_n<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,unsigned int,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$save_override@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@2@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::nvp<boost::serialization::collection_size_type> const >
PUBLIC	??$save_override@$$CBU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@2@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::nvp<boost::serialization::item_version_type const > const >
PUBLIC	??$save_construct_data@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; boost::serialization::save_construct_data<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$save_override@$$CBU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@2@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > const >
PUBLIC	??$load_override@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@2@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<boost::serialization::collection_size_type> const >
PUBLIC	??$load_override@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@2@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<boost::serialization::item_version_type> const >
PUBLIC	??$load_override@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@2@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >
PUBLIC	??$_Unchecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z ; std::_Unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$_Uninitialized_move_al_unchecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z ; std::_Uninitialized_move_al_unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Rechecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPAV10@PAV10@@Z ; std::_Rechecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$forward@AAPBD@std@@YAAAPBDAAPBD@Z		; std::forward<char const * &>
PUBLIC	??$forward@PAVitem_version_type@serialization@boost@@@std@@YA$$QAPAVitem_version_type@serialization@boost@@AAPAV123@@Z ; std::forward<boost::serialization::item_version_type *>
PUBLIC	??$forward@PAVcollection_size_type@serialization@boost@@@std@@YA$$QAPAVcollection_size_type@serialization@boost@@AAPAV123@@Z ; std::forward<boost::serialization::collection_size_type *>
PUBLIC	??$_Uninitialized_default_fill_n1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Uninitialized_default_fill_n1<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,unsigned int,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$?0AAPBDPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@X$0A@@?$pair@PBDPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAPBD$$QAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::pair<char const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>::pair<char const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *><char const * &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,void,0>
PUBLIC	??$?0AAPBDPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@X$0A@@?$pair@PBDPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAPBD$$QAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::pair<char const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>::pair<char const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *><char const * &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,void,0>
PUBLIC	??$?0AAPBDPBVitem_version_type@serialization@boost@@X$0A@@?$pair@PBDPBVitem_version_type@serialization@boost@@@std@@QAE@AAPBD$$QAPBVitem_version_type@serialization@boost@@@Z ; std::pair<char const *,boost::serialization::item_version_type const *>::pair<char const *,boost::serialization::item_version_type const *><char const * &,boost::serialization::item_version_type const *,void,0>
PUBLIC	??$save_override@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::nvp<boost::serialization::collection_size_type> const >
PUBLIC	??$save_override@$$CBU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::nvp<boost::serialization::item_version_type const > const >
PUBLIC	??$save_override@$$CBU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > const >
PUBLIC	??$load_override@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<boost::serialization::collection_size_type> const >
PUBLIC	??$load_override@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<boost::serialization::item_version_type> const >
PUBLIC	??$load_override@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@2@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >
PUBLIC	??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??$_Ptr_move_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::_Ptr_move_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Uninitialized_move_al_unchecked1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked1<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$?0U?$integral_constant@_N$00@std@@@_Any_tag@std@@QAE@$$QAU?$integral_constant@_N$00@1@@Z ; std::_Any_tag::_Any_tag<std::integral_constant<bool,1> >
PUBLIC	??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$forward@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$forward@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPBV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>
PUBLIC	??$forward@PBVitem_version_type@serialization@boost@@@std@@YA$$QAPBVitem_version_type@serialization@boost@@AAPBV123@@Z ; std::forward<boost::serialization::item_version_type const *>
PUBLIC	??$save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@archive@boost@@YAXAAVtext_oarchive@01@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@1@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> const >
PUBLIC	??$save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@archive@boost@@YAXAAVtext_oarchive@01@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@1@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > const >
PUBLIC	??$save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@archive@boost@@YAXAAVtext_oarchive@01@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@1@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > const >
PUBLIC	??$load@Vtext_iarchive@archive@boost@@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@archive@boost@@YAXAAVtext_iarchive@01@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@1@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> const >
PUBLIC	??$load@Vtext_iarchive@archive@boost@@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@archive@boost@@YAXAAVtext_iarchive@01@ABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@1@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> const >
PUBLIC	??$load_override@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >
PUBLIC	??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$invoke@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::serialization::nvp<boost::serialization::collection_size_type> >
PUBLIC	??$invoke@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::serialization::nvp<boost::serialization::item_version_type const > >
PUBLIC	??$invoke@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >
PUBLIC	??$check_const_loading@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::serialization::nvp<boost::serialization::collection_size_type> const >
PUBLIC	??$invoke@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::serialization::nvp<boost::serialization::collection_size_type> const >
PUBLIC	??$check_const_loading@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::serialization::nvp<boost::serialization::item_version_type> const >
PUBLIC	??$invoke@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@ABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::serialization::nvp<boost::serialization::item_version_type> const >
PUBLIC	??$load@Vtext_iarchive@archive@boost@@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@archive@boost@@YAXAAVtext_iarchive@01@ABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@1@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >
PUBLIC	??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV31@@Z ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$check_object_versioning@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::serialization::nvp<boost::serialization::collection_size_type> >
PUBLIC	??$invoke@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@save_only@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@4@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_only::invoke<boost::serialization::nvp<boost::serialization::collection_size_type> >
PUBLIC	??$check_object_versioning@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::serialization::nvp<boost::serialization::item_version_type const > >
PUBLIC	??$invoke@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@save_only@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@4@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_only::invoke<boost::serialization::nvp<boost::serialization::item_version_type const > >
PUBLIC	??$check_object_versioning@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >
PUBLIC	??$invoke@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@save_only@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@4@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_only::invoke<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >
PUBLIC	??$check_object_versioning@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::serialization::nvp<boost::serialization::collection_size_type> const >
PUBLIC	??$check_object_level@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::serialization::nvp<boost::serialization::collection_size_type> const >
PUBLIC	??$invoke@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@load_only@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@4@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_only::invoke<boost::serialization::nvp<boost::serialization::collection_size_type> >
PUBLIC	??$check_object_versioning@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::serialization::nvp<boost::serialization::item_version_type> const >
PUBLIC	??$check_object_level@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::serialization::nvp<boost::serialization::item_version_type> const >
PUBLIC	??$invoke@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@load_only@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@4@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_only::invoke<boost::serialization::nvp<boost::serialization::item_version_type> >
PUBLIC	??$check_const_loading@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >
PUBLIC	??$invoke@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@ABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >
PUBLIC	??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$serialize_adl@Vtext_oarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z ; boost::serialization::serialize_adl<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
PUBLIC	??$serialize_adl@Vtext_oarchive@archive@boost@@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBVitem_version_type@serialization@boost@@@01@I@Z ; boost::serialization::serialize_adl<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > >
PUBLIC	??$serialize_adl@Vtext_oarchive@archive@boost@@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z ; boost::serialization::serialize_adl<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >
PUBLIC	??$serialize_adl@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z ; boost::serialization::serialize_adl<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
PUBLIC	??$serialize_adl@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vitem_version_type@serialization@boost@@@01@I@Z ; boost::serialization::serialize_adl<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> >
PUBLIC	??$check_object_versioning@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >
PUBLIC	??$check_object_level@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >
PUBLIC	??$invoke@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@load_only@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@4@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_only::invoke<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z ; boost::serialization::serialize<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
PUBLIC	??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBVitem_version_type@serialization@boost@@@01@I@Z ; boost::serialization::serialize<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > >
PUBLIC	??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z ; boost::serialization::serialize<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >
PUBLIC	??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z ; boost::serialization::serialize<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
PUBLIC	??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vitem_version_type@serialization@boost@@@01@I@Z ; boost::serialization::serialize<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> >
PUBLIC	??$serialize_adl@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z ; boost::serialization::serialize_adl<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@AAU?$nvp@Vcollection_size_type@serialization@boost@@@12@I@Z ; boost::serialization::access::serialize<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
PUBLIC	??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@AAU?$nvp@$$CBVitem_version_type@serialization@boost@@@12@I@Z ; boost::serialization::access::serialize<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > >
PUBLIC	??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@AAU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@12@I@Z ; boost::serialization::access::serialize<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >
PUBLIC	??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@Vcollection_size_type@serialization@boost@@@12@I@Z ; boost::serialization::access::serialize<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
PUBLIC	??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@Vitem_version_type@serialization@boost@@@12@I@Z ; boost::serialization::access::serialize<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> >
PUBLIC	??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z ; boost::serialization::serialize<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$serialize@Vtext_oarchive@archive@boost@@@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_oarchive@archive@2@I@Z ; boost::serialization::nvp<boost::serialization::collection_size_type>::serialize<boost::archive::text_oarchive>
PUBLIC	??$serialize@Vtext_oarchive@archive@boost@@@?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_oarchive@archive@2@I@Z ; boost::serialization::nvp<boost::serialization::item_version_type const >::serialize<boost::archive::text_oarchive>
PUBLIC	??$serialize@Vtext_oarchive@archive@boost@@@?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QAEXAAVtext_oarchive@archive@2@I@Z ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::serialize<boost::archive::text_oarchive>
PUBLIC	??$serialize@Vtext_iarchive@archive@boost@@@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z ; boost::serialization::nvp<boost::serialization::collection_size_type>::serialize<boost::archive::text_iarchive>
PUBLIC	??$serialize@Vtext_iarchive@archive@boost@@@?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z ; boost::serialization::nvp<boost::serialization::item_version_type>::serialize<boost::archive::text_iarchive>
PUBLIC	??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@12@I@Z ; boost::serialization::access::serialize<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$split_member@Vtext_oarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z ; boost::serialization::split_member<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
PUBLIC	??$split_member@Vtext_oarchive@archive@boost@@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBVitem_version_type@serialization@boost@@@01@I@Z ; boost::serialization::split_member<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > >
PUBLIC	??$split_member@Vtext_oarchive@archive@boost@@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z ; boost::serialization::split_member<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >
PUBLIC	??$split_member@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z ; boost::serialization::split_member<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
PUBLIC	??$split_member@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vitem_version_type@serialization@boost@@@01@I@Z ; boost::serialization::split_member<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> >
PUBLIC	??$serialize@Vtext_iarchive@archive@boost@@@?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::serialize<boost::archive::text_iarchive>
PUBLIC	?invoke@?$member_saver@Vtext_oarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_oarchive@archive@4@ABU?$nvp@Vcollection_size_type@serialization@boost@@@34@I@Z ; boost::serialization::detail::member_saver<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >::invoke
PUBLIC	?invoke@?$member_saver@Vtext_oarchive@archive@boost@@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_oarchive@archive@4@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@34@I@Z ; boost::serialization::detail::member_saver<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > >::invoke
PUBLIC	?invoke@?$member_saver@Vtext_oarchive@archive@boost@@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_oarchive@archive@4@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@I@Z ; boost::serialization::detail::member_saver<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >::invoke
PUBLIC	?invoke@?$member_loader@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_iarchive@archive@4@AAU?$nvp@Vcollection_size_type@serialization@boost@@@34@I@Z ; boost::serialization::detail::member_loader<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >::invoke
PUBLIC	?invoke@?$member_loader@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_iarchive@archive@4@AAU?$nvp@Vitem_version_type@serialization@boost@@@34@I@Z ; boost::serialization::detail::member_loader<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> >::invoke
PUBLIC	??$split_member@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z ; boost::serialization::split_member<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$member_load@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@Vitem_version_type@serialization@boost@@@12@I@Z ; boost::serialization::access::member_load<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> >
PUBLIC	??$member_load@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@Vcollection_size_type@serialization@boost@@@12@I@Z ; boost::serialization::access::member_load<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
PUBLIC	??$member_save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@12@I@Z ; boost::serialization::access::member_save<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > const >
PUBLIC	??$member_save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@12@I@Z ; boost::serialization::access::member_save<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > const >
PUBLIC	??$member_save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@ABU?$nvp@Vcollection_size_type@serialization@boost@@@12@I@Z ; boost::serialization::access::member_save<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> const >
PUBLIC	?invoke@?$member_loader@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_iarchive@archive@4@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@I@Z ; boost::serialization::detail::member_loader<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::invoke
PUBLIC	??$load@Vtext_iarchive@archive@boost@@@?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z ; boost::serialization::nvp<boost::serialization::item_version_type>::load<boost::archive::text_iarchive>
PUBLIC	??$load@Vtext_iarchive@archive@boost@@@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z ; boost::serialization::nvp<boost::serialization::collection_size_type>::load<boost::archive::text_iarchive>
PUBLIC	??$save@Vtext_oarchive@archive@boost@@@?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QBEXAAVtext_oarchive@archive@2@I@Z ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::save<boost::archive::text_oarchive>
PUBLIC	??$save@Vtext_oarchive@archive@boost@@@?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@QBEXAAVtext_oarchive@archive@2@I@Z ; boost::serialization::nvp<boost::serialization::item_version_type const >::save<boost::archive::text_oarchive>
PUBLIC	??$save@Vtext_oarchive@archive@boost@@@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QBEXAAVtext_oarchive@archive@2@I@Z ; boost::serialization::nvp<boost::serialization::collection_size_type>::save<boost::archive::text_oarchive>
PUBLIC	??$member_load@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@12@I@Z ; boost::serialization::access::member_load<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$?5Vitem_version_type@serialization@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVitem_version_type@serialization@3@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::serialization::item_version_type>
PUBLIC	??$?5Vcollection_size_type@serialization@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVcollection_size_type@serialization@3@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::serialization::collection_size_type>
PUBLIC	??$?6Vitem_version_type@serialization@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVitem_version_type@serialization@3@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::serialization::item_version_type>
PUBLIC	??$?6Vcollection_size_type@serialization@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVcollection_size_type@serialization@3@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::serialization::collection_size_type>
PUBLIC	??$load@Vtext_iarchive@archive@boost@@@?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::load<boost::archive::text_iarchive>
PUBLIC	??$load_override@Vitem_version_type@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVitem_version_type@serialization@2@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::serialization::item_version_type>
PUBLIC	??$load_override@Vcollection_size_type@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::serialization::collection_size_type>
PUBLIC	??$save_override@$$CBVitem_version_type@serialization@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVitem_version_type@serialization@2@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::item_version_type const >
PUBLIC	??$save_override@$$CBVcollection_size_type@serialization@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::collection_size_type const >
PUBLIC	??$load_override@Vitem_version_type@serialization@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVitem_version_type@serialization@2@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::item_version_type>
PUBLIC	??$load_override@Vcollection_size_type@serialization@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::collection_size_type>
PUBLIC	??$save_override@$$CBVitem_version_type@serialization@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVitem_version_type@serialization@3@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::item_version_type const >
PUBLIC	??$save_override@$$CBVcollection_size_type@serialization@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVcollection_size_type@serialization@3@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::collection_size_type const >
PUBLIC	??$load_override@Vitem_version_type@serialization@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVitem_version_type@serialization@3@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::item_version_type>
PUBLIC	??$load_override@Vcollection_size_type@serialization@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVcollection_size_type@serialization@3@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::collection_size_type>
PUBLIC	??$save@Vtext_oarchive@archive@boost@@$$CBVitem_version_type@serialization@3@@archive@boost@@YAXAAVtext_oarchive@01@ABVitem_version_type@serialization@1@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::serialization::item_version_type const >
PUBLIC	??$save@Vtext_oarchive@archive@boost@@$$CBVcollection_size_type@serialization@3@@archive@boost@@YAXAAVtext_oarchive@01@ABVcollection_size_type@serialization@1@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::serialization::collection_size_type const >
PUBLIC	??$load@Vtext_iarchive@archive@boost@@Vitem_version_type@serialization@3@@archive@boost@@YAXAAVtext_iarchive@01@AAVitem_version_type@serialization@1@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::serialization::item_version_type>
PUBLIC	??$load@Vtext_iarchive@archive@boost@@Vcollection_size_type@serialization@3@@archive@boost@@YAXAAVtext_iarchive@01@AAVcollection_size_type@serialization@1@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::serialization::collection_size_type>
PUBLIC	??$invoke@Vitem_version_type@serialization@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVitem_version_type@serialization@3@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::serialization::item_version_type>
PUBLIC	??$invoke@Vcollection_size_type@serialization@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVcollection_size_type@serialization@3@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::serialization::collection_size_type>
PUBLIC	??$check_const_loading@Vitem_version_type@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::serialization::item_version_type>
PUBLIC	??$invoke@Vitem_version_type@serialization@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVitem_version_type@serialization@3@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::serialization::item_version_type>
PUBLIC	??$check_const_loading@Vcollection_size_type@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::serialization::collection_size_type>
PUBLIC	??$invoke@Vcollection_size_type@serialization@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVcollection_size_type@serialization@3@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::serialization::collection_size_type>
PUBLIC	??$check_object_versioning@Vitem_version_type@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::serialization::item_version_type>
PUBLIC	??$invoke@Vitem_version_type@serialization@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVitem_version_type@serialization@4@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::serialization::item_version_type>
PUBLIC	??$check_object_versioning@Vcollection_size_type@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::serialization::collection_size_type>
PUBLIC	??$invoke@Vcollection_size_type@serialization@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVcollection_size_type@serialization@4@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::serialization::collection_size_type>
PUBLIC	??$check_object_level@Vitem_version_type@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::serialization::item_version_type>
PUBLIC	??$invoke@Vitem_version_type@serialization@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVitem_version_type@serialization@4@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::serialization::item_version_type>
PUBLIC	??$check_object_level@Vcollection_size_type@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::serialization::collection_size_type>
PUBLIC	??$invoke@Vcollection_size_type@serialization@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVcollection_size_type@serialization@4@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::serialization::collection_size_type>
PUBLIC	??$save_primitive@Vtext_oarchive@archive@boost@@Vitem_version_type@serialization@3@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVitem_version_type@serialization@2@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::serialization::item_version_type>
PUBLIC	??$save_primitive@Vtext_oarchive@archive@boost@@Vcollection_size_type@serialization@3@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVcollection_size_type@serialization@2@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::serialization::collection_size_type>
PUBLIC	??$load_primitive@Vtext_iarchive@archive@boost@@Vitem_version_type@serialization@3@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVitem_version_type@serialization@2@@Z ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::serialization::item_version_type>
PUBLIC	??$load_primitive@Vtext_iarchive@archive@boost@@Vcollection_size_type@serialization@3@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVcollection_size_type@serialization@2@@Z ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::serialization::collection_size_type>
PUBLIC	??$save@Vcollection_size_type@serialization@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::serialization::collection_size_type>
PUBLIC	??$load@Vcollection_size_type@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::serialization::collection_size_type>
PUBLIC	??$save@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::serialization::collection_size_type>
PUBLIC	??$load@Vcollection_size_type@serialization@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::serialization::collection_size_type>
PUBLIC	??$save_impl@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@AAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::serialization::collection_size_type>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception?$AA@	; `string'
PUBLIC	??_C@_1JA@MHADJNIL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA	; `std::_Allocate'::`1'::__LINE__Var
PUBLIC	??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@ ; `string'
PUBLIC	??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@	; `string'
PUBLIC	??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_09GLJCAGLP@_Ptr?5?$CB?$DN?50?$AA@		; `string'
PUBLIC	??_C@_1CC@GKJLLHIM@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA ; `std::_Deallocate'::`1'::__LINE__Var
PUBLIC	??_C@_0BN@HMCJOMKN@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5_Sz?$AA@ ; `string'
PUBLIC	??_C@_1EI@MLOBABC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AA_?$AAS?$AAz?$AA?$CC?$AA?5?$AA?$CG@ ; `string'
PUBLIC	??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@ ; `string'
PUBLIC	??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@ ; `string'
PUBLIC	??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@ ; `string'
PUBLIC	??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@ ; `string'
PUBLIC	??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@ ; `string'
PUBLIC	??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ ; `string'
PUBLIC	??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@ ; `string'
PUBLIC	??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@ ; `string'
PUBLIC	??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@ ; `string'
PUBLIC	?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
PUBLIC	??_7bad_cast@std@@6B@				; std::bad_cast::`vftable'
PUBLIC	??_C@_08EPJLHIJG@bad?5cast?$AA@			; `string'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_1IO@DBEBMPEE@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ ; `string'
PUBLIC	??_C@_1GE@MNCNLAH@?$AAt?$AA_?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAb?$AAo?$AAo?$AAs?$AAt?$AA?3?$AA?3?$AAi?$AAn?$AAt?$AAe?$AAg?$AAe?$AAr?$AA_?$AAt?$AAr?$AAa?$AAi?$AAt?$AAs?$AA?$DM?$AAb?$AAa?$AAs?$AAe@ ; `string'
PUBLIC	??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ ; `string'
PUBLIC	??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ ; `string'
PUBLIC	??_C@_1KC@JIPKAKFO@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ ; `string'
PUBLIC	??_7CCompany@@6B@				; CCompany::`vftable'
PUBLIC	??_C@_08FGJDGFCJ@CCompany?$AA@			; `string'
PUBLIC	??_C@_0P@HGHHJMJK@Company?5name?3?5?$AA@	; `string'
PUBLIC	??_C@_09GAGNALJM@Address?3?5?$AA@		; `string'
PUBLIC	??_C@_07FEKBIJ@Hours?3?5?$AA@			; `string'
PUBLIC	??_C@_09INCOPIGL@Website?3?5?$AA@		; `string'
PUBLIC	??_C@_0L@EIELKJJE@Enter?5name?$AA@		; `string'
PUBLIC	??_C@_0BD@LCFAHLH@Edit?5phone?5numbers?$AA@	; `string'
PUBLIC	??_C@_0BB@EEBFEAFE@Edit?5fax?5numbers?$AA@	; `string'
PUBLIC	??_C@_0BF@PEBHBCKH@Edit?5email?5addresses?$AA@	; `string'
PUBLIC	??_C@_0O@EEFLFDIA@Enter?5address?$AA@		; `string'
PUBLIC	??_C@_0M@BGJFKBDI@Enter?5hours?$AA@		; `string'
PUBLIC	??_C@_0O@OAMALGNP@Enter?5website?$AA@		; `string'
PUBLIC	??_C@_0BH@KBHLMDIH@Finish?5editing?5contact?$AA@ ; `string'
PUBLIC	??_C@_0BB@FAHCJKFO@Add?5phone?5number?$AA@	; `string'
PUBLIC	??_C@_0BE@HPCFJHJF@Remove?5phone?5number?$AA@	; `string'
PUBLIC	??_C@_0BI@KGPMIEGO@Return?5to?5previous?5menu?$AA@ ; `string'
PUBLIC	??_C@_0P@PJBDCCA@Add?5fax?5number?$AA@		; `string'
PUBLIC	??_C@_0BC@KGBPMKIC@Remove?5fax?5number?$AA@	; `string'
PUBLIC	??_C@_0BC@BFBEABLC@Add?5email?5address?$AA@	; `string'
PUBLIC	??_C@_0BF@BJINENIH@Remove?5email?5address?$AA@	; `string'
PUBLIC	??_C@_0N@KEFPBKIO@phone?5number?$AA@		; `string'
PUBLIC	??_C@_0L@IDMPELLM@fax?5number?$AA@		; `string'
PUBLIC	??_C@_0O@JDDDPOOG@email?5address?$AA@		; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0BE@MLGHGCIF@?5?5?5?5?5?5?5?5?5?5?5?5Name?3?5?5?$AA@ ; `string'
PUBLIC	??_C@_0BE@HDLJGIGO@?5?5?5Phone?5Numbers?3?5?5?$AA@ ; `string'
PUBLIC	??_C@_0BE@PAALNHLB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$AA@ ; `string'
PUBLIC	??_C@_0BE@BBGIJEAL@?5?5?5?5?5Fax?5Numbers?3?5?5?$AA@ ; `string'
PUBLIC	??_C@_0BE@DDKDJAIC@?5Email?5Addresses?3?5?5?$AA@ ; `string'
PUBLIC	??_C@_0BE@LOEDLNEE@?5?5?5?5?5?5?5?5?5Address?3?5?5?$AA@ ; `string'
PUBLIC	??_C@_0BE@JHLBEJEA@?5?5?5?5?5?5?5?5?5?5?5Hours?3?5?5?$AA@ ; `string'
PUBLIC	??_C@_0BE@JNHHJJAI@?5?5?5?5?5?5?5?5?5Website?3?5?5?$AA@ ; `string'
PUBLIC	??_C@_01GPOEFGEJ@?7?$AA@			; `string'
PUBLIC	??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@ ; `string'
PUBLIC	??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ ; `string'
PUBLIC	??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ ; `string'
PUBLIC	??_C@_1BHA@MHIPJLE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ ; `string'
PUBLIC	??_C@_1BGO@ENKEMOHL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BGI@CFILNOOP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1EE@HAKOGNPH@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@ ; `string'
PUBLIC	??_C@_1EG@CNCHLAOB@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ ; `string'
PUBLIC	??_C@_1MI@IFMPOAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1MG@GDGHDIKC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_1DM@KDEKGMPF@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1MA@BDELDFHB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::ctype<char> >::_Psave
PUBLIC	__TI2?AVbad_cast@std@@
PUBLIC	__CTA2?AVbad_cast@std@@
PUBLIC	??_R0?AVbad_cast@std@@@8			; std::bad_cast `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	?data@?1???B?$integral_constant@_N$00@boost@@QBEABU?$bool_@$00@mpl@2@XZ@4DB ;  ?? ::DB::mpl::XZ::`boost::integral_constant<bool,1>::operator boost::mpl::bool_<1> const &'::`2'::data
PUBLIC	?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@A ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::instance
PUBLIC	??_7?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@6B@ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`vftable'
PUBLIC	?m_is_destroyed@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@2_NA ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::m_is_destroyed
PUBLIC	??_7?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`vftable'
PUBLIC	?t@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@634@A ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::t
PUBLIC	?$TSS0@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::et_instance,signed char,boost::archive::Vtext_oarchive::erializer,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??_C@_1JC@GIHFICPP@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ ; `string'
PUBLIC	??_C@_1GC@KKEDEOBO@?$AA?$CB?$AA?5?$AAd?$AAe?$AAt?$AAa?$AAi?$AAl?$AA?3?$AA?3?$AAs?$AAi?$AAn?$AAg?$AAl?$AAe?$AAt?$AAo?$AAn?$AA_?$AAw?$AAr?$AAa?$AAp?$AAp?$AAe?$AAr?$AA?$DM?$AA?5?$AAT?$AA?5?$AA?$DO@ ; `string'
PUBLIC	?instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@A ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::instance
PUBLIC	??_7?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@6B@ ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`vftable'
PUBLIC	??_C@_1LC@ILBAKICL@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ ; `string'
PUBLIC	??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@ ; `string'
PUBLIC	?m_is_destroyed@?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@2_NA ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::m_is_destroyed
PUBLIC	??_7?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`vftable'
PUBLIC	?t@?1??get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@34@XZ@4V?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@34@A ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::t
PUBLIC	?$TSS0@?1??get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@34@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::et_instance,signed char,std::D::ar_traits,singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::allocator<char> >
PUBLIC	??_R0?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@8 ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > `RTTI Type Descriptor'
PUBLIC	?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@A ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::instance
PUBLIC	??_7?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@6B@ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`vftable'
PUBLIC	??_C@_1IO@PLLJMNBK@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ ; `string'
PUBLIC	?m_is_destroyed@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@2_NA ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::m_is_destroyed
PUBLIC	??_7?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`vftable'
PUBLIC	?t@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@634@A ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::t
PUBLIC	?$TSS0@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::et_instance,signed char,boost::archive::Vtext_iarchive::erializer,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	__TI2?AVarchive_exception@archive@boost@@
PUBLIC	__CTA2?AVarchive_exception@archive@boost@@
PUBLIC	??_R0?AVarchive_exception@archive@boost@@@8	; boost::archive::archive_exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVarchive_exception@archive@boost@@@8??0archive_exception@archive@boost@@QAE@ABV012@@Z152
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12004
PUBLIC	??_R0?AVbasic_oarchive@detail@archive@boost@@@8	; boost::archive::detail::basic_oarchive `RTTI Type Descriptor'
PUBLIC	??_R0?AVtext_oarchive@archive@boost@@@8		; boost::archive::text_oarchive `RTTI Type Descriptor'
PUBLIC	??_R0?AVbasic_iarchive@detail@archive@boost@@@8	; boost::archive::detail::basic_iarchive `RTTI Type Descriptor'
PUBLIC	??_R0?AVtext_iarchive@archive@boost@@@8		; boost::archive::text_iarchive `RTTI Type Descriptor'
PUBLIC	??_C@_05IOMEMJEC@count?$AA@			; `string'
PUBLIC	??_C@_0N@EDCCFHGA@item_version?$AA@		; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_04NHONDGDE@item?$AA@			; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_cast@std@@6B@				; std::bad_cast::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_cast@std@@8				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_cast@std@@8				; std::bad_cast::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_cast@std@@8			; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EN@noncopyable@noncopyable_@boost@@8	; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (4,-1,0,77)'
PUBLIC	??_R0?AVnoncopyable@noncopyable_@boost@@@8	; boost::noncopyable_::noncopyable `RTTI Type Descriptor'
PUBLIC	??_R3noncopyable@noncopyable_@boost@@8		; boost::noncopyable_::noncopyable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2noncopyable@noncopyable_@boost@@8		; boost::noncopyable_::noncopyable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@noncopyable@noncopyable_@boost@@8	; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CCompany@@6B@				; CCompany::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCCompany@@@8				; CCompany `RTTI Type Descriptor'
PUBLIC	??_R3CCompany@@8				; CCompany::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCompany@@8				; CCompany::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCompany@@8			; CCompany::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CContact@@8			; CContact::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCContact@@@8				; CContact `RTTI Type Descriptor'
PUBLIC	??_R3CContact@@8				; CContact::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CContact@@8				; CContact::`RTTI Base Class Array'
PUBLIC	??_R4?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@6B@ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@8 ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > `RTTI Type Descriptor'
PUBLIC	??_R3?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8 ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8 ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8 ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@basic_oserializer@detail@archive@boost@@8 ; boost::archive::detail::basic_oserializer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVbasic_oserializer@detail@archive@boost@@@8 ; boost::archive::detail::basic_oserializer `RTTI Type Descriptor'
PUBLIC	??_R3basic_oserializer@detail@archive@boost@@8	; boost::archive::detail::basic_oserializer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2basic_oserializer@detail@archive@boost@@8	; boost::archive::detail::basic_oserializer::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@basic_serializer@detail@archive@boost@@8 ; boost::archive::detail::basic_serializer::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVbasic_serializer@detail@archive@boost@@@8 ; boost::archive::detail::basic_serializer `RTTI Type Descriptor'
PUBLIC	??_R3basic_serializer@detail@archive@boost@@8	; boost::archive::detail::basic_serializer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2basic_serializer@detail@archive@boost@@8	; boost::archive::detail::basic_serializer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@basic_serializer@detail@archive@boost@@8 ; boost::archive::detail::basic_serializer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EN@noncopyable@noncopyable_@boost@@8	; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (0,-1,0,77)'
PUBLIC	??_R4?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > `RTTI Type Descriptor'
PUBLIC	??_R3?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@6B@ ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@8 ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > `RTTI Type Descriptor'
PUBLIC	??_R3?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@8 ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@8 ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@8 ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@extended_type_info_typeid_0@typeid_system@serialization@boost@@8 ; boost::serialization::typeid_system::extended_type_info_typeid_0::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVextended_type_info_typeid_0@typeid_system@serialization@boost@@@8 ; boost::serialization::typeid_system::extended_type_info_typeid_0 `RTTI Type Descriptor'
PUBLIC	??_R3extended_type_info_typeid_0@typeid_system@serialization@boost@@8 ; boost::serialization::typeid_system::extended_type_info_typeid_0::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2extended_type_info_typeid_0@typeid_system@serialization@boost@@8 ; boost::serialization::typeid_system::extended_type_info_typeid_0::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@extended_type_info@serialization@boost@@8 ; boost::serialization::extended_type_info::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVextended_type_info@serialization@boost@@@8 ; boost::serialization::extended_type_info `RTTI Type Descriptor'
PUBLIC	??_R3extended_type_info@serialization@boost@@8	; boost::serialization::extended_type_info::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2extended_type_info@serialization@boost@@8	; boost::serialization::extended_type_info::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EP@noncopyable@noncopyable_@boost@@8	; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (4,-1,0,79)'
PUBLIC	??_R1BB@?0A@EA@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@8 ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Descriptor at (17,-1,0,64)'
PUBLIC	??_R0?AV?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@@8 ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > `RTTI Type Descriptor'
PUBLIC	??_R3?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@8 ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@8 ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@8 ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@singleton_module@serialization@boost@@8 ; boost::serialization::singleton_module::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVsingleton_module@serialization@boost@@@8 ; boost::serialization::singleton_module `RTTI Type Descriptor'
PUBLIC	??_R3singleton_module@serialization@boost@@8	; boost::serialization::singleton_module::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2singleton_module@serialization@boost@@8	; boost::serialization::singleton_module::`RTTI Base Class Array'
PUBLIC	??_R1BB@?0A@EA@singleton_module@serialization@boost@@8 ; boost::serialization::singleton_module::`RTTI Base Class Descriptor at (17,-1,0,64)'
PUBLIC	??_R1BB@?0A@EC@noncopyable@noncopyable_@boost@@8 ; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (17,-1,0,66)'
PUBLIC	??_R4?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@@8 ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > `RTTI Type Descriptor'
PUBLIC	??_R3?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@6B@ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@8 ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > `RTTI Type Descriptor'
PUBLIC	??_R3?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8 ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8 ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8 ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@basic_iserializer@detail@archive@boost@@8 ; boost::archive::detail::basic_iserializer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVbasic_iserializer@detail@archive@boost@@@8 ; boost::archive::detail::basic_iserializer `RTTI Type Descriptor'
PUBLIC	??_R3basic_iserializer@detail@archive@boost@@8	; boost::archive::detail::basic_iserializer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2basic_iserializer@detail@archive@boost@@8	; boost::archive::detail::basic_iserializer::`RTTI Base Class Array'
PUBLIC	??_R4?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > `RTTI Type Descriptor'
PUBLIC	??_R3?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp_??0_Lockit@std@@QAE@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:PROC
EXTRN	_memcmp:PROC
EXTRN	_memcpy:PROC
EXTRN	__imp__memmove:PROC
EXTRN	_memset:PROC
EXTRN	_strlen:PROC
EXTRN	__imp_?uncaught_exception@std@@YA_NXZ:PROC
EXTRN	__imp____std_exception_copy:PROC
EXTRN	__imp____std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	__imp_?_Debug_message@std@@YAXPB_W0I@Z:PROC
EXTRN	__imp_?_Xbad_alloc@std@@YAXXZ:PROC
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
EXTRN	__imp____std_type_info_name:PROC
EXTRN	??_Ebad_cast@std@@UAEPAXI@Z:PROC		; std::bad_cast::`vector deleting destructor'
EXTRN	?_Facet_Register@std@@YAXPAV_Facet_base@1@@Z:PROC ; std::_Facet_Register
EXTRN	__imp_??Bid@locale@std@@QAEIXZ:PROC
EXTRN	__imp_?_Init@locale@std@@CAPAV_Locimp@12@_N@Z:PROC
EXTRN	__imp_?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ:PROC
EXTRN	__imp_?toupper@?$ctype@D@std@@QBEDD@Z:PROC
EXTRN	__imp_?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z:PROC
EXTRN	__imp_??Bios_base@std@@QBE_NXZ:PROC
EXTRN	__imp_?good@ios_base@std@@QBE_NXZ:PROC
EXTRN	__imp_?fail@ios_base@std@@QBE_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QBEHXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QAEHH@Z:PROC
EXTRN	__imp_?precision@ios_base@std@@QBE_JXZ:PROC
EXTRN	__imp_?precision@ios_base@std@@QAE_J_J@Z:PROC
EXTRN	__imp_?width@ios_base@std@@QBE_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QAE_J_J@Z:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ:PROC
EXTRN	__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z:PROC
EXTRN	__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ:PROC
EXTRN	__imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAI@Z:PROC
EXTRN	__imp___wassert:PROC
EXTRN	??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z:PROC ; boost::archive::archive_exception::archive_exception
EXTRN	??0archive_exception@archive@boost@@QAE@ABV012@@Z:PROC ; boost::archive::archive_exception::archive_exception
EXTRN	??1archive_exception@archive@boost@@UAE@XZ:PROC	; boost::archive::archive_exception::~archive_exception
EXTRN	?load_object@basic_iarchive@detail@archive@boost@@QAEXPAXABVbasic_iserializer@234@@Z:PROC ; boost::archive::detail::basic_iarchive::load_object
EXTRN	?get_library_version@basic_iarchive@detail@archive@boost@@QBE?AVlibrary_version_type@34@XZ:PROC ; boost::archive::detail::basic_iarchive::get_library_version
EXTRN	?key_unregister@extended_type_info@serialization@boost@@IBEXXZ:PROC ; boost::serialization::extended_type_info::key_unregister
EXTRN	?key_register@extended_type_info@serialization@boost@@IBEXXZ:PROC ; boost::serialization::extended_type_info::key_register
EXTRN	??0extended_type_info_typeid_0@typeid_system@serialization@boost@@IAE@PBD@Z:PROC ; boost::serialization::typeid_system::extended_type_info_typeid_0::extended_type_info_typeid_0
EXTRN	??1extended_type_info_typeid_0@typeid_system@serialization@boost@@MAE@XZ:PROC ; boost::serialization::typeid_system::extended_type_info_typeid_0::~extended_type_info_typeid_0
EXTRN	?type_register@extended_type_info_typeid_0@typeid_system@serialization@boost@@IAEXABVtype_info@@@Z:PROC ; boost::serialization::typeid_system::extended_type_info_typeid_0::type_register
EXTRN	?type_unregister@extended_type_info_typeid_0@typeid_system@serialization@boost@@IAEXXZ:PROC ; boost::serialization::typeid_system::extended_type_info_typeid_0::type_unregister
EXTRN	?is_less_than@extended_type_info_typeid_0@typeid_system@serialization@boost@@UBE_NABVextended_type_info@34@@Z:PROC ; boost::serialization::typeid_system::extended_type_info_typeid_0::is_less_than
EXTRN	?is_equal@extended_type_info_typeid_0@typeid_system@serialization@boost@@UBE_NABVextended_type_info@34@@Z:PROC ; boost::serialization::typeid_system::extended_type_info_typeid_0::is_equal
EXTRN	??0basic_iserializer@detail@archive@boost@@IAE@ABVextended_type_info@serialization@3@@Z:PROC ; boost::archive::detail::basic_iserializer::basic_iserializer
EXTRN	??1basic_iserializer@detail@archive@boost@@MAE@XZ:PROC ; boost::archive::detail::basic_iserializer::~basic_iserializer
EXTRN	?load@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load
EXTRN	?save_object@basic_oarchive@detail@archive@boost@@QAEXPBXABVbasic_oserializer@234@@Z:PROC ; boost::archive::detail::basic_oarchive::save_object
EXTRN	?end_preamble@basic_oarchive@detail@archive@boost@@QAEXXZ:PROC ; boost::archive::detail::basic_oarchive::end_preamble
EXTRN	??0basic_oserializer@detail@archive@boost@@IAE@ABVextended_type_info@serialization@3@@Z:PROC ; boost::archive::detail::basic_oserializer::basic_oserializer
EXTRN	??1basic_oserializer@detail@archive@boost@@MAE@XZ:PROC ; boost::archive::detail::basic_oserializer::~basic_oserializer
EXTRN	?newtoken@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ:PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::newtoken
EXTRN	?save@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save
EXTRN	?addMenuOption@CCustomMenu@@QAE_NDV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; CCustomMenu::addMenuOption
EXTRN	??0CContact@@QAE@XZ:PROC			; CContact::CContact
EXTRN	??1CContact@@UAE@XZ:PROC			; CContact::~CContact
EXTRN	?displayMenu@CUserInterface@@SADAAVCCustomMenu@@@Z:PROC ; CUserInterface::displayMenu
EXTRN	?displaySubMenu@CUserInterface@@SAXAAVCCustomMenu@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z:PROC ; CUserInterface::displaySubMenu
EXTRN	?getUserInput@CUserInterface@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z:PROC ; CUserInterface::getUserInput
EXTRN	??_ECCompany@@UAEPAXI@Z:PROC			; CCompany::`vector deleting destructor'
EXTRN	??_E?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UAEPAXI@Z:PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`vector deleting destructor'
EXTRN	??_E?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z:PROC ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`vector deleting destructor'
EXTRN	??_E?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UAEPAXI@Z:PROC ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`vector deleting destructor'
EXTRN	??_E?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@UAEPAXI@Z:PROC ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`vector deleting destructor'
EXTRN	??_E?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UAEPAXI@Z:PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`vector deleting destructor'
EXTRN	??_E?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z:PROC ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`vector deleting destructor'
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___RTDynamicCast:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	?__type_info_root_node@@3U__type_info_node@@A:BYTE ; __type_info_root_node
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__imp_?id@?$ctype@D@std@@2V0locale@2@A:DWORD
EXTRN	__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	___security_cookie:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B DD 01H DUP (?) ; std::_Facetptr<std::ctype<char> >::_Psave
_BSS	ENDS
;	COMDAT ?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@A
_BSS	SEGMENT
?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@A DD 01H DUP (?) ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::instance
_BSS	ENDS
;	COMDAT ?m_is_destroyed@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@2_NA
_BSS	SEGMENT
?m_is_destroyed@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@2_NA DB 01H DUP (?) ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::m_is_destroyed
_BSS	ENDS
;	COMDAT ?t@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@634@A
_BSS	SEGMENT
?t@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@634@A DB 0cH DUP (?) ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::t
_BSS	ENDS
;	COMDAT ?$TSS0@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::et_instance,signed char,boost::archive::Vtext_oarchive::erializer,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_BSS	ENDS
;	COMDAT ?instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@A
_BSS	SEGMENT
?instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@A DD 01H DUP (?) ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::instance
_BSS	ENDS
;	COMDAT ?m_is_destroyed@?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@2_NA
_BSS	SEGMENT
?m_is_destroyed@?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@2_NA DB 01H DUP (?) ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::m_is_destroyed
_BSS	ENDS
;	COMDAT ?t@?1??get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@34@XZ@4V?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@34@A
_BSS	SEGMENT
?t@?1??get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@34@XZ@4V?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@34@A DB 014H DUP (?) ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::t
_BSS	ENDS
;	COMDAT ?$TSS0@?1??get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@34@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1??get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@34@XZ@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::et_instance,signed char,std::D::ar_traits,singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::allocator<char> >
_BSS	ENDS
;	COMDAT ?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@A
_BSS	SEGMENT
?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@A DD 01H DUP (?) ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::instance
_BSS	ENDS
;	COMDAT ?m_is_destroyed@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@2_NA
_BSS	SEGMENT
?m_is_destroyed@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@2_NA DB 01H DUP (?) ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::m_is_destroyed
_BSS	ENDS
;	COMDAT ?t@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@634@A
_BSS	SEGMENT
?t@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@634@A DB 0cH DUP (?) ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::t
_BSS	ENDS
;	COMDAT ?$TSS0@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::et_instance,signed char,boost::archive::Vtext_iarchive::erializer,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??instance$initializer$@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@0P6AXXZA@@3P6AXXZA DD FLAT:??__E?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@A@@YAXXZ ; ??instance$initializer$@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@0P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8 DD FLAT:??_R0?AV?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R2?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8 DD FLAT:??_R1A@?0A@EA@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@basic_iserializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EA@basic_serializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R3?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8 DD 00H ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@@8
data$r	SEGMENT
??_R0?AV?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$singleton_wrapper@V?$iserializer@Vtext_iarchive@ar'
	DB	'chive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@'
	DB	'@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char'
	DB	'_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archiv'
	DB	'e@boost@@@detail@serialization@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@6B@
rdata$r	SEGMENT
??_R4?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@6B@ DD 00H ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@@8
	DD	FLAT:??_R3?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2basic_iserializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2basic_iserializer@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@basic_iserializer@detail@archive@boost@@8 ; boost::archive::detail::basic_iserializer::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@basic_serializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3basic_iserializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3basic_iserializer@detail@archive@boost@@8 DD 00H	; boost::archive::detail::basic_iserializer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2basic_iserializer@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbasic_iserializer@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AVbasic_iserializer@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::basic_iserializer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbasic_iserializer@detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@basic_iserializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@basic_iserializer@detail@archive@boost@@8 DD FLAT:??_R0?AVbasic_iserializer@detail@archive@boost@@@8 ; boost::archive::detail::basic_iserializer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3basic_iserializer@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8 DD FLAT:??_R0?AV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@8 ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8 ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@basic_iserializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EA@basic_serializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8 DD 00H ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$iserializer@Vtext_iarchive@archive@boost@@V?$vecto'
	DB	'r@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@st'
	DB	'd@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$all'
	DB	'ocator@D@2@@std@@@2@@std@@@detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@6B@
rdata$r	SEGMENT
??_R4?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@6B@ DD 00H ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@8
	DD	FLAT:??_R3?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@8 DD FLAT:??_R0?AV?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@@8 ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	07H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R2?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@8 DD FLAT:??_R1A@?0A@EA@?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@8
	DD	FLAT:??_R1A@?0A@EA@extended_type_info_typeid_0@typeid_system@serialization@boost@@8
	DD	FLAT:??_R1A@?0A@EA@extended_type_info@serialization@boost@@8
	DD	FLAT:??_R13?0A@EP@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R1BB@?0A@EA@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@8
	DD	FLAT:??_R1BB@?0A@EA@singleton_module@serialization@boost@@8
	DD	FLAT:??_R1BB@?0A@EC@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R3?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@8 DD 00H ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	08H
	DD	FLAT:??_R2?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@@8
data$r	SEGMENT
??_R0?AV?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$singleton_wrapper@V?$extended_type_info_typeid@V?$'
	DB	'vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@'
	DB	'2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V'
	DB	'?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@'
	DB	'serialization@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@6B@
rdata$r	SEGMENT
??_R4?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@6B@ DD 00H ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@@8
	DD	FLAT:??_R3?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1BB@?0A@EC@noncopyable@noncopyable_@boost@@8
rdata$r	SEGMENT
??_R1BB@?0A@EC@noncopyable@noncopyable_@boost@@8 DD FLAT:??_R0?AVnoncopyable@noncopyable_@boost@@@8 ; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (17,-1,0,66)'
	DD	00H
	DD	011H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1BB@?0A@EA@singleton_module@serialization@boost@@8
rdata$r	SEGMENT
??_R1BB@?0A@EA@singleton_module@serialization@boost@@8 DD FLAT:??_R0?AVsingleton_module@serialization@boost@@@8 ; boost::serialization::singleton_module::`RTTI Base Class Descriptor at (17,-1,0,64)'
	DD	01H
	DD	011H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3singleton_module@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2singleton_module@serialization@boost@@8
rdata$r	SEGMENT
??_R2singleton_module@serialization@boost@@8 DD FLAT:??_R1A@?0A@EA@singleton_module@serialization@boost@@8 ; boost::serialization::singleton_module::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3singleton_module@serialization@boost@@8
rdata$r	SEGMENT
??_R3singleton_module@serialization@boost@@8 DD 00H	; boost::serialization::singleton_module::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2singleton_module@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVsingleton_module@serialization@boost@@@8
data$r	SEGMENT
??_R0?AVsingleton_module@serialization@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::serialization::singleton_module `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVsingleton_module@serialization@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@singleton_module@serialization@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@singleton_module@serialization@boost@@8 DD FLAT:??_R0?AVsingleton_module@serialization@boost@@@8 ; boost::serialization::singleton_module::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3singleton_module@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@8 DD FLAT:??_R0?AV?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@@8 ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@8
rdata$r	SEGMENT
??_R2?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@8 DD FLAT:??_R1A@?0A@EA@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@8 ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@singleton_module@serialization@boost@@8
	DD	FLAT:??_R1A@?0A@EA@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@8
rdata$r	SEGMENT
??_R3?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@8 DD 00H ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@@8
data$r	SEGMENT
??_R0?AV?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$singleton@V?$extended_type_info_typeid@V?$vector@V'
	DB	'?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@'
	DB	'V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$alloca'
	DB	'tor@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@b'
	DB	'oost@@', 00H
data$r	ENDS
;	COMDAT ??_R1BB@?0A@EA@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@8
rdata$r	SEGMENT
??_R1BB@?0A@EA@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@8 DD FLAT:??_R0?AV?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@@8 ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Descriptor at (17,-1,0,64)'
	DD	02H
	DD	011H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EP@noncopyable@noncopyable_@boost@@8
rdata$r	SEGMENT
??_R13?0A@EP@noncopyable@noncopyable_@boost@@8 DD FLAT:??_R0?AVnoncopyable@noncopyable_@boost@@@8 ; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (4,-1,0,79)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	04fH
	DD	FLAT:??_R3noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2extended_type_info@serialization@boost@@8
rdata$r	SEGMENT
??_R2extended_type_info@serialization@boost@@8 DD FLAT:??_R1A@?0A@EA@extended_type_info@serialization@boost@@8 ; boost::serialization::extended_type_info::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3extended_type_info@serialization@boost@@8
rdata$r	SEGMENT
??_R3extended_type_info@serialization@boost@@8 DD 00H	; boost::serialization::extended_type_info::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2extended_type_info@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVextended_type_info@serialization@boost@@@8
data$r	SEGMENT
??_R0?AVextended_type_info@serialization@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::serialization::extended_type_info `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVextended_type_info@serialization@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@extended_type_info@serialization@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@extended_type_info@serialization@boost@@8 DD FLAT:??_R0?AVextended_type_info@serialization@boost@@@8 ; boost::serialization::extended_type_info::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3extended_type_info@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2extended_type_info_typeid_0@typeid_system@serialization@boost@@8
rdata$r	SEGMENT
??_R2extended_type_info_typeid_0@typeid_system@serialization@boost@@8 DD FLAT:??_R1A@?0A@EA@extended_type_info_typeid_0@typeid_system@serialization@boost@@8 ; boost::serialization::typeid_system::extended_type_info_typeid_0::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@extended_type_info@serialization@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3extended_type_info_typeid_0@typeid_system@serialization@boost@@8
rdata$r	SEGMENT
??_R3extended_type_info_typeid_0@typeid_system@serialization@boost@@8 DD 00H ; boost::serialization::typeid_system::extended_type_info_typeid_0::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2extended_type_info_typeid_0@typeid_system@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVextended_type_info_typeid_0@typeid_system@serialization@boost@@@8
data$r	SEGMENT
??_R0?AVextended_type_info_typeid_0@typeid_system@serialization@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::serialization::typeid_system::extended_type_info_typeid_0 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVextended_type_info_typeid_0@typeid_system@serializat'
	DB	'ion@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@extended_type_info_typeid_0@typeid_system@serialization@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@extended_type_info_typeid_0@typeid_system@serialization@boost@@8 DD FLAT:??_R0?AVextended_type_info_typeid_0@typeid_system@serialization@boost@@@8 ; boost::serialization::typeid_system::extended_type_info_typeid_0::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3extended_type_info_typeid_0@typeid_system@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@8 DD FLAT:??_R0?AV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@8 ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	06H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@8
rdata$r	SEGMENT
??_R2?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@8 DD FLAT:??_R1A@?0A@EA@?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@8 ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@extended_type_info_typeid_0@typeid_system@serialization@boost@@8
	DD	FLAT:??_R1A@?0A@EA@extended_type_info@serialization@boost@@8
	DD	FLAT:??_R13?0A@EP@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R1BB@?0A@EA@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@8
	DD	FLAT:??_R1BB@?0A@EA@singleton_module@serialization@boost@@8
	DD	FLAT:??_R1BB@?0A@EC@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@8
rdata$r	SEGMENT
??_R3?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@8 DD 00H ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	07H
	DD	FLAT:??_R2?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@8
data$r	SEGMENT
??_R0?AV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$extended_type_info_typeid@V?$vector@V?$basic_strin'
	DB	'g@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@'
	DB	'V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@'
	DB	'@@2@@std@@@serialization@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@6B@
rdata$r	SEGMENT
??_R4?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@6B@ DD 00H ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@8
	DD	FLAT:??_R3?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8 DD FLAT:??_R0?AV?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R2?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8 DD FLAT:??_R1A@?0A@EA@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@basic_oserializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EA@basic_serializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R3?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8 DD 00H ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@@8
data$r	SEGMENT
??_R0?AV?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$singleton_wrapper@V?$oserializer@Vtext_oarchive@ar'
	DB	'chive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@'
	DB	'@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char'
	DB	'_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archiv'
	DB	'e@boost@@@detail@serialization@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@6B@
rdata$r	SEGMENT
??_R4?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@6B@ DD 00H ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@@8
	DD	FLAT:??_R3?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EN@noncopyable@noncopyable_@boost@@8 DD FLAT:??_R0?AVnoncopyable@noncopyable_@boost@@@8 ; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (0,-1,0,77)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@basic_serializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@basic_serializer@detail@archive@boost@@8 DD FLAT:??_R0?AVbasic_serializer@detail@archive@boost@@@8 ; boost::archive::detail::basic_serializer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3basic_serializer@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2basic_serializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2basic_serializer@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@basic_serializer@detail@archive@boost@@8 ; boost::archive::detail::basic_serializer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3basic_serializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3basic_serializer@detail@archive@boost@@8 DD 00H	; boost::archive::detail::basic_serializer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2basic_serializer@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbasic_serializer@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AVbasic_serializer@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::basic_serializer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbasic_serializer@detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R13?0A@EA@basic_serializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R13?0A@EA@basic_serializer@detail@archive@boost@@8 DD FLAT:??_R0?AVbasic_serializer@detail@archive@boost@@@8 ; boost::archive::detail::basic_serializer::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3basic_serializer@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2basic_oserializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2basic_oserializer@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@basic_oserializer@detail@archive@boost@@8 ; boost::archive::detail::basic_oserializer::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@basic_serializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3basic_oserializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3basic_oserializer@detail@archive@boost@@8 DD 00H	; boost::archive::detail::basic_oserializer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2basic_oserializer@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbasic_oserializer@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AVbasic_oserializer@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::basic_oserializer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbasic_oserializer@detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@basic_oserializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@basic_oserializer@detail@archive@boost@@8 DD FLAT:??_R0?AVbasic_oserializer@detail@archive@boost@@@8 ; boost::archive::detail::basic_oserializer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3basic_oserializer@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8 DD FLAT:??_R0?AV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@8 ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8 ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@basic_oserializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EA@basic_serializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8 DD 00H ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$oserializer@Vtext_oarchive@archive@boost@@V?$vecto'
	DB	'r@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@st'
	DB	'd@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$all'
	DB	'ocator@D@2@@std@@@2@@std@@@detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@6B@
rdata$r	SEGMENT
??_R4?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@6B@ DD 00H ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@8
	DD	FLAT:??_R3?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2CContact@@8
rdata$r	SEGMENT
??_R2CContact@@8 DD FLAT:??_R1A@?0A@EA@CContact@@8	; CContact::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CContact@@8
rdata$r	SEGMENT
??_R3CContact@@8 DD 00H					; CContact::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CContact@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCContact@@@8
data$r	SEGMENT
??_R0?AVCContact@@@8 DD FLAT:??_7type_info@@6B@		; CContact `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCContact@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CContact@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CContact@@8 DD FLAT:??_R0?AVCContact@@@8	; CContact::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CContact@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCompany@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCompany@@8 DD FLAT:??_R0?AVCCompany@@@8	; CCompany::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCompany@@8
rdata$r	ENDS
;	COMDAT ??_R2CCompany@@8
rdata$r	SEGMENT
??_R2CCompany@@8 DD FLAT:??_R1A@?0A@EA@CCompany@@8	; CCompany::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CContact@@8
rdata$r	ENDS
;	COMDAT ??_R3CCompany@@8
rdata$r	SEGMENT
??_R3CCompany@@8 DD 00H					; CCompany::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCompany@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCompany@@@8
data$r	SEGMENT
??_R0?AVCCompany@@@8 DD FLAT:??_7type_info@@6B@		; CCompany `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCompany@@', 00H
data$r	ENDS
;	COMDAT ??_R4CCompany@@6B@
rdata$r	SEGMENT
??_R4CCompany@@6B@ DD 00H				; CCompany::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCompany@@@8
	DD	FLAT:??_R3CCompany@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@noncopyable@noncopyable_@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@noncopyable@noncopyable_@boost@@8 DD FLAT:??_R0?AVnoncopyable@noncopyable_@boost@@@8 ; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2noncopyable@noncopyable_@boost@@8
rdata$r	SEGMENT
??_R2noncopyable@noncopyable_@boost@@8 DD FLAT:??_R1A@?0A@EA@noncopyable@noncopyable_@boost@@8 ; boost::noncopyable_::noncopyable::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3noncopyable@noncopyable_@boost@@8
rdata$r	SEGMENT
??_R3noncopyable@noncopyable_@boost@@8 DD 00H		; boost::noncopyable_::noncopyable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVnoncopyable@noncopyable_@boost@@@8
data$r	SEGMENT
??_R0?AVnoncopyable@noncopyable_@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::noncopyable_::noncopyable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVnoncopyable@noncopyable_@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	SEGMENT
??_R13?0A@EN@noncopyable@noncopyable_@boost@@8 DD FLAT:??_R0?AVnoncopyable@noncopyable_@boost@@@8 ; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (4,-1,0,77)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_cast@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_cast@std@@8 DD FLAT:??_R0?AVbad_cast@std@@@8 ; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_cast@std@@8
rdata$r	SEGMENT
??_R2bad_cast@std@@8 DD FLAT:??_R1A@?0A@EA@bad_cast@std@@8 ; std::bad_cast::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_cast@std@@8
rdata$r	SEGMENT
??_R3bad_cast@std@@8 DD 00H				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_cast@std@@6B@
rdata$r	SEGMENT
??_R4bad_cast@std@@6B@ DD 00H				; std::bad_cast::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_cast@std@@@8
	DD	FLAT:??_R3bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_04NHONDGDE@item?$AA@
CONST	SEGMENT
??_C@_04NHONDGDE@item?$AA@ DB 'item', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EDCCFHGA@item_version?$AA@
CONST	SEGMENT
??_C@_0N@EDCCFHGA@item_version?$AA@ DB 'item_version', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05IOMEMJEC@count?$AA@
CONST	SEGMENT
??_C@_05IOMEMJEC@count?$AA@ DB 'count', 00H		; `string'
CONST	ENDS
;	COMDAT ??_R0?AVtext_iarchive@archive@boost@@@8
data$r	SEGMENT
??_R0?AVtext_iarchive@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::text_iarchive `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVtext_iarchive@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVbasic_iarchive@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AVbasic_iarchive@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::basic_iarchive `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbasic_iarchive@detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVtext_oarchive@archive@boost@@@8
data$r	SEGMENT
??_R0?AVtext_oarchive@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::text_oarchive `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVtext_oarchive@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVbasic_oarchive@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AVbasic_oarchive@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::basic_oarchive `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbasic_oarchive@detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12004
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12004 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	00H
	DD	04H
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVarchive_exception@archive@boost@@@8??0archive_exception@archive@boost@@QAE@ABV012@@Z152
xdata$x	SEGMENT
__CT??_R0?AVarchive_exception@archive@boost@@@8??0archive_exception@archive@boost@@QAE@ABV012@@Z152 DD 04H
	DD	FLAT:??_R0?AVarchive_exception@archive@boost@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	098H
	DD	FLAT:??0archive_exception@archive@boost@@QAE@ABV012@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVarchive_exception@archive@boost@@@8
data$r	SEGMENT
??_R0?AVarchive_exception@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::archive_exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVarchive_exception@archive@boost@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVarchive_exception@archive@boost@@
xdata$x	SEGMENT
__CTA2?AVarchive_exception@archive@boost@@ DD 02H
	DD	FLAT:__CT??_R0?AVarchive_exception@archive@boost@@@8??0archive_exception@archive@boost@@QAE@ABV012@@Z152
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12004
xdata$x	ENDS
;	COMDAT __TI2?AVarchive_exception@archive@boost@@
xdata$x	SEGMENT
__TI2?AVarchive_exception@archive@boost@@ DD 00H
	DD	FLAT:??_Darchive_exception@archive@boost@@QAEXXZ
	DD	00H
	DD	FLAT:__CTA2?AVarchive_exception@archive@boost@@
xdata$x	ENDS
;	COMDAT ??_7?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@6B@
CONST	SEGMENT
??_7?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@6B@ DD FLAT:??_R4?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`vftable'
	DD	FLAT:??_E?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z
	DD	FLAT:?load_object_data@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBEXAAVbasic_iarchive@234@PAXI@Z
	DD	FLAT:?class_info@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NXZ
	DD	FLAT:?tracking@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NI@Z
	DD	FLAT:?version@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE?AVversion_type@34@XZ
	DD	FLAT:?is_polymorphic@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NXZ
	DD	FLAT:?destroy@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@EBEXPAX@Z
CONST	ENDS
;	COMDAT ??_C@_1IO@PLLJMNBK@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
CONST	SEGMENT
??_C@_1IO@PLLJMNBK@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ DB 's'
	DB	00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'p', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i'
	DB	00H, 'c', 00H, '\', 00H, 'd', 00H, 'o', 00H, 'c', 00H, 'u', 00H
	DB	'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '_', 00H, '1', 00H
	DB	'_', 00H, '6', 00H, '3', 00H, '_', 00H, '0', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '\', 00H, 's', 00H
	DB	'e', 00H, 'r', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '\', 00H
	DB	'f', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 'y'
	DB	00H, '.', 00H, 'h', 00H, 'p', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@6B@
CONST	SEGMENT
??_7?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@6B@ DD FLAT:??_R4?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@6B@ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`vftable'
	DD	FLAT:??_E?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UAEPAXI@Z
	DD	FLAT:?load_object_data@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBEXAAVbasic_iarchive@234@PAXI@Z
	DD	FLAT:?class_info@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NXZ
	DD	FLAT:?tracking@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NI@Z
	DD	FLAT:?version@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE?AVversion_type@34@XZ
	DD	FLAT:?is_polymorphic@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NXZ
	DD	FLAT:?destroy@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@EBEXPAX@Z
CONST	ENDS
;	COMDAT ??_R0?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$a'
	DB	'llocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_trai'
	DB	'ts@D@std@@V?$allocator@D@2@@std@@@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_7?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@6B@
CONST	SEGMENT
??_7?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@6B@ DD FLAT:??_R4?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`vftable'
	DD	FLAT:?is_less_than@extended_type_info_typeid_0@typeid_system@serialization@boost@@UBE_NABVextended_type_info@34@@Z
	DD	FLAT:?is_equal@extended_type_info_typeid_0@typeid_system@serialization@boost@@UBE_NABVextended_type_info@34@@Z
	DD	FLAT:??_E?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@UAEPAXI@Z
	DD	FLAT:?get_debug_info@extended_type_info_typeid_0@typeid_system@serialization@boost@@EBEPBDXZ
	DD	FLAT:?construct@?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UBAPAXIZZ
	DD	FLAT:?destroy@?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UBEXQBX@Z
CONST	ENDS
;	COMDAT ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@ DB 'f', 00H, 'a', 00H
	DB	'l', 00H, 's', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1LC@ILBAKICL@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
CONST	SEGMENT
??_C@_1LC@ILBAKICL@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ DB 's'
	DB	00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'p', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i'
	DB	00H, 'c', 00H, '\', 00H, 'd', 00H, 'o', 00H, 'c', 00H, 'u', 00H
	DB	'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '_', 00H, '1', 00H
	DB	'_', 00H, '6', 00H, '3', 00H, '_', 00H, '0', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '\', 00H, 's', 00H
	DB	'e', 00H, 'r', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '\', 00H
	DB	'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e'
	DB	00H, 'd', 00H, '_', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H
	DB	'_', 00H, 'i', 00H, 'n', 00H, 'f', 00H, 'o', 00H, '_', 00H, 't'
	DB	00H, 'y', 00H, 'p', 00H, 'e', 00H, 'i', 00H, 'd', 00H, '.', 00H
	DB	'h', 00H, 'p', 00H, 'p', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_7?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@6B@
CONST	SEGMENT
??_7?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@6B@ DD FLAT:??_R4?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@6B@ ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`vftable'
	DD	FLAT:?is_less_than@extended_type_info_typeid_0@typeid_system@serialization@boost@@UBE_NABVextended_type_info@34@@Z
	DD	FLAT:?is_equal@extended_type_info_typeid_0@typeid_system@serialization@boost@@UBE_NABVextended_type_info@34@@Z
	DD	FLAT:??_E?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UAEPAXI@Z
	DD	FLAT:?get_debug_info@extended_type_info_typeid_0@typeid_system@serialization@boost@@EBEPBDXZ
	DD	FLAT:?construct@?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UBAPAXIZZ
	DD	FLAT:?destroy@?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UBEXQBX@Z
CONST	ENDS
;	COMDAT ??_C@_1GC@KKEDEOBO@?$AA?$CB?$AA?5?$AAd?$AAe?$AAt?$AAa?$AAi?$AAl?$AA?3?$AA?3?$AAs?$AAi?$AAn?$AAg?$AAl?$AAe?$AAt?$AAo?$AAn?$AA_?$AAw?$AAr?$AAa?$AAp?$AAp?$AAe?$AAr?$AA?$DM?$AA?5?$AAT?$AA?5?$AA?$DO@
CONST	SEGMENT
??_C@_1GC@KKEDEOBO@?$AA?$CB?$AA?5?$AAd?$AAe?$AAt?$AAa?$AAi?$AAl?$AA?3?$AA?3?$AAs?$AAi?$AAn?$AAg?$AAl?$AAe?$AAt?$AAo?$AAn?$AA_?$AAw?$AAr?$AAa?$AAp?$AAp?$AAe?$AAr?$AA?$DM?$AA?5?$AAT?$AA?5?$AA?$DO@ DB '!'
	DB	00H, ' ', 00H, 'd', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'i', 00H
	DB	'l', 00H, ':', 00H, ':', 00H, 's', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 'l', 00H, 'e', 00H, 't', 00H, 'o', 00H, 'n', 00H, '_', 00H
	DB	'w', 00H, 'r', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, '<', 00H, ' ', 00H, 'T', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, 'm', 00H, '_', 00H, 'i', 00H, 's', 00H, '_', 00H, 'd'
	DB	00H, 'e', 00H, 's', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'y', 00H
	DB	'e', 00H, 'd', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1JC@GIHFICPP@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
CONST	SEGMENT
??_C@_1JC@GIHFICPP@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ DB 's'
	DB	00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'p', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i'
	DB	00H, 'c', 00H, '\', 00H, 'd', 00H, 'o', 00H, 'c', 00H, 'u', 00H
	DB	'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '_', 00H, '1', 00H
	DB	'_', 00H, '6', 00H, '3', 00H, '_', 00H, '0', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '\', 00H, 's', 00H
	DB	'e', 00H, 'r', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '\', 00H
	DB	's', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'l', 00H, 'e', 00H, 't'
	DB	00H, 'o', 00H, 'n', 00H, '.', 00H, 'h', 00H, 'p', 00H, 'p', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_7?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@6B@
CONST	SEGMENT
??_7?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@6B@ DD FLAT:??_R4?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`vftable'
	DD	FLAT:??_E?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z
	DD	FLAT:?save_object_data@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBEXAAVbasic_oarchive@234@PBX@Z
	DD	FLAT:?class_info@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NXZ
	DD	FLAT:?tracking@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NI@Z
	DD	FLAT:?version@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE?AVversion_type@34@XZ
	DD	FLAT:?is_polymorphic@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NXZ
CONST	ENDS
;	COMDAT ??_7?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@6B@
CONST	SEGMENT
??_7?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@6B@ DD FLAT:??_R4?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@6B@ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`vftable'
	DD	FLAT:??_E?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UAEPAXI@Z
	DD	FLAT:?save_object_data@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBEXAAVbasic_oarchive@234@PBX@Z
	DD	FLAT:?class_info@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NXZ
	DD	FLAT:?tracking@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NI@Z
	DD	FLAT:?version@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE?AVversion_type@34@XZ
	DD	FLAT:?is_polymorphic@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NXZ
CONST	ENDS
;	COMDAT ?data@?1???B?$integral_constant@_N$00@boost@@QBEABU?$bool_@$00@mpl@2@XZ@4DB
CONST	SEGMENT
?data@?1???B?$integral_constant@_N$00@boost@@QBEABU?$bool_@$00@mpl@2@XZ@4DB DB 00H ;  ?? ::DB::mpl::XZ::`boost::integral_constant<bool,1>::operator boost::mpl::bool_<1> const &'::`2'::data
CONST	ENDS
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_cast@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_cast@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
data$r	SEGMENT
??_R0?AVbad_cast@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_cast `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_cast@std@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT
__CTA2?AVbad_cast@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT
__TI2?AVbad_cast@std@@ DD 00H
	DD	FLAT:??1bad_cast@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_cast@std@@
xdata$x	ENDS
;	COMDAT ??_C@_1MA@BDELDFHB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1MA@BDELDFHB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H
	DB	't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, '_', 00H, 'C', 00H, 'o', 00H, 'm'
	DB	00H, 'p', 00H, 'a', 00H, 't', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@KDEKGMPF@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@KDEKGMPF@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'b'
	DB	00H, 'l', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MG@GDGHDIKC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1MG@GDGHDIKC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H
	DB	't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '*', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1MI@IFMPOAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1MI@IFMPOAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H
	DB	't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '+', 00H
	DB	'+', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@CNCHLAOB@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
CONST	SEGMENT
??_C@_1EG@CNCHLAOB@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ DB 's'
	DB	00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@HAKOGNPH@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
CONST	SEGMENT
??_C@_1EE@HAKOGNPH@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@ DB 's'
	DB	00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BGI@CFILNOOP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1BGI@CFILNOOP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'i'
	DB	00H, 'c', 00H, '_', 00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H
	DB	't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':'
	DB	00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't', 00H
	DB	'r', 00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H, 'c'
	DB	00H, 'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ',', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ':', 00H, ':', 00H, '_', 00H, 'C', 00H, 'o', 00H, 'm', 00H
	DB	'p', 00H, 'a', 00H, 't', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'b'
	DB	00H, 'l', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BGO@ENKEMOHL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1BGO@ENKEMOHL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'i'
	DB	00H, 'c', 00H, '_', 00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H
	DB	't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':'
	DB	00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't', 00H
	DB	'r', 00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H, 'c'
	DB	00H, 'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ',', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '*', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
CONST	SEGMENT
??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BHA@MHIPJLE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1BHA@MHIPJLE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'i'
	DB	00H, 'c', 00H, '_', 00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H
	DB	't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':'
	DB	00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't', 00H
	DB	'r', 00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H, 'c'
	DB	00H, 'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ',', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '+', 00H, '+'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
CONST	SEGMENT
??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
CONST	SEGMENT
??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ DB 'Stand'
	DB	'ard C++ Libraries Out of Range', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
CONST	SEGMENT
??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01GPOEFGEJ@?7?$AA@
CONST	SEGMENT
??_C@_01GPOEFGEJ@?7?$AA@ DB 09H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JNHHJJAI@?5?5?5?5?5?5?5?5?5Website?3?5?5?$AA@
CONST	SEGMENT
??_C@_0BE@JNHHJJAI@?5?5?5?5?5?5?5?5?5Website?3?5?5?$AA@ DB '         Webs'
	DB	'ite:  ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JHLBEJEA@?5?5?5?5?5?5?5?5?5?5?5Hours?3?5?5?$AA@
CONST	SEGMENT
??_C@_0BE@JHLBEJEA@?5?5?5?5?5?5?5?5?5?5?5Hours?3?5?5?$AA@ DB '           '
	DB	'Hours:  ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LOEDLNEE@?5?5?5?5?5?5?5?5?5Address?3?5?5?$AA@
CONST	SEGMENT
??_C@_0BE@LOEDLNEE@?5?5?5?5?5?5?5?5?5Address?3?5?5?$AA@ DB '         Addr'
	DB	'ess:  ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DDKDJAIC@?5Email?5Addresses?3?5?5?$AA@
CONST	SEGMENT
??_C@_0BE@DDKDJAIC@?5Email?5Addresses?3?5?5?$AA@ DB ' Email Addresses:  ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BBGIJEAL@?5?5?5?5?5Fax?5Numbers?3?5?5?$AA@
CONST	SEGMENT
??_C@_0BE@BBGIJEAL@?5?5?5?5?5Fax?5Numbers?3?5?5?$AA@ DB '     Fax Numbers'
	DB	':  ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PAALNHLB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$AA@
CONST	SEGMENT
??_C@_0BE@PAALNHLB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$AA@ DB '      '
	DB	'             ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HDLJGIGO@?5?5?5Phone?5Numbers?3?5?5?$AA@
CONST	SEGMENT
??_C@_0BE@HDLJGIGO@?5?5?5Phone?5Numbers?3?5?5?$AA@ DB '   Phone Numbers: '
	DB	' ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MLGHGCIF@?5?5?5?5?5?5?5?5?5?5?5?5Name?3?5?5?$AA@
CONST	SEGMENT
??_C@_0BE@MLGHGCIF@?5?5?5?5?5?5?5?5?5?5?5?5Name?3?5?5?$AA@ DB '          '
	DB	'  Name:  ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JDDDPOOG@email?5address?$AA@
CONST	SEGMENT
??_C@_0O@JDDDPOOG@email?5address?$AA@ DB 'email address', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IDMPELLM@fax?5number?$AA@
CONST	SEGMENT
??_C@_0L@IDMPELLM@fax?5number?$AA@ DB 'fax number', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KEFPBKIO@phone?5number?$AA@
CONST	SEGMENT
??_C@_0N@KEFPBKIO@phone?5number?$AA@ DB 'phone number', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BJINENIH@Remove?5email?5address?$AA@
CONST	SEGMENT
??_C@_0BF@BJINENIH@Remove?5email?5address?$AA@ DB 'Remove email address', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BFBEABLC@Add?5email?5address?$AA@
CONST	SEGMENT
??_C@_0BC@BFBEABLC@Add?5email?5address?$AA@ DB 'Add email address', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KGBPMKIC@Remove?5fax?5number?$AA@
CONST	SEGMENT
??_C@_0BC@KGBPMKIC@Remove?5fax?5number?$AA@ DB 'Remove fax number', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PJBDCCA@Add?5fax?5number?$AA@
CONST	SEGMENT
??_C@_0P@PJBDCCA@Add?5fax?5number?$AA@ DB 'Add fax number', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KGPMIEGO@Return?5to?5previous?5menu?$AA@
CONST	SEGMENT
??_C@_0BI@KGPMIEGO@Return?5to?5previous?5menu?$AA@ DB 'Return to previous'
	DB	' menu', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HPCFJHJF@Remove?5phone?5number?$AA@
CONST	SEGMENT
??_C@_0BE@HPCFJHJF@Remove?5phone?5number?$AA@ DB 'Remove phone number', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FAHCJKFO@Add?5phone?5number?$AA@
CONST	SEGMENT
??_C@_0BB@FAHCJKFO@Add?5phone?5number?$AA@ DB 'Add phone number', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KBHLMDIH@Finish?5editing?5contact?$AA@
CONST	SEGMENT
??_C@_0BH@KBHLMDIH@Finish?5editing?5contact?$AA@ DB 'Finish editing conta'
	DB	'ct', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OAMALGNP@Enter?5website?$AA@
CONST	SEGMENT
??_C@_0O@OAMALGNP@Enter?5website?$AA@ DB 'Enter website', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BGJFKBDI@Enter?5hours?$AA@
CONST	SEGMENT
??_C@_0M@BGJFKBDI@Enter?5hours?$AA@ DB 'Enter hours', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EEFLFDIA@Enter?5address?$AA@
CONST	SEGMENT
??_C@_0O@EEFLFDIA@Enter?5address?$AA@ DB 'Enter address', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PEBHBCKH@Edit?5email?5addresses?$AA@
CONST	SEGMENT
??_C@_0BF@PEBHBCKH@Edit?5email?5addresses?$AA@ DB 'Edit email addresses', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EEBFEAFE@Edit?5fax?5numbers?$AA@
CONST	SEGMENT
??_C@_0BB@EEBFEAFE@Edit?5fax?5numbers?$AA@ DB 'Edit fax numbers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LCFAHLH@Edit?5phone?5numbers?$AA@
CONST	SEGMENT
??_C@_0BD@LCFAHLH@Edit?5phone?5numbers?$AA@ DB 'Edit phone numbers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EIELKJJE@Enter?5name?$AA@
CONST	SEGMENT
??_C@_0L@EIELKJJE@Enter?5name?$AA@ DB 'Enter name', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09INCOPIGL@Website?3?5?$AA@
CONST	SEGMENT
??_C@_09INCOPIGL@Website?3?5?$AA@ DB 'Website: ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07FEKBIJ@Hours?3?5?$AA@
CONST	SEGMENT
??_C@_07FEKBIJ@Hours?3?5?$AA@ DB 'Hours: ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09GAGNALJM@Address?3?5?$AA@
CONST	SEGMENT
??_C@_09GAGNALJM@Address?3?5?$AA@ DB 'Address: ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HGHHJMJK@Company?5name?3?5?$AA@
CONST	SEGMENT
??_C@_0P@HGHHJMJK@Company?5name?3?5?$AA@ DB 'Company name: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08FGJDGFCJ@CCompany?$AA@
CONST	SEGMENT
??_C@_08FGJDGFCJ@CCompany?$AA@ DB 'CCompany', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CCompany@@6B@
CONST	SEGMENT
??_7CCompany@@6B@ DD FLAT:??_R4CCompany@@6B@		; CCompany::`vftable'
	DD	FLAT:??_ECCompany@@UAEPAXI@Z
	DD	FLAT:?classType@CCompany@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?display@CCompany@@UAEXXZ
	DD	FLAT:?displayName@CCompany@@UAEXXZ
	DD	FLAT:?getContactInformation@CCompany@@UAEXXZ
	DD	FLAT:?contains@CCompany@@UAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	FLAT:??8CCompany@@UBE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	FLAT:?getSortableName@CCompany@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?generateMenus@CCompany@@EAEXXZ
	DD	FLAT:?greater@CCompany@@EAE_NAAVCContact@@@Z
	DD	FLAT:?save@CCompany@@UBEXAAVtext_oarchive@archive@boost@@I@Z
	DD	FLAT:?load@CCompany@@UAEXAAVtext_iarchive@archive@boost@@I@Z
CONST	ENDS
;	COMDAT ??_C@_1KC@JIPKAKFO@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
CONST	SEGMENT
??_C@_1KC@JIPKAKFO@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ DB 's'
	DB	00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'p', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i'
	DB	00H, 'c', 00H, '\', 00H, 'd', 00H, 'o', 00H, 'c', 00H, 'u', 00H
	DB	'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '_', 00H, '1', 00H
	DB	'_', 00H, '6', 00H, '3', 00H, '_', 00H, '0', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '\', 00H, 's', 00H
	DB	'e', 00H, 'r', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '\', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'm', 00H, '_', 00H, 'v', 00H, 'e'
	DB	00H, 'r', 00H, 's', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, '.', 00H, 'h', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
CONST	SEGMENT
??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 'v'
	DB	00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'A', 00H
	DB	'r', 00H, 'g', 00H, 'u', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
CONST	SEGMENT
??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ DB 'Standa'
	DB	'rd C++ Libraries Invalid Argument', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GE@MNCNLAH@?$AAt?$AA_?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAb?$AAo?$AAo?$AAs?$AAt?$AA?3?$AA?3?$AAi?$AAn?$AAt?$AAe?$AAg?$AAe?$AAr?$AA_?$AAt?$AAr?$AAa?$AAi?$AAt?$AAs?$AA?$DM?$AAb?$AAa?$AAs?$AAe@
CONST	SEGMENT
??_C@_1GE@MNCNLAH@?$AAt?$AA_?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAb?$AAo?$AAo?$AAs?$AAt?$AA?3?$AA?3?$AAi?$AAn?$AAt?$AAe?$AAg?$AAe?$AAr?$AA_?$AAt?$AAr?$AAa?$AAi?$AAt?$AAs?$AA?$DM?$AAb?$AAa?$AAs?$AAe@ DB 't'
	DB	00H, '_', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'b', 00H
	DB	'o', 00H, 'o', 00H, 's', 00H, 't', 00H, ':', 00H, ':', 00H, 'i'
	DB	00H, 'n', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'e', 00H, 'r', 00H
	DB	'_', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'i', 00H, 't', 00H, 's'
	DB	00H, '<', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H
	DB	'm', 00H, 'a', 00H, 'x', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@DBEBMPEE@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
CONST	SEGMENT
??_C@_1IO@DBEBMPEE@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ DB 's'
	DB	00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'p', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i'
	DB	00H, 'c', 00H, '\', 00H, 'd', 00H, 'o', 00H, 'c', 00H, 'u', 00H
	DB	'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '_', 00H, '1', 00H
	DB	'_', 00H, '6', 00H, '3', 00H, '_', 00H, '0', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '\', 00H, 'a', 00H
	DB	'r', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'v', 00H, 'e', 00H, '\'
	DB	00H, 'b', 00H, 'a', 00H, 's', 00H, 'i', 00H, 'c', 00H, '_', 00H
	DB	'a', 00H, 'r', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'v', 00H, 'e'
	DB	00H, '.', 00H, 'h', 00H, 'p', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT
??_C@_08EPJLHIJG@bad?5cast?$AA@ DB 'bad cast', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7bad_cast@std@@6B@
CONST	SEGMENT
??_7bad_cast@std@@6B@ DD FLAT:??_R4bad_cast@std@@6B@	; std::bad_cast::`vftable'
	DD	FLAT:??_Ebad_cast@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT
?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB DD 0ffffffffH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
CONST	ENDS
;	COMDAT ??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@
CONST	SEGMENT
??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'u', 00H
	DB	's', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '-', 00H, ' ', 00H, '_'
	DB	00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'c', 00H, 'o', 00H
	DB	'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'e', 00H, 'r'
	DB	00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '_', 00H, 'N', 00H
	DB	'O', 00H, 'N', 00H, '_', 00H, 'U', 00H, 'S', 00H, 'E', 00H, 'R'
	DB	00H, '_', 00H, 'S', 00H, 'I', 00H, 'Z', 00H, 'E', 00H, '"', 00H
	DB	' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@
CONST	SEGMENT
??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@ DB '_Ptr_u'
	DB	'ser - _Ptr_container <= _NON_USER_SIZE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@
CONST	SEGMENT
??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@ DB '"'
	DB	00H, '2', 00H, ' ', 00H, '*', 00H, ' ', 00H, 's', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, 'o', 00H, 'f', 00H, '(', 00H, 'v', 00H, 'o'
	DB	00H, 'i', 00H, 'd', 00H, ' ', 00H, '*', 00H, ')', 00H, ' ', 00H
	DB	'<', 00H, '=', 00H, ' ', 00H, '_', 00H, 'P', 00H, 't', 00H, 'r'
	DB	00H, '_', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'-', 00H, ' ', 00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_'
	DB	00H, 'c', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H
	DB	'n', 00H, 'e', 00H, 'r', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@
CONST	SEGMENT
??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@ DB '2'
	DB	' * sizeof(void *) <= _Ptr_user - _Ptr_container', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
CONST	SEGMENT
??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'e'
	DB	00H, 'r', 00H, ' ', 00H, '<', 00H, ' ', 00H, '_', 00H, 'P', 00H
	DB	't', 00H, 'r', 00H, '_', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@
CONST	SEGMENT
??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@ DB '_Ptr_containe'
	DB	'r < _Ptr_user', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@
CONST	SEGMENT
??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@ DB '"'
	DB	00H, 'r', 00H, 'e', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'p', 00H, 'r', 00H, 'e', 00H, 't', 00H, '_', 00H, 'c'
	DB	00H, 'a', 00H, 's', 00H, 't', 00H, '<', 00H, 'u', 00H, 'i', 00H
	DB	'n', 00H, 't', 00H, 'p', 00H, 't', 00H, 'r', 00H, '_', 00H, 't'
	DB	00H, ' ', 00H, '*', 00H, '>', 00H, '(', 00H, '_', 00H, 'P', 00H
	DB	't', 00H, 'r', 00H, '_', 00H, 'p', 00H, 't', 00H, 'r', 00H, ')'
	DB	00H, '[', 00H, '-', 00H, '1', 00H, ']', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, '_', 00H, 'B', 00H, 'I', 00H, 'G', 00H, '_'
	DB	00H, 'A', 00H, 'L', 00H, 'L', 00H, 'O', 00H, 'C', 00H, 'A', 00H
	DB	'T', 00H, 'I', 00H, 'O', 00H, 'N', 00H, '_', 00H, 'S', 00H, 'E'
	DB	00H, 'N', 00H, 'T', 00H, 'I', 00H, 'N', 00H, 'E', 00H, 'L', 00H
	DB	'"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@
CONST	SEGMENT
??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@ DB 'rei'
	DB	'nterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] == _BIG_ALLOCATION_S'
	DB	'ENTINEL', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@
CONST	SEGMENT
??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@ DB '"'
	DB	00H, '(', 00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H
	DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '&', 00H, ' '
	DB	00H, '(', 00H, '_', 00H, 'B', 00H, 'I', 00H, 'G', 00H, '_', 00H
	DB	'A', 00H, 'L', 00H, 'L', 00H, 'O', 00H, 'C', 00H, 'A', 00H, 'T'
	DB	00H, 'I', 00H, 'O', 00H, 'N', 00H, '_', 00H, 'A', 00H, 'L', 00H
	DB	'I', 00H, 'G', 00H, 'N', 00H, 'M', 00H, 'E', 00H, 'N', 00H, 'T'
	DB	00H, ' ', 00H, '-', 00H, ' ', 00H, '1', 00H, ')', 00H, ')', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, '"', 00H, ' '
	DB	00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@
CONST	SEGMENT
??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@ DB '(_Ptr'
	DB	'_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'D', 00H
	DB	'e', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@MLOBABC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AA_?$AAS?$AAz?$AA?$CC?$AA?5?$AA?$CG@
CONST	SEGMENT
??_C@_1EI@MLOBABC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AA_?$AAS?$AAz?$AA?$CC?$AA?5?$AA?$CG@ DB '"'
	DB	00H, '_', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H
	DB	' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '(', 00H, 's', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, '_', 00H, 't', 00H, ')', 00H, '(', 00H
	DB	'-', 00H, '1', 00H, ')', 00H, ' ', 00H, '/', 00H, ' ', 00H, '_'
	DB	00H, 'S', 00H, 'z', 00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H
	DB	' ', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@HMCJOMKN@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5_Sz?$AA@
CONST	SEGMENT
??_C@_0BN@HMCJOMKN@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5_Sz?$AA@ DB '_'
	DB	'Count <= (size_t)(-1) / _Sz', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA DD 05cH ; `std::_Deallocate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CC@GKJLLHIM@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@GKJLLHIM@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09GLJCAGLP@_Ptr?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_09GLJCAGLP@_Ptr?5?$CB?$DN?50?$AA@ DB '_Ptr != 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H, 'e'
	DB	00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@ DB '%', 00H, 'l', 00H, 's', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'e'
	DB	00H, 'r', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H
	DB	'"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@ DB '_Ptr_container !='
	DB	' 0', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA DD 030H	; `std::_Allocate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ DB 'I'
	DB	00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H, 'O', 00H
	DB	'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T', 00H, ' '
	DB	00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H, 'P', 00H
	DB	'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@MHADJNIL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@MHADJNIL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H, 't'
	DB	00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception?$AA@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception?$AA@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save_impl@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@AAU?$bool_@$0A@@mpl@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save_impl@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@AAU?$bool_@$0A@@mpl@2@@Z$0
__ehfuncinfo$??$save_impl@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@AAU?$bool_@$0A@@mpl@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$save_impl@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@AAU?$bool_@$0A@@mpl@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$load@Vcollection_size_type@serialization@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$load@Vcollection_size_type@serialization@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z$0
__ehfuncinfo$??$load@Vcollection_size_type@serialization@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$load@Vcollection_size_type@serialization@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$save@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@@Z$1
__ehfuncinfo$??$save@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$save@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninitialized_move_al_unchecked1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninitialized_move_al_unchecked1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z$0
__unwindtable$??$_Uninitialized_move_al_unchecked1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninitialized_move_al_unchecked1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninitialized_move_al_unchecked1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z$2
__ehfuncinfo$??$_Uninitialized_move_al_unchecked1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninitialized_move_al_unchecked1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninitialized_move_al_unchecked1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninitialized_default_fill_n1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninitialized_default_fill_n1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z$0
__unwindtable$??$_Uninitialized_default_fill_n1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninitialized_default_fill_n1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninitialized_default_fill_n1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z$2
__ehfuncinfo$??$_Uninitialized_default_fill_n1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninitialized_default_fill_n1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninitialized_default_fill_n1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$collection_load_impl@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_iarchive@archive@2@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@Vitem_version_type@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$collection_load_impl@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_iarchive@archive@2@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@Vitem_version_type@12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$collection_load_impl@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_iarchive@archive@2@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@Vitem_version_type@12@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$collection_load_impl@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_iarchive@archive@2@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@Vitem_version_type@12@@Z$2
__ehfuncinfo$??$collection_load_impl@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_iarchive@archive@2@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@Vitem_version_type@12@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$collection_load_impl@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_iarchive@archive@2@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@Vitem_version_type@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save_collection@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_oarchive@archive@2@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save_collection@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_oarchive@archive@2@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$save_collection@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_oarchive@archive@2@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@@Z$1
__ehfuncinfo$??$save_collection@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_oarchive@archive@2@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$save_collection@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_oarchive@archive@2@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z$0
__ehfuncinfo$??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z$0
__ehfuncinfo$??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z$1
__ehfuncinfo$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ$0
__ehfuncinfo$?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@QAE@XZ$0
__ehfuncinfo$??0?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ$0
__ehfuncinfo$?get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ$0
__ehfuncinfo$?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Debug_range2@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WIUinput_iterator_tag@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Debug_range2@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WIUinput_iterator_tag@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Debug_range2@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WIUinput_iterator_tag@0@@Z$1
__ehfuncinfo$??$_Debug_range2@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WIUinput_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Debug_range2@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WIUinput_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Construct@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0Uinput_iterator_tag@1@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Construct@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0Uinput_iterator_tag@1@@Z$0
__tryblocktable$??$_Construct@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0Uinput_iterator_tag@1@@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$_Construct@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0Uinput_iterator_tag@1@@Z$4
__unwindtable$??$_Construct@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0Uinput_iterator_tag@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0Uinput_iterator_tag@1@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Construct@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0Uinput_iterator_tag@1@@Z$3
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$??$_Construct@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0Uinput_iterator_tag@1@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$_Construct@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0Uinput_iterator_tag@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Construct@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0Uinput_iterator_tag@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Unchecked@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V123@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Unchecked@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V123@@Z$0
__ehfuncinfo$??$_Unchecked@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V123@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Unchecked@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V123@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Debug_range@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WI@Z$2
__ehfuncinfo$??$_Debug_range@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WI@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Debug_range@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$?0V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@X@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0ABV?$allocator@D@1@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??$?0V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@X@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0ABV?$allocator@D@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$?0V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@X@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0ABV?$allocator@D@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@X@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0ABV?$allocator@D@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$?0V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@X@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0ABV?$allocator@D@1@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$?0V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@X@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0ABV?$allocator@D@1@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??$?0V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@X@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0ABV?$allocator@D@1@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$??$?0V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@X@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0ABV?$allocator@D@1@@Z$6
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$make_transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@iterators@boost@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@U?$to_upperF@D@detail@algorithm@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@iterators@boost@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@U?$to_upperF@D@detail@algorithm@1@@Z$0
__ehfuncinfo$??$make_transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@iterators@boost@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@U?$to_upperF@D@detail@algorithm@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$make_transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@iterators@boost@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@U?$to_upperF@D@detail@algorithm@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABV?$allocator@D@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABV?$allocator@D@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0
__ehfuncinfo$??$?0ABV?$allocator@D@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABV?$allocator@D@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Pocma@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@0U?$integral_constant@_N$00@0@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$transform_range_copy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$to_upperF@D@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV34@U?$to_upperF@D@012@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$transform_range_copy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$to_upperF@D@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV34@U?$to_upperF@D@012@@Z$1
__ehfuncinfo$??$transform_range_copy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$to_upperF@D@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV34@U?$to_upperF@D@012@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$transform_range_copy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$to_upperF@D@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV34@U?$to_upperF@D@012@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0
__ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z$0
__ehfuncinfo$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$6
	DD	01H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$4
	DD	07H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$6
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z$0
__ehfuncinfo$??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z$0
__ehfuncinfo$??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$0
__tryblocktable$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$3
__unwindtable$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0
__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3
__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?greater@CCompany@@EAE_NAAVCContact@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?greater@CCompany@@EAE_NAAVCContact@@@Z$0
__ehfuncinfo$?greater@CCompany@@EAE_NAAVCContact@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?greater@CCompany@@EAE_NAAVCContact@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?resize@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?resize@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z$0
__unwindtable$?resize@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?resize@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?resize@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z$2
__ehfuncinfo$?resize@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?resize@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?resize@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?contains@CCompany@@UAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?contains@CCompany@@UAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?contains@CCompany@@UAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?contains@CCompany@@UAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
__ehfuncinfo$?contains@CCompany@@UAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?contains@CCompany@@UAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?display@CCompany@@UAEXXZ DD 019930522H
	DD	015H
	DD	FLAT:__unwindtable$?display@CCompany@@UAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?display@CCompany@@UAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?display@CCompany@@UAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?display@CCompany@@UAEXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?display@CCompany@@UAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?display@CCompany@@UAEXXZ$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?display@CCompany@@UAEXXZ$3
	DD	04H
	DD	FLAT:__unwindfunclet$?display@CCompany@@UAEXXZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$?display@CCompany@@UAEXXZ$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?display@CCompany@@UAEXXZ$6
	DD	07H
	DD	FLAT:__unwindfunclet$?display@CCompany@@UAEXXZ$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?display@CCompany@@UAEXXZ$8
	DD	09H
	DD	FLAT:__unwindfunclet$?display@CCompany@@UAEXXZ$9
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?display@CCompany@@UAEXXZ$9
	DD	0bH
	DD	FLAT:__unwindfunclet$?display@CCompany@@UAEXXZ$10
	DD	0bH
	DD	FLAT:__unwindfunclet$?display@CCompany@@UAEXXZ$11
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?display@CCompany@@UAEXXZ$12
	DD	0eH
	DD	FLAT:__unwindfunclet$?display@CCompany@@UAEXXZ$13
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?display@CCompany@@UAEXXZ$14
	DD	010H
	DD	FLAT:__unwindfunclet$?display@CCompany@@UAEXXZ$15
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?display@CCompany@@UAEXXZ$15
	DD	012H
	DD	FLAT:__unwindfunclet$?display@CCompany@@UAEXXZ$16
	DD	012H
	DD	FLAT:__unwindfunclet$?display@CCompany@@UAEXXZ$17
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CCompany@@QAE@_N@Z DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$??0CCompany@@QAE@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CCompany@@QAE@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CCompany@@QAE@_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CCompany@@QAE@_N@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CCompany@@QAE@_N@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CCompany@@QAE@_N@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CCompany@@QAE@_N@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CCompany@@QAE@_N@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0CCompany@@QAE@_N@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0CCompany@@QAE@_N@Z$7
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CCompany@@QAE@XZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$??0CCompany@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CCompany@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CCompany@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CCompany@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CCompany@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CCompany@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CCompany@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CCompany@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0CCompany@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0CCompany@@QAE@XZ$7
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1ios_precision_saver@io@boost@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1ios_flags_saver@io@boost@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z$0
__ehfuncinfo$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1locale@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0locale@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z$4
	DD	03H
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1
__ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0
__ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Container_base12@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??instance$initializer$@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@0P6AXXZA@@3P6AXXZA DD FLAT:??__E?instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@A@@YAXXZ ; ??instance$initializer$@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@0P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??instance$initializer$@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@0P6AXXZA@@3P6AXXZA DD FLAT:??__E?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@A@@YAXXZ ; ??instance$initializer$@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@0P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save_impl@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@AAU?$bool_@$0A@@mpl@2@@Z
_TEXT	SEGMENT
tv94 = -388						; size = 4
tv95 = -384						; size = 4
tv72 = -384						; size = 4
$T2 = -376						; size = 152
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
___formal$ = 12						; size = 4
??$save_impl@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@AAU?$bool_@$0A@@mpl@2@@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::serialization::collection_size_type>, COMDAT
; _this$ = ecx

; 125  :     void save_impl(const T &t, boost::mpl::bool_<false> &){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$save_impl@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@AAU?$bool_@$0A@@mpl@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 376				; 00000178H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-388]
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 126  :         if(os.fail())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv72[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?fail@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@save_impl

; 127  :             boost::serialization::throw_exception(

	push	1
	push	0
	push	0
	push	13					; 0000000dH
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z ; boost::archive::archive_exception::archive_exception
	mov	DWORD PTR tv95[ebp], eax
	mov	eax, DWORD PTR tv95[ebp]
	mov	DWORD PTR tv94[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv94[ebp]
	push	ecx
	call	??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??_Darchive_exception@archive@boost@@QAEXXZ
$LN2@save_impl:

; 128  :                 archive_exception(archive_exception::output_stream_error)
; 129  :             );
; 130  :         os << t;

	mov	ecx, DWORD PTR _t$[ebp]
	call	??Bcollection_size_type@serialization@boost@@QBEIXZ ; boost::serialization::collection_size_type::operator unsigned int
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 131  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 388				; 00000184H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save_impl@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@AAU?$bool_@$0A@@mpl@2@@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??_Darchive_exception@archive@boost@@QAEXXZ
__ehhandler$??$save_impl@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@AAU?$bool_@$0A@@mpl@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-392]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$save_impl@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@AAU?$bool_@$0A@@mpl@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$save_impl@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@AAU?$bool_@$0A@@mpl@2@@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::serialization::collection_size_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iprimitive.hpp
;	COMDAT ??$load@Vcollection_size_type@serialization@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z
_TEXT	SEGMENT
tv93 = -400						; size = 4
tv94 = -396						; size = 4
$T2 = -388						; size = 152
$T3 = -228						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
??$load@Vcollection_size_type@serialization@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z PROC ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::serialization::collection_size_type>, COMDAT
; _this$ = ecx

; 88   :     {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$load@Vcollection_size_type@serialization@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 388				; 00000184H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-400]
	mov	ecx, 97					; 00000061H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 89   :         if(is >> t)

	mov	ecx, DWORD PTR _t$[ebp]
	call	??Bcollection_size_type@serialization@boost@@QAEAAIXZ ; boost::serialization::collection_size_type::operator unsigned int &
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAI@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T3[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	call	DWORD PTR __imp_??Bios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@load

; 90   :             return;

	jmp	SHORT $LN1@load
$LN2@load:

; 91   :         boost::serialization::throw_exception(

	push	1
	push	0
	push	0
	push	8
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z ; boost::archive::archive_exception::archive_exception
	mov	DWORD PTR tv94[ebp], eax
	mov	eax, DWORD PTR tv94[ebp]
	mov	DWORD PTR tv93[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv93[ebp]
	push	ecx
	call	??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??_Darchive_exception@archive@boost@@QAEXXZ
$LN1@load:

; 92   :             archive_exception(archive_exception::input_stream_error)
; 93   :         );
; 94   :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 400				; 00000190H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$load@Vcollection_size_type@serialization@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??_Darchive_exception@archive@boost@@QAEXXZ
__ehhandler$??$load@Vcollection_size_type@serialization@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-404]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$load@Vcollection_size_type@serialization@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$load@Vcollection_size_type@serialization@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z ENDP ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::serialization::collection_size_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@@Z
_TEXT	SEGMENT
tv94 = -276						; size = 4
tv76 = -276						; size = 4
tv129 = -272						; size = 4
tv79 = -272						; size = 4
_tf$ = -69						; size = 1
_ps$ = -60						; size = 16
_fs$ = -36						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
??$save@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::serialization::collection_size_type>, COMDAT
; _this$ = ecx

; 177  :     void save(const T & t){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$save@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 178  :         boost::io::ios_flags_saver fs(os);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@save
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN4@save
$LN3@save:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv76[ebp], edx
	mov	eax, DWORD PTR tv76[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR tv76[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv79[ebp], edx
$LN4@save:
	mov	eax, DWORD PTR tv79[ebp]
	push	eax
	lea	ecx, DWORD PTR _fs$[ebp]
	call	??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_flags_saver::ios_flags_saver
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 179  :         boost::io::ios_precision_saver ps(os);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN5@save
	mov	DWORD PTR tv129[ebp], 0
	jmp	SHORT $LN6@save
$LN5@save:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv94[ebp], edx
	mov	eax, DWORD PTR tv94[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR tv94[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv129[ebp], edx
$LN6@save:
	mov	eax, DWORD PTR tv129[ebp]
	push	eax
	lea	ecx, DWORD PTR _ps$[ebp]
	call	??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_precision_saver::ios_precision_saver
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 180  :         typename is_float<T>::type tf;
; 181  :         save_impl(t, tf);

	lea	eax, DWORD PTR _tf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$save_impl@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@AAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::serialization::collection_size_type>

; 182  :     }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _ps$[ebp]
	call	??1ios_precision_saver@io@boost@@QAE@XZ	; boost::io::ios_precision_saver::~ios_precision_saver
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fs$[ebp]
	call	??1ios_flags_saver@io@boost@@QAE@XZ	; boost::io::ios_flags_saver::~ios_flags_saver
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@save
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN14@save:
	DD	3
	DD	$LN13@save
$LN13@save:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN9@save
	DD	-60					; ffffffc4H
	DD	16					; 00000010H
	DD	$LN10@save
	DD	-69					; ffffffbbH
	DD	1
	DD	$LN11@save
$LN11@save:
	DB	116					; 00000074H
	DB	102					; 00000066H
	DB	0
$LN10@save:
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$LN9@save:
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@@Z$0:
	lea	ecx, DWORD PTR _fs$[ebp]
	jmp	??1ios_flags_saver@io@boost@@QAE@XZ	; boost::io::ios_flags_saver::~ios_flags_saver
__unwindfunclet$??$save@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@@Z$1:
	lea	ecx, DWORD PTR _ps$[ebp]
	jmp	??1ios_precision_saver@io@boost@@QAE@XZ	; boost::io::ios_precision_saver::~ios_precision_saver
__ehhandler$??$save@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-280]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$save@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$save@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::serialization::collection_size_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load@Vcollection_size_type@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load@Vcollection_size_type@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::serialization::collection_size_type>, COMDAT
; _this$ = ecx

; 55   :     void load(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   :         basic_text_iprimitive<std::istream>::load(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??$load@Vcollection_size_type@serialization@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::serialization::collection_size_type>

; 57   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load@Vcollection_size_type@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::serialization::collection_size_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_oarchive.hpp
;	COMDAT ??$save@Vcollection_size_type@serialization@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save@Vcollection_size_type@serialization@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@@Z PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::serialization::collection_size_type>, COMDAT
; _this$ = ecx

; 63   :     void save(const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 64   :         this->newtoken();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?newtoken@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::newtoken

; 65   :         basic_text_oprimitive<std::ostream>::save(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??$save@Vcollection_size_type@serialization@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::serialization::collection_size_type>

; 66   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save@Vcollection_size_type@serialization@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@@Z ENDP ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::serialization::collection_size_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load_primitive@Vtext_iarchive@archive@boost@@Vcollection_size_type@serialization@3@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVcollection_size_type@serialization@2@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load_primitive@Vtext_iarchive@archive@boost@@Vcollection_size_type@serialization@3@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVcollection_size_type@serialization@2@@Z PROC ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::serialization::collection_size_type>, COMDAT

; 106  :     static void load_primitive(Archive &ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 107  :         ar.load(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	call	??$load@Vcollection_size_type@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::serialization::collection_size_type>

; 108  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$load_primitive@Vtext_iarchive@archive@boost@@Vcollection_size_type@serialization@3@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVcollection_size_type@serialization@2@@Z ENDP ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::serialization::collection_size_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load_primitive@Vtext_iarchive@archive@boost@@Vitem_version_type@serialization@3@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVitem_version_type@serialization@2@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load_primitive@Vtext_iarchive@archive@boost@@Vitem_version_type@serialization@3@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVitem_version_type@serialization@2@@Z PROC ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::serialization::item_version_type>, COMDAT

; 106  :     static void load_primitive(Archive &ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 107  :         ar.load(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	call	?load@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVitem_version_type@serialization@3@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load

; 108  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$load_primitive@Vtext_iarchive@archive@boost@@Vitem_version_type@serialization@3@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVitem_version_type@serialization@2@@Z ENDP ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::serialization::item_version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save_primitive@Vtext_oarchive@archive@boost@@Vcollection_size_type@serialization@3@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVcollection_size_type@serialization@2@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save_primitive@Vtext_oarchive@archive@boost@@Vcollection_size_type@serialization@3@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVcollection_size_type@serialization@2@@Z PROC ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::serialization::collection_size_type>, COMDAT

; 87   :     static void save_primitive(Archive & ar, const  T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 88   :         ar.end_preamble();

	mov	ecx, DWORD PTR _ar$[ebp]
	call	?end_preamble@basic_oarchive@detail@archive@boost@@QAEXXZ ; boost::archive::detail::basic_oarchive::end_preamble

; 89   :         ar.save(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	call	??$save@Vcollection_size_type@serialization@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::serialization::collection_size_type>

; 90   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save_primitive@Vtext_oarchive@archive@boost@@Vcollection_size_type@serialization@3@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVcollection_size_type@serialization@2@@Z ENDP ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::serialization::collection_size_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save_primitive@Vtext_oarchive@archive@boost@@Vitem_version_type@serialization@3@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVitem_version_type@serialization@2@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save_primitive@Vtext_oarchive@archive@boost@@Vitem_version_type@serialization@3@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVitem_version_type@serialization@2@@Z PROC ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::serialization::item_version_type>, COMDAT

; 87   :     static void save_primitive(Archive & ar, const  T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 88   :         ar.end_preamble();

	mov	ecx, DWORD PTR _ar$[ebp]
	call	?end_preamble@basic_oarchive@detail@archive@boost@@QAEXXZ ; boost::archive::detail::basic_oarchive::end_preamble

; 89   :         ar.save(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	call	?save@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVitem_version_type@serialization@3@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save

; 90   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save_primitive@Vtext_oarchive@archive@boost@@Vitem_version_type@serialization@3@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVitem_version_type@serialization@2@@Z ENDP ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::serialization::item_version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@Vcollection_size_type@serialization@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVcollection_size_type@serialization@4@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vcollection_size_type@serialization@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVcollection_size_type@serialization@4@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::serialization::collection_size_type>, COMDAT

; 384  :         static void invoke(Archive & ar, T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 385  :             load_access::load_primitive(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$load_primitive@Vtext_iarchive@archive@boost@@Vcollection_size_type@serialization@3@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVcollection_size_type@serialization@2@@Z ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::serialization::collection_size_type>
	add	esp, 8

; 386  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Vcollection_size_type@serialization@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVcollection_size_type@serialization@4@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::serialization::collection_size_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_level@Vcollection_size_type@serialization@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_level@Vcollection_size_type@serialization@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_level<boost::serialization::collection_size_type>, COMDAT

; 51   : inline void check_object_level(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 52   :     typedef 
; 53   :         typename mpl::greater_equal<
; 54   :             serialization::implementation_level< T >,
; 55   :             mpl::int_<serialization::primitive_type>
; 56   :         >::type typex;
; 57   : 
; 58   :     // trap attempts to serialize objects marked
; 59   :     // not_serializable
; 60   :     BOOST_STATIC_ASSERT(typex::value);
; 61   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_level@Vcollection_size_type@serialization@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_level<boost::serialization::collection_size_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@Vitem_version_type@serialization@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVitem_version_type@serialization@4@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vitem_version_type@serialization@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVitem_version_type@serialization@4@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::serialization::item_version_type>, COMDAT

; 384  :         static void invoke(Archive & ar, T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 385  :             load_access::load_primitive(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$load_primitive@Vtext_iarchive@archive@boost@@Vitem_version_type@serialization@3@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVitem_version_type@serialization@2@@Z ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::serialization::item_version_type>
	add	esp, 8

; 386  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Vitem_version_type@serialization@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVitem_version_type@serialization@4@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::serialization::item_version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_level@Vitem_version_type@serialization@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_level@Vitem_version_type@serialization@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_level<boost::serialization::item_version_type>, COMDAT

; 51   : inline void check_object_level(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 52   :     typedef 
; 53   :         typename mpl::greater_equal<
; 54   :             serialization::implementation_level< T >,
; 55   :             mpl::int_<serialization::primitive_type>
; 56   :         >::type typex;
; 57   : 
; 58   :     // trap attempts to serialize objects marked
; 59   :     // not_serializable
; 60   :     BOOST_STATIC_ASSERT(typex::value);
; 61   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_level@Vitem_version_type@serialization@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_level<boost::serialization::item_version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Vcollection_size_type@serialization@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVcollection_size_type@serialization@4@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vcollection_size_type@serialization@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVcollection_size_type@serialization@4@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::serialization::collection_size_type>, COMDAT

; 232  :         static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 233  :             save_access::save_primitive(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$save_primitive@Vtext_oarchive@archive@boost@@Vcollection_size_type@serialization@3@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVcollection_size_type@serialization@2@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::serialization::collection_size_type>
	add	esp, 8

; 234  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Vcollection_size_type@serialization@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVcollection_size_type@serialization@4@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::serialization::collection_size_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@Vcollection_size_type@serialization@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@Vcollection_size_type@serialization@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<boost::serialization::collection_size_type>, COMDAT

; 64   : inline void check_object_versioning(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_versioning@Vcollection_size_type@serialization@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<boost::serialization::collection_size_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Vitem_version_type@serialization@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVitem_version_type@serialization@4@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vitem_version_type@serialization@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVitem_version_type@serialization@4@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::serialization::item_version_type>, COMDAT

; 232  :         static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 233  :             save_access::save_primitive(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$save_primitive@Vtext_oarchive@archive@boost@@Vitem_version_type@serialization@3@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVitem_version_type@serialization@2@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::serialization::item_version_type>
	add	esp, 8

; 234  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Vitem_version_type@serialization@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVitem_version_type@serialization@4@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::serialization::item_version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@Vitem_version_type@serialization@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@Vitem_version_type@serialization@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<boost::serialization::item_version_type>, COMDAT

; 64   : inline void check_object_versioning(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_versioning@Vitem_version_type@serialization@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<boost::serialization::item_version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@Vcollection_size_type@serialization@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVcollection_size_type@serialization@3@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vcollection_size_type@serialization@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVcollection_size_type@serialization@3@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::serialization::collection_size_type>, COMDAT

; 430  :     static void invoke(Archive & ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 431  :         typedef typename mpl::eval_if<
; 432  :                 // if its primitive
; 433  :                 mpl::equal_to<
; 434  :                     boost::serialization::implementation_level< T >,
; 435  :                     mpl::int_<boost::serialization::primitive_type>
; 436  :                 >,
; 437  :                 mpl::identity<load_primitive>,
; 438  :             // else
; 439  :             typename mpl::eval_if<
; 440  :             // class info / version
; 441  :             mpl::greater_equal<
; 442  :                         boost::serialization::implementation_level< T >,
; 443  :                         mpl::int_<boost::serialization::object_class_info>
; 444  :                     >,
; 445  :             // do standard load
; 446  :             mpl::identity<load_standard>,
; 447  :         // else
; 448  :         typename mpl::eval_if<
; 449  :             // no tracking
; 450  :                     mpl::equal_to<
; 451  :                         boost::serialization::tracking_level< T >,
; 452  :                         mpl::int_<boost::serialization::track_never>
; 453  :                 >,
; 454  :                 // do a fast load
; 455  :                 mpl::identity<load_only>,
; 456  :             // else
; 457  :             // do a fast load only tracking is turned off
; 458  :             mpl::identity<load_conditional>
; 459  :         > > >::type typex;
; 460  :         check_object_versioning< T >();

	call	??$check_object_versioning@Vcollection_size_type@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::serialization::collection_size_type>

; 461  :         check_object_level< T >();

	call	??$check_object_level@Vcollection_size_type@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::serialization::collection_size_type>

; 462  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Vcollection_size_type@serialization@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVcollection_size_type@serialization@4@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::serialization::collection_size_type>
	add	esp, 8

; 463  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Vcollection_size_type@serialization@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVcollection_size_type@serialization@3@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::serialization::collection_size_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_const_loading@Vcollection_size_type@serialization@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_const_loading@Vcollection_size_type@serialization@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_const_loading<boost::serialization::collection_size_type>, COMDAT

; 152  : inline void check_const_loading(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 153  :     typedef
; 154  :         typename mpl::or_<
; 155  :             typename boost::serialization::is_wrapper< T >,
; 156  :             typename mpl::not_<
; 157  :                 typename boost::is_const< T >
; 158  :             >
; 159  :         >::type typex;
; 160  :     // cannot load data into a "const" object unless it's a
; 161  :     // wrapper around some other non-const object.
; 162  :     BOOST_STATIC_ASSERT(typex::value);
; 163  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_const_loading@Vcollection_size_type@serialization@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_const_loading<boost::serialization::collection_size_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@Vitem_version_type@serialization@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVitem_version_type@serialization@3@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vitem_version_type@serialization@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVitem_version_type@serialization@3@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::serialization::item_version_type>, COMDAT

; 430  :     static void invoke(Archive & ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 431  :         typedef typename mpl::eval_if<
; 432  :                 // if its primitive
; 433  :                 mpl::equal_to<
; 434  :                     boost::serialization::implementation_level< T >,
; 435  :                     mpl::int_<boost::serialization::primitive_type>
; 436  :                 >,
; 437  :                 mpl::identity<load_primitive>,
; 438  :             // else
; 439  :             typename mpl::eval_if<
; 440  :             // class info / version
; 441  :             mpl::greater_equal<
; 442  :                         boost::serialization::implementation_level< T >,
; 443  :                         mpl::int_<boost::serialization::object_class_info>
; 444  :                     >,
; 445  :             // do standard load
; 446  :             mpl::identity<load_standard>,
; 447  :         // else
; 448  :         typename mpl::eval_if<
; 449  :             // no tracking
; 450  :                     mpl::equal_to<
; 451  :                         boost::serialization::tracking_level< T >,
; 452  :                         mpl::int_<boost::serialization::track_never>
; 453  :                 >,
; 454  :                 // do a fast load
; 455  :                 mpl::identity<load_only>,
; 456  :             // else
; 457  :             // do a fast load only tracking is turned off
; 458  :             mpl::identity<load_conditional>
; 459  :         > > >::type typex;
; 460  :         check_object_versioning< T >();

	call	??$check_object_versioning@Vitem_version_type@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::serialization::item_version_type>

; 461  :         check_object_level< T >();

	call	??$check_object_level@Vitem_version_type@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::serialization::item_version_type>

; 462  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Vitem_version_type@serialization@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVitem_version_type@serialization@4@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::serialization::item_version_type>
	add	esp, 8

; 463  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Vitem_version_type@serialization@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVitem_version_type@serialization@3@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::serialization::item_version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_const_loading@Vitem_version_type@serialization@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_const_loading@Vitem_version_type@serialization@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_const_loading<boost::serialization::item_version_type>, COMDAT

; 152  : inline void check_const_loading(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 153  :     typedef
; 154  :         typename mpl::or_<
; 155  :             typename boost::serialization::is_wrapper< T >,
; 156  :             typename mpl::not_<
; 157  :                 typename boost::is_const< T >
; 158  :             >
; 159  :         >::type typex;
; 160  :     // cannot load data into a "const" object unless it's a
; 161  :     // wrapper around some other non-const object.
; 162  :     BOOST_STATIC_ASSERT(typex::value);
; 163  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_const_loading@Vitem_version_type@serialization@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_const_loading<boost::serialization::item_version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Vcollection_size_type@serialization@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVcollection_size_type@serialization@3@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vcollection_size_type@serialization@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVcollection_size_type@serialization@3@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::serialization::collection_size_type>, COMDAT

; 277  :     static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 278  :         typedef 
; 279  :             typename mpl::eval_if<
; 280  :             // if its primitive
; 281  :                 mpl::equal_to<
; 282  :                     boost::serialization::implementation_level< T >,
; 283  :                     mpl::int_<boost::serialization::primitive_type>
; 284  :                 >,
; 285  :                 mpl::identity<save_primitive>,
; 286  :             // else
; 287  :             typename mpl::eval_if<
; 288  :                 // class info / version
; 289  :                 mpl::greater_equal<
; 290  :                     boost::serialization::implementation_level< T >,
; 291  :                     mpl::int_<boost::serialization::object_class_info>
; 292  :                 >,
; 293  :                 // do standard save
; 294  :                 mpl::identity<save_standard>,
; 295  :             // else
; 296  :             typename mpl::eval_if<
; 297  :                     // no tracking
; 298  :                 mpl::equal_to<
; 299  :                     boost::serialization::tracking_level< T >,
; 300  :                     mpl::int_<boost::serialization::track_never>
; 301  :                 >,
; 302  :                 // do a fast save
; 303  :                 mpl::identity<save_only>,
; 304  :             // else
; 305  :                 // do a fast save only tracking is turned off
; 306  :                 mpl::identity<save_conditional>
; 307  :             > > >::type typex; 
; 308  :         check_object_versioning< T >();

	call	??$check_object_versioning@Vcollection_size_type@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::serialization::collection_size_type>

; 309  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Vcollection_size_type@serialization@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVcollection_size_type@serialization@4@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::serialization::collection_size_type>
	add	esp, 8

; 310  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Vcollection_size_type@serialization@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVcollection_size_type@serialization@3@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::serialization::collection_size_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Vitem_version_type@serialization@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVitem_version_type@serialization@3@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vitem_version_type@serialization@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVitem_version_type@serialization@3@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::serialization::item_version_type>, COMDAT

; 277  :     static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 278  :         typedef 
; 279  :             typename mpl::eval_if<
; 280  :             // if its primitive
; 281  :                 mpl::equal_to<
; 282  :                     boost::serialization::implementation_level< T >,
; 283  :                     mpl::int_<boost::serialization::primitive_type>
; 284  :                 >,
; 285  :                 mpl::identity<save_primitive>,
; 286  :             // else
; 287  :             typename mpl::eval_if<
; 288  :                 // class info / version
; 289  :                 mpl::greater_equal<
; 290  :                     boost::serialization::implementation_level< T >,
; 291  :                     mpl::int_<boost::serialization::object_class_info>
; 292  :                 >,
; 293  :                 // do standard save
; 294  :                 mpl::identity<save_standard>,
; 295  :             // else
; 296  :             typename mpl::eval_if<
; 297  :                     // no tracking
; 298  :                 mpl::equal_to<
; 299  :                     boost::serialization::tracking_level< T >,
; 300  :                     mpl::int_<boost::serialization::track_never>
; 301  :                 >,
; 302  :                 // do a fast save
; 303  :                 mpl::identity<save_only>,
; 304  :             // else
; 305  :                 // do a fast save only tracking is turned off
; 306  :                 mpl::identity<save_conditional>
; 307  :             > > >::type typex; 
; 308  :         check_object_versioning< T >();

	call	??$check_object_versioning@Vitem_version_type@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::serialization::item_version_type>

; 309  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Vitem_version_type@serialization@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVitem_version_type@serialization@4@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::serialization::item_version_type>
	add	esp, 8

; 310  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Vitem_version_type@serialization@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVitem_version_type@serialization@3@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::serialization::item_version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load@Vtext_iarchive@archive@boost@@Vcollection_size_type@serialization@3@@archive@boost@@YAXAAVtext_iarchive@01@AAVcollection_size_type@serialization@1@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load@Vtext_iarchive@archive@boost@@Vcollection_size_type@serialization@3@@archive@boost@@YAXAAVtext_iarchive@01@AAVcollection_size_type@serialization@1@@Z PROC ; boost::archive::load<boost::archive::text_iarchive,boost::serialization::collection_size_type>, COMDAT

; 598  : inline void load(Archive & ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 599  :     // if this assertion trips. It means we're trying to load a
; 600  :     // const object with a compiler that doesn't have correct
; 601  :     // funtion template ordering.  On other compilers, this is
; 602  :     // handled below.
; 603  :     detail::check_const_loading< T >();

	call	??$check_const_loading@Vcollection_size_type@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::serialization::collection_size_type>

; 604  :     typedef
; 605  :         typename mpl::eval_if<is_pointer< T >,
; 606  :             mpl::identity<detail::load_pointer_type<Archive> >
; 607  :         ,//else
; 608  :         typename mpl::eval_if<is_array< T >,
; 609  :             mpl::identity<detail::load_array_type<Archive> >
; 610  :         ,//else
; 611  :         typename mpl::eval_if<is_enum< T >,
; 612  :             mpl::identity<detail::load_enum_type<Archive> >
; 613  :         ,//else
; 614  :             mpl::identity<detail::load_non_pointer_type<Archive> >
; 615  :         >
; 616  :         >
; 617  :         >::type typex;
; 618  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Vcollection_size_type@serialization@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVcollection_size_type@serialization@3@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::serialization::collection_size_type>
	add	esp, 8

; 619  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$load@Vtext_iarchive@archive@boost@@Vcollection_size_type@serialization@3@@archive@boost@@YAXAAVtext_iarchive@01@AAVcollection_size_type@serialization@1@@Z ENDP ; boost::archive::load<boost::archive::text_iarchive,boost::serialization::collection_size_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load@Vtext_iarchive@archive@boost@@Vitem_version_type@serialization@3@@archive@boost@@YAXAAVtext_iarchive@01@AAVitem_version_type@serialization@1@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load@Vtext_iarchive@archive@boost@@Vitem_version_type@serialization@3@@archive@boost@@YAXAAVtext_iarchive@01@AAVitem_version_type@serialization@1@@Z PROC ; boost::archive::load<boost::archive::text_iarchive,boost::serialization::item_version_type>, COMDAT

; 598  : inline void load(Archive & ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 599  :     // if this assertion trips. It means we're trying to load a
; 600  :     // const object with a compiler that doesn't have correct
; 601  :     // funtion template ordering.  On other compilers, this is
; 602  :     // handled below.
; 603  :     detail::check_const_loading< T >();

	call	??$check_const_loading@Vitem_version_type@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::serialization::item_version_type>

; 604  :     typedef
; 605  :         typename mpl::eval_if<is_pointer< T >,
; 606  :             mpl::identity<detail::load_pointer_type<Archive> >
; 607  :         ,//else
; 608  :         typename mpl::eval_if<is_array< T >,
; 609  :             mpl::identity<detail::load_array_type<Archive> >
; 610  :         ,//else
; 611  :         typename mpl::eval_if<is_enum< T >,
; 612  :             mpl::identity<detail::load_enum_type<Archive> >
; 613  :         ,//else
; 614  :             mpl::identity<detail::load_non_pointer_type<Archive> >
; 615  :         >
; 616  :         >
; 617  :         >::type typex;
; 618  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Vitem_version_type@serialization@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVitem_version_type@serialization@3@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::serialization::item_version_type>
	add	esp, 8

; 619  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$load@Vtext_iarchive@archive@boost@@Vitem_version_type@serialization@3@@archive@boost@@YAXAAVtext_iarchive@01@AAVitem_version_type@serialization@1@@Z ENDP ; boost::archive::load<boost::archive::text_iarchive,boost::serialization::item_version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@$$CBVcollection_size_type@serialization@3@@archive@boost@@YAXAAVtext_oarchive@01@ABVcollection_size_type@serialization@1@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@$$CBVcollection_size_type@serialization@3@@archive@boost@@YAXAAVtext_oarchive@01@ABVcollection_size_type@serialization@1@@Z PROC ; boost::archive::save<boost::archive::text_oarchive,boost::serialization::collection_size_type const >, COMDAT

; 511  : inline void save(Archive & ar, /*const*/ T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 512  :     typedef 
; 513  :         typename mpl::eval_if<is_pointer< T >,
; 514  :             mpl::identity<detail::save_pointer_type<Archive> >,
; 515  :         //else
; 516  :         typename mpl::eval_if<is_enum< T >,
; 517  :             mpl::identity<detail::save_enum_type<Archive> >,
; 518  :         //else
; 519  :         typename mpl::eval_if<is_array< T >,
; 520  :             mpl::identity<detail::save_array_type<Archive> >,
; 521  :         //else
; 522  :             mpl::identity<detail::save_non_pointer_type<Archive> >
; 523  :         >
; 524  :         >
; 525  :         >::type typex;
; 526  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Vcollection_size_type@serialization@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVcollection_size_type@serialization@3@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::serialization::collection_size_type>
	add	esp, 8

; 527  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save@Vtext_oarchive@archive@boost@@$$CBVcollection_size_type@serialization@3@@archive@boost@@YAXAAVtext_oarchive@01@ABVcollection_size_type@serialization@1@@Z ENDP ; boost::archive::save<boost::archive::text_oarchive,boost::serialization::collection_size_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@$$CBVitem_version_type@serialization@3@@archive@boost@@YAXAAVtext_oarchive@01@ABVitem_version_type@serialization@1@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@$$CBVitem_version_type@serialization@3@@archive@boost@@YAXAAVtext_oarchive@01@ABVitem_version_type@serialization@1@@Z PROC ; boost::archive::save<boost::archive::text_oarchive,boost::serialization::item_version_type const >, COMDAT

; 511  : inline void save(Archive & ar, /*const*/ T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 512  :     typedef 
; 513  :         typename mpl::eval_if<is_pointer< T >,
; 514  :             mpl::identity<detail::save_pointer_type<Archive> >,
; 515  :         //else
; 516  :         typename mpl::eval_if<is_enum< T >,
; 517  :             mpl::identity<detail::save_enum_type<Archive> >,
; 518  :         //else
; 519  :         typename mpl::eval_if<is_array< T >,
; 520  :             mpl::identity<detail::save_array_type<Archive> >,
; 521  :         //else
; 522  :             mpl::identity<detail::save_non_pointer_type<Archive> >
; 523  :         >
; 524  :         >
; 525  :         >::type typex;
; 526  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Vitem_version_type@serialization@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVitem_version_type@serialization@3@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::serialization::item_version_type>
	add	esp, 8

; 527  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save@Vtext_oarchive@archive@boost@@$$CBVitem_version_type@serialization@3@@archive@boost@@YAXAAVtext_oarchive@01@ABVitem_version_type@serialization@1@@Z ENDP ; boost::archive::save<boost::archive::text_oarchive,boost::serialization::item_version_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ??$load_override@Vcollection_size_type@serialization@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVcollection_size_type@serialization@3@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vcollection_size_type@serialization@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVcollection_size_type@serialization@3@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::collection_size_type>, COMDAT
; _this$ = ecx

; 65   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   :         archive::load(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	push	eax
	call	??$load@Vtext_iarchive@archive@boost@@Vcollection_size_type@serialization@3@@archive@boost@@YAXAAVtext_iarchive@01@AAVcollection_size_type@serialization@1@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::serialization::collection_size_type>
	add	esp, 8

; 67   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@Vcollection_size_type@serialization@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVcollection_size_type@serialization@3@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::collection_size_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ??$load_override@Vitem_version_type@serialization@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVitem_version_type@serialization@3@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vitem_version_type@serialization@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVitem_version_type@serialization@3@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::item_version_type>, COMDAT
; _this$ = ecx

; 65   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   :         archive::load(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	push	eax
	call	??$load@Vtext_iarchive@archive@boost@@Vitem_version_type@serialization@3@@archive@boost@@YAXAAVtext_iarchive@01@AAVitem_version_type@serialization@1@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::serialization::item_version_type>
	add	esp, 8

; 67   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@Vitem_version_type@serialization@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVitem_version_type@serialization@3@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::item_version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ??$save_override@$$CBVcollection_size_type@serialization@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVcollection_size_type@serialization@3@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVcollection_size_type@serialization@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVcollection_size_type@serialization@3@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::collection_size_type const >, COMDAT
; _this$ = ecx

; 69   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         archive::save(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	push	eax
	call	??$save@Vtext_oarchive@archive@boost@@$$CBVcollection_size_type@serialization@3@@archive@boost@@YAXAAVtext_oarchive@01@ABVcollection_size_type@serialization@1@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::serialization::collection_size_type const >
	add	esp, 8

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBVcollection_size_type@serialization@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVcollection_size_type@serialization@3@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::collection_size_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ??$save_override@$$CBVitem_version_type@serialization@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVitem_version_type@serialization@3@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVitem_version_type@serialization@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVitem_version_type@serialization@3@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::item_version_type const >, COMDAT
; _this$ = ecx

; 69   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         archive::save(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	push	eax
	call	??$save@Vtext_oarchive@archive@boost@@$$CBVitem_version_type@serialization@3@@archive@boost@@YAXAAVtext_oarchive@01@ABVitem_version_type@serialization@1@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::serialization::item_version_type const >
	add	esp, 8

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBVitem_version_type@serialization@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVitem_version_type@serialization@3@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::item_version_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iarchive.hpp
;	COMDAT ??$load_override@Vcollection_size_type@serialization@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vcollection_size_type@serialization@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z PROC ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::collection_size_type>, COMDAT
; _this$ = ecx

; 69   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->detail_common_iarchive::load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load_override@Vcollection_size_type@serialization@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVcollection_size_type@serialization@3@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::collection_size_type>

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@Vcollection_size_type@serialization@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z ENDP ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::collection_size_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iarchive.hpp
;	COMDAT ??$load_override@Vitem_version_type@serialization@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVitem_version_type@serialization@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vitem_version_type@serialization@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVitem_version_type@serialization@2@@Z PROC ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::item_version_type>, COMDAT
; _this$ = ecx

; 69   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->detail_common_iarchive::load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load_override@Vitem_version_type@serialization@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVitem_version_type@serialization@3@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::item_version_type>

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@Vitem_version_type@serialization@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVitem_version_type@serialization@2@@Z ENDP ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::item_version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ??$save_override@$$CBVcollection_size_type@serialization@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVcollection_size_type@serialization@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::collection_size_type const >, COMDAT
; _this$ = ecx

; 82   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 83   :         this->detail_common_oarchive::save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$save_override@$$CBVcollection_size_type@serialization@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVcollection_size_type@serialization@3@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::collection_size_type const >

; 84   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBVcollection_size_type@serialization@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::collection_size_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ??$save_override@$$CBVitem_version_type@serialization@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVitem_version_type@serialization@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVitem_version_type@serialization@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVitem_version_type@serialization@2@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::item_version_type const >, COMDAT
; _this$ = ecx

; 82   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 83   :         this->detail_common_oarchive::save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$save_override@$$CBVitem_version_type@serialization@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVitem_version_type@serialization@3@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::item_version_type const >

; 84   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBVitem_version_type@serialization@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVitem_version_type@serialization@2@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::item_version_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load_override@Vcollection_size_type@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vcollection_size_type@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::serialization::collection_size_type>, COMDAT
; _this$ = ecx

; 81   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 82   :         basic_text_iarchive<Archive>::load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load_override@Vcollection_size_type@serialization@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::collection_size_type>

; 83   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@Vcollection_size_type@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::serialization::collection_size_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load_override@Vitem_version_type@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVitem_version_type@serialization@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vitem_version_type@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVitem_version_type@serialization@2@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::serialization::item_version_type>, COMDAT
; _this$ = ecx

; 81   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 82   :         basic_text_iarchive<Archive>::load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load_override@Vitem_version_type@serialization@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVitem_version_type@serialization@2@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::item_version_type>

; 83   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@Vitem_version_type@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVitem_version_type@serialization@2@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::serialization::item_version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ??$load@Vtext_iarchive@archive@boost@@@?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ar$ = 8						; size = 4
___formal$ = 12						; size = 4
??$load@Vtext_iarchive@archive@boost@@@?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z PROC ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::load<boost::archive::text_iarchive>, COMDAT
; _this$ = ecx

; 71   :     ){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 72   :         ar.operator>>(value());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::value
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?5V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 73   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$load@Vtext_iarchive@archive@boost@@@?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z ENDP ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::load<boost::archive::text_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6Vcollection_size_type@serialization@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVcollection_size_type@serialization@3@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6Vcollection_size_type@serialization@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVcollection_size_type@serialization@3@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::serialization::collection_size_type>, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	mov	ecx, eax
	call	??$save_override@$$CBVcollection_size_type@serialization@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVcollection_size_type@serialization@2@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::collection_size_type const >

; 71   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?6Vcollection_size_type@serialization@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVcollection_size_type@serialization@3@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::serialization::collection_size_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6Vitem_version_type@serialization@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVitem_version_type@serialization@3@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6Vitem_version_type@serialization@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVitem_version_type@serialization@3@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::serialization::item_version_type>, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	mov	ecx, eax
	call	??$save_override@$$CBVitem_version_type@serialization@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVitem_version_type@serialization@2@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::item_version_type const >

; 71   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?6Vitem_version_type@serialization@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVitem_version_type@serialization@3@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::serialization::item_version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_iarchive.hpp
;	COMDAT ??$?5Vcollection_size_type@serialization@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVcollection_size_type@serialization@3@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?5Vcollection_size_type@serialization@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVcollection_size_type@serialization@3@@Z PROC ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::serialization::collection_size_type>, COMDAT
; _this$ = ecx

; 67   :     Archive & operator>>(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 68   :         this->This()->load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	mov	ecx, eax
	call	??$load_override@Vcollection_size_type@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVcollection_size_type@serialization@2@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::serialization::collection_size_type>

; 69   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This

; 70   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?5Vcollection_size_type@serialization@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVcollection_size_type@serialization@3@@Z ENDP ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::serialization::collection_size_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_iarchive.hpp
;	COMDAT ??$?5Vitem_version_type@serialization@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVitem_version_type@serialization@3@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?5Vitem_version_type@serialization@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVitem_version_type@serialization@3@@Z PROC ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::serialization::item_version_type>, COMDAT
; _this$ = ecx

; 67   :     Archive & operator>>(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 68   :         this->This()->load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	mov	ecx, eax
	call	??$load_override@Vitem_version_type@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVitem_version_type@serialization@2@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::serialization::item_version_type>

; 69   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This

; 70   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?5Vitem_version_type@serialization@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVitem_version_type@serialization@3@@Z ENDP ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::serialization::item_version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\access.hpp
;	COMDAT ??$member_load@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@12@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$member_load@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@12@I@Z PROC ; boost::serialization::access::member_load<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 98   :     ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 99   :         t.load(ar, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _t$[ebp]
	call	??$load@Vtext_iarchive@archive@boost@@@?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::load<boost::archive::text_iarchive>

; 100  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$member_load@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@12@I@Z ENDP ; boost::serialization::access::member_load<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QBEXAAVtext_oarchive@archive@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ar$ = 8						; size = 4
___formal$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QBEXAAVtext_oarchive@archive@2@I@Z PROC ; boost::serialization::nvp<boost::serialization::collection_size_type>::save<boost::archive::text_oarchive>, COMDAT
; _this$ = ecx

; 64   :     ) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 65   :         ar.operator<<(const_value());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?const_value@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QBEABVcollection_size_type@23@XZ ; boost::serialization::nvp<boost::serialization::collection_size_type>::const_value
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?6Vcollection_size_type@serialization@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVcollection_size_type@serialization@3@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::serialization::collection_size_type>

; 66   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$save@Vtext_oarchive@archive@boost@@@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QBEXAAVtext_oarchive@archive@2@I@Z ENDP ; boost::serialization::nvp<boost::serialization::collection_size_type>::save<boost::archive::text_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@@?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@QBEXAAVtext_oarchive@archive@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ar$ = 8						; size = 4
___formal$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@@?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@QBEXAAVtext_oarchive@archive@2@I@Z PROC ; boost::serialization::nvp<boost::serialization::item_version_type const >::save<boost::archive::text_oarchive>, COMDAT
; _this$ = ecx

; 64   :     ) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 65   :         ar.operator<<(const_value());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?const_value@?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@QBEABVitem_version_type@23@XZ ; boost::serialization::nvp<boost::serialization::item_version_type const >::const_value
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?6Vitem_version_type@serialization@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVitem_version_type@serialization@3@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::serialization::item_version_type>

; 66   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$save@Vtext_oarchive@archive@boost@@@?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@QBEXAAVtext_oarchive@archive@2@I@Z ENDP ; boost::serialization::nvp<boost::serialization::item_version_type const >::save<boost::archive::text_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@@?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QBEXAAVtext_oarchive@archive@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ar$ = 8						; size = 4
___formal$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@@?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QBEXAAVtext_oarchive@archive@2@I@Z PROC ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::save<boost::archive::text_oarchive>, COMDAT
; _this$ = ecx

; 64   :     ) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 65   :         ar.operator<<(const_value());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?const_value@?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::const_value
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?6V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 66   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$save@Vtext_oarchive@archive@boost@@@?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QBEXAAVtext_oarchive@archive@2@I@Z ENDP ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::save<boost::archive::text_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ??$load@Vtext_iarchive@archive@boost@@@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ar$ = 8						; size = 4
___formal$ = 12						; size = 4
??$load@Vtext_iarchive@archive@boost@@@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z PROC ; boost::serialization::nvp<boost::serialization::collection_size_type>::load<boost::archive::text_iarchive>, COMDAT
; _this$ = ecx

; 71   :     ){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 72   :         ar.operator>>(value());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QBEAAVcollection_size_type@23@XZ ; boost::serialization::nvp<boost::serialization::collection_size_type>::value
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?5Vcollection_size_type@serialization@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVcollection_size_type@serialization@3@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::serialization::collection_size_type>

; 73   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$load@Vtext_iarchive@archive@boost@@@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z ENDP ; boost::serialization::nvp<boost::serialization::collection_size_type>::load<boost::archive::text_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ??$load@Vtext_iarchive@archive@boost@@@?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ar$ = 8						; size = 4
___formal$ = 12						; size = 4
??$load@Vtext_iarchive@archive@boost@@@?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z PROC ; boost::serialization::nvp<boost::serialization::item_version_type>::load<boost::archive::text_iarchive>, COMDAT
; _this$ = ecx

; 71   :     ){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 72   :         ar.operator>>(value());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@QBEAAVitem_version_type@23@XZ ; boost::serialization::nvp<boost::serialization::item_version_type>::value
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?5Vitem_version_type@serialization@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVitem_version_type@serialization@3@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::serialization::item_version_type>

; 73   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$load@Vtext_iarchive@archive@boost@@@?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z ENDP ; boost::serialization::nvp<boost::serialization::item_version_type>::load<boost::archive::text_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\split_member.hpp
;	COMDAT ?invoke@?$member_loader@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_iarchive@archive@4@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
?invoke@?$member_loader@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_iarchive@archive@4@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@I@Z PROC ; boost::serialization::detail::member_loader<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::invoke, COMDAT

; 53   :         ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 54   :             access::member_load(ar, t, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$member_load@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@12@I@Z ; boost::serialization::access::member_load<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 12					; 0000000cH

; 55   :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?invoke@?$member_loader@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_iarchive@archive@4@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@I@Z ENDP ; boost::serialization::detail::member_loader<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::invoke
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\access.hpp
;	COMDAT ??$member_save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@ABU?$nvp@Vcollection_size_type@serialization@boost@@@12@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$member_save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@ABU?$nvp@Vcollection_size_type@serialization@boost@@@12@I@Z PROC ; boost::serialization::access::member_save<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> const >, COMDAT

; 90   :     ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 91   :         t.save(ar, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _t$[ebp]
	call	??$save@Vtext_oarchive@archive@boost@@@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QBEXAAVtext_oarchive@archive@2@I@Z ; boost::serialization::nvp<boost::serialization::collection_size_type>::save<boost::archive::text_oarchive>

; 92   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$member_save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@ABU?$nvp@Vcollection_size_type@serialization@boost@@@12@I@Z ENDP ; boost::serialization::access::member_save<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\access.hpp
;	COMDAT ??$member_save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@12@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$member_save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@12@I@Z PROC ; boost::serialization::access::member_save<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > const >, COMDAT

; 90   :     ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 91   :         t.save(ar, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _t$[ebp]
	call	??$save@Vtext_oarchive@archive@boost@@@?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@QBEXAAVtext_oarchive@archive@2@I@Z ; boost::serialization::nvp<boost::serialization::item_version_type const >::save<boost::archive::text_oarchive>

; 92   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$member_save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@12@I@Z ENDP ; boost::serialization::access::member_save<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\access.hpp
;	COMDAT ??$member_save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@12@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$member_save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@12@I@Z PROC ; boost::serialization::access::member_save<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > const >, COMDAT

; 90   :     ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 91   :         t.save(ar, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _t$[ebp]
	call	??$save@Vtext_oarchive@archive@boost@@@?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QBEXAAVtext_oarchive@archive@2@I@Z ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::save<boost::archive::text_oarchive>

; 92   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$member_save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@12@I@Z ENDP ; boost::serialization::access::member_save<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\access.hpp
;	COMDAT ??$member_load@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@Vcollection_size_type@serialization@boost@@@12@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$member_load@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@Vcollection_size_type@serialization@boost@@@12@I@Z PROC ; boost::serialization::access::member_load<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >, COMDAT

; 98   :     ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 99   :         t.load(ar, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _t$[ebp]
	call	??$load@Vtext_iarchive@archive@boost@@@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z ; boost::serialization::nvp<boost::serialization::collection_size_type>::load<boost::archive::text_iarchive>

; 100  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$member_load@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@Vcollection_size_type@serialization@boost@@@12@I@Z ENDP ; boost::serialization::access::member_load<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\access.hpp
;	COMDAT ??$member_load@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@Vitem_version_type@serialization@boost@@@12@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$member_load@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@Vitem_version_type@serialization@boost@@@12@I@Z PROC ; boost::serialization::access::member_load<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> >, COMDAT

; 98   :     ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 99   :         t.load(ar, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _t$[ebp]
	call	??$load@Vtext_iarchive@archive@boost@@@?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z ; boost::serialization::nvp<boost::serialization::item_version_type>::load<boost::archive::text_iarchive>

; 100  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$member_load@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@Vitem_version_type@serialization@boost@@@12@I@Z ENDP ; boost::serialization::access::member_load<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\split_member.hpp
;	COMDAT ??$split_member@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$split_member@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z PROC ; boost::serialization::split_member<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 63   : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 64   :     typedef typename mpl::eval_if<
; 65   :         typename Archive::is_saving,
; 66   :         mpl::identity<detail::member_saver<Archive, T> >, 
; 67   :         mpl::identity<detail::member_loader<Archive, T> >
; 68   :     >::type typex;
; 69   :     typex::invoke(ar, t, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	?invoke@?$member_loader@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_iarchive@archive@4@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@I@Z ; boost::serialization::detail::member_loader<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::invoke
	add	esp, 12					; 0000000cH

; 70   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$split_member@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z ENDP ; boost::serialization::split_member<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\split_member.hpp
;	COMDAT ?invoke@?$member_loader@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_iarchive@archive@4@AAU?$nvp@Vitem_version_type@serialization@boost@@@34@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
?invoke@?$member_loader@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_iarchive@archive@4@AAU?$nvp@Vitem_version_type@serialization@boost@@@34@I@Z PROC ; boost::serialization::detail::member_loader<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> >::invoke, COMDAT

; 53   :         ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 54   :             access::member_load(ar, t, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$member_load@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@Vitem_version_type@serialization@boost@@@12@I@Z ; boost::serialization::access::member_load<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> >
	add	esp, 12					; 0000000cH

; 55   :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?invoke@?$member_loader@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_iarchive@archive@4@AAU?$nvp@Vitem_version_type@serialization@boost@@@34@I@Z ENDP ; boost::serialization::detail::member_loader<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> >::invoke
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\split_member.hpp
;	COMDAT ?invoke@?$member_loader@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_iarchive@archive@4@AAU?$nvp@Vcollection_size_type@serialization@boost@@@34@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
?invoke@?$member_loader@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_iarchive@archive@4@AAU?$nvp@Vcollection_size_type@serialization@boost@@@34@I@Z PROC ; boost::serialization::detail::member_loader<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >::invoke, COMDAT

; 53   :         ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 54   :             access::member_load(ar, t, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$member_load@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@Vcollection_size_type@serialization@boost@@@12@I@Z ; boost::serialization::access::member_load<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
	add	esp, 12					; 0000000cH

; 55   :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?invoke@?$member_loader@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_iarchive@archive@4@AAU?$nvp@Vcollection_size_type@serialization@boost@@@34@I@Z ENDP ; boost::serialization::detail::member_loader<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >::invoke
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\split_member.hpp
;	COMDAT ?invoke@?$member_saver@Vtext_oarchive@archive@boost@@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_oarchive@archive@4@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
?invoke@?$member_saver@Vtext_oarchive@archive@boost@@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_oarchive@archive@4@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@I@Z PROC ; boost::serialization::detail::member_saver<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >::invoke, COMDAT

; 42   :         ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 43   :             access::member_save(ar, t, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$member_save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@12@I@Z ; boost::serialization::access::member_save<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > const >
	add	esp, 12					; 0000000cH

; 44   :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?invoke@?$member_saver@Vtext_oarchive@archive@boost@@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_oarchive@archive@4@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@I@Z ENDP ; boost::serialization::detail::member_saver<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >::invoke
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\split_member.hpp
;	COMDAT ?invoke@?$member_saver@Vtext_oarchive@archive@boost@@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_oarchive@archive@4@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@34@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
?invoke@?$member_saver@Vtext_oarchive@archive@boost@@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_oarchive@archive@4@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@34@I@Z PROC ; boost::serialization::detail::member_saver<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > >::invoke, COMDAT

; 42   :         ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 43   :             access::member_save(ar, t, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$member_save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@12@I@Z ; boost::serialization::access::member_save<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > const >
	add	esp, 12					; 0000000cH

; 44   :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?invoke@?$member_saver@Vtext_oarchive@archive@boost@@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_oarchive@archive@4@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@34@I@Z ENDP ; boost::serialization::detail::member_saver<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > >::invoke
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\split_member.hpp
;	COMDAT ?invoke@?$member_saver@Vtext_oarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_oarchive@archive@4@ABU?$nvp@Vcollection_size_type@serialization@boost@@@34@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
?invoke@?$member_saver@Vtext_oarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_oarchive@archive@4@ABU?$nvp@Vcollection_size_type@serialization@boost@@@34@I@Z PROC ; boost::serialization::detail::member_saver<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >::invoke, COMDAT

; 42   :         ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 43   :             access::member_save(ar, t, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$member_save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@ABU?$nvp@Vcollection_size_type@serialization@boost@@@12@I@Z ; boost::serialization::access::member_save<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> const >
	add	esp, 12					; 0000000cH

; 44   :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?invoke@?$member_saver@Vtext_oarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_oarchive@archive@4@ABU?$nvp@Vcollection_size_type@serialization@boost@@@34@I@Z ENDP ; boost::serialization::detail::member_saver<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >::invoke
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ??$serialize@Vtext_iarchive@archive@boost@@@?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ar$ = 8						; size = 4
_file_version$ = 12					; size = 4
??$serialize@Vtext_iarchive@archive@boost@@@?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z PROC ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::serialize<boost::archive::text_iarchive>, COMDAT
; _this$ = ecx

; 74   :     BOOST_SERIALIZATION_SPLIT_MEMBER()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$split_member@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z ; boost::serialization::split_member<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$serialize@Vtext_iarchive@archive@boost@@@?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z ENDP ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::serialize<boost::archive::text_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\split_member.hpp
;	COMDAT ??$split_member@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vitem_version_type@serialization@boost@@@01@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$split_member@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vitem_version_type@serialization@boost@@@01@I@Z PROC ; boost::serialization::split_member<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> >, COMDAT

; 63   : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 64   :     typedef typename mpl::eval_if<
; 65   :         typename Archive::is_saving,
; 66   :         mpl::identity<detail::member_saver<Archive, T> >, 
; 67   :         mpl::identity<detail::member_loader<Archive, T> >
; 68   :     >::type typex;
; 69   :     typex::invoke(ar, t, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	?invoke@?$member_loader@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_iarchive@archive@4@AAU?$nvp@Vitem_version_type@serialization@boost@@@34@I@Z ; boost::serialization::detail::member_loader<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> >::invoke
	add	esp, 12					; 0000000cH

; 70   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$split_member@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vitem_version_type@serialization@boost@@@01@I@Z ENDP ; boost::serialization::split_member<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\split_member.hpp
;	COMDAT ??$split_member@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$split_member@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z PROC ; boost::serialization::split_member<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >, COMDAT

; 63   : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 64   :     typedef typename mpl::eval_if<
; 65   :         typename Archive::is_saving,
; 66   :         mpl::identity<detail::member_saver<Archive, T> >, 
; 67   :         mpl::identity<detail::member_loader<Archive, T> >
; 68   :     >::type typex;
; 69   :     typex::invoke(ar, t, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	?invoke@?$member_loader@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_iarchive@archive@4@AAU?$nvp@Vcollection_size_type@serialization@boost@@@34@I@Z ; boost::serialization::detail::member_loader<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >::invoke
	add	esp, 12					; 0000000cH

; 70   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$split_member@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z ENDP ; boost::serialization::split_member<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\split_member.hpp
;	COMDAT ??$split_member@Vtext_oarchive@archive@boost@@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$split_member@Vtext_oarchive@archive@boost@@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z PROC ; boost::serialization::split_member<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >, COMDAT

; 63   : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 64   :     typedef typename mpl::eval_if<
; 65   :         typename Archive::is_saving,
; 66   :         mpl::identity<detail::member_saver<Archive, T> >, 
; 67   :         mpl::identity<detail::member_loader<Archive, T> >
; 68   :     >::type typex;
; 69   :     typex::invoke(ar, t, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	?invoke@?$member_saver@Vtext_oarchive@archive@boost@@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_oarchive@archive@4@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@I@Z ; boost::serialization::detail::member_saver<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >::invoke
	add	esp, 12					; 0000000cH

; 70   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$split_member@Vtext_oarchive@archive@boost@@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z ENDP ; boost::serialization::split_member<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\split_member.hpp
;	COMDAT ??$split_member@Vtext_oarchive@archive@boost@@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBVitem_version_type@serialization@boost@@@01@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$split_member@Vtext_oarchive@archive@boost@@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBVitem_version_type@serialization@boost@@@01@I@Z PROC ; boost::serialization::split_member<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > >, COMDAT

; 63   : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 64   :     typedef typename mpl::eval_if<
; 65   :         typename Archive::is_saving,
; 66   :         mpl::identity<detail::member_saver<Archive, T> >, 
; 67   :         mpl::identity<detail::member_loader<Archive, T> >
; 68   :     >::type typex;
; 69   :     typex::invoke(ar, t, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	?invoke@?$member_saver@Vtext_oarchive@archive@boost@@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_oarchive@archive@4@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@34@I@Z ; boost::serialization::detail::member_saver<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > >::invoke
	add	esp, 12					; 0000000cH

; 70   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$split_member@Vtext_oarchive@archive@boost@@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBVitem_version_type@serialization@boost@@@01@I@Z ENDP ; boost::serialization::split_member<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\split_member.hpp
;	COMDAT ??$split_member@Vtext_oarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$split_member@Vtext_oarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z PROC ; boost::serialization::split_member<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >, COMDAT

; 63   : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 64   :     typedef typename mpl::eval_if<
; 65   :         typename Archive::is_saving,
; 66   :         mpl::identity<detail::member_saver<Archive, T> >, 
; 67   :         mpl::identity<detail::member_loader<Archive, T> >
; 68   :     >::type typex;
; 69   :     typex::invoke(ar, t, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	?invoke@?$member_saver@Vtext_oarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@detail@serialization@boost@@SAXAAVtext_oarchive@archive@4@ABU?$nvp@Vcollection_size_type@serialization@boost@@@34@I@Z ; boost::serialization::detail::member_saver<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >::invoke
	add	esp, 12					; 0000000cH

; 70   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$split_member@Vtext_oarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z ENDP ; boost::serialization::split_member<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\access.hpp
;	COMDAT ??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@12@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@12@I@Z PROC ; boost::serialization::access::serialize<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 106  :     ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 107  :         // note: if you get a compile time error here with a
; 108  :         // message something like:
; 109  :         // cannot convert parameter 1 from <file type 1> to <file type 2 &>
; 110  :         // a likely possible cause is that the class T contains a 
; 111  :         // serialize function - but that serialize function isn't 
; 112  :         // a template and corresponds to a file type different than
; 113  :         // the class Archive.  To resolve this, don't include an
; 114  :         // archive type other than that for which the serialization
; 115  :         // function is defined!!!
; 116  :         t.serialize(ar, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _t$[ebp]
	call	??$serialize@Vtext_iarchive@archive@boost@@@?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::serialize<boost::archive::text_iarchive>

; 117  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@12@I@Z ENDP ; boost::serialization::access::serialize<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ??$serialize@Vtext_iarchive@archive@boost@@@?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ar$ = 8						; size = 4
_file_version$ = 12					; size = 4
??$serialize@Vtext_iarchive@archive@boost@@@?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z PROC ; boost::serialization::nvp<boost::serialization::item_version_type>::serialize<boost::archive::text_iarchive>, COMDAT
; _this$ = ecx

; 74   :     BOOST_SERIALIZATION_SPLIT_MEMBER()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$split_member@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vitem_version_type@serialization@boost@@@01@I@Z ; boost::serialization::split_member<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> >
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$serialize@Vtext_iarchive@archive@boost@@@?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z ENDP ; boost::serialization::nvp<boost::serialization::item_version_type>::serialize<boost::archive::text_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ??$serialize@Vtext_iarchive@archive@boost@@@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ar$ = 8						; size = 4
_file_version$ = 12					; size = 4
??$serialize@Vtext_iarchive@archive@boost@@@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z PROC ; boost::serialization::nvp<boost::serialization::collection_size_type>::serialize<boost::archive::text_iarchive>, COMDAT
; _this$ = ecx

; 74   :     BOOST_SERIALIZATION_SPLIT_MEMBER()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$split_member@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z ; boost::serialization::split_member<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$serialize@Vtext_iarchive@archive@boost@@@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z ENDP ; boost::serialization::nvp<boost::serialization::collection_size_type>::serialize<boost::archive::text_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ??$serialize@Vtext_oarchive@archive@boost@@@?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QAEXAAVtext_oarchive@archive@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ar$ = 8						; size = 4
_file_version$ = 12					; size = 4
??$serialize@Vtext_oarchive@archive@boost@@@?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QAEXAAVtext_oarchive@archive@2@I@Z PROC ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::serialize<boost::archive::text_oarchive>, COMDAT
; _this$ = ecx

; 74   :     BOOST_SERIALIZATION_SPLIT_MEMBER()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$split_member@Vtext_oarchive@archive@boost@@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z ; boost::serialization::split_member<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$serialize@Vtext_oarchive@archive@boost@@@?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QAEXAAVtext_oarchive@archive@2@I@Z ENDP ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::serialize<boost::archive::text_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ??$serialize@Vtext_oarchive@archive@boost@@@?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_oarchive@archive@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ar$ = 8						; size = 4
_file_version$ = 12					; size = 4
??$serialize@Vtext_oarchive@archive@boost@@@?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_oarchive@archive@2@I@Z PROC ; boost::serialization::nvp<boost::serialization::item_version_type const >::serialize<boost::archive::text_oarchive>, COMDAT
; _this$ = ecx

; 74   :     BOOST_SERIALIZATION_SPLIT_MEMBER()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$split_member@Vtext_oarchive@archive@boost@@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBVitem_version_type@serialization@boost@@@01@I@Z ; boost::serialization::split_member<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > >
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$serialize@Vtext_oarchive@archive@boost@@@?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_oarchive@archive@2@I@Z ENDP ; boost::serialization::nvp<boost::serialization::item_version_type const >::serialize<boost::archive::text_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ??$serialize@Vtext_oarchive@archive@boost@@@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_oarchive@archive@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ar$ = 8						; size = 4
_file_version$ = 12					; size = 4
??$serialize@Vtext_oarchive@archive@boost@@@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_oarchive@archive@2@I@Z PROC ; boost::serialization::nvp<boost::serialization::collection_size_type>::serialize<boost::archive::text_oarchive>, COMDAT
; _this$ = ecx

; 74   :     BOOST_SERIALIZATION_SPLIT_MEMBER()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$split_member@Vtext_oarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z ; boost::serialization::split_member<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$serialize@Vtext_oarchive@archive@boost@@@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_oarchive@archive@2@I@Z ENDP ; boost::serialization::nvp<boost::serialization::collection_size_type>::serialize<boost::archive::text_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z PROC ; boost::serialization::serialize<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 67   : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 68   :     access::serialize(ar, t, static_cast<unsigned int>(file_version));

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@12@I@Z ; boost::serialization::access::serialize<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 12					; 0000000cH

; 69   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z ENDP ; boost::serialization::serialize<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\access.hpp
;	COMDAT ??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@Vitem_version_type@serialization@boost@@@12@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@Vitem_version_type@serialization@boost@@@12@I@Z PROC ; boost::serialization::access::serialize<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> >, COMDAT

; 106  :     ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 107  :         // note: if you get a compile time error here with a
; 108  :         // message something like:
; 109  :         // cannot convert parameter 1 from <file type 1> to <file type 2 &>
; 110  :         // a likely possible cause is that the class T contains a 
; 111  :         // serialize function - but that serialize function isn't 
; 112  :         // a template and corresponds to a file type different than
; 113  :         // the class Archive.  To resolve this, don't include an
; 114  :         // archive type other than that for which the serialization
; 115  :         // function is defined!!!
; 116  :         t.serialize(ar, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _t$[ebp]
	call	??$serialize@Vtext_iarchive@archive@boost@@@?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z ; boost::serialization::nvp<boost::serialization::item_version_type>::serialize<boost::archive::text_iarchive>

; 117  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@Vitem_version_type@serialization@boost@@@12@I@Z ENDP ; boost::serialization::access::serialize<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\access.hpp
;	COMDAT ??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@Vcollection_size_type@serialization@boost@@@12@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@Vcollection_size_type@serialization@boost@@@12@I@Z PROC ; boost::serialization::access::serialize<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >, COMDAT

; 106  :     ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 107  :         // note: if you get a compile time error here with a
; 108  :         // message something like:
; 109  :         // cannot convert parameter 1 from <file type 1> to <file type 2 &>
; 110  :         // a likely possible cause is that the class T contains a 
; 111  :         // serialize function - but that serialize function isn't 
; 112  :         // a template and corresponds to a file type different than
; 113  :         // the class Archive.  To resolve this, don't include an
; 114  :         // archive type other than that for which the serialization
; 115  :         // function is defined!!!
; 116  :         t.serialize(ar, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _t$[ebp]
	call	??$serialize@Vtext_iarchive@archive@boost@@@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_iarchive@archive@2@I@Z ; boost::serialization::nvp<boost::serialization::collection_size_type>::serialize<boost::archive::text_iarchive>

; 117  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@Vcollection_size_type@serialization@boost@@@12@I@Z ENDP ; boost::serialization::access::serialize<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\access.hpp
;	COMDAT ??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@AAU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@12@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@AAU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@12@I@Z PROC ; boost::serialization::access::serialize<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >, COMDAT

; 106  :     ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 107  :         // note: if you get a compile time error here with a
; 108  :         // message something like:
; 109  :         // cannot convert parameter 1 from <file type 1> to <file type 2 &>
; 110  :         // a likely possible cause is that the class T contains a 
; 111  :         // serialize function - but that serialize function isn't 
; 112  :         // a template and corresponds to a file type different than
; 113  :         // the class Archive.  To resolve this, don't include an
; 114  :         // archive type other than that for which the serialization
; 115  :         // function is defined!!!
; 116  :         t.serialize(ar, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _t$[ebp]
	call	??$serialize@Vtext_oarchive@archive@boost@@@?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QAEXAAVtext_oarchive@archive@2@I@Z ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::serialize<boost::archive::text_oarchive>

; 117  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@AAU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@12@I@Z ENDP ; boost::serialization::access::serialize<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\access.hpp
;	COMDAT ??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@AAU?$nvp@$$CBVitem_version_type@serialization@boost@@@12@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@AAU?$nvp@$$CBVitem_version_type@serialization@boost@@@12@I@Z PROC ; boost::serialization::access::serialize<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > >, COMDAT

; 106  :     ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 107  :         // note: if you get a compile time error here with a
; 108  :         // message something like:
; 109  :         // cannot convert parameter 1 from <file type 1> to <file type 2 &>
; 110  :         // a likely possible cause is that the class T contains a 
; 111  :         // serialize function - but that serialize function isn't 
; 112  :         // a template and corresponds to a file type different than
; 113  :         // the class Archive.  To resolve this, don't include an
; 114  :         // archive type other than that for which the serialization
; 115  :         // function is defined!!!
; 116  :         t.serialize(ar, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _t$[ebp]
	call	??$serialize@Vtext_oarchive@archive@boost@@@?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_oarchive@archive@2@I@Z ; boost::serialization::nvp<boost::serialization::item_version_type const >::serialize<boost::archive::text_oarchive>

; 117  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@AAU?$nvp@$$CBVitem_version_type@serialization@boost@@@12@I@Z ENDP ; boost::serialization::access::serialize<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\access.hpp
;	COMDAT ??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@AAU?$nvp@Vcollection_size_type@serialization@boost@@@12@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@AAU?$nvp@Vcollection_size_type@serialization@boost@@@12@I@Z PROC ; boost::serialization::access::serialize<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >, COMDAT

; 106  :     ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 107  :         // note: if you get a compile time error here with a
; 108  :         // message something like:
; 109  :         // cannot convert parameter 1 from <file type 1> to <file type 2 &>
; 110  :         // a likely possible cause is that the class T contains a 
; 111  :         // serialize function - but that serialize function isn't 
; 112  :         // a template and corresponds to a file type different than
; 113  :         // the class Archive.  To resolve this, don't include an
; 114  :         // archive type other than that for which the serialization
; 115  :         // function is defined!!!
; 116  :         t.serialize(ar, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _t$[ebp]
	call	??$serialize@Vtext_oarchive@archive@boost@@@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QAEXAAVtext_oarchive@archive@2@I@Z ; boost::serialization::nvp<boost::serialization::collection_size_type>::serialize<boost::archive::text_oarchive>

; 117  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@AAU?$nvp@Vcollection_size_type@serialization@boost@@@12@I@Z ENDP ; boost::serialization::access::serialize<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??$serialize_adl@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z
_TEXT	SEGMENT
_v$ = -8						; size = 4
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize_adl@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z PROC ; boost::serialization::serialize_adl<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 116  : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 117  :     // note usage of function overloading to delay final resolution
; 118  :     // until the point of instantiation.  This works around the two-phase
; 119  :     // lookup "feature" which inhibits redefintion of a default function
; 120  :     // template implementation. Due to Robert Ramey
; 121  :     //
; 122  :     // Note that this trick generates problems for compiles which don't support
; 123  :     // PFTO, suppress it here.  As far as we know, there are no compilers
; 124  :     // which fail to support PFTO while supporting two-phase lookup.
; 125  :     const version_type v(file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	lea	ecx, DWORD PTR _v$[ebp]
	call	??0version_type@serialization@boost@@QAE@I@Z ; boost::serialization::version_type::version_type

; 126  :     serialize(ar, t, v);

	lea	ecx, DWORD PTR _v$[ebp]
	call	??Bversion_type@serialization@boost@@QBEABIXZ ; boost::serialization::version_type::operator unsigned int const &
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z ; boost::serialization::serialize<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 12					; 0000000cH

; 127  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@serialize_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@serialize_:
	DD	1
	DD	$LN4@serialize_
$LN4@serialize_:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@serialize_
$LN3@serialize_:
	DB	118					; 00000076H
	DB	0
??$serialize_adl@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z ENDP ; boost::serialization::serialize_adl<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vitem_version_type@serialization@boost@@@01@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vitem_version_type@serialization@boost@@@01@I@Z PROC ; boost::serialization::serialize<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> >, COMDAT

; 67   : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 68   :     access::serialize(ar, t, static_cast<unsigned int>(file_version));

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@Vitem_version_type@serialization@boost@@@12@I@Z ; boost::serialization::access::serialize<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> >
	add	esp, 12					; 0000000cH

; 69   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vitem_version_type@serialization@boost@@@01@I@Z ENDP ; boost::serialization::serialize<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z PROC ; boost::serialization::serialize<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >, COMDAT

; 67   : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 68   :     access::serialize(ar, t, static_cast<unsigned int>(file_version));

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAU?$nvp@Vcollection_size_type@serialization@boost@@@12@I@Z ; boost::serialization::access::serialize<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
	add	esp, 12					; 0000000cH

; 69   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z ENDP ; boost::serialization::serialize<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z PROC ; boost::serialization::serialize<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >, COMDAT

; 67   : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 68   :     access::serialize(ar, t, static_cast<unsigned int>(file_version));

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@AAU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@12@I@Z ; boost::serialization::access::serialize<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >
	add	esp, 12					; 0000000cH

; 69   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z ENDP ; boost::serialization::serialize<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBVitem_version_type@serialization@boost@@@01@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBVitem_version_type@serialization@boost@@@01@I@Z PROC ; boost::serialization::serialize<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > >, COMDAT

; 67   : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 68   :     access::serialize(ar, t, static_cast<unsigned int>(file_version));

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@AAU?$nvp@$$CBVitem_version_type@serialization@boost@@@12@I@Z ; boost::serialization::access::serialize<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > >
	add	esp, 12					; 0000000cH

; 69   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBVitem_version_type@serialization@boost@@@01@I@Z ENDP ; boost::serialization::serialize<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z PROC ; boost::serialization::serialize<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >, COMDAT

; 67   : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 68   :     access::serialize(ar, t, static_cast<unsigned int>(file_version));

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@AAU?$nvp@Vcollection_size_type@serialization@boost@@@12@I@Z ; boost::serialization::access::serialize<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
	add	esp, 12					; 0000000cH

; 69   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z ENDP ; boost::serialization::serialize<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@load_only@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@4@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@load_only@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@4@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_only::invoke<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 392  :         static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 393  :             // short cut to user's serializer
; 394  :             // make sure call is routed through the higest interface that might
; 395  :             // be specialized by the user.
; 396  :             boost::serialization::serialize_adl(

	push	0
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$serialize_adl@Vtext_iarchive@archive@boost@@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z ; boost::serialization::serialize_adl<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 12					; 0000000cH

; 397  :                 ar, 
; 398  :                 const_cast<T &>(t), 
; 399  :                 boost::serialization::version< T >::value
; 400  :             );
; 401  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@load_only@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@4@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_only::invoke<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_level@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_level@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_level<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >, COMDAT

; 51   : inline void check_object_level(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 52   :     typedef 
; 53   :         typename mpl::greater_equal<
; 54   :             serialization::implementation_level< T >,
; 55   :             mpl::int_<serialization::primitive_type>
; 56   :         >::type typex;
; 57   : 
; 58   :     // trap attempts to serialize objects marked
; 59   :     // not_serializable
; 60   :     BOOST_STATIC_ASSERT(typex::value);
; 61   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_level@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_level<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >, COMDAT

; 64   : inline void check_object_versioning(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_versioning@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??$serialize_adl@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vitem_version_type@serialization@boost@@@01@I@Z
_TEXT	SEGMENT
_v$ = -8						; size = 4
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize_adl@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vitem_version_type@serialization@boost@@@01@I@Z PROC ; boost::serialization::serialize_adl<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> >, COMDAT

; 116  : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 117  :     // note usage of function overloading to delay final resolution
; 118  :     // until the point of instantiation.  This works around the two-phase
; 119  :     // lookup "feature" which inhibits redefintion of a default function
; 120  :     // template implementation. Due to Robert Ramey
; 121  :     //
; 122  :     // Note that this trick generates problems for compiles which don't support
; 123  :     // PFTO, suppress it here.  As far as we know, there are no compilers
; 124  :     // which fail to support PFTO while supporting two-phase lookup.
; 125  :     const version_type v(file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	lea	ecx, DWORD PTR _v$[ebp]
	call	??0version_type@serialization@boost@@QAE@I@Z ; boost::serialization::version_type::version_type

; 126  :     serialize(ar, t, v);

	lea	ecx, DWORD PTR _v$[ebp]
	call	??Bversion_type@serialization@boost@@QBEABIXZ ; boost::serialization::version_type::operator unsigned int const &
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vitem_version_type@serialization@boost@@@01@I@Z ; boost::serialization::serialize<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> >
	add	esp, 12					; 0000000cH

; 127  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@serialize_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@serialize_:
	DD	1
	DD	$LN4@serialize_
$LN4@serialize_:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@serialize_
$LN3@serialize_:
	DB	118					; 00000076H
	DB	0
??$serialize_adl@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vitem_version_type@serialization@boost@@@01@I@Z ENDP ; boost::serialization::serialize_adl<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??$serialize_adl@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z
_TEXT	SEGMENT
_v$ = -8						; size = 4
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize_adl@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z PROC ; boost::serialization::serialize_adl<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >, COMDAT

; 116  : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 117  :     // note usage of function overloading to delay final resolution
; 118  :     // until the point of instantiation.  This works around the two-phase
; 119  :     // lookup "feature" which inhibits redefintion of a default function
; 120  :     // template implementation. Due to Robert Ramey
; 121  :     //
; 122  :     // Note that this trick generates problems for compiles which don't support
; 123  :     // PFTO, suppress it here.  As far as we know, there are no compilers
; 124  :     // which fail to support PFTO while supporting two-phase lookup.
; 125  :     const version_type v(file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	lea	ecx, DWORD PTR _v$[ebp]
	call	??0version_type@serialization@boost@@QAE@I@Z ; boost::serialization::version_type::version_type

; 126  :     serialize(ar, t, v);

	lea	ecx, DWORD PTR _v$[ebp]
	call	??Bversion_type@serialization@boost@@QBEABIXZ ; boost::serialization::version_type::operator unsigned int const &
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$serialize@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z ; boost::serialization::serialize<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
	add	esp, 12					; 0000000cH

; 127  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@serialize_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@serialize_:
	DD	1
	DD	$LN4@serialize_
$LN4@serialize_:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@serialize_
$LN3@serialize_:
	DB	118					; 00000076H
	DB	0
??$serialize_adl@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z ENDP ; boost::serialization::serialize_adl<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??$serialize_adl@Vtext_oarchive@archive@boost@@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z
_TEXT	SEGMENT
_v$ = -8						; size = 4
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize_adl@Vtext_oarchive@archive@boost@@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z PROC ; boost::serialization::serialize_adl<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >, COMDAT

; 116  : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 117  :     // note usage of function overloading to delay final resolution
; 118  :     // until the point of instantiation.  This works around the two-phase
; 119  :     // lookup "feature" which inhibits redefintion of a default function
; 120  :     // template implementation. Due to Robert Ramey
; 121  :     //
; 122  :     // Note that this trick generates problems for compiles which don't support
; 123  :     // PFTO, suppress it here.  As far as we know, there are no compilers
; 124  :     // which fail to support PFTO while supporting two-phase lookup.
; 125  :     const version_type v(file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	lea	ecx, DWORD PTR _v$[ebp]
	call	??0version_type@serialization@boost@@QAE@I@Z ; boost::serialization::version_type::version_type

; 126  :     serialize(ar, t, v);

	lea	ecx, DWORD PTR _v$[ebp]
	call	??Bversion_type@serialization@boost@@QBEABIXZ ; boost::serialization::version_type::operator unsigned int const &
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z ; boost::serialization::serialize<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >
	add	esp, 12					; 0000000cH

; 127  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@serialize_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@serialize_:
	DD	1
	DD	$LN4@serialize_
$LN4@serialize_:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@serialize_
$LN3@serialize_:
	DB	118					; 00000076H
	DB	0
??$serialize_adl@Vtext_oarchive@archive@boost@@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z ENDP ; boost::serialization::serialize_adl<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??$serialize_adl@Vtext_oarchive@archive@boost@@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBVitem_version_type@serialization@boost@@@01@I@Z
_TEXT	SEGMENT
_v$ = -8						; size = 4
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize_adl@Vtext_oarchive@archive@boost@@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBVitem_version_type@serialization@boost@@@01@I@Z PROC ; boost::serialization::serialize_adl<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > >, COMDAT

; 116  : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 117  :     // note usage of function overloading to delay final resolution
; 118  :     // until the point of instantiation.  This works around the two-phase
; 119  :     // lookup "feature" which inhibits redefintion of a default function
; 120  :     // template implementation. Due to Robert Ramey
; 121  :     //
; 122  :     // Note that this trick generates problems for compiles which don't support
; 123  :     // PFTO, suppress it here.  As far as we know, there are no compilers
; 124  :     // which fail to support PFTO while supporting two-phase lookup.
; 125  :     const version_type v(file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	lea	ecx, DWORD PTR _v$[ebp]
	call	??0version_type@serialization@boost@@QAE@I@Z ; boost::serialization::version_type::version_type

; 126  :     serialize(ar, t, v);

	lea	ecx, DWORD PTR _v$[ebp]
	call	??Bversion_type@serialization@boost@@QBEABIXZ ; boost::serialization::version_type::operator unsigned int const &
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBVitem_version_type@serialization@boost@@@01@I@Z ; boost::serialization::serialize<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > >
	add	esp, 12					; 0000000cH

; 127  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@serialize_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@serialize_:
	DD	1
	DD	$LN4@serialize_
$LN4@serialize_:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@serialize_
$LN3@serialize_:
	DB	118					; 00000076H
	DB	0
??$serialize_adl@Vtext_oarchive@archive@boost@@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBVitem_version_type@serialization@boost@@@01@I@Z ENDP ; boost::serialization::serialize_adl<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??$serialize_adl@Vtext_oarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z
_TEXT	SEGMENT
_v$ = -8						; size = 4
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize_adl@Vtext_oarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z PROC ; boost::serialization::serialize_adl<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >, COMDAT

; 116  : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 117  :     // note usage of function overloading to delay final resolution
; 118  :     // until the point of instantiation.  This works around the two-phase
; 119  :     // lookup "feature" which inhibits redefintion of a default function
; 120  :     // template implementation. Due to Robert Ramey
; 121  :     //
; 122  :     // Note that this trick generates problems for compiles which don't support
; 123  :     // PFTO, suppress it here.  As far as we know, there are no compilers
; 124  :     // which fail to support PFTO while supporting two-phase lookup.
; 125  :     const version_type v(file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	lea	ecx, DWORD PTR _v$[ebp]
	call	??0version_type@serialization@boost@@QAE@I@Z ; boost::serialization::version_type::version_type

; 126  :     serialize(ar, t, v);

	lea	ecx, DWORD PTR _v$[ebp]
	call	??Bversion_type@serialization@boost@@QBEABIXZ ; boost::serialization::version_type::operator unsigned int const &
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$serialize@Vtext_oarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z ; boost::serialization::serialize<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
	add	esp, 12					; 0000000cH

; 127  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@serialize_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@serialize_:
	DD	1
	DD	$LN4@serialize_
$LN4@serialize_:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@serialize_
$LN3@serialize_:
	DB	118					; 00000076H
	DB	0
??$serialize_adl@Vtext_oarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z ENDP ; boost::serialization::serialize_adl<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z
_TEXT	SEGMENT
tv76 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	28					; 0000001cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv76[ebp], 0
$LN1@construct:

; 738  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@ABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@ABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >, COMDAT

; 430  :     static void invoke(Archive & ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 431  :         typedef typename mpl::eval_if<
; 432  :                 // if its primitive
; 433  :                 mpl::equal_to<
; 434  :                     boost::serialization::implementation_level< T >,
; 435  :                     mpl::int_<boost::serialization::primitive_type>
; 436  :                 >,
; 437  :                 mpl::identity<load_primitive>,
; 438  :             // else
; 439  :             typename mpl::eval_if<
; 440  :             // class info / version
; 441  :             mpl::greater_equal<
; 442  :                         boost::serialization::implementation_level< T >,
; 443  :                         mpl::int_<boost::serialization::object_class_info>
; 444  :                     >,
; 445  :             // do standard load
; 446  :             mpl::identity<load_standard>,
; 447  :         // else
; 448  :         typename mpl::eval_if<
; 449  :             // no tracking
; 450  :                     mpl::equal_to<
; 451  :                         boost::serialization::tracking_level< T >,
; 452  :                         mpl::int_<boost::serialization::track_never>
; 453  :                 >,
; 454  :                 // do a fast load
; 455  :                 mpl::identity<load_only>,
; 456  :             // else
; 457  :             // do a fast load only tracking is turned off
; 458  :             mpl::identity<load_conditional>
; 459  :         > > >::type typex;
; 460  :         check_object_versioning< T >();

	call	??$check_object_versioning@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >

; 461  :         check_object_level< T >();

	call	??$check_object_level@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >

; 462  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@U?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@load_only@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@4@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_only::invoke<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 8

; 463  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@ABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_const_loading@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_const_loading@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_const_loading<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >, COMDAT

; 152  : inline void check_const_loading(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 153  :     typedef
; 154  :         typename mpl::or_<
; 155  :             typename boost::serialization::is_wrapper< T >,
; 156  :             typename mpl::not_<
; 157  :                 typename boost::is_const< T >
; 158  :             >
; 159  :         >::type typex;
; 160  :     // cannot load data into a "const" object unless it's a
; 161  :     // wrapper around some other non-const object.
; 162  :     BOOST_STATIC_ASSERT(typex::value);
; 163  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_const_loading@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_const_loading<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@load_only@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@4@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@load_only@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@4@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_only::invoke<boost::serialization::nvp<boost::serialization::item_version_type> >, COMDAT

; 392  :         static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 393  :             // short cut to user's serializer
; 394  :             // make sure call is routed through the higest interface that might
; 395  :             // be specialized by the user.
; 396  :             boost::serialization::serialize_adl(

	push	0
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$serialize_adl@Vtext_iarchive@archive@boost@@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vitem_version_type@serialization@boost@@@01@I@Z ; boost::serialization::serialize_adl<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> >
	add	esp, 12					; 0000000cH

; 397  :                 ar, 
; 398  :                 const_cast<T &>(t), 
; 399  :                 boost::serialization::version< T >::value
; 400  :             );
; 401  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@load_only@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@4@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_only::invoke<boost::serialization::nvp<boost::serialization::item_version_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_level@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_level@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_level<boost::serialization::nvp<boost::serialization::item_version_type> const >, COMDAT

; 51   : inline void check_object_level(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 52   :     typedef 
; 53   :         typename mpl::greater_equal<
; 54   :             serialization::implementation_level< T >,
; 55   :             mpl::int_<serialization::primitive_type>
; 56   :         >::type typex;
; 57   : 
; 58   :     // trap attempts to serialize objects marked
; 59   :     // not_serializable
; 60   :     BOOST_STATIC_ASSERT(typex::value);
; 61   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_level@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_level<boost::serialization::nvp<boost::serialization::item_version_type> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<boost::serialization::nvp<boost::serialization::item_version_type> const >, COMDAT

; 64   : inline void check_object_versioning(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_versioning@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<boost::serialization::nvp<boost::serialization::item_version_type> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@load_only@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@4@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@load_only@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@4@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_only::invoke<boost::serialization::nvp<boost::serialization::collection_size_type> >, COMDAT

; 392  :         static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 393  :             // short cut to user's serializer
; 394  :             // make sure call is routed through the higest interface that might
; 395  :             // be specialized by the user.
; 396  :             boost::serialization::serialize_adl(

	push	0
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$serialize_adl@Vtext_iarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z ; boost::serialization::serialize_adl<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
	add	esp, 12					; 0000000cH

; 397  :                 ar, 
; 398  :                 const_cast<T &>(t), 
; 399  :                 boost::serialization::version< T >::value
; 400  :             );
; 401  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@load_only@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@4@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_only::invoke<boost::serialization::nvp<boost::serialization::collection_size_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_level@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_level@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_level<boost::serialization::nvp<boost::serialization::collection_size_type> const >, COMDAT

; 51   : inline void check_object_level(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 52   :     typedef 
; 53   :         typename mpl::greater_equal<
; 54   :             serialization::implementation_level< T >,
; 55   :             mpl::int_<serialization::primitive_type>
; 56   :         >::type typex;
; 57   : 
; 58   :     // trap attempts to serialize objects marked
; 59   :     // not_serializable
; 60   :     BOOST_STATIC_ASSERT(typex::value);
; 61   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_level@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_level<boost::serialization::nvp<boost::serialization::collection_size_type> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<boost::serialization::nvp<boost::serialization::collection_size_type> const >, COMDAT

; 64   : inline void check_object_versioning(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_versioning@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<boost::serialization::nvp<boost::serialization::collection_size_type> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@save_only@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@4@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@save_only@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@4@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_only::invoke<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >, COMDAT

; 239  :         static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 240  :             // make sure call is routed through the highest interface that might
; 241  :             // be specialized by the user.
; 242  :             boost::serialization::serialize_adl(

	push	0
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$serialize_adl@Vtext_oarchive@archive@boost@@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@I@Z ; boost::serialization::serialize_adl<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >
	add	esp, 12					; 0000000cH

; 243  :                 ar, 
; 244  :                 const_cast<T &>(t), 
; 245  :                 ::boost::serialization::version< T >::value
; 246  :             );
; 247  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@save_only@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@4@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_only::invoke<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >, COMDAT

; 64   : inline void check_object_versioning(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_versioning@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@save_only@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@4@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@save_only@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@4@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_only::invoke<boost::serialization::nvp<boost::serialization::item_version_type const > >, COMDAT

; 239  :         static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 240  :             // make sure call is routed through the highest interface that might
; 241  :             // be specialized by the user.
; 242  :             boost::serialization::serialize_adl(

	push	0
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$serialize_adl@Vtext_oarchive@archive@boost@@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@$$CBVitem_version_type@serialization@boost@@@01@I@Z ; boost::serialization::serialize_adl<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > >
	add	esp, 12					; 0000000cH

; 243  :                 ar, 
; 244  :                 const_cast<T &>(t), 
; 245  :                 ::boost::serialization::version< T >::value
; 246  :             );
; 247  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@save_only@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@4@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_only::invoke<boost::serialization::nvp<boost::serialization::item_version_type const > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<boost::serialization::nvp<boost::serialization::item_version_type const > >, COMDAT

; 64   : inline void check_object_versioning(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_versioning@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<boost::serialization::nvp<boost::serialization::item_version_type const > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@save_only@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@4@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@save_only@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@4@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_only::invoke<boost::serialization::nvp<boost::serialization::collection_size_type> >, COMDAT

; 239  :         static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 240  :             // make sure call is routed through the highest interface that might
; 241  :             // be specialized by the user.
; 242  :             boost::serialization::serialize_adl(

	push	0
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$serialize_adl@Vtext_oarchive@archive@boost@@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAU?$nvp@Vcollection_size_type@serialization@boost@@@01@I@Z ; boost::serialization::serialize_adl<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> >
	add	esp, 12					; 0000000cH

; 243  :                 ar, 
; 244  :                 const_cast<T &>(t), 
; 245  :                 ::boost::serialization::version< T >::value
; 246  :             );
; 247  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@save_only@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@4@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_only::invoke<boost::serialization::nvp<boost::serialization::collection_size_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<boost::serialization::nvp<boost::serialization::collection_size_type> >, COMDAT

; 64   : inline void check_object_versioning(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_versioning@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<boost::serialization::nvp<boost::serialization::collection_size_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	28					; 0000001cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN1@construct:

; 738  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV31@@Z PROC ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 858  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV31@@Z ENDP ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load@Vtext_iarchive@archive@boost@@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@archive@boost@@YAXAAVtext_iarchive@01@ABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@1@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load@Vtext_iarchive@archive@boost@@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@archive@boost@@YAXAAVtext_iarchive@01@ABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@1@@Z PROC ; boost::archive::load<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >, COMDAT

; 598  : inline void load(Archive & ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 599  :     // if this assertion trips. It means we're trying to load a
; 600  :     // const object with a compiler that doesn't have correct
; 601  :     // funtion template ordering.  On other compilers, this is
; 602  :     // handled below.
; 603  :     detail::check_const_loading< T >();

	call	??$check_const_loading@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >

; 604  :     typedef
; 605  :         typename mpl::eval_if<is_pointer< T >,
; 606  :             mpl::identity<detail::load_pointer_type<Archive> >
; 607  :         ,//else
; 608  :         typename mpl::eval_if<is_array< T >,
; 609  :             mpl::identity<detail::load_array_type<Archive> >
; 610  :         ,//else
; 611  :         typename mpl::eval_if<is_enum< T >,
; 612  :             mpl::identity<detail::load_enum_type<Archive> >
; 613  :         ,//else
; 614  :             mpl::identity<detail::load_non_pointer_type<Archive> >
; 615  :         >
; 616  :         >
; 617  :         >::type typex;
; 618  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@ABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >
	add	esp, 8

; 619  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$load@Vtext_iarchive@archive@boost@@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@archive@boost@@YAXAAVtext_iarchive@01@ABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@1@@Z ENDP ; boost::archive::load<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@ABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@ABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::serialization::nvp<boost::serialization::item_version_type> const >, COMDAT

; 430  :     static void invoke(Archive & ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 431  :         typedef typename mpl::eval_if<
; 432  :                 // if its primitive
; 433  :                 mpl::equal_to<
; 434  :                     boost::serialization::implementation_level< T >,
; 435  :                     mpl::int_<boost::serialization::primitive_type>
; 436  :                 >,
; 437  :                 mpl::identity<load_primitive>,
; 438  :             // else
; 439  :             typename mpl::eval_if<
; 440  :             // class info / version
; 441  :             mpl::greater_equal<
; 442  :                         boost::serialization::implementation_level< T >,
; 443  :                         mpl::int_<boost::serialization::object_class_info>
; 444  :                     >,
; 445  :             // do standard load
; 446  :             mpl::identity<load_standard>,
; 447  :         // else
; 448  :         typename mpl::eval_if<
; 449  :             // no tracking
; 450  :                     mpl::equal_to<
; 451  :                         boost::serialization::tracking_level< T >,
; 452  :                         mpl::int_<boost::serialization::track_never>
; 453  :                 >,
; 454  :                 // do a fast load
; 455  :                 mpl::identity<load_only>,
; 456  :             // else
; 457  :             // do a fast load only tracking is turned off
; 458  :             mpl::identity<load_conditional>
; 459  :         > > >::type typex;
; 460  :         check_object_versioning< T >();

	call	??$check_object_versioning@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::serialization::nvp<boost::serialization::item_version_type> const >

; 461  :         check_object_level< T >();

	call	??$check_object_level@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::serialization::nvp<boost::serialization::item_version_type> const >

; 462  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@U?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@load_only@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@4@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_only::invoke<boost::serialization::nvp<boost::serialization::item_version_type> >
	add	esp, 8

; 463  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@ABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::serialization::nvp<boost::serialization::item_version_type> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_const_loading@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_const_loading@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_const_loading<boost::serialization::nvp<boost::serialization::item_version_type> const >, COMDAT

; 152  : inline void check_const_loading(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 153  :     typedef
; 154  :         typename mpl::or_<
; 155  :             typename boost::serialization::is_wrapper< T >,
; 156  :             typename mpl::not_<
; 157  :                 typename boost::is_const< T >
; 158  :             >
; 159  :         >::type typex;
; 160  :     // cannot load data into a "const" object unless it's a
; 161  :     // wrapper around some other non-const object.
; 162  :     BOOST_STATIC_ASSERT(typex::value);
; 163  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_const_loading@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_const_loading<boost::serialization::nvp<boost::serialization::item_version_type> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::serialization::nvp<boost::serialization::collection_size_type> const >, COMDAT

; 430  :     static void invoke(Archive & ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 431  :         typedef typename mpl::eval_if<
; 432  :                 // if its primitive
; 433  :                 mpl::equal_to<
; 434  :                     boost::serialization::implementation_level< T >,
; 435  :                     mpl::int_<boost::serialization::primitive_type>
; 436  :                 >,
; 437  :                 mpl::identity<load_primitive>,
; 438  :             // else
; 439  :             typename mpl::eval_if<
; 440  :             // class info / version
; 441  :             mpl::greater_equal<
; 442  :                         boost::serialization::implementation_level< T >,
; 443  :                         mpl::int_<boost::serialization::object_class_info>
; 444  :                     >,
; 445  :             // do standard load
; 446  :             mpl::identity<load_standard>,
; 447  :         // else
; 448  :         typename mpl::eval_if<
; 449  :             // no tracking
; 450  :                     mpl::equal_to<
; 451  :                         boost::serialization::tracking_level< T >,
; 452  :                         mpl::int_<boost::serialization::track_never>
; 453  :                 >,
; 454  :                 // do a fast load
; 455  :                 mpl::identity<load_only>,
; 456  :             // else
; 457  :             // do a fast load only tracking is turned off
; 458  :             mpl::identity<load_conditional>
; 459  :         > > >::type typex;
; 460  :         check_object_versioning< T >();

	call	??$check_object_versioning@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::serialization::nvp<boost::serialization::collection_size_type> const >

; 461  :         check_object_level< T >();

	call	??$check_object_level@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::serialization::nvp<boost::serialization::collection_size_type> const >

; 462  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@load_only@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@4@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_only::invoke<boost::serialization::nvp<boost::serialization::collection_size_type> >
	add	esp, 8

; 463  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::serialization::nvp<boost::serialization::collection_size_type> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_const_loading@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_const_loading@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_const_loading<boost::serialization::nvp<boost::serialization::collection_size_type> const >, COMDAT

; 152  : inline void check_const_loading(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 153  :     typedef
; 154  :         typename mpl::or_<
; 155  :             typename boost::serialization::is_wrapper< T >,
; 156  :             typename mpl::not_<
; 157  :                 typename boost::is_const< T >
; 158  :             >
; 159  :         >::type typex;
; 160  :     // cannot load data into a "const" object unless it's a
; 161  :     // wrapper around some other non-const object.
; 162  :     BOOST_STATIC_ASSERT(typex::value);
; 163  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_const_loading@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_const_loading<boost::serialization::nvp<boost::serialization::collection_size_type> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >, COMDAT

; 277  :     static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 278  :         typedef 
; 279  :             typename mpl::eval_if<
; 280  :             // if its primitive
; 281  :                 mpl::equal_to<
; 282  :                     boost::serialization::implementation_level< T >,
; 283  :                     mpl::int_<boost::serialization::primitive_type>
; 284  :                 >,
; 285  :                 mpl::identity<save_primitive>,
; 286  :             // else
; 287  :             typename mpl::eval_if<
; 288  :                 // class info / version
; 289  :                 mpl::greater_equal<
; 290  :                     boost::serialization::implementation_level< T >,
; 291  :                     mpl::int_<boost::serialization::object_class_info>
; 292  :                 >,
; 293  :                 // do standard save
; 294  :                 mpl::identity<save_standard>,
; 295  :             // else
; 296  :             typename mpl::eval_if<
; 297  :                     // no tracking
; 298  :                 mpl::equal_to<
; 299  :                     boost::serialization::tracking_level< T >,
; 300  :                     mpl::int_<boost::serialization::track_never>
; 301  :                 >,
; 302  :                 // do a fast save
; 303  :                 mpl::identity<save_only>,
; 304  :             // else
; 305  :                 // do a fast save only tracking is turned off
; 306  :                 mpl::identity<save_conditional>
; 307  :             > > >::type typex; 
; 308  :         check_object_versioning< T >();

	call	??$check_object_versioning@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >

; 309  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@save_only@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@4@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_only::invoke<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >
	add	esp, 8

; 310  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::serialization::nvp<boost::serialization::item_version_type const > >, COMDAT

; 277  :     static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 278  :         typedef 
; 279  :             typename mpl::eval_if<
; 280  :             // if its primitive
; 281  :                 mpl::equal_to<
; 282  :                     boost::serialization::implementation_level< T >,
; 283  :                     mpl::int_<boost::serialization::primitive_type>
; 284  :                 >,
; 285  :                 mpl::identity<save_primitive>,
; 286  :             // else
; 287  :             typename mpl::eval_if<
; 288  :                 // class info / version
; 289  :                 mpl::greater_equal<
; 290  :                     boost::serialization::implementation_level< T >,
; 291  :                     mpl::int_<boost::serialization::object_class_info>
; 292  :                 >,
; 293  :                 // do standard save
; 294  :                 mpl::identity<save_standard>,
; 295  :             // else
; 296  :             typename mpl::eval_if<
; 297  :                     // no tracking
; 298  :                 mpl::equal_to<
; 299  :                     boost::serialization::tracking_level< T >,
; 300  :                     mpl::int_<boost::serialization::track_never>
; 301  :                 >,
; 302  :                 // do a fast save
; 303  :                 mpl::identity<save_only>,
; 304  :             // else
; 305  :                 // do a fast save only tracking is turned off
; 306  :                 mpl::identity<save_conditional>
; 307  :             > > >::type typex; 
; 308  :         check_object_versioning< T >();

	call	??$check_object_versioning@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::serialization::nvp<boost::serialization::item_version_type const > >

; 309  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@save_only@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@4@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_only::invoke<boost::serialization::nvp<boost::serialization::item_version_type const > >
	add	esp, 8

; 310  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::serialization::nvp<boost::serialization::item_version_type const > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::serialization::nvp<boost::serialization::collection_size_type> >, COMDAT

; 277  :     static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 278  :         typedef 
; 279  :             typename mpl::eval_if<
; 280  :             // if its primitive
; 281  :                 mpl::equal_to<
; 282  :                     boost::serialization::implementation_level< T >,
; 283  :                     mpl::int_<boost::serialization::primitive_type>
; 284  :                 >,
; 285  :                 mpl::identity<save_primitive>,
; 286  :             // else
; 287  :             typename mpl::eval_if<
; 288  :                 // class info / version
; 289  :                 mpl::greater_equal<
; 290  :                     boost::serialization::implementation_level< T >,
; 291  :                     mpl::int_<boost::serialization::object_class_info>
; 292  :                 >,
; 293  :                 // do standard save
; 294  :                 mpl::identity<save_standard>,
; 295  :             // else
; 296  :             typename mpl::eval_if<
; 297  :                     // no tracking
; 298  :                 mpl::equal_to<
; 299  :                     boost::serialization::tracking_level< T >,
; 300  :                     mpl::int_<boost::serialization::track_never>
; 301  :                 >,
; 302  :                 // do a fast save
; 303  :                 mpl::identity<save_only>,
; 304  :             // else
; 305  :                 // do a fast save only tracking is turned off
; 306  :                 mpl::identity<save_conditional>
; 307  :             > > >::type typex; 
; 308  :         check_object_versioning< T >();

	call	??$check_object_versioning@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::serialization::nvp<boost::serialization::collection_size_type> >

; 309  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@save_only@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@4@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_only::invoke<boost::serialization::nvp<boost::serialization::collection_size_type> >
	add	esp, 8

; 310  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::serialization::nvp<boost::serialization::collection_size_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 858  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV31@@Z ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 12					; 0000000cH

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ??$load_override@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >, COMDAT
; _this$ = ecx

; 65   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   :         archive::load(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	push	eax
	call	??$load@Vtext_iarchive@archive@boost@@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@archive@boost@@YAXAAVtext_iarchive@01@ABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@1@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >
	add	esp, 8

; 67   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load@Vtext_iarchive@archive@boost@@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@archive@boost@@YAXAAVtext_iarchive@01@ABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@1@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load@Vtext_iarchive@archive@boost@@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@archive@boost@@YAXAAVtext_iarchive@01@ABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@1@@Z PROC ; boost::archive::load<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> const >, COMDAT

; 598  : inline void load(Archive & ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 599  :     // if this assertion trips. It means we're trying to load a
; 600  :     // const object with a compiler that doesn't have correct
; 601  :     // funtion template ordering.  On other compilers, this is
; 602  :     // handled below.
; 603  :     detail::check_const_loading< T >();

	call	??$check_const_loading@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::serialization::nvp<boost::serialization::item_version_type> const >

; 604  :     typedef
; 605  :         typename mpl::eval_if<is_pointer< T >,
; 606  :             mpl::identity<detail::load_pointer_type<Archive> >
; 607  :         ,//else
; 608  :         typename mpl::eval_if<is_array< T >,
; 609  :             mpl::identity<detail::load_array_type<Archive> >
; 610  :         ,//else
; 611  :         typename mpl::eval_if<is_enum< T >,
; 612  :             mpl::identity<detail::load_enum_type<Archive> >
; 613  :         ,//else
; 614  :             mpl::identity<detail::load_non_pointer_type<Archive> >
; 615  :         >
; 616  :         >
; 617  :         >::type typex;
; 618  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@ABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::serialization::nvp<boost::serialization::item_version_type> const >
	add	esp, 8

; 619  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$load@Vtext_iarchive@archive@boost@@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@archive@boost@@YAXAAVtext_iarchive@01@ABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@1@@Z ENDP ; boost::archive::load<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load@Vtext_iarchive@archive@boost@@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@archive@boost@@YAXAAVtext_iarchive@01@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@1@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load@Vtext_iarchive@archive@boost@@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@archive@boost@@YAXAAVtext_iarchive@01@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@1@@Z PROC ; boost::archive::load<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> const >, COMDAT

; 598  : inline void load(Archive & ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 599  :     // if this assertion trips. It means we're trying to load a
; 600  :     // const object with a compiler that doesn't have correct
; 601  :     // funtion template ordering.  On other compilers, this is
; 602  :     // handled below.
; 603  :     detail::check_const_loading< T >();

	call	??$check_const_loading@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::serialization::nvp<boost::serialization::collection_size_type> const >

; 604  :     typedef
; 605  :         typename mpl::eval_if<is_pointer< T >,
; 606  :             mpl::identity<detail::load_pointer_type<Archive> >
; 607  :         ,//else
; 608  :         typename mpl::eval_if<is_array< T >,
; 609  :             mpl::identity<detail::load_array_type<Archive> >
; 610  :         ,//else
; 611  :         typename mpl::eval_if<is_enum< T >,
; 612  :             mpl::identity<detail::load_enum_type<Archive> >
; 613  :         ,//else
; 614  :             mpl::identity<detail::load_non_pointer_type<Archive> >
; 615  :         >
; 616  :         >
; 617  :         >::type typex;
; 618  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::serialization::nvp<boost::serialization::collection_size_type> const >
	add	esp, 8

; 619  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$load@Vtext_iarchive@archive@boost@@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@archive@boost@@YAXAAVtext_iarchive@01@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@1@@Z ENDP ; boost::archive::load<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@archive@boost@@YAXAAVtext_oarchive@01@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@1@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@archive@boost@@YAXAAVtext_oarchive@01@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@1@@Z PROC ; boost::archive::save<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > const >, COMDAT

; 511  : inline void save(Archive & ar, /*const*/ T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 512  :     typedef 
; 513  :         typename mpl::eval_if<is_pointer< T >,
; 514  :             mpl::identity<detail::save_pointer_type<Archive> >,
; 515  :         //else
; 516  :         typename mpl::eval_if<is_enum< T >,
; 517  :             mpl::identity<detail::save_enum_type<Archive> >,
; 518  :         //else
; 519  :         typename mpl::eval_if<is_array< T >,
; 520  :             mpl::identity<detail::save_array_type<Archive> >,
; 521  :         //else
; 522  :             mpl::identity<detail::save_non_pointer_type<Archive> >
; 523  :         >
; 524  :         >
; 525  :         >::type typex;
; 526  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >
	add	esp, 8

; 527  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@archive@boost@@YAXAAVtext_oarchive@01@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@1@@Z ENDP ; boost::archive::save<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@archive@boost@@YAXAAVtext_oarchive@01@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@1@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@archive@boost@@YAXAAVtext_oarchive@01@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@1@@Z PROC ; boost::archive::save<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > const >, COMDAT

; 511  : inline void save(Archive & ar, /*const*/ T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 512  :     typedef 
; 513  :         typename mpl::eval_if<is_pointer< T >,
; 514  :             mpl::identity<detail::save_pointer_type<Archive> >,
; 515  :         //else
; 516  :         typename mpl::eval_if<is_enum< T >,
; 517  :             mpl::identity<detail::save_enum_type<Archive> >,
; 518  :         //else
; 519  :         typename mpl::eval_if<is_array< T >,
; 520  :             mpl::identity<detail::save_array_type<Archive> >,
; 521  :         //else
; 522  :             mpl::identity<detail::save_non_pointer_type<Archive> >
; 523  :         >
; 524  :         >
; 525  :         >::type typex;
; 526  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::serialization::nvp<boost::serialization::item_version_type const > >
	add	esp, 8

; 527  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@archive@boost@@YAXAAVtext_oarchive@01@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@1@@Z ENDP ; boost::archive::save<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@archive@boost@@YAXAAVtext_oarchive@01@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@1@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@archive@boost@@YAXAAVtext_oarchive@01@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@1@@Z PROC ; boost::archive::save<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> const >, COMDAT

; 511  : inline void save(Archive & ar, /*const*/ T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 512  :     typedef 
; 513  :         typename mpl::eval_if<is_pointer< T >,
; 514  :             mpl::identity<detail::save_pointer_type<Archive> >,
; 515  :         //else
; 516  :         typename mpl::eval_if<is_enum< T >,
; 517  :             mpl::identity<detail::save_enum_type<Archive> >,
; 518  :         //else
; 519  :         typename mpl::eval_if<is_array< T >,
; 520  :             mpl::identity<detail::save_array_type<Archive> >,
; 521  :         //else
; 522  :             mpl::identity<detail::save_non_pointer_type<Archive> >
; 523  :         >
; 524  :         >
; 525  :         >::type typex;
; 526  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::serialization::nvp<boost::serialization::collection_size_type> >
	add	esp, 8

; 527  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@archive@boost@@YAXAAVtext_oarchive@01@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@1@@Z ENDP ; boost::archive::save<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@PBVitem_version_type@serialization@boost@@@std@@YA$$QAPBVitem_version_type@serialization@boost@@AAPBV123@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PBVitem_version_type@serialization@boost@@@std@@YA$$QAPBVitem_version_type@serialization@boost@@AAPBV123@@Z PROC ; std::forward<boost::serialization::item_version_type const *>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@PBVitem_version_type@serialization@boost@@@std@@YA$$QAPBVitem_version_type@serialization@boost@@AAPBV123@@Z ENDP ; std::forward<boost::serialization::item_version_type const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPBV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPBV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPBV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0U?$integral_constant@_N$00@std@@@_Any_tag@std@@QAE@$$QAU?$integral_constant@_N$00@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0U?$integral_constant@_N$00@std@@@_Any_tag@std@@QAE@$$QAU?$integral_constant@_N$00@1@@Z PROC ; std::_Any_tag::_Any_tag<std::integral_constant<bool,1> >, COMDAT
; _this$ = ecx

; 554  : 		constexpr _Any_tag(_Ty&&) _NOEXCEPT {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$integral_constant@_N$00@std@@@_Any_tag@std@@QAE@$$QAU?$integral_constant@_N$00@1@@Z ENDP ; std::_Any_tag::_Any_tag<std::integral_constant<bool,1> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
_TEXT	SEGMENT
tv80 = -224						; size = 4
__Next$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninitialized_move_al_unchecked1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z PROC ; std::_Uninitialized_move_al_unchecked1<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 273  : 	{	// move [_First, _Last) to raw _Dest, using _Al, no special optimization

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninitialized_move_al_unchecked1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 274  : 	_FwdIt _Next = _Dest;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 275  : 
; 276  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 277  : 	for (; _First != _Last; ++_Dest, (void)++_First)

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	eax, DWORD PTR __Dest$[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR __Dest$[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR __First$[ebp], ecx
$LN4@Uninitiali:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Uninitiali

; 278  : 		_Al.construct(_Unfancy(_Dest), _STD move(*_First));

	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	mov	DWORD PTR tv80[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv80[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:
	jmp	SHORT $LN7@Uninitiali
__catch$??$_Uninitialized_move_al_unchecked1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z$0:

; 279  : 	_CATCH_ALL
; 280  : 	_Destroy_range(_Next, _Dest, _Al);

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
	add	esp, 12					; 0000000cH

; 281  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 282  : 	_CATCH_END

	mov	eax, $LN10@Uninitiali
	ret	0
$LN7@Uninitiali:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Uninitialized_move_al_unchecked1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z$1
$LN10@Uninitiali:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninitialized_move_al_unchecked1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z$1:

; 283  : 
; 284  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]
$LN6@Uninitiali:

; 285  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninitialized_move_al_unchecked1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-228]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninitialized_move_al_unchecked1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_move_al_unchecked1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked1<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Ptr_move_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_move_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::_Ptr_move_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 809  : 	{	// return pointer move optimization category for pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 810  : 	return {};

	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	al, BYTE PTR $T1[ebp]

; 811  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_move_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::_Ptr_move_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iarchive.hpp
;	COMDAT ??$load_override@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@2@@Z PROC ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >, COMDAT
; _this$ = ecx

; 69   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->detail_common_iarchive::load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load_override@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@2@@Z ENDP ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ??$load_override@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<boost::serialization::item_version_type> const >, COMDAT
; _this$ = ecx

; 65   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   :         archive::load(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	push	eax
	call	??$load@Vtext_iarchive@archive@boost@@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@archive@boost@@YAXAAVtext_iarchive@01@ABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@1@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::item_version_type> const >
	add	esp, 8

; 67   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<boost::serialization::item_version_type> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ??$load_override@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<boost::serialization::collection_size_type> const >, COMDAT
; _this$ = ecx

; 65   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   :         archive::load(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	push	eax
	call	??$load@Vtext_iarchive@archive@boost@@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@archive@boost@@YAXAAVtext_iarchive@01@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@1@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::serialization::nvp<boost::serialization::collection_size_type> const >
	add	esp, 8

; 67   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<boost::serialization::collection_size_type> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ??$save_override@$$CBU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > const >, COMDAT
; _this$ = ecx

; 69   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         archive::save(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	push	eax
	call	??$save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@archive@boost@@YAXAAVtext_oarchive@01@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@1@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > const >
	add	esp, 8

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ??$save_override@$$CBU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::nvp<boost::serialization::item_version_type const > const >, COMDAT
; _this$ = ecx

; 69   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         archive::save(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	push	eax
	call	??$save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@archive@boost@@YAXAAVtext_oarchive@01@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@1@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::item_version_type const > const >
	add	esp, 8

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::nvp<boost::serialization::item_version_type const > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ??$save_override@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::nvp<boost::serialization::collection_size_type> const >, COMDAT
; _this$ = ecx

; 69   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         archive::save(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	push	eax
	call	??$save@Vtext_oarchive@archive@boost@@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@archive@boost@@YAXAAVtext_oarchive@01@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@1@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::serialization::nvp<boost::serialization::collection_size_type> const >
	add	esp, 8

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::nvp<boost::serialization::collection_size_type> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$?0AAPBDPBVitem_version_type@serialization@boost@@X$0A@@?$pair@PBDPBVitem_version_type@serialization@boost@@@std@@QAE@AAPBD$$QAPBVitem_version_type@serialization@boost@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAPBDPBVitem_version_type@serialization@boost@@X$0A@@?$pair@PBDPBVitem_version_type@serialization@boost@@@std@@QAE@AAPBD$$QAPBVitem_version_type@serialization@boost@@@Z PROC ; std::pair<char const *,boost::serialization::item_version_type const *>::pair<char const *,boost::serialization::item_version_type const *><char const * &,boost::serialization::item_version_type const *,void,0>, COMDAT
; _this$ = ecx

; 172  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAPBD@std@@YAAAPBDAAPBD@Z	; std::forward<char const * &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 171  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@PBVitem_version_type@serialization@boost@@@std@@YA$$QAPBVitem_version_type@serialization@boost@@AAPBV123@@Z ; std::forward<boost::serialization::item_version_type const *>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx

; 173  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAPBDPBVitem_version_type@serialization@boost@@X$0A@@?$pair@PBDPBVitem_version_type@serialization@boost@@@std@@QAE@AAPBD$$QAPBVitem_version_type@serialization@boost@@@Z ENDP ; std::pair<char const *,boost::serialization::item_version_type const *>::pair<char const *,boost::serialization::item_version_type const *><char const * &,boost::serialization::item_version_type const *,void,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$?0AAPBDPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@X$0A@@?$pair@PBDPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAPBD$$QAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAPBDPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@X$0A@@?$pair@PBDPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAPBD$$QAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::pair<char const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>::pair<char const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *><char const * &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,void,0>, COMDAT
; _this$ = ecx

; 172  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAPBD@std@@YAAAPBDAAPBD@Z	; std::forward<char const * &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 171  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPBV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx

; 173  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAPBDPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@X$0A@@?$pair@PBDPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAPBD$$QAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::pair<char const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>::pair<char const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *><char const * &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,void,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$?0AAPBDPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@X$0A@@?$pair@PBDPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAPBD$$QAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAPBDPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@X$0A@@?$pair@PBDPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAPBD$$QAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::pair<char const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>::pair<char const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *><char const * &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,void,0>, COMDAT
; _this$ = ecx

; 172  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAPBD@std@@YAAAPBDAAPBD@Z	; std::forward<char const * &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 171  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx

; 173  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAPBDPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@X$0A@@?$pair@PBDPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAPBD$$QAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::pair<char const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>::pair<char const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *><char const * &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,void,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_default_fill_n1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
tv77 = -224						; size = 4
__Next$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Uninitialized_default_fill_n1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Uninitialized_default_fill_n1<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,unsigned int,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 453  : 	{	// value-initialize _Count objects to raw _First, using _Al, no special optimization

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninitialized_default_fill_n1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 454  : 	_FwdIt _Next = _First;

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 455  : 
; 456  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 457  : 	for (; 0 < _Count; --_Count, (void)++_First)

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, 1
	mov	DWORD PTR __Count$[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR __First$[ebp], ecx
$LN4@Uninitiali:
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@Uninitiali

; 458  : 		_Al.construct(_Unfancy(_First));

	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	mov	DWORD PTR tv77[ebp], eax
	mov	ecx, DWORD PTR tv77[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:
	jmp	SHORT $LN7@Uninitiali
__catch$??$_Uninitialized_default_fill_n1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z$0:

; 459  : 	_CATCH_ALL
; 460  : 	_Destroy_range(_Next, _First, _Al);

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
	add	esp, 12					; 0000000cH

; 461  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 462  : 	_CATCH_END

	mov	eax, $LN10@Uninitiali
	ret	0
$LN7@Uninitiali:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN6@Uninitiali
$LN10@Uninitiali:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN6@Uninitiali:

; 463  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninitialized_default_fill_n1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-228]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninitialized_default_fill_n1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_default_fill_n1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Uninitialized_default_fill_n1<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,unsigned int,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@PAVcollection_size_type@serialization@boost@@@std@@YA$$QAPAVcollection_size_type@serialization@boost@@AAPAV123@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAVcollection_size_type@serialization@boost@@@std@@YA$$QAPAVcollection_size_type@serialization@boost@@AAPAV123@@Z PROC ; std::forward<boost::serialization::collection_size_type *>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@PAVcollection_size_type@serialization@boost@@@std@@YA$$QAPAVcollection_size_type@serialization@boost@@AAPAV123@@Z ENDP ; std::forward<boost::serialization::collection_size_type *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@PAVitem_version_type@serialization@boost@@@std@@YA$$QAPAVitem_version_type@serialization@boost@@AAPAV123@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAVitem_version_type@serialization@boost@@@std@@YA$$QAPAVitem_version_type@serialization@boost@@AAPAV123@@Z PROC ; std::forward<boost::serialization::item_version_type *>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@PAVitem_version_type@serialization@boost@@@std@@YA$$QAPAVitem_version_type@serialization@boost@@AAPAV123@@Z ENDP ; std::forward<boost::serialization::item_version_type *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAPBD@std@@YAAAPBDAAPBD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPBD@std@@YAAAPBDAAPBD@Z PROC		; std::forward<char const * &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAPBD@std@@YAAAPBDAAPBD@Z ENDP		; std::forward<char const * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Rechecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPAV10@PAV10@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPAV10@PAV10@@Z PROC ; std::_Rechecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT

; 457  : 	{	// reset checked from unchecked, generic

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 458  : 	_Dest = _Src;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx

; 459  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]

; 460  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Rechecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPAV10@PAV10@@Z ENDP ; std::_Rechecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -221						; size = 1
$T2 = -209						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move_al_unchecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move_al_unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 301  : 	{	// move [_First, _Last) to raw _Dest, using _Al, choose optimization

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 302  : 	typedef decltype(_STD move(*_First)) _Src_type; // TRANSITION MODULES VSO#222794
; 303  : 	return (_Uninitialized_move_al_unchecked1(_First, _Last, _Dest, _Al,

	lea	eax, DWORD PTR __Dest$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_move_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::_Ptr_move_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	push	ecx
	mov	ecx, esp
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??$?0U?$integral_constant@_N$00@std@@@_Any_tag@std@@QAE@$$QAU?$integral_constant@_N$00@1@@Z ; std::_Any_tag::_Any_tag<std::integral_constant<bool,1> >
	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move_al_unchecked1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked1<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 24					; 00000018H

; 304  : 		_Ptr_move_cat(_First, _Dest),
; 305  : 		_Uses_default_construct_t<_Alloc, decltype(_Unfancy(_Dest)), _Src_type>()));
; 306  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move_al_unchecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Unchecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z PROC ; std::_Unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT

; 427  : 	{	// construct unchecked from checked, generic

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 428  : 	return (_Src);

	mov	eax, DWORD PTR __Src$[ebp]

; 429  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unchecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z ENDP ; std::_Unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load_override@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@2@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >, COMDAT
; _this$ = ecx

; 81   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 82   :         basic_text_iarchive<Archive>::load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load_override@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@2@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >

; 83   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@2@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iarchive.hpp
;	COMDAT ??$load_override@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@2@@Z PROC ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<boost::serialization::item_version_type> const >, COMDAT
; _this$ = ecx

; 69   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->detail_common_iarchive::load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load_override@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<boost::serialization::item_version_type> const >

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@2@@Z ENDP ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<boost::serialization::item_version_type> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iarchive.hpp
;	COMDAT ??$load_override@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@2@@Z PROC ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<boost::serialization::collection_size_type> const >, COMDAT
; _this$ = ecx

; 69   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->detail_common_iarchive::load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load_override@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<boost::serialization::collection_size_type> const >

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@2@@Z ENDP ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<boost::serialization::collection_size_type> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ??$save_override@$$CBU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@2@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > const >, COMDAT
; _this$ = ecx

; 82   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 83   :         this->detail_common_oarchive::save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$save_override@$$CBU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > const >

; 84   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@2@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??$save_construct_data@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$save_construct_data@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z PROC ; boost::serialization::save_construct_data<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 77   : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 78   :     // default is to save no data because default constructor
; 79   :     // requires no arguments.
; 80   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$save_construct_data@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ENDP ; boost::serialization::save_construct_data<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ??$save_override@$$CBU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@2@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::nvp<boost::serialization::item_version_type const > const >, COMDAT
; _this$ = ecx

; 82   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 83   :         this->detail_common_oarchive::save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$save_override@$$CBU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::nvp<boost::serialization::item_version_type const > const >

; 84   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@2@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::nvp<boost::serialization::item_version_type const > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ??$save_override@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@2@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::nvp<boost::serialization::collection_size_type> const >, COMDAT
; _this$ = ecx

; 82   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 83   :         this->detail_common_oarchive::save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$save_override@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::nvp<boost::serialization::collection_size_type> const >

; 84   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@2@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::nvp<boost::serialization::collection_size_type> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_default_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_default_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_default_fill_n<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,unsigned int,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 479  : 	{	// value-initialize _Count objects to raw _First, using _Al

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 480  : 	typedef _Iter_value_t<_FwdIt> _Ty;
; 481  : 	_Uninitialized_default_fill_n1(_First, _Count, _Al,

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninitialized_default_fill_n1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Uninitialized_default_fill_n1<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,unsigned int,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 16					; 00000010H

; 482  : 		typename conjunction<
; 483  : 			is_pointer<_FwdIt>,
; 484  : 			is_scalar<_Ty>,
; 485  : 			negation<is_volatile<_Ty>>,
; 486  : 			negation<is_member_pointer<_Ty>>,
; 487  : 			_Uses_default_construct<_Alloc, decltype(_Unfancy(_First))>>::type());
; 488  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_default_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_default_fill_n<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,unsigned int,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$?0AAPBDPAVcollection_size_type@serialization@boost@@X$0A@@?$pair@PBDPAVcollection_size_type@serialization@boost@@@std@@QAE@AAPBD$$QAPAVcollection_size_type@serialization@boost@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAPBDPAVcollection_size_type@serialization@boost@@X$0A@@?$pair@PBDPAVcollection_size_type@serialization@boost@@@std@@QAE@AAPBD$$QAPAVcollection_size_type@serialization@boost@@@Z PROC ; std::pair<char const *,boost::serialization::collection_size_type *>::pair<char const *,boost::serialization::collection_size_type *><char const * &,boost::serialization::collection_size_type *,void,0>, COMDAT
; _this$ = ecx

; 172  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAPBD@std@@YAAAPBDAAPBD@Z	; std::forward<char const * &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 171  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@PAVcollection_size_type@serialization@boost@@@std@@YA$$QAPAVcollection_size_type@serialization@boost@@AAPAV123@@Z ; std::forward<boost::serialization::collection_size_type *>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx

; 173  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAPBDPAVcollection_size_type@serialization@boost@@X$0A@@?$pair@PBDPAVcollection_size_type@serialization@boost@@@std@@QAE@AAPBD$$QAPAVcollection_size_type@serialization@boost@@@Z ENDP ; std::pair<char const *,boost::serialization::collection_size_type *>::pair<char const *,boost::serialization::collection_size_type *><char const * &,boost::serialization::collection_size_type *,void,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$?0AAPBDPAVitem_version_type@serialization@boost@@X$0A@@?$pair@PBDPAVitem_version_type@serialization@boost@@@std@@QAE@AAPBD$$QAPAVitem_version_type@serialization@boost@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAPBDPAVitem_version_type@serialization@boost@@X$0A@@?$pair@PBDPAVitem_version_type@serialization@boost@@@std@@QAE@AAPBD$$QAPAVitem_version_type@serialization@boost@@@Z PROC ; std::pair<char const *,boost::serialization::item_version_type *>::pair<char const *,boost::serialization::item_version_type *><char const * &,boost::serialization::item_version_type *,void,0>, COMDAT
; _this$ = ecx

; 172  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAPBD@std@@YAAAPBDAAPBD@Z	; std::forward<char const * &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 171  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@PAVitem_version_type@serialization@boost@@@std@@YA$$QAPAVitem_version_type@serialization@boost@@AAPAV123@@Z ; std::forward<boost::serialization::item_version_type *>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx

; 173  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAPBDPAVitem_version_type@serialization@boost@@X$0A@@?$pair@PBDPAVitem_version_type@serialization@boost@@@std@@QAE@AAPBD$$QAPAVitem_version_type@serialization@boost@@@Z ENDP ; std::pair<char const *,boost::serialization::item_version_type *>::pair<char const *,boost::serialization::item_version_type *><char const * &,boost::serialization::item_version_type *,void,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 313  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 314  : 		// note: only called internally from elsewhere in the STL, debug checks
; 315  : 		// and deprecation warnings omitted
; 316  : 	return (_Rechecked(_Dest,

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z ; std::_Unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z ; std::_Unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z ; std::_Unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
	add	esp, 4
	push	eax
	call	??$_Uninitialized_move_al_unchecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z ; std::_Uninitialized_move_al_unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPAV10@PAV10@@Z ; std::_Rechecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 317  : 		_Uninitialized_move_al_unchecked(_Unchecked(_First), _Unchecked(_Last),
; 318  : 			_Unchecked(_Dest), _Al)));
; 319  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_iarchive.hpp
;	COMDAT ??$?5$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@ABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?5$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@ABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z PROC ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >, COMDAT
; _this$ = ecx

; 67   :     Archive & operator>>(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 68   :         this->This()->load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	mov	ecx, eax
	call	??$load_override@$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@2@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >

; 69   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This

; 70   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?5$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@ABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z ENDP ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ?value@?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?value@?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::value, COMDAT
; _this$ = ecx

; 52   :     T & value() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 53   :         return *(this->second);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 54   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?value@?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ??0?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QAE@PBDAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
_name_$ = 8						; size = 4
_t$ = 12						; size = 4
??0?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QAE@PBDAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 47   :     {}

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 46   :         std::pair<const char *, T *>(name_, & t)

	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	lea	edx, DWORD PTR _name_$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0AAPBDPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@X$0A@@?$pair@PBDPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAPBD$$QAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::pair<char const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>::pair<char const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *><char const * &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,void,0>

; 47   :     {}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QAE@PBDAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ??$make_nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@YA?BU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@PBDAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_name$ = 12						; size = 4
_t$ = 16						; size = 4
??$make_nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@YA?BU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@PBDAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::serialization::make_nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 79   : const nvp< T > make_nvp(const char * name, T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 80   :     return nvp< T >(name, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QAE@PBDAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 81   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$make_nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@YA?BU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@PBDAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::serialization::make_nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load_override@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@2@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<boost::serialization::item_version_type> const >, COMDAT
; _this$ = ecx

; 81   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 82   :         basic_text_iarchive<Archive>::load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load_override@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@2@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<boost::serialization::item_version_type> const >

; 83   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@2@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<boost::serialization::item_version_type> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load_override@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@2@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<boost::serialization::collection_size_type> const >, COMDAT
; _this$ = ecx

; 81   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 82   :         basic_text_iarchive<Archive>::load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load_override@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@2@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<boost::serialization::collection_size_type> const >

; 83   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@2@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<boost::serialization::collection_size_type> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	mov	ecx, eax
	call	??$save_override@$$CBU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@2@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > const >

; 71   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?6U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ?const_value@?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?const_value@?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::const_value, COMDAT
; _this$ = ecx

; 56   :     const T & const_value() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 57   :         return *(this->second);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 58   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?const_value@?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::const_value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ??0?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QAE@PBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
_name_$ = 8						; size = 4
_t$ = 12						; size = 4
??0?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QAE@PBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >, COMDAT
; _this$ = ecx

; 47   :     {}

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 46   :         std::pair<const char *, T *>(name_, & t)

	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	lea	edx, DWORD PTR _name_$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0AAPBDPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@X$0A@@?$pair@PBDPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAPBD$$QAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::pair<char const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>::pair<char const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *><char const * &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,void,0>

; 47   :     {}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QAE@PBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ??$make_nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@YA?BU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@PBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_name$ = 12						; size = 4
_t$ = 16						; size = 4
??$make_nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@YA?BU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@PBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::serialization::make_nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >, COMDAT

; 79   : const nvp< T > make_nvp(const char * name, T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 80   :     return nvp< T >(name, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@QAE@PBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 81   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$make_nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@YA?BU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@PBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::serialization::make_nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??$save_construct_data_adl@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
_TEXT	SEGMENT
_v$ = -8						; size = 4
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$save_construct_data_adl@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z PROC ; boost::serialization::save_construct_data_adl<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 134  : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 135  :     // see above
; 136  :     const version_type v(file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	lea	ecx, DWORD PTR _v$[ebp]
	call	??0version_type@serialization@boost@@QAE@I@Z ; boost::serialization::version_type::version_type

; 137  :     save_construct_data(ar, t, v);

	lea	ecx, DWORD PTR _v$[ebp]
	call	??Bversion_type@serialization@boost@@QBEABIXZ ; boost::serialization::version_type::operator unsigned int const &
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$save_construct_data@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; boost::serialization::save_construct_data<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 12					; 0000000cH

; 138  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@save_const
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@save_const:
	DD	1
	DD	$LN4@save_const
$LN4@save_const:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@save_const
$LN3@save_const:
	DB	118					; 00000076H
	DB	0
??$save_construct_data_adl@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ENDP ; boost::serialization::save_construct_data_adl<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::serialization::nvp<boost::serialization::item_version_type const > >, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	mov	ecx, eax
	call	??$save_override@$$CBU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@2@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::nvp<boost::serialization::item_version_type const > const >

; 71   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?6U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::serialization::nvp<boost::serialization::item_version_type const > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ?const_value@?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@QBEABVitem_version_type@23@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?const_value@?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@QBEABVitem_version_type@23@XZ PROC ; boost::serialization::nvp<boost::serialization::item_version_type const >::const_value, COMDAT
; _this$ = ecx

; 56   :     const T & const_value() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 57   :         return *(this->second);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 58   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?const_value@?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@QBEABVitem_version_type@23@XZ ENDP ; boost::serialization::nvp<boost::serialization::item_version_type const >::const_value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ??0?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@QAE@PBDABVitem_version_type@12@@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
_name_$ = 8						; size = 4
_t$ = 12						; size = 4
??0?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@QAE@PBDABVitem_version_type@12@@Z PROC ; boost::serialization::nvp<boost::serialization::item_version_type const >::nvp<boost::serialization::item_version_type const >, COMDAT
; _this$ = ecx

; 47   :     {}

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 46   :         std::pair<const char *, T *>(name_, & t)

	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	lea	edx, DWORD PTR _name_$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0AAPBDPBVitem_version_type@serialization@boost@@X$0A@@?$pair@PBDPBVitem_version_type@serialization@boost@@@std@@QAE@AAPBD$$QAPBVitem_version_type@serialization@boost@@@Z ; std::pair<char const *,boost::serialization::item_version_type const *>::pair<char const *,boost::serialization::item_version_type const *><char const * &,boost::serialization::item_version_type const *,void,0>

; 47   :     {}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@QAE@PBDABVitem_version_type@12@@Z ENDP ; boost::serialization::nvp<boost::serialization::item_version_type const >::nvp<boost::serialization::item_version_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ??$make_nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@YA?BU?$nvp@$$CBVitem_version_type@serialization@boost@@@01@PBDABVitem_version_type@01@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_name$ = 12						; size = 4
_t$ = 16						; size = 4
??$make_nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@YA?BU?$nvp@$$CBVitem_version_type@serialization@boost@@@01@PBDABVitem_version_type@01@@Z PROC ; boost::serialization::make_nvp<boost::serialization::item_version_type const >, COMDAT

; 79   : const nvp< T > make_nvp(const char * name, T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 80   :     return nvp< T >(name, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@QAE@PBDABVitem_version_type@12@@Z ; boost::serialization::nvp<boost::serialization::item_version_type const >::nvp<boost::serialization::item_version_type const >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 81   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$make_nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@YA?BU?$nvp@$$CBVitem_version_type@serialization@boost@@@01@PBDABVitem_version_type@01@@Z ENDP ; boost::serialization::make_nvp<boost::serialization::item_version_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::serialization::nvp<boost::serialization::collection_size_type> >, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	mov	ecx, eax
	call	??$save_override@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@2@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::serialization::nvp<boost::serialization::collection_size_type> const >

; 71   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?6U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::serialization::nvp<boost::serialization::collection_size_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT
; _this$ = ecx

; 1658 : 		{	// move initializing [_First, _Last), using allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1659 : 		return (_Uninitialized_move(_First, _Last,

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 16					; 00000010H

; 1660 : 			_Ptr, this->_Getal()));
; 1661 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\collections_load_imp.hpp
;	COMDAT ??$collection_load_impl@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_iarchive@archive@2@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@Vitem_version_type@12@@Z
_TEXT	SEGMENT
tv84 = -292						; size = 4
tv140 = -288						; size = 4
tv138 = -288						; size = 4
tv83 = -288						; size = 4
tv141 = -284						; size = 4
tv80 = -284						; size = 4
tv69 = -284						; size = 4
$T2 = -276						; size = 8
$T3 = -260						; size = 12
$T4 = -240						; size = 12
_hint$ = -28						; size = 12
__$EHRec$ = -12						; size = 12
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_count$ = 16						; size = 4
___formal$ = 20						; size = 4
??$collection_load_impl@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_iarchive@archive@2@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@Vitem_version_type@12@@Z PROC ; boost::serialization::stl::collection_load_impl<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 67   : ){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$collection_load_impl@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_iarchive@archive@2@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@Vitem_version_type@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 68   :     t.resize(count);

	lea	ecx, DWORD PTR _count$[ebp]
	call	??Bcollection_size_type@serialization@boost@@QAEAAIXZ ; boost::serialization::collection_size_type::operator unsigned int &
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	call	?resize@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::resize

; 69   :     typename T::iterator hint;

	lea	ecx, DWORD PTR _hint$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 70   :     hint = t.begin();

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	mov	DWORD PTR tv69[ebp], eax
	mov	ecx, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv138[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv138[ebp]
	push	edx
	lea	ecx, DWORD PTR _hint$[ebp]
	call	??4?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
$LN2@collection:

; 71   :     while(count-- > 0){

	lea	ecx, DWORD PTR _count$[ebp]
	call	??Bcollection_size_type@serialization@boost@@QAEAAIXZ ; boost::serialization::collection_size_type::operator unsigned int &
	mov	DWORD PTR tv80[ebp], eax
	mov	eax, DWORD PTR tv80[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv83[ebp], ecx
	mov	edx, DWORD PTR tv80[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	ecx, DWORD PTR tv80[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR tv83[ebp], 0
	jbe	SHORT $LN5@collection
	mov	DWORD PTR tv84[ebp], 1
	jmp	SHORT $LN6@collection
$LN5@collection:
	mov	DWORD PTR tv84[ebp], 0
$LN6@collection:
	cmp	DWORD PTR tv84[ebp], 0
	je	SHORT $LN3@collection

; 72   :         ar >> boost::serialization::make_nvp("item", *hint++);

	push	0
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR _hint$[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
	mov	DWORD PTR tv141[ebp], eax
	mov	ecx, DWORD PTR tv141[ebp]
	mov	DWORD PTR tv140[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv140[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
	push	eax
	push	OFFSET ??_C@_04NHONDGDE@item?$AA@
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??$make_nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@YA?BU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@PBDAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::serialization::make_nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?5$$CBU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@ABU?$nvp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ

; 73   :     }

	jmp	$LN2@collection
$LN3@collection:

; 74   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _hint$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@collection
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN13@collection:
	DD	1
	DD	$LN12@collection
$LN12@collection:
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN10@collection
$LN10@collection:
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$collection_load_impl@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_iarchive@archive@2@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@Vitem_version_type@12@@Z$0:
	lea	ecx, DWORD PTR _hint$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$collection_load_impl@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_iarchive@archive@2@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@Vitem_version_type@12@@Z$1:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$collection_load_impl@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_iarchive@archive@2@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@Vitem_version_type@12@@Z$2:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$collection_load_impl@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_iarchive@archive@2@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@Vitem_version_type@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$collection_load_impl@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_iarchive@archive@2@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@Vitem_version_type@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$collection_load_impl@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_iarchive@archive@2@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@Vitem_version_type@12@@Z ENDP ; boost::serialization::stl::collection_load_impl<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_iarchive.hpp
;	COMDAT ??$?5$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@ABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?5$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@ABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@Z PROC ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::serialization::nvp<boost::serialization::item_version_type> const >, COMDAT
; _this$ = ecx

; 67   :     Archive & operator>>(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 68   :         this->This()->load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	mov	ecx, eax
	call	??$load_override@$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@2@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<boost::serialization::item_version_type> const >

; 69   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This

; 70   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?5$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@ABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@Z ENDP ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::serialization::nvp<boost::serialization::item_version_type> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ?value@?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@QBEAAVitem_version_type@23@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?value@?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@QBEAAVitem_version_type@23@XZ PROC ; boost::serialization::nvp<boost::serialization::item_version_type>::value, COMDAT
; _this$ = ecx

; 52   :     T & value() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 53   :         return *(this->second);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 54   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?value@?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@QBEAAVitem_version_type@23@XZ ENDP ; boost::serialization::nvp<boost::serialization::item_version_type>::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ??0?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@QAE@PBDAAVitem_version_type@12@@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
_name_$ = 8						; size = 4
_t$ = 12						; size = 4
??0?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@QAE@PBDAAVitem_version_type@12@@Z PROC ; boost::serialization::nvp<boost::serialization::item_version_type>::nvp<boost::serialization::item_version_type>, COMDAT
; _this$ = ecx

; 47   :     {}

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 46   :         std::pair<const char *, T *>(name_, & t)

	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	lea	edx, DWORD PTR _name_$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0AAPBDPAVitem_version_type@serialization@boost@@X$0A@@?$pair@PBDPAVitem_version_type@serialization@boost@@@std@@QAE@AAPBD$$QAPAVitem_version_type@serialization@boost@@@Z ; std::pair<char const *,boost::serialization::item_version_type *>::pair<char const *,boost::serialization::item_version_type *><char const * &,boost::serialization::item_version_type *,void,0>

; 47   :     {}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@QAE@PBDAAVitem_version_type@12@@Z ENDP ; boost::serialization::nvp<boost::serialization::item_version_type>::nvp<boost::serialization::item_version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ??$make_nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@YA?BU?$nvp@Vitem_version_type@serialization@boost@@@01@PBDAAVitem_version_type@01@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_name$ = 12						; size = 4
_t$ = 16						; size = 4
??$make_nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@YA?BU?$nvp@Vitem_version_type@serialization@boost@@@01@PBDAAVitem_version_type@01@@Z PROC ; boost::serialization::make_nvp<boost::serialization::item_version_type>, COMDAT

; 79   : const nvp< T > make_nvp(const char * name, T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 80   :     return nvp< T >(name, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@QAE@PBDAAVitem_version_type@12@@Z ; boost::serialization::nvp<boost::serialization::item_version_type>::nvp<boost::serialization::item_version_type>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 81   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$make_nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@YA?BU?$nvp@Vitem_version_type@serialization@boost@@@01@PBDAAVitem_version_type@01@@Z ENDP ; boost::serialization::make_nvp<boost::serialization::item_version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_iarchive.hpp
;	COMDAT ??$?5$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?5$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z PROC ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::serialization::nvp<boost::serialization::collection_size_type> const >, COMDAT
; _this$ = ecx

; 67   :     Archive & operator>>(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 68   :         this->This()->load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	mov	ecx, eax
	call	??$load_override@$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@2@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::serialization::nvp<boost::serialization::collection_size_type> const >

; 69   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This

; 70   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?5$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z ENDP ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::serialization::nvp<boost::serialization::collection_size_type> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ?const_value@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QBEABVcollection_size_type@23@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?const_value@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QBEABVcollection_size_type@23@XZ PROC ; boost::serialization::nvp<boost::serialization::collection_size_type>::const_value, COMDAT
; _this$ = ecx

; 56   :     const T & const_value() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 57   :         return *(this->second);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 58   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?const_value@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QBEABVcollection_size_type@23@XZ ENDP ; boost::serialization::nvp<boost::serialization::collection_size_type>::const_value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ?value@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QBEAAVcollection_size_type@23@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?value@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QBEAAVcollection_size_type@23@XZ PROC ; boost::serialization::nvp<boost::serialization::collection_size_type>::value, COMDAT
; _this$ = ecx

; 52   :     T & value() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 53   :         return *(this->second);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 54   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?value@?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QBEAAVcollection_size_type@23@XZ ENDP ; boost::serialization::nvp<boost::serialization::collection_size_type>::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ??0?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QAE@PBDAAVcollection_size_type@12@@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
_name_$ = 8						; size = 4
_t$ = 12						; size = 4
??0?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QAE@PBDAAVcollection_size_type@12@@Z PROC ; boost::serialization::nvp<boost::serialization::collection_size_type>::nvp<boost::serialization::collection_size_type>, COMDAT
; _this$ = ecx

; 47   :     {}

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 46   :         std::pair<const char *, T *>(name_, & t)

	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	lea	edx, DWORD PTR _name_$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0AAPBDPAVcollection_size_type@serialization@boost@@X$0A@@?$pair@PBDPAVcollection_size_type@serialization@boost@@@std@@QAE@AAPBD$$QAPAVcollection_size_type@serialization@boost@@@Z ; std::pair<char const *,boost::serialization::collection_size_type *>::pair<char const *,boost::serialization::collection_size_type *><char const * &,boost::serialization::collection_size_type *,void,0>

; 47   :     {}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QAE@PBDAAVcollection_size_type@12@@Z ENDP ; boost::serialization::nvp<boost::serialization::collection_size_type>::nvp<boost::serialization::collection_size_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\nvp.hpp
;	COMDAT ??$make_nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@YA?BU?$nvp@Vcollection_size_type@serialization@boost@@@01@PBDAAVcollection_size_type@01@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_name$ = 12						; size = 4
_t$ = 16						; size = 4
??$make_nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@YA?BU?$nvp@Vcollection_size_type@serialization@boost@@@01@PBDAAVcollection_size_type@01@@Z PROC ; boost::serialization::make_nvp<boost::serialization::collection_size_type>, COMDAT

; 79   : const nvp< T > make_nvp(const char * name, T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 80   :     return nvp< T >(name, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@QAE@PBDAAVcollection_size_type@12@@Z ; boost::serialization::nvp<boost::serialization::collection_size_type>::nvp<boost::serialization::collection_size_type>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 81   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$make_nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@YA?BU?$nvp@Vcollection_size_type@serialization@boost@@@01@PBDAAVcollection_size_type@01@@Z ENDP ; boost::serialization::make_nvp<boost::serialization::collection_size_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\collections_save_imp.hpp
;	COMDAT ??$save_collection@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_oarchive@archive@2@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@@Z
_TEXT	SEGMENT
tv128 = -316						; size = 4
tv157 = -312						; size = 4
tv95 = -312						; size = 4
tv92 = -308						; size = 4
tv87 = -308						; size = 4
$T2 = -300						; size = 8
$T3 = -284						; size = 12
$T4 = -264						; size = 8
$T5 = -248						; size = 8
_it$ = -40						; size = 12
_item_version$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_ar$ = 8						; size = 4
_s$ = 12						; size = 4
_count$ = 16						; size = 4
??$save_collection@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_oarchive@archive@2@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@@Z PROC ; boost::serialization::stl::save_collection<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 41   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$save_collection@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_oarchive@archive@2@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 42   :     ar << BOOST_SERIALIZATION_NVP(count);

	lea	eax, DWORD PTR _count$[ebp]
	push	eax
	push	OFFSET ??_C@_05IOMEMJEC@count?$AA@
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	call	??$make_nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@YA?BU?$nvp@Vcollection_size_type@serialization@boost@@@01@PBDAAVcollection_size_type@01@@Z ; boost::serialization::make_nvp<boost::serialization::collection_size_type>
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?6U?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::serialization::nvp<boost::serialization::collection_size_type> >

; 43   :     // record number of elements
; 44   :     const item_version_type item_version(

	push	0
	lea	ecx, DWORD PTR _item_version$[ebp]
	call	??0item_version_type@serialization@boost@@QAE@I@Z ; boost::serialization::item_version_type::item_version_type

; 45   :         version<typename Container::value_type>::value
; 46   :     );
; 47   :     #if 0
; 48   :         boost::archive::library_version_type library_version(
; 49   :             ar.get_library_version()
; 50   :         );
; 51   :         if(boost::archive::library_version_type(3) < library_version){
; 52   :             ar << BOOST_SERIALIZATION_NVP(item_version);
; 53   :         }
; 54   :     #else
; 55   :         ar << BOOST_SERIALIZATION_NVP(item_version);

	lea	eax, DWORD PTR _item_version$[ebp]
	push	eax
	push	OFFSET ??_C@_0N@EDCCFHGA@item_version?$AA@
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	??$make_nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@YA?BU?$nvp@$$CBVitem_version_type@serialization@boost@@@01@PBDABVitem_version_type@01@@Z ; boost::serialization::make_nvp<boost::serialization::item_version_type const >
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?6U?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABU?$nvp@$$CBVitem_version_type@serialization@boost@@@serialization@3@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::serialization::nvp<boost::serialization::item_version_type const > >

; 56   :     #endif
; 57   : 
; 58   :     typename Container::const_iterator it = s.begin();

	lea	eax, DWORD PTR _it$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$LN2@save_colle:

; 59   :     while(count-- > 0){

	lea	ecx, DWORD PTR _count$[ebp]
	call	??Bcollection_size_type@serialization@boost@@QAEAAIXZ ; boost::serialization::collection_size_type::operator unsigned int &
	mov	DWORD PTR tv92[ebp], eax
	mov	eax, DWORD PTR tv92[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv95[ebp], ecx
	mov	edx, DWORD PTR tv92[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR tv95[ebp], 0
	jbe	SHORT $LN5@save_colle
	mov	DWORD PTR tv128[ebp], 1
	jmp	SHORT $LN6@save_colle
$LN5@save_colle:
	mov	DWORD PTR tv128[ebp], 0
$LN6@save_colle:
	cmp	DWORD PTR tv128[ebp], 0
	je	$LN3@save_colle

; 60   :         // note borland emits a no-op without the explicit namespace
; 61   :         boost::serialization::save_construct_data_adl(

	lea	ecx, DWORD PTR _item_version$[ebp]
	call	??Bitem_version_type@serialization@boost@@QBEIXZ ; boost::serialization::item_version_type::operator unsigned int
	push	eax
	lea	ecx, DWORD PTR _it$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
	push	eax
	mov	eax, DWORD PTR _ar$[ebp]
	push	eax
	call	??$save_construct_data_adl@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; boost::serialization::save_construct_data_adl<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 12					; 0000000cH

; 62   :             ar, 
; 63   :             &(*it), 
; 64   :             item_version
; 65   :         );
; 66   :         ar << boost::serialization::make_nvp("item", *it++);

	push	0
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
	mov	DWORD PTR tv87[ebp], eax
	mov	ecx, DWORD PTR tv87[ebp]
	mov	DWORD PTR tv157[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv157[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
	push	eax
	push	OFFSET ??_C@_04NHONDGDE@item?$AA@
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??$make_nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@YA?BU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@01@PBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::serialization::make_nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?6U?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABU?$nvp@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@serialization@3@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::serialization::nvp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const > >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ

; 67   :     }

	jmp	$LN2@save_colle
$LN3@save_colle:

; 68   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@save_colle
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN13@save_colle:
	DD	2
	DD	$LN12@save_colle
$LN12@save_colle:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN9@save_colle
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN10@save_colle
$LN10@save_colle:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
$LN9@save_colle:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	95					; 0000005fH
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save_collection@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_oarchive@archive@2@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@@Z$0:
	lea	ecx, DWORD PTR _it$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$save_collection@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_oarchive@archive@2@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@@Z$1:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$save_collection@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_oarchive@archive@2@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-320]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$save_collection@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_oarchive@archive@2@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$save_collection@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_oarchive@archive@2@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@@Z ENDP ; boost::serialization::stl::save_collection<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\vector.hpp
;	COMDAT ??$load@Vtext_iarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IU?$bool_@$0A@@mpl@1@@Z
_TEXT	SEGMENT
$T1 = -280						; size = 8
$T2 = -264						; size = 4
$T3 = -250						; size = 2
$T4 = -240						; size = 8
_count$ = -32						; size = 4
_item_version$ = -20					; size = 4
_library_version$ = -8					; size = 2
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 1
??$load@Vtext_iarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IU?$bool_@$0A@@mpl@1@@Z PROC ; boost::serialization::load<boost::archive::text_iarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 79   : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 308				; 00000134H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-308]
	mov	ecx, 77					; 0000004dH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 80   :     const boost::archive::library_version_type library_version(
; 81   :         ar.get_library_version()

	lea	eax, DWORD PTR _library_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	call	?get_library_version@basic_iarchive@detail@archive@boost@@QBE?AVlibrary_version_type@34@XZ ; boost::archive::detail::basic_iarchive::get_library_version

; 82   :     );
; 83   :     // retrieve number of elements
; 84   :     item_version_type item_version(0);

	push	0
	lea	ecx, DWORD PTR _item_version$[ebp]
	call	??0item_version_type@serialization@boost@@QAE@I@Z ; boost::serialization::item_version_type::item_version_type

; 85   :     collection_size_type count;

	lea	ecx, DWORD PTR _count$[ebp]
	call	??0collection_size_type@serialization@boost@@QAE@XZ ; boost::serialization::collection_size_type::collection_size_type

; 86   :     ar >> BOOST_SERIALIZATION_NVP(count);

	lea	eax, DWORD PTR _count$[ebp]
	push	eax
	push	OFFSET ??_C@_05IOMEMJEC@count?$AA@
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	??$make_nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@YA?BU?$nvp@Vcollection_size_type@serialization@boost@@@01@PBDAAVcollection_size_type@01@@Z ; boost::serialization::make_nvp<boost::serialization::collection_size_type>
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?5$$CBU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@ABU?$nvp@Vcollection_size_type@serialization@boost@@@serialization@3@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::serialization::nvp<boost::serialization::collection_size_type> const >

; 87   :     if(boost::archive::library_version_type(3) < library_version){

	mov	DWORD PTR $T2[ebp], 3
	lea	eax, DWORD PTR _library_version$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0library_version_type@archive@boost@@QAE@ABI@Z ; boost::archive::library_version_type::library_version_type
	mov	ecx, eax
	call	??Mlibrary_version_type@archive@boost@@QBE_NABV012@@Z ; boost::archive::library_version_type::operator<
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@load

; 88   :         ar >> BOOST_SERIALIZATION_NVP(item_version);

	lea	eax, DWORD PTR _item_version$[ebp]
	push	eax
	push	OFFSET ??_C@_0N@EDCCFHGA@item_version?$AA@
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$make_nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@YA?BU?$nvp@Vitem_version_type@serialization@boost@@@01@PBDAAVitem_version_type@01@@Z ; boost::serialization::make_nvp<boost::serialization::item_version_type>
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?5$$CBU?$nvp@Vitem_version_type@serialization@boost@@@serialization@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@ABU?$nvp@Vitem_version_type@serialization@boost@@@serialization@3@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::serialization::nvp<boost::serialization::item_version_type> const >
$LN2@load:

; 89   :     }
; 90   :     t.reserve(count);

	lea	ecx, DWORD PTR _count$[ebp]
	call	??Bcollection_size_type@serialization@boost@@QAEAAIXZ ; boost::serialization::collection_size_type::operator unsigned int &
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	call	?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::reserve

; 91   :     stl::collection_load_impl(ar, t, count, item_version);

	push	ecx
	mov	ecx, esp
	lea	eax, DWORD PTR _item_version$[ebp]
	push	eax
	call	??0item_version_type@serialization@boost@@QAE@ABV012@@Z ; boost::serialization::item_version_type::item_version_type
	push	ecx
	mov	ecx, esp
	lea	edx, DWORD PTR _count$[ebp]
	push	edx
	call	??0collection_size_type@serialization@boost@@QAE@ABV012@@Z ; boost::serialization::collection_size_type::collection_size_type
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$collection_load_impl@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_iarchive@archive@2@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@Vitem_version_type@12@@Z ; boost::serialization::stl::collection_load_impl<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 16					; 00000010H

; 92   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@load
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 308				; 00000134H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN8@load:
	DD	3
	DD	$LN7@load
$LN7@load:
	DD	-8					; fffffff8H
	DD	2
	DD	$LN4@load
	DD	-20					; ffffffecH
	DD	4
	DD	$LN5@load
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN6@load
$LN6@load:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN5@load:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	95					; 0000005fH
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN4@load:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	98					; 00000062H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	121					; 00000079H
	DB	95					; 0000005fH
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
??$load@Vtext_iarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IU?$bool_@$0A@@mpl@1@@Z ENDP ; boost::serialization::load<boost::archive::text_iarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\collections_save_imp.hpp
;	COMDAT ??$save_collection@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_oarchive@archive@2@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_count$ = -8						; size = 4
_ar$ = 8						; size = 4
_s$ = 12						; size = 4
??$save_collection@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_oarchive@archive@2@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z PROC ; boost::serialization::stl::save_collection<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 72   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 73   :     // record number of elements
; 74   :     collection_size_type count(s.size());

	mov	ecx, DWORD PTR _s$[ebp]
	call	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	lea	ecx, DWORD PTR _count$[ebp]
	call	??0collection_size_type@serialization@boost@@QAE@ABI@Z ; boost::serialization::collection_size_type::collection_size_type

; 75   :     save_collection(ar, s, count);

	push	ecx
	mov	ecx, esp
	lea	eax, DWORD PTR _count$[ebp]
	push	eax
	call	??0collection_size_type@serialization@boost@@QAE@ABV012@@Z ; boost::serialization::collection_size_type::collection_size_type
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$save_collection@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_oarchive@archive@2@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@Vcollection_size_type@12@@Z ; boost::serialization::stl::save_collection<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 12					; 0000000cH

; 76   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@save_colle
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@save_colle:
	DD	1
	DD	$LN4@save_colle
$LN4@save_colle:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@save_colle
$LN3@save_colle:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
??$save_collection@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_oarchive@archive@2@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ENDP ; boost::serialization::stl::save_collection<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\vector.hpp
;	COMDAT ??$load@Vtext_iarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$load@Vtext_iarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z PROC ; boost::serialization::load<boost::archive::text_iarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 147  : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 148  : #ifdef BOOST_SERIALIZATION_VECTOR_135_HPP
; 149  :     if (ar.get_library_version()==boost::archive::library_version_type(5))
; 150  :     {
; 151  :       load(ar,t,file_version, boost::is_arithmetic<U>());
; 152  :       return;
; 153  :     }
; 154  : #endif
; 155  :     typedef typename 
; 156  :     boost::serialization::use_array_optimization<Archive>::template apply<
; 157  :         typename remove_const<U>::type 
; 158  :     >::type use_optimized;
; 159  :     load(ar,t,file_version, use_optimized());

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _file_version$[ebp]
	push	ecx
	mov	edx, DWORD PTR _t$[ebp]
	push	edx
	mov	eax, DWORD PTR _ar$[ebp]
	push	eax
	call	??$load@Vtext_iarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IU?$bool_@$0A@@mpl@1@@Z ; boost::serialization::load<boost::archive::text_iarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 16					; 00000010H

; 160  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$load@Vtext_iarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ENDP ; boost::serialization::load<boost::archive::text_iarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\vector.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_oarchive@archive@1@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IU?$bool_@$0A@@mpl@1@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 1
??$save@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_oarchive@archive@1@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IU?$bool_@$0A@@mpl@1@@Z PROC ; boost::serialization::save<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 67   : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 68   :     boost::serialization::stl::save_collection<Archive, STD::vector<U, Allocator> >(

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$save_collection@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@stl@serialization@boost@@YAXAAVtext_oarchive@archive@2@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::serialization::stl::save_collection<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 8

; 69   :         ar, t
; 70   :     );
; 71   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_oarchive@archive@1@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IU?$bool_@$0A@@mpl@1@@Z ENDP ; boost::serialization::save<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\split_free.hpp
;	COMDAT ?invoke@?$free_loader@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@SAXAAVtext_iarchive@archive@3@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z
_TEXT	SEGMENT
_v$ = -8						; size = 4
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
?invoke@?$free_loader@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@SAXAAVtext_iarchive@archive@3@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z PROC ; boost::serialization::free_loader<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::invoke, COMDAT

; 54   :     ){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 55   :         // use function overload (version_type) to workaround
; 56   :         // two-phase lookup issue
; 57   :         const version_type v(file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	lea	ecx, DWORD PTR _v$[ebp]
	call	??0version_type@serialization@boost@@QAE@I@Z ; boost::serialization::version_type::version_type

; 58   :         load(ar, t, v);

	lea	ecx, DWORD PTR _v$[ebp]
	call	??Bversion_type@serialization@boost@@QBEABIXZ ; boost::serialization::version_type::operator unsigned int const &
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$load@Vtext_iarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ; boost::serialization::load<boost::archive::text_iarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 12					; 0000000cH

; 59   :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@invoke
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@invoke:
	DD	1
	DD	$LN4@invoke
$LN4@invoke:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@invoke
$LN3@invoke:
	DB	118					; 00000076H
	DB	0
?invoke@?$free_loader@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@SAXAAVtext_iarchive@archive@3@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ENDP ; boost::serialization::free_loader<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::invoke
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\smart_cast.hpp
;	COMDAT ??$cast@Vbasic_iarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@5@AAVbasic_iarchive@detail@75@@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??$cast@Vbasic_iarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@5@AAVbasic_iarchive@detail@75@@Z PROC ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::polymorphic::cross::cast<boost::archive::detail::basic_iarchive>, COMDAT

; 79   :                 static T cast(U & u){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 80   :                     return dynamic_cast< T >(u);

	push	1
	push	OFFSET ??_R0?AVtext_iarchive@archive@boost@@@8
	push	OFFSET ??_R0?AVbasic_iarchive@detail@archive@boost@@@8
	push	0
	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H

; 81   :                 }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$cast@Vbasic_iarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@5@AAVbasic_iarchive@detail@75@@Z ENDP ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::polymorphic::cross::cast<boost::archive::detail::basic_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\vector.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_oarchive@archive@1@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$save@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_oarchive@archive@1@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z PROC ; boost::serialization::save<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 134  : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 135  :     typedef typename 
; 136  :     boost::serialization::use_array_optimization<Archive>::template apply<
; 137  :         typename remove_const<U>::type 
; 138  :     >::type use_optimized;
; 139  :     save(ar,t,file_version, use_optimized());

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _file_version$[ebp]
	push	ecx
	mov	edx, DWORD PTR _t$[ebp]
	push	edx
	mov	eax, DWORD PTR _ar$[ebp]
	push	eax
	call	??$save@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_oarchive@archive@1@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IU?$bool_@$0A@@mpl@1@@Z ; boost::serialization::save<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 16					; 00000010H

; 140  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_oarchive@archive@1@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ENDP ; boost::serialization::save<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\split_free.hpp
;	COMDAT ??$split_free@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$split_free@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z PROC ; boost::serialization::split_free<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 68   : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 69   :     typedef typename mpl::eval_if<
; 70   :         typename Archive::is_saving,
; 71   :         mpl::identity</* detail:: */ free_saver<Archive, T> >, 
; 72   :         mpl::identity</* detail:: */ free_loader<Archive, T> >
; 73   :     >::type typex;
; 74   :     typex::invoke(ar, t, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	?invoke@?$free_loader@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@SAXAAVtext_iarchive@archive@3@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ; boost::serialization::free_loader<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::invoke
	add	esp, 12					; 0000000cH

; 75   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$split_free@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ENDP ; boost::serialization::split_free<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\smart_cast.hpp
;	COMDAT ??$cast@Vbasic_iarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@4@AAVbasic_iarchive@detail@64@@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??$cast@Vbasic_iarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@4@AAVbasic_iarchive@detail@64@@Z PROC ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::polymorphic::cast<boost::archive::detail::basic_iarchive>, COMDAT

; 85   :             static T cast(U & u){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 86   :                 // if we're in debug mode
; 87   :                 #if ! defined(NDEBUG)                               \
; 88   :                 || defined(__MWERKS__)
; 89   :                     // do a checked dynamic cast
; 90   :                     return cross::cast(u);

	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	call	??$cast@Vbasic_iarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@5@AAVbasic_iarchive@detail@75@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::polymorphic::cross::cast<boost::archive::detail::basic_iarchive>
	add	esp, 4

; 91   :                 #else
; 92   :                     // borland 5.51 chokes here so we can't use it
; 93   :                     // note: if remove_reference isn't function for these types
; 94   :                     // cross casting will be selected this will work but will
; 95   :                     // not be the most efficient method. This will conflict with
; 96   :                     // the original smart_cast motivation.
; 97   :                     typedef typename mpl::eval_if<
; 98   :                             typename mpl::and_<
; 99   :                                 mpl::not_<is_base_and_derived<
; 100  :                                     typename remove_reference< T >::type,
; 101  :                                     U
; 102  :                                 > >,
; 103  :                                 mpl::not_<is_base_and_derived<
; 104  :                                     U,
; 105  :                                     typename remove_reference< T >::type
; 106  :                                 > >
; 107  :                             >,
; 108  :                             // borland chokes w/o full qualification here
; 109  :                             mpl::identity<cross>,
; 110  :                             mpl::identity<linear>
; 111  :                     >::type typex;
; 112  :                     // typex works around gcc 2.95 issue
; 113  :                     return typex::cast(u);
; 114  :                 #endif
; 115  :             }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$cast@Vbasic_iarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@4@AAVbasic_iarchive@detail@64@@Z ENDP ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::polymorphic::cast<boost::archive::detail::basic_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\split_free.hpp
;	COMDAT ?invoke@?$free_saver@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@SAXAAVtext_oarchive@archive@3@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z
_TEXT	SEGMENT
_v$ = -8						; size = 4
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
?invoke@?$free_saver@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@SAXAAVtext_oarchive@archive@3@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z PROC ; boost::serialization::free_saver<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::invoke, COMDAT

; 41   :     ){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 42   :         // use function overload (version_type) to workaround
; 43   :         // two-phase lookup issue
; 44   :         const version_type v(file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	lea	ecx, DWORD PTR _v$[ebp]
	call	??0version_type@serialization@boost@@QAE@I@Z ; boost::serialization::version_type::version_type

; 45   :         save(ar, t, v);

	lea	ecx, DWORD PTR _v$[ebp]
	call	??Bversion_type@serialization@boost@@QBEABIXZ ; boost::serialization::version_type::operator unsigned int const &
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$save@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_oarchive@archive@1@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ; boost::serialization::save<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 12					; 0000000cH

; 46   :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@invoke
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@invoke:
	DD	1
	DD	$LN4@invoke
$LN4@invoke:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@invoke
$LN3@invoke:
	DB	118					; 00000076H
	DB	0
?invoke@?$free_saver@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@SAXAAVtext_oarchive@archive@3@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ENDP ; boost::serialization::free_saver<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::invoke
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\smart_cast.hpp
;	COMDAT ??$cast@Vbasic_oarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@5@AAVbasic_oarchive@detail@75@@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??$cast@Vbasic_oarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@5@AAVbasic_oarchive@detail@75@@Z PROC ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::polymorphic::cross::cast<boost::archive::detail::basic_oarchive>, COMDAT

; 79   :                 static T cast(U & u){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 80   :                     return dynamic_cast< T >(u);

	push	1
	push	OFFSET ??_R0?AVtext_oarchive@archive@boost@@@8
	push	OFFSET ??_R0?AVbasic_oarchive@detail@archive@boost@@@8
	push	0
	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H

; 81   :                 }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$cast@Vbasic_oarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@5@AAVbasic_oarchive@detail@75@@Z ENDP ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::polymorphic::cross::cast<boost::archive::detail::basic_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iprimitive.hpp
;	COMDAT ??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z
_TEXT	SEGMENT
tv91 = -400						; size = 4
tv92 = -396						; size = 4
$T2 = -388						; size = 152
$T3 = -228						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z PROC ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<unsigned int>, COMDAT
; _this$ = ecx

; 88   :     {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 388				; 00000184H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-400]
	mov	ecx, 97					; 00000061H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 89   :         if(is >> t)

	mov	esi, esp
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAI@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T3[ebp], eax
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T3[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_??Bios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@load

; 90   :             return;

	jmp	SHORT $LN1@load
$LN2@load:

; 91   :         boost::serialization::throw_exception(

	push	1
	push	0
	push	0
	push	8
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z ; boost::archive::archive_exception::archive_exception
	mov	DWORD PTR tv92[ebp], eax
	mov	eax, DWORD PTR tv92[ebp]
	mov	DWORD PTR tv91[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv91[ebp]
	push	ecx
	call	??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??_Darchive_exception@archive@boost@@QAEXXZ
$LN1@load:

; 92   :             archive_exception(archive_exception::input_stream_error)
; 93   :         );
; 94   :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 400				; 00000190H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??_Darchive_exception@archive@boost@@QAEXXZ
__ehhandler$??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-404]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z ENDP ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<unsigned int>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z
_TEXT	SEGMENT
tv92 = -388						; size = 4
tv93 = -384						; size = 4
tv72 = -384						; size = 4
$T2 = -376						; size = 152
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
___formal$ = 12						; size = 4
??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<unsigned int>, COMDAT
; _this$ = ecx

; 125  :     void save_impl(const T &t, boost::mpl::bool_<false> &){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 376				; 00000178H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-388]
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 126  :         if(os.fail())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv72[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?fail@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@save_impl

; 127  :             boost::serialization::throw_exception(

	push	1
	push	0
	push	0
	push	13					; 0000000dH
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z ; boost::archive::archive_exception::archive_exception
	mov	DWORD PTR tv93[ebp], eax
	mov	eax, DWORD PTR tv93[ebp]
	mov	DWORD PTR tv92[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv92[ebp]
	push	ecx
	call	??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??_Darchive_exception@archive@boost@@QAEXXZ
$LN2@save_impl:

; 128  :                 archive_exception(archive_exception::output_stream_error)
; 129  :             );
; 130  :         os << t;

	mov	esi, esp
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 131  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 388				; 00000184H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??_Darchive_exception@archive@boost@@QAEXXZ
__ehhandler$??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-392]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<unsigned int>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\throw_exception.hpp
;	COMDAT ??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z
_TEXT	SEGMENT
$T1 = -352						; size = 152
__$ArrayPad$ = -4					; size = 4
_e$ = 8							; size = 4
??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z PROC ; boost::serialization::throw_exception<boost::archive::archive_exception>, COMDAT

; 35   : template<class E> inline void throw_exception(E const & e){

	push	ebp
	mov	ebp, esp
	sub	esp, 356				; 00000164H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-356]
	mov	ecx, 89					; 00000059H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 36   :     throw e;

	push	1
	mov	eax, DWORD PTR _e$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0archive_exception@archive@boost@@QAE@ABV012@@Z ; boost::archive::archive_exception::archive_exception
	push	OFFSET __TI2?AVarchive_exception@archive@boost@@
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@throw_exce:

; 37   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 356				; 00000164H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ENDP ; boost::serialization::throw_exception<boost::archive::archive_exception>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\vector.hpp
;	COMDAT ??$serialize@Vtext_iarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize@Vtext_iarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z PROC ; boost::serialization::serialize<boost::archive::text_iarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 169  : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 170  :     boost::serialization::split_free(ar, t, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$split_free@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ; boost::serialization::split_free<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 12					; 0000000cH

; 171  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$serialize@Vtext_iarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ENDP ; boost::serialization::serialize<boost::archive::text_iarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\smart_cast.hpp
;	COMDAT ??$cast@Vbasic_iarchive@detail@archive@boost@@@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@3@AAVbasic_iarchive@detail@53@@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??$cast@Vbasic_iarchive@detail@archive@boost@@@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@3@AAVbasic_iarchive@detail@53@@Z PROC ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::cast<boost::archive::detail::basic_iarchive>, COMDAT

; 125  :         static T cast(U & u){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 126  :             typedef typename mpl::eval_if<
; 127  :                 boost::is_polymorphic<U>,
; 128  :                 mpl::identity<polymorphic>,
; 129  :                 mpl::identity<non_polymorphic>
; 130  :             >::type typex;
; 131  :             return typex::cast(u);

	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	call	??$cast@Vbasic_iarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@4@AAVbasic_iarchive@detail@64@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::polymorphic::cast<boost::archive::detail::basic_iarchive>
	add	esp, 4

; 132  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$cast@Vbasic_iarchive@detail@archive@boost@@@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@3@AAVbasic_iarchive@detail@53@@Z ENDP ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::cast<boost::archive::detail::basic_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\split_free.hpp
;	COMDAT ??$split_free@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$split_free@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z PROC ; boost::serialization::split_free<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 68   : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 69   :     typedef typename mpl::eval_if<
; 70   :         typename Archive::is_saving,
; 71   :         mpl::identity</* detail:: */ free_saver<Archive, T> >, 
; 72   :         mpl::identity</* detail:: */ free_loader<Archive, T> >
; 73   :     >::type typex;
; 74   :     typex::invoke(ar, t, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	?invoke@?$free_saver@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@SAXAAVtext_oarchive@archive@3@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ; boost::serialization::free_saver<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::invoke
	add	esp, 12					; 0000000cH

; 75   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$split_free@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ENDP ; boost::serialization::split_free<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\smart_cast.hpp
;	COMDAT ??$cast@Vbasic_oarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@4@AAVbasic_oarchive@detail@64@@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??$cast@Vbasic_oarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@4@AAVbasic_oarchive@detail@64@@Z PROC ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::polymorphic::cast<boost::archive::detail::basic_oarchive>, COMDAT

; 85   :             static T cast(U & u){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 86   :                 // if we're in debug mode
; 87   :                 #if ! defined(NDEBUG)                               \
; 88   :                 || defined(__MWERKS__)
; 89   :                     // do a checked dynamic cast
; 90   :                     return cross::cast(u);

	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	call	??$cast@Vbasic_oarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@5@AAVbasic_oarchive@detail@75@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::polymorphic::cross::cast<boost::archive::detail::basic_oarchive>
	add	esp, 4

; 91   :                 #else
; 92   :                     // borland 5.51 chokes here so we can't use it
; 93   :                     // note: if remove_reference isn't function for these types
; 94   :                     // cross casting will be selected this will work but will
; 95   :                     // not be the most efficient method. This will conflict with
; 96   :                     // the original smart_cast motivation.
; 97   :                     typedef typename mpl::eval_if<
; 98   :                             typename mpl::and_<
; 99   :                                 mpl::not_<is_base_and_derived<
; 100  :                                     typename remove_reference< T >::type,
; 101  :                                     U
; 102  :                                 > >,
; 103  :                                 mpl::not_<is_base_and_derived<
; 104  :                                     U,
; 105  :                                     typename remove_reference< T >::type
; 106  :                                 > >
; 107  :                             >,
; 108  :                             // borland chokes w/o full qualification here
; 109  :                             mpl::identity<cross>,
; 110  :                             mpl::identity<linear>
; 111  :                     >::type typex;
; 112  :                     // typex works around gcc 2.95 issue
; 113  :                     return typex::cast(u);
; 114  :                 #endif
; 115  :             }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$cast@Vbasic_oarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@4@AAVbasic_oarchive@detail@64@@Z ENDP ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::polymorphic::cast<boost::archive::detail::basic_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load@I@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load@I@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAI@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<unsigned int>, COMDAT
; _this$ = ecx

; 55   :     void load(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   :         basic_text_iprimitive<std::istream>::load(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<unsigned int>

; 57   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load@I@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAI@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z
_TEXT	SEGMENT
tv94 = -276						; size = 4
tv76 = -276						; size = 4
tv129 = -272						; size = 4
tv79 = -272						; size = 4
_tf$ = -69						; size = 1
_ps$ = -60						; size = 16
_fs$ = -36						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<unsigned int>, COMDAT
; _this$ = ecx

; 177  :     void save(const T & t){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 178  :         boost::io::ios_flags_saver fs(os);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@save
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN4@save
$LN3@save:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv76[ebp], edx
	mov	eax, DWORD PTR tv76[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR tv76[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv79[ebp], edx
$LN4@save:
	mov	eax, DWORD PTR tv79[ebp]
	push	eax
	lea	ecx, DWORD PTR _fs$[ebp]
	call	??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_flags_saver::ios_flags_saver
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 179  :         boost::io::ios_precision_saver ps(os);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN5@save
	mov	DWORD PTR tv129[ebp], 0
	jmp	SHORT $LN6@save
$LN5@save:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv94[ebp], edx
	mov	eax, DWORD PTR tv94[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR tv94[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv129[ebp], edx
$LN6@save:
	mov	eax, DWORD PTR tv129[ebp]
	push	eax
	lea	ecx, DWORD PTR _ps$[ebp]
	call	??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_precision_saver::ios_precision_saver
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 180  :         typename is_float<T>::type tf;
; 181  :         save_impl(t, tf);

	lea	eax, DWORD PTR _tf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<unsigned int>

; 182  :     }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _ps$[ebp]
	call	??1ios_precision_saver@io@boost@@QAE@XZ	; boost::io::ios_precision_saver::~ios_precision_saver
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fs$[ebp]
	call	??1ios_flags_saver@io@boost@@QAE@XZ	; boost::io::ios_flags_saver::~ios_flags_saver
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@save
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN14@save:
	DD	3
	DD	$LN13@save
$LN13@save:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN9@save
	DD	-60					; ffffffc4H
	DD	16					; 00000010H
	DD	$LN10@save
	DD	-69					; ffffffbbH
	DD	1
	DD	$LN11@save
$LN11@save:
	DB	116					; 00000074H
	DB	102					; 00000066H
	DB	0
$LN10@save:
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$LN9@save:
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z$0:
	lea	ecx, DWORD PTR _fs$[ebp]
	jmp	??1ios_flags_saver@io@boost@@QAE@XZ	; boost::io::ios_flags_saver::~ios_flags_saver
__unwindfunclet$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z$1:
	lea	ecx, DWORD PTR _ps$[ebp]
	jmp	??1ios_precision_saver@io@boost@@QAE@XZ	; boost::io::ios_precision_saver::~ios_precision_saver
__ehhandler$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-280]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<unsigned int>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ??__E?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@A@@YAXXZ
text$di	SEGMENT
??__E?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@A@@YAXXZ PROC ; `dynamic initializer for 'boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::instance'', COMDAT

; 143  : BOOST_DLLEXPORT T & singleton< T >::instance = singleton< T >::get_instance();

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	call	?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance
	mov	DWORD PTR ?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@A, eax ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::instance
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__E?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@A@@YAXXZ ENDP ; `dynamic initializer for 'boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::instance''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??$serialize_adl@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z
_TEXT	SEGMENT
_v$ = -8						; size = 4
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize_adl@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z PROC ; boost::serialization::serialize_adl<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 116  : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 117  :     // note usage of function overloading to delay final resolution
; 118  :     // until the point of instantiation.  This works around the two-phase
; 119  :     // lookup "feature" which inhibits redefintion of a default function
; 120  :     // template implementation. Due to Robert Ramey
; 121  :     //
; 122  :     // Note that this trick generates problems for compiles which don't support
; 123  :     // PFTO, suppress it here.  As far as we know, there are no compilers
; 124  :     // which fail to support PFTO while supporting two-phase lookup.
; 125  :     const version_type v(file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	lea	ecx, DWORD PTR _v$[ebp]
	call	??0version_type@serialization@boost@@QAE@I@Z ; boost::serialization::version_type::version_type

; 126  :     serialize(ar, t, v);

	lea	ecx, DWORD PTR _v$[ebp]
	call	??Bversion_type@serialization@boost@@QBEABIXZ ; boost::serialization::version_type::operator unsigned int const &
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$serialize@Vtext_iarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ; boost::serialization::serialize<boost::archive::text_iarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 12					; 0000000cH

; 127  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@serialize_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@serialize_:
	DD	1
	DD	$LN4@serialize_
$LN4@serialize_:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@serialize_
$LN3@serialize_:
	DB	118					; 00000076H
	DB	0
??$serialize_adl@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ENDP ; boost::serialization::serialize_adl<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\smart_cast.hpp
;	COMDAT ??$smart_cast_reference@AAVtext_iarchive@archive@boost@@Vbasic_iarchive@detail@23@@serialization@boost@@YAAAVtext_iarchive@archive@1@AAVbasic_iarchive@detail@31@@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??$smart_cast_reference@AAVtext_iarchive@archive@boost@@Vbasic_iarchive@detail@23@@serialization@boost@@YAAAVtext_iarchive@archive@1@AAVbasic_iarchive@detail@31@@Z PROC ; boost::serialization::smart_cast_reference<boost::archive::text_iarchive &,boost::archive::detail::basic_iarchive>, COMDAT

; 268  : T smart_cast_reference(U & u) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 269  :     return smart_cast_impl::reference< T >::cast(u);

	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	call	??$cast@Vbasic_iarchive@detail@archive@boost@@@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@3@AAVbasic_iarchive@detail@53@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::cast<boost::archive::detail::basic_iarchive>
	add	esp, 4

; 270  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$smart_cast_reference@AAVtext_iarchive@archive@boost@@Vbasic_iarchive@detail@23@@serialization@boost@@YAAAVtext_iarchive@archive@1@AAVbasic_iarchive@detail@31@@Z ENDP ; boost::serialization::smart_cast_reference<boost::archive::text_iarchive &,boost::archive::detail::basic_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\vector.hpp
;	COMDAT ??$serialize@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z PROC ; boost::serialization::serialize<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 169  : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 170  :     boost::serialization::split_free(ar, t, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$split_free@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ; boost::serialization::split_free<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 12					; 0000000cH

; 171  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$serialize@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ENDP ; boost::serialization::serialize<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\smart_cast.hpp
;	COMDAT ??$cast@Vbasic_oarchive@detail@archive@boost@@@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@3@AAVbasic_oarchive@detail@53@@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??$cast@Vbasic_oarchive@detail@archive@boost@@@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@3@AAVbasic_oarchive@detail@53@@Z PROC ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::cast<boost::archive::detail::basic_oarchive>, COMDAT

; 125  :         static T cast(U & u){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 126  :             typedef typename mpl::eval_if<
; 127  :                 boost::is_polymorphic<U>,
; 128  :                 mpl::identity<polymorphic>,
; 129  :                 mpl::identity<non_polymorphic>
; 130  :             >::type typex;
; 131  :             return typex::cast(u);

	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	call	??$cast@Vbasic_oarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@4@AAVbasic_oarchive@detail@64@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::polymorphic::cast<boost::archive::detail::basic_oarchive>
	add	esp, 4

; 132  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$cast@Vbasic_oarchive@detail@archive@boost@@@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@3@AAVbasic_oarchive@detail@53@@Z ENDP ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::cast<boost::archive::detail::basic_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__Ft@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ@YAXXZ
text$yd	SEGMENT
??__Ft@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ@YAXXZ PROC ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::`dynamic atexit destructor for 't'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?t@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@634@A ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::t
	call	??1?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__Ft@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ@YAXXZ ENDP ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::`dynamic atexit destructor for 't''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z PROC ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z ENDP ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ PROC ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@IAE@XZ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ ENDP ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ??1?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ PROC ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT
; _this$ = ecx

; 104  :     ~singleton_wrapper(){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@6B@

; 105  :         m_is_destroyed = true;

	mov	BYTE PTR ?m_is_destroyed@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@2_NA, 1 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::m_is_destroyed

; 106  :     }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UAE@XZ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ ENDP ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_oarchive.hpp
;	COMDAT ??$save@I@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save@I@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABI@Z PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<unsigned int>, COMDAT
; _this$ = ecx

; 63   :     void save(const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 64   :         this->newtoken();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?newtoken@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::newtoken

; 65   :         basic_text_oprimitive<std::ostream>::save(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<unsigned int>

; 66   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save@I@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABI@Z ENDP ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\extended_type_info.hpp
;	COMDAT ?call@?$guid_impl@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@ext@serialization@boost@@SAPBDXZ
_TEXT	SEGMENT
?call@?$guid_impl@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@ext@serialization@boost@@SAPBDXZ PROC ; boost::serialization::ext::guid_impl<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::call, COMDAT

; 96   :         {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 97   :             return NULL;

	xor	eax, eax

; 98   :         }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?call@?$guid_impl@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@ext@serialization@boost@@SAPBDXZ ENDP ; boost::serialization::ext::guid_impl<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ??__E?instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@A@@YAXXZ
text$di	SEGMENT
??__E?instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@A@@YAXXZ PROC ; `dynamic initializer for 'boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::instance'', COMDAT

; 143  : BOOST_DLLEXPORT T & singleton< T >::instance = singleton< T >::get_instance();

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	call	?get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance
	mov	DWORD PTR ?instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@A, eax ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::instance
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__E?instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@A@@YAXXZ ENDP ; `dynamic initializer for 'boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::instance''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UAEPAXI@Z PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UAE@XZ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UAEPAXI@Z ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??1?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UAE@XZ PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 158  :     virtual ~iserializer(){};

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1basic_iserializer@detail@archive@boost@@MAE@XZ ; boost::archive::detail::basic_iserializer::~basic_iserializer
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UAE@XZ ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ?is_polymorphic@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?is_polymorphic@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NXZ PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::is_polymorphic, COMDAT
; _this$ = ecx

; 155  :     virtual bool is_polymorphic() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 156  :         return boost::is_polymorphic< T >::value;

	xor	al, al

; 157  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?is_polymorphic@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NXZ ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::is_polymorphic
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ?version@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE?AVversion_type@34@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?version@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE?AVversion_type@34@XZ PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::version, COMDAT
; _this$ = ecx

; 152  :     virtual version_type version() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 153  :         return version_type(::boost::serialization::version< T >::value);

	mov	DWORD PTR $T1[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0version_type@archive@boost@@QAE@ABI@Z ; boost::archive::version_type::version_type
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 154  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?version@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE?AVversion_type@34@XZ ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::version
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ?tracking@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NI@Z
_TEXT	SEGMENT
tv74 = -208						; size = 4
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?tracking@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NI@Z PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::tracking, COMDAT
; _this$ = ecx

; 145  :     virtual bool tracking(const unsigned int /* flags */) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 146  :         return boost::serialization::tracking_level< T >::value 

	xor	eax, eax
	jne	SHORT $LN4@tracking
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN3@tracking
	mov	ecx, DWORD PTR _this$[ebp]
	call	?serialized_as_pointer@basic_iserializer@detail@archive@boost@@QBE_NXZ ; boost::archive::detail::basic_iserializer::serialized_as_pointer
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@tracking
$LN3@tracking:
	mov	DWORD PTR tv74[ebp], 0
	jmp	SHORT $LN5@tracking
$LN4@tracking:
	mov	DWORD PTR tv74[ebp], 1
$LN5@tracking:
	mov	al, BYTE PTR tv74[ebp]

; 147  :                 == boost::serialization::track_always
; 148  :             || ( boost::serialization::tracking_level< T >::value 
; 149  :                 == boost::serialization::track_selectively
; 150  :                 && serialized_as_pointer());
; 151  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?tracking@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NI@Z ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::tracking
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ?class_info@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?class_info@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NXZ PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::class_info, COMDAT
; _this$ = ecx

; 141  :     virtual bool class_info() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 142  :         return boost::serialization::implementation_level< T >::value 

	mov	al, 1

; 143  :             >= boost::serialization::object_class_info;
; 144  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?class_info@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NXZ ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::class_info
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ?load_object_data@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBEXAAVbasic_iarchive@234@PAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ar$ = 8						; size = 4
_x$ = 12						; size = 4
_file_version$ = 16					; size = 4
?load_object_data@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBEXAAVbasic_iarchive@234@PAXI@Z PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::load_object_data, COMDAT
; _this$ = ecx

; 170  : ) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 171  :     // note: we now comment this out. Before we permited archive
; 172  :     // version # to be very large.  Now we don't.  To permit
; 173  :     // readers of these old archives, we have to suppress this 
; 174  :     // code.  Perhaps in the future we might re-enable it but
; 175  :     // permit its suppression with a runtime switch.
; 176  :     #if 0
; 177  :     // trap case where the program cannot handle the current version
; 178  :     if(file_version > static_cast<const unsigned int>(version()))
; 179  :         boost::serialization::throw_exception(
; 180  :             archive::archive_exception(
; 181  :                 boost::archive::archive_exception::unsupported_class_version,
; 182  :                 get_debug_info()
; 183  :             )
; 184  :         );
; 185  :     #endif
; 186  :     // make sure call is routed through the higest interface that might
; 187  :     // be specialized by the user.
; 188  :     boost::serialization::serialize_adl(

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$smart_cast_reference@AAVtext_iarchive@archive@boost@@Vbasic_iarchive@detail@23@@serialization@boost@@YAAAVtext_iarchive@archive@1@AAVbasic_iarchive@detail@31@@Z ; boost::serialization::smart_cast_reference<boost::archive::text_iarchive &,boost::archive::detail::basic_iarchive>
	add	esp, 4
	push	eax
	call	??$serialize_adl@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ; boost::serialization::serialize_adl<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 12					; 0000000cH

; 189  :         boost::serialization::smart_cast_reference<Archive &>(ar),
; 190  :         * static_cast<T *>(x), 
; 191  :         file_version
; 192  :     );
; 193  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?load_object_data@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBEXAAVbasic_iarchive@234@PAXI@Z ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::load_object_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??0?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@IAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@IAE@XZ PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 134  :     {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 128  :         basic_iserializer(

	call	?get_const_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@SAABV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_const_instance
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0basic_iserializer@detail@archive@boost@@IAE@ABVextended_type_info@serialization@3@@Z ; boost::archive::detail::basic_iserializer::basic_iserializer

; 134  :     {}

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@IAE@XZ ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ?destroy@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@EBEXPAX@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_address$ = 8						; size = 4
?destroy@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@EBEXPAX@Z PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::destroy, COMDAT
; _this$ = ecx

; 122  :     virtual void destroy(/*const*/ void *address) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 123  :         boost::serialization::access::destroy(static_cast<T *>(address));

	mov	eax, DWORD PTR _address$[ebp]
	push	eax
	call	??$destroy@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@access@serialization@boost@@SAXPBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::serialization::access::destroy<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 4

; 124  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@EBEXPAX@Z ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?get_const_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@SAABV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ
_TEXT	SEGMENT
?get_const_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@SAABV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ PROC ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_const_instance, COMDAT

; 134  :     BOOST_DLLEXPORT static const T & get_const_instance(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 135  :         return get_instance();

	call	?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance

; 136  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?get_const_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@SAABV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ ENDP ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_const_instance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ PROC ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance, COMDAT

; 121  :     BOOST_DLLEXPORT static T & get_instance() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 122  :         static detail::singleton_wrapper< T > t;

	mov	eax, DWORD PTR __tls_index
	mov	ecx, DWORD PTR fs:__tls_array
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR ?$TSS0@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::et_instance,signed char,boost::archive::Vtext_iarchive::erializer,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	cmp	eax, DWORD PTR __Init_thread_epoch[edx]
	jle	SHORT $LN2@get_instan
	push	OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::et_instance,signed char,boost::archive::Vtext_iarchive::erializer,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	call	__Init_thread_header
	add	esp, 4
	cmp	DWORD PTR ?$TSS0@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4HA, -1 ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::et_instance,signed char,boost::archive::Vtext_iarchive::erializer,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	jne	SHORT $LN2@get_instan
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, OFFSET ?t@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@634@A ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::t
	call	??0?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ
	push	OFFSET ??__Ft@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ@YAXXZ ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::`dynamic atexit destructor for 't''
	call	_atexit
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::et_instance,signed char,boost::archive::Vtext_iarchive::erializer,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	call	__Init_thread_footer
	add	esp, 4
$LN2@get_instan:

; 123  :         // refer to instance, causing it to be instantiated (and
; 124  :         // initialized at startup on working compilers)
; 125  :         BOOST_ASSERT(! detail::singleton_wrapper< T >::m_is_destroyed);

	movzx	eax, BYTE PTR ?m_is_destroyed@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@2_NA ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::m_is_destroyed
	test	eax, eax
	je	SHORT $LN4@get_instan
	mov	esi, esp
	push	125					; 0000007dH
	push	OFFSET ??_C@_1JC@GIHFICPP@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
	push	OFFSET ??_C@_1GC@KKEDEOBO@?$AA?$CB?$AA?5?$AAd?$AAe?$AAt?$AAa?$AAi?$AAl?$AA?3?$AA?3?$AAs?$AAi?$AAn?$AAg?$AAl?$AAe?$AAt?$AAo?$AAn?$AA_?$AAw?$AAr?$AAa?$AAp?$AAp?$AAe?$AAr?$AA?$DM?$AA?5?$AAT?$AA?5?$AA?$DO@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@get_instan:

; 126  :         use(& instance);

	mov	eax, DWORD PTR ?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@A ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::instance
	push	eax
	call	?use@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@@Z ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::use
	add	esp, 4

; 127  :         return static_cast<T &>(t);

	mov	eax, OFFSET ?t@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@634@A ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::t

; 128  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ$0:
	push	OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::et_instance,signed char,boost::archive::Vtext_iarchive::erializer,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	call	__Init_thread_abort
	pop	ecx
	ret	0
__ehhandler$?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ ENDP ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?use@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?use@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@@Z PROC ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::use, COMDAT

; 120  :     static void use(T const *) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?use@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@@Z ENDP ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::use
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load_primitive@Vtext_iarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load_primitive@Vtext_iarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 106  :     static void load_primitive(Archive &ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 107  :         ar.load(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	call	?load@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load

; 108  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$load_primitive@Vtext_iarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ??__E?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@A@@YAXXZ
text$di	SEGMENT
??__E?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@A@@YAXXZ PROC ; `dynamic initializer for 'boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::instance'', COMDAT

; 143  : BOOST_DLLEXPORT T & singleton< T >::instance = singleton< T >::get_instance();

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	call	?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance
	mov	DWORD PTR ?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@A, eax ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::instance
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__E?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@A@@YAXXZ ENDP ; `dynamic initializer for 'boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::instance''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??$serialize_adl@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z
_TEXT	SEGMENT
_v$ = -8						; size = 4
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize_adl@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z PROC ; boost::serialization::serialize_adl<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 116  : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 117  :     // note usage of function overloading to delay final resolution
; 118  :     // until the point of instantiation.  This works around the two-phase
; 119  :     // lookup "feature" which inhibits redefintion of a default function
; 120  :     // template implementation. Due to Robert Ramey
; 121  :     //
; 122  :     // Note that this trick generates problems for compiles which don't support
; 123  :     // PFTO, suppress it here.  As far as we know, there are no compilers
; 124  :     // which fail to support PFTO while supporting two-phase lookup.
; 125  :     const version_type v(file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	lea	ecx, DWORD PTR _v$[ebp]
	call	??0version_type@serialization@boost@@QAE@I@Z ; boost::serialization::version_type::version_type

; 126  :     serialize(ar, t, v);

	lea	ecx, DWORD PTR _v$[ebp]
	call	??Bversion_type@serialization@boost@@QBEABIXZ ; boost::serialization::version_type::operator unsigned int const &
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$serialize@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@5@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ; boost::serialization::serialize<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 12					; 0000000cH

; 127  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@serialize_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@serialize_:
	DD	1
	DD	$LN4@serialize_
$LN4@serialize_:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@serialize_
$LN3@serialize_:
	DB	118					; 00000076H
	DB	0
??$serialize_adl@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ENDP ; boost::serialization::serialize_adl<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\smart_cast.hpp
;	COMDAT ??$smart_cast_reference@AAVtext_oarchive@archive@boost@@Vbasic_oarchive@detail@23@@serialization@boost@@YAAAVtext_oarchive@archive@1@AAVbasic_oarchive@detail@31@@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??$smart_cast_reference@AAVtext_oarchive@archive@boost@@Vbasic_oarchive@detail@23@@serialization@boost@@YAAAVtext_oarchive@archive@1@AAVbasic_oarchive@detail@31@@Z PROC ; boost::serialization::smart_cast_reference<boost::archive::text_oarchive &,boost::archive::detail::basic_oarchive>, COMDAT

; 268  : T smart_cast_reference(U & u) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 269  :     return smart_cast_impl::reference< T >::cast(u);

	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	call	??$cast@Vbasic_oarchive@detail@archive@boost@@@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@3@AAVbasic_oarchive@detail@53@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::cast<boost::archive::detail::basic_oarchive>
	add	esp, 4

; 270  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$smart_cast_reference@AAVtext_oarchive@archive@boost@@Vbasic_oarchive@detail@23@@serialization@boost@@YAAAVtext_oarchive@archive@1@AAVbasic_oarchive@detail@31@@Z ENDP ; boost::serialization::smart_cast_reference<boost::archive::text_oarchive &,boost::archive::detail::basic_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\extended_type_info.hpp
;	COMDAT ??$guid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@YAPBDXZ
_TEXT	SEGMENT
??$guid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@YAPBDXZ PROC ; boost::serialization::guid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 103  : inline const char * guid(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 104  :     return ext::guid_impl<T>::call();

	call	?call@?$guid_impl@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@ext@serialization@boost@@SAPBDXZ ; boost::serialization::ext::guid_impl<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::call

; 105  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$guid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@YAPBDXZ ENDP ; boost::serialization::guid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__Ft@?1??get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ@YAXXZ
text$yd	SEGMENT
??__Ft@?1??get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ@YAXXZ PROC ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::`dynamic atexit destructor for 't'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?t@?1??get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@34@XZ@4V?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@34@A ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::t
	call	??1?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__Ft@?1??get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ@YAXXZ ENDP ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::`dynamic atexit destructor for 't''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@UAEPAXI@Z PROC ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	20					; 00000014H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@UAEPAXI@Z ENDP ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@QAE@XZ PROC ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@QAE@XZ ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@QAE@XZ ENDP ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ??1?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@UAE@XZ PROC ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT
; _this$ = ecx

; 104  :     ~singleton_wrapper(){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@6B@

; 105  :         m_is_destroyed = true;

	mov	BYTE PTR ?m_is_destroyed@?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@2_NA, 1 ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::m_is_destroyed

; 106  :     }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UAE@XZ ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@UAE@XZ ENDP ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\factory.hpp
;	COMDAT ??$factory@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$03@serialization@boost@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$factory@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$03@serialization@boost@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAD@Z PROC ; boost::serialization::factory<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,4>, COMDAT

; 36   : T * factory(std::va_list){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 37   :     BOOST_ASSERT(false);

	xor	eax, eax
	jne	SHORT $LN3@factory
	mov	esi, esp
	push	37					; 00000025H
	push	OFFSET ??_C@_1IO@PLLJMNBK@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@factory:

; 38   :     // throw exception here?
; 39   :     return NULL;

	xor	eax, eax

; 40   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$factory@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$03@serialization@boost@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAD@Z ENDP ; boost::serialization::factory<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\factory.hpp
;	COMDAT ??$factory@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$02@serialization@boost@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$factory@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$02@serialization@boost@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAD@Z PROC ; boost::serialization::factory<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,3>, COMDAT

; 36   : T * factory(std::va_list){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 37   :     BOOST_ASSERT(false);

	xor	eax, eax
	jne	SHORT $LN3@factory
	mov	esi, esp
	push	37					; 00000025H
	push	OFFSET ??_C@_1IO@PLLJMNBK@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@factory:

; 38   :     // throw exception here?
; 39   :     return NULL;

	xor	eax, eax

; 40   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$factory@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$02@serialization@boost@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAD@Z ENDP ; boost::serialization::factory<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,3>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\factory.hpp
;	COMDAT ??$factory@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$01@serialization@boost@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$factory@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$01@serialization@boost@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAD@Z PROC ; boost::serialization::factory<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,2>, COMDAT

; 36   : T * factory(std::va_list){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 37   :     BOOST_ASSERT(false);

	xor	eax, eax
	jne	SHORT $LN3@factory
	mov	esi, esp
	push	37					; 00000025H
	push	OFFSET ??_C@_1IO@PLLJMNBK@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@factory:

; 38   :     // throw exception here?
; 39   :     return NULL;

	xor	eax, eax

; 40   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$factory@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$01@serialization@boost@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAD@Z ENDP ; boost::serialization::factory<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\factory.hpp
;	COMDAT ??$factory@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$00@serialization@boost@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$factory@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$00@serialization@boost@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAD@Z PROC ; boost::serialization::factory<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>, COMDAT

; 36   : T * factory(std::va_list){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 37   :     BOOST_ASSERT(false);

	xor	eax, eax
	jne	SHORT $LN3@factory
	mov	esi, esp
	push	37					; 00000025H
	push	OFFSET ??_C@_1IO@PLLJMNBK@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@factory:

; 38   :     // throw exception here?
; 39   :     return NULL;

	xor	eax, eax

; 40   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$factory@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$00@serialization@boost@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAD@Z ENDP ; boost::serialization::factory<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\factory.hpp
;	COMDAT ??$factory@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$0A@@serialization@boost@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$factory@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$0A@@serialization@boost@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAD@Z PROC ; boost::serialization::factory<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0>, COMDAT

; 36   : T * factory(std::va_list){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 37   :     BOOST_ASSERT(false);

	xor	eax, eax
	jne	SHORT $LN3@factory
	mov	esi, esp
	push	37					; 00000025H
	push	OFFSET ??_C@_1IO@PLLJMNBK@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@factory:

; 38   :     // throw exception here?
; 39   :     return NULL;

	xor	eax, eax

; 40   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$factory@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$0A@@serialization@boost@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAD@Z ENDP ; boost::serialization::factory<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vadefs.h
;	COMDAT ??$__vcrt_va_start_verify_argument_type@I@@YAXXZ
_TEXT	SEGMENT
??$__vcrt_va_start_verify_argument_type@I@@YAXXZ PROC	; __vcrt_va_start_verify_argument_type<unsigned int>, COMDAT

; 144  :         {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 145  :             static_assert(!__vcrt_va_list_is_reference<_Ty>::__the_value, "va_start argument must not have reference type and must not be parenthesized");
; 146  :         }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$__vcrt_va_start_verify_argument_type@I@@YAXXZ ENDP	; __vcrt_va_start_verify_argument_type<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\access.hpp
;	COMDAT ??$destroy@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@access@serialization@boost@@SAXPBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
_TEXT	SEGMENT
tv68 = -220						; size = 4
$T1 = -212						; size = 4
$T2 = -200						; size = 4
_t$ = 8							; size = 4
??$destroy@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@access@serialization@boost@@SAXPBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z PROC ; boost::serialization::access::destroy<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 120  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 121  :         // the const business is an MSVC 6.0 hack that should be
; 122  :         // benign on everything else
; 123  :         delete const_cast<T *>(t);

	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@destroy
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_G?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAXI@Z
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN1@destroy
$LN3@destroy:
	mov	DWORD PTR tv68[ebp], 0
$LN1@destroy:

; 124  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$destroy@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@access@serialization@boost@@SAXPBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ENDP ; boost::serialization::access::destroy<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UAEPAXI@Z PROC ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UAE@XZ ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	20					; 00000014H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UAEPAXI@Z ENDP ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\extended_type_info_typeid.hpp
;	COMDAT ?destroy@?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UBEXQBX@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
?destroy@?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UBEXQBX@Z PROC ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::destroy, COMDAT
; _this$ = ecx

; 134  :     virtual void destroy(void const * const p) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 135  :         boost::serialization::access::destroy(

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	??$destroy@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@access@serialization@boost@@SAXPBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::serialization::access::destroy<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 4

; 136  :             static_cast<T const *>(p)
; 137  :         );
; 138  :         //delete static_cast<T const * const>(p);
; 139  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UBEXQBX@Z ENDP ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\extended_type_info_typeid.hpp
;	COMDAT ?construct@?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UBAPAXIZZ
_TEXT	SEGMENT
tv65 = -208						; size = 4
_ap$ = -8						; size = 4
_this$ = 8						; size = 4
_count$ = 12						; size = 4
?construct@?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UBAPAXIZZ PROC ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::construct, COMDAT

; 113  :     virtual void * construct(unsigned int count, ...) const{

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 114  :         // count up the arguments
; 115  :         std::va_list ap;
; 116  :         va_start(ap, count);

	call	??$__vcrt_va_start_verify_argument_type@I@@YAXXZ ; __vcrt_va_start_verify_argument_type<unsigned int>
	lea	eax, DWORD PTR _count$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax

; 117  :         switch(count){

	mov	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	cmp	DWORD PTR tv65[ebp], 4
	ja	SHORT $LN9@construct
	mov	ecx, DWORD PTR tv65[ebp]
	jmp	DWORD PTR $LN12@construct[ecx*4]
$LN4@construct:

; 118  :         case 0:
; 119  :             return factory<typename boost::remove_const< T >::type, 0>(ap);

	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	call	??$factory@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$0A@@serialization@boost@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAD@Z ; boost::serialization::factory<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0>
	add	esp, 4
	jmp	SHORT $LN1@construct
$LN5@construct:

; 120  :         case 1:
; 121  :             return factory<typename boost::remove_const< T >::type, 1>(ap);

	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	call	??$factory@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$00@serialization@boost@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAD@Z ; boost::serialization::factory<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>
	add	esp, 4
	jmp	SHORT $LN1@construct
$LN6@construct:

; 122  :         case 2:
; 123  :             return factory<typename boost::remove_const< T >::type, 2>(ap);

	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	call	??$factory@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$01@serialization@boost@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAD@Z ; boost::serialization::factory<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,2>
	add	esp, 4
	jmp	SHORT $LN1@construct
$LN7@construct:

; 124  :         case 3:
; 125  :             return factory<typename boost::remove_const< T >::type, 3>(ap);

	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	call	??$factory@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$02@serialization@boost@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAD@Z ; boost::serialization::factory<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,3>
	add	esp, 4
	jmp	SHORT $LN1@construct
$LN8@construct:

; 126  :         case 4:
; 127  :             return factory<typename boost::remove_const< T >::type, 4>(ap);

	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	call	??$factory@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$03@serialization@boost@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAD@Z ; boost::serialization::factory<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,4>
	add	esp, 4
	jmp	SHORT $LN1@construct
$LN9@construct:

; 128  :         default:
; 129  :             BOOST_ASSERT(false); // too many arguments

	xor	eax, eax
	jne	SHORT $LN11@construct
	mov	esi, esp
	push	129					; 00000081H
	push	OFFSET ??_C@_1LC@ILBAKICL@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@construct:

; 130  :             // throw exception here?
; 131  :             return NULL;

	xor	eax, eax
$LN1@construct:

; 132  :         }
; 133  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN12@construct:
	DD	$LN4@construct
	DD	$LN5@construct
	DD	$LN6@construct
	DD	$LN7@construct
	DD	$LN8@construct
?construct@?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UBAPAXIZZ ENDP ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\extended_type_info_typeid.hpp
;	COMDAT ??1?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UAE@XZ PROC ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 94   :     ~extended_type_info_typeid(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@6B@

; 95   :         key_unregister();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?key_unregister@extended_type_info@serialization@boost@@IBEXXZ ; boost::serialization::extended_type_info::key_unregister

; 96   :         type_unregister();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?type_unregister@extended_type_info_typeid_0@typeid_system@serialization@boost@@IAEXXZ ; boost::serialization::typeid_system::extended_type_info_typeid_0::type_unregister

; 97   :     }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1extended_type_info_typeid_0@typeid_system@serialization@boost@@MAE@XZ ; boost::serialization::typeid_system::extended_type_info_typeid_0::~extended_type_info_typeid_0
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@UAE@XZ ENDP ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\extended_type_info_typeid.hpp
;	COMDAT ??0?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@QAE@XZ PROC ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 90   :     {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 87   :         typeid_system::extended_type_info_typeid_0(

	call	??$guid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@YAPBDXZ ; boost::serialization::guid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0extended_type_info_typeid_0@typeid_system@serialization@boost@@IAE@PBD@Z ; boost::serialization::typeid_system::extended_type_info_typeid_0::extended_type_info_typeid_0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 90   :     {

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@6B@

; 91   :         type_register(typeid(T));

	push	OFFSET ??_R0?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?type_register@extended_type_info_typeid_0@typeid_system@serialization@boost@@IAEXABVtype_info@@@Z ; boost::serialization::typeid_system::extended_type_info_typeid_0::type_register

; 92   :         key_register();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?key_register@extended_type_info@serialization@boost@@IBEXXZ ; boost::serialization::extended_type_info::key_register

; 93   :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1extended_type_info_typeid_0@typeid_system@serialization@boost@@MAE@XZ ; boost::serialization::typeid_system::extended_type_info_typeid_0::~extended_type_info_typeid_0
__ehhandler$??0?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@QAE@XZ ENDP ; boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?get_const_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@SAABV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ
_TEXT	SEGMENT
?get_const_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@SAABV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ PROC ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_const_instance, COMDAT

; 134  :     BOOST_DLLEXPORT static const T & get_const_instance(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 135  :         return get_instance();

	call	?get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance

; 136  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?get_const_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@SAABV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ ENDP ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_const_instance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ PROC ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance, COMDAT

; 121  :     BOOST_DLLEXPORT static T & get_instance() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 122  :         static detail::singleton_wrapper< T > t;

	mov	eax, DWORD PTR __tls_index
	mov	ecx, DWORD PTR fs:__tls_array
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR ?$TSS0@?1??get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@34@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::et_instance,signed char,std::D::ar_traits,singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::allocator<char> >
	cmp	eax, DWORD PTR __Init_thread_epoch[edx]
	jle	SHORT $LN2@get_instan
	push	OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@34@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::et_instance,signed char,std::D::ar_traits,singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::allocator<char> >
	call	__Init_thread_header
	add	esp, 4
	cmp	DWORD PTR ?$TSS0@?1??get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@34@XZ@4HA, -1 ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::et_instance,signed char,std::D::ar_traits,singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::allocator<char> >
	jne	SHORT $LN2@get_instan
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, OFFSET ?t@?1??get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@34@XZ@4V?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@34@A ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::t
	call	??0?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@QAE@XZ
	push	OFFSET ??__Ft@?1??get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ@YAXXZ ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::`dynamic atexit destructor for 't''
	call	_atexit
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@34@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::et_instance,signed char,std::D::ar_traits,singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::allocator<char> >
	call	__Init_thread_footer
	add	esp, 4
$LN2@get_instan:

; 123  :         // refer to instance, causing it to be instantiated (and
; 124  :         // initialized at startup on working compilers)
; 125  :         BOOST_ASSERT(! detail::singleton_wrapper< T >::m_is_destroyed);

	movzx	eax, BYTE PTR ?m_is_destroyed@?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@serialization@boost@@2_NA ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::m_is_destroyed
	test	eax, eax
	je	SHORT $LN4@get_instan
	mov	esi, esp
	push	125					; 0000007dH
	push	OFFSET ??_C@_1JC@GIHFICPP@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
	push	OFFSET ??_C@_1GC@KKEDEOBO@?$AA?$CB?$AA?5?$AAd?$AAe?$AAt?$AAa?$AAi?$AAl?$AA?3?$AA?3?$AAs?$AAi?$AAn?$AAg?$AAl?$AAe?$AAt?$AAo?$AAn?$AA_?$AAw?$AAr?$AAa?$AAp?$AAp?$AAe?$AAr?$AA?$DM?$AA?5?$AAT?$AA?5?$AA?$DO@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@get_instan:

; 126  :         use(& instance);

	mov	eax, DWORD PTR ?instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@A ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::instance
	push	eax
	call	?use@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAXPBV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@@Z ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::use
	add	esp, 4

; 127  :         return static_cast<T &>(t);

	mov	eax, OFFSET ?t@?1??get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@34@XZ@4V?$singleton_wrapper@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@detail@34@A ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::t

; 128  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ$0:
	push	OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@34@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::et_instance,signed char,std::D::ar_traits,singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::allocator<char> >
	call	__Init_thread_abort
	pop	ecx
	ret	0
__ehhandler$?get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?get_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ ENDP ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?use@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAXPBV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?use@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAXPBV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@@Z PROC ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::use, COMDAT

; 120  :     static void use(T const *) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?use@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@CAXPBV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@@Z ENDP ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::use
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__Ft@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ@YAXXZ
text$yd	SEGMENT
??__Ft@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ@YAXXZ PROC ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::`dynamic atexit destructor for 't'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?t@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@634@A ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::t
	call	??1?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__Ft@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ@YAXXZ ENDP ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::`dynamic atexit destructor for 't''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z PROC ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z ENDP ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ PROC ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@QAE@XZ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ ENDP ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ??1?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ PROC ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT
; _this$ = ecx

; 104  :     ~singleton_wrapper(){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@6B@

; 105  :         m_is_destroyed = true;

	mov	BYTE PTR ?m_is_destroyed@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@2_NA, 1 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::m_is_destroyed

; 106  :     }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UAE@XZ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ ENDP ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@load_standard@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
_TEXT	SEGMENT
_x$ = -8						; size = 4
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@load_standard@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_standard::invoke<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 408  :         static void invoke(Archive &ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 409  :             void * x = & const_cast<T &>(t);

	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR _x$[ebp], eax

; 410  :             ar.load_object(

	call	?get_const_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@SAABV?$iserializer@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_const_instance
	push	eax
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	call	?load_object@basic_iarchive@detail@archive@boost@@QAEXPAXABVbasic_iserializer@234@@Z ; boost::archive::detail::basic_iarchive::load_object

; 411  :                 x, 
; 412  :                 boost::serialization::singleton<
; 413  :                     iserializer<Archive, T>
; 414  :                 >::get_const_instance()
; 415  :             );
; 416  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@load_standard@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_standard::invoke<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_level@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_level@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_level<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 51   : inline void check_object_level(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 52   :     typedef 
; 53   :         typename mpl::greater_equal<
; 54   :             serialization::implementation_level< T >,
; 55   :             mpl::int_<serialization::primitive_type>
; 56   :         >::type typex;
; 57   : 
; 58   :     // trap attempts to serialize objects marked
; 59   :     // not_serializable
; 60   :     BOOST_STATIC_ASSERT(typex::value);
; 61   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_level@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_level<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 384  :         static void invoke(Archive & ar, T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 385  :             load_access::load_primitive(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$load_primitive@Vtext_iarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8

; 386  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_level@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_level@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_level<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 51   : inline void check_object_level(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 52   :     typedef 
; 53   :         typename mpl::greater_equal<
; 54   :             serialization::implementation_level< T >,
; 55   :             mpl::int_<serialization::primitive_type>
; 56   :         >::type typex;
; 57   : 
; 58   :     // trap attempts to serialize objects marked
; 59   :     // not_serializable
; 60   :     BOOST_STATIC_ASSERT(typex::value);
; 61   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_level@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_level<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UAEPAXI@Z PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UAE@XZ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UAEPAXI@Z ENDP ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??1?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UAE@XZ PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 134  :     virtual ~oserializer(){}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1basic_oserializer@detail@archive@boost@@MAE@XZ ; boost::archive::detail::basic_oserializer::~basic_oserializer
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UAE@XZ ENDP ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ?is_polymorphic@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?is_polymorphic@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NXZ PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::is_polymorphic, COMDAT
; _this$ = ecx

; 131  :     virtual bool is_polymorphic() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 132  :         return boost::is_polymorphic< T >::value;

	xor	al, al

; 133  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?is_polymorphic@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NXZ ENDP ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::is_polymorphic
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ?version@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE?AVversion_type@34@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?version@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE?AVversion_type@34@XZ PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::version, COMDAT
; _this$ = ecx

; 128  :     virtual version_type version() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 129  :         return version_type(::boost::serialization::version< T >::value);

	mov	DWORD PTR $T1[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0version_type@archive@boost@@QAE@ABI@Z ; boost::archive::version_type::version_type
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 130  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?version@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE?AVversion_type@34@XZ ENDP ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::version
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ?tracking@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NI@Z
_TEXT	SEGMENT
tv74 = -208						; size = 4
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?tracking@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NI@Z PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::tracking, COMDAT
; _this$ = ecx

; 123  :     virtual bool tracking(const unsigned int /* flags */) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 124  :         return boost::serialization::tracking_level< T >::value == boost::serialization::track_always

	xor	eax, eax
	jne	SHORT $LN4@tracking
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN3@tracking
	mov	ecx, DWORD PTR _this$[ebp]
	call	?serialized_as_pointer@basic_oserializer@detail@archive@boost@@QBE_NXZ ; boost::archive::detail::basic_oserializer::serialized_as_pointer
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@tracking
$LN3@tracking:
	mov	DWORD PTR tv74[ebp], 0
	jmp	SHORT $LN5@tracking
$LN4@tracking:
	mov	DWORD PTR tv74[ebp], 1
$LN5@tracking:
	mov	al, BYTE PTR tv74[ebp]

; 125  :             || (boost::serialization::tracking_level< T >::value == boost::serialization::track_selectively
; 126  :                 && serialized_as_pointer());
; 127  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?tracking@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NI@Z ENDP ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::tracking
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ?class_info@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?class_info@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NXZ PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::class_info, COMDAT
; _this$ = ecx

; 119  :     virtual bool class_info() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 120  :         return boost::serialization::implementation_level< T >::value 

	mov	al, 1

; 121  :             >= boost::serialization::object_class_info;
; 122  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?class_info@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBE_NXZ ENDP ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::class_info
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ?save_object_data@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBEXAAVbasic_oarchive@234@PBX@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
_ar$ = 8						; size = 4
_x$ = 12						; size = 4
?save_object_data@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBEXAAVbasic_oarchive@234@PBX@Z PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::save_object_data, COMDAT
; _this$ = ecx

; 145  : ) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 146  :     // make sure call is routed through the highest interface that might
; 147  :     // be specialized by the user.
; 148  :     BOOST_STATIC_ASSERT(boost::is_const< T >::value == false);
; 149  :     boost::serialization::serialize_adl(

	mov	esi, esp
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	??Bversion_type@archive@boost@@QAEAAIXZ	; boost::archive::version_type::operator unsigned int &
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _ar$[ebp]
	push	eax
	call	??$smart_cast_reference@AAVtext_oarchive@archive@boost@@Vbasic_oarchive@detail@23@@serialization@boost@@YAAAVtext_oarchive@archive@1@AAVbasic_oarchive@detail@31@@Z ; boost::serialization::smart_cast_reference<boost::archive::text_oarchive &,boost::archive::detail::basic_oarchive>
	add	esp, 4
	push	eax
	call	??$serialize_adl@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@I@Z ; boost::serialization::serialize_adl<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 12					; 0000000cH

; 150  :         boost::serialization::smart_cast_reference<Archive &>(ar),
; 151  :         * static_cast<T *>(const_cast<void *>(x)),
; 152  :         version()
; 153  :     );
; 154  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?save_object_data@?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UBEXAAVbasic_oarchive@234@PBX@Z ENDP ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::save_object_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??0?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@QAE@XZ PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 114  :     {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 108  :         basic_oserializer(

	call	?get_const_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@SAABV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_const_instance
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0basic_oserializer@detail@archive@boost@@IAE@ABVextended_type_info@serialization@3@@Z ; boost::archive::detail::basic_oserializer::basic_oserializer

; 114  :     {}

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@QAE@XZ ENDP ; boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?get_const_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@SAABV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ
_TEXT	SEGMENT
?get_const_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@SAABV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ PROC ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_const_instance, COMDAT

; 134  :     BOOST_DLLEXPORT static const T & get_const_instance(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 135  :         return get_instance();

	call	?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance

; 136  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?get_const_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@SAABV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ ENDP ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_const_instance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ PROC ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance, COMDAT

; 121  :     BOOST_DLLEXPORT static T & get_instance() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 122  :         static detail::singleton_wrapper< T > t;

	mov	eax, DWORD PTR __tls_index
	mov	ecx, DWORD PTR fs:__tls_array
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR ?$TSS0@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::et_instance,signed char,boost::archive::Vtext_oarchive::erializer,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	cmp	eax, DWORD PTR __Init_thread_epoch[edx]
	jle	SHORT $LN2@get_instan
	push	OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::et_instance,signed char,boost::archive::Vtext_oarchive::erializer,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	call	__Init_thread_header
	add	esp, 4
	cmp	DWORD PTR ?$TSS0@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4HA, -1 ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::et_instance,signed char,boost::archive::Vtext_oarchive::erializer,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	jne	SHORT $LN2@get_instan
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, OFFSET ?t@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@634@A ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::t
	call	??0?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ
	push	OFFSET ??__Ft@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ@YAXXZ ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::`dynamic atexit destructor for 't''
	call	_atexit
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::et_instance,signed char,boost::archive::Vtext_oarchive::erializer,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	call	__Init_thread_footer
	add	esp, 4
$LN2@get_instan:

; 123  :         // refer to instance, causing it to be instantiated (and
; 124  :         // initialized at startup on working compilers)
; 125  :         BOOST_ASSERT(! detail::singleton_wrapper< T >::m_is_destroyed);

	movzx	eax, BYTE PTR ?m_is_destroyed@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@detail@serialization@boost@@2_NA ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::m_is_destroyed
	test	eax, eax
	je	SHORT $LN4@get_instan
	mov	esi, esp
	push	125					; 0000007dH
	push	OFFSET ??_C@_1JC@GIHFICPP@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
	push	OFFSET ??_C@_1GC@KKEDEOBO@?$AA?$CB?$AA?5?$AAd?$AAe?$AAt?$AAa?$AAi?$AAl?$AA?3?$AA?3?$AAs?$AAi?$AAn?$AAg?$AAl?$AAe?$AAt?$AAo?$AAn?$AA_?$AAw?$AAr?$AAa?$AAp?$AAp?$AAe?$AAr?$AA?$DM?$AA?5?$AAT?$AA?5?$AA?$DO@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@get_instan:

; 126  :         use(& instance);

	mov	eax, DWORD PTR ?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@A ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::instance
	push	eax
	call	?use@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@@Z ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::use
	add	esp, 4

; 127  :         return static_cast<T &>(t);

	mov	eax, OFFSET ?t@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@634@A ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance'::`2'::t

; 128  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ$0:
	push	OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::et_instance,signed char,boost::archive::Vtext_oarchive::erializer,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	call	__Init_thread_abort
	pop	ecx
	ret	0
__ehhandler$?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ ENDP ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_instance
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?use@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?use@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@@Z PROC ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::use, COMDAT

; 120  :     static void use(T const *) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?use@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@@Z ENDP ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::use
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save_primitive@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save_primitive@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 87   :     static void save_primitive(Archive & ar, const  T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 88   :         ar.end_preamble();

	mov	ecx, DWORD PTR _ar$[ebp]
	call	?end_preamble@basic_oarchive@detail@archive@boost@@QAEXXZ ; boost::archive::detail::basic_oarchive::end_preamble

; 89   :         ar.save(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	call	?save@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save

; 90   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save_primitive@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\iterator\iterator_adaptor.hpp
;	COMDAT ??$equal@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@ABE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x$ = 8							; size = 4
??$equal@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@ABE_NABV012@@Z PROC ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::equal<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>, COMDAT
; _this$ = ecx

; 302  :       {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 303  :         // Maybe readd with same_distance
; 304  :         //           BOOST_STATIC_ASSERT(
; 305  :         //               (detail::same_category_and_difference<Derived,OtherDerived>::value)
; 306  :         //               );
; 307  :           return m_iterator == x.base();

	mov	ecx, DWORD PTR _x$[ebp]
	call	?base@?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QBEABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@XZ ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::base
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator==

; 308  :       }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$equal@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@ABE_NABV012@@Z ENDP ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::equal<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\locale
;	COMDAT ??$toupper@D@std@@YADDABVlocale@0@@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 1
__Loc$ = 12						; size = 4
??$toupper@D@std@@YADDABVlocale@0@@Z PROC		; std::toupper<char>, COMDAT

; 265  : 	{	// convert character to upper case, locale specific

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 266  : 	return (_USE(_Loc, ctype<_Elem>).toupper(_Ch));

	mov	esi, esp
	movzx	eax, BYTE PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Loc$[ebp]
	push	ecx
	call	??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<char> >
	add	esp, 4
	mov	ecx, eax
	call	DWORD PTR __imp_?toupper@?$ctype@D@std@@QBEDD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 267  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$toupper@D@std@@YADDABVlocale@0@@Z ENDP		; std::toupper<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\type_traits\integral_constant.hpp
;	COMDAT ??$dereference@$$CBU?$bool_@$00@mpl@boost@@@?$integral_constant@_N$00@boost@@SAABU?$bool_@$00@mpl@1@PBU231@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??$dereference@$$CBU?$bool_@$00@mpl@boost@@@?$integral_constant@_N$00@boost@@SAABU?$bool_@$00@mpl@1@PBU231@@Z PROC ; boost::integral_constant<bool,1>::dereference<boost::mpl::bool_<1> const >, COMDAT

; 88   :       static T& dereference(T* p) { return *p; }

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _p$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$dereference@$$CBU?$bool_@$00@mpl@boost@@@?$integral_constant@_N$00@boost@@SAABU?$bool_@$00@mpl@1@PBU231@@Z ENDP ; boost::integral_constant<bool,1>::dereference<boost::mpl::bool_<1> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 430  :     static void invoke(Archive & ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 431  :         typedef typename mpl::eval_if<
; 432  :                 // if its primitive
; 433  :                 mpl::equal_to<
; 434  :                     boost::serialization::implementation_level< T >,
; 435  :                     mpl::int_<boost::serialization::primitive_type>
; 436  :                 >,
; 437  :                 mpl::identity<load_primitive>,
; 438  :             // else
; 439  :             typename mpl::eval_if<
; 440  :             // class info / version
; 441  :             mpl::greater_equal<
; 442  :                         boost::serialization::implementation_level< T >,
; 443  :                         mpl::int_<boost::serialization::object_class_info>
; 444  :                     >,
; 445  :             // do standard load
; 446  :             mpl::identity<load_standard>,
; 447  :         // else
; 448  :         typename mpl::eval_if<
; 449  :             // no tracking
; 450  :                     mpl::equal_to<
; 451  :                         boost::serialization::tracking_level< T >,
; 452  :                         mpl::int_<boost::serialization::track_never>
; 453  :                 >,
; 454  :                 // do a fast load
; 455  :                 mpl::identity<load_only>,
; 456  :             // else
; 457  :             // do a fast load only tracking is turned off
; 458  :             mpl::identity<load_conditional>
; 459  :         > > >::type typex;
; 460  :         check_object_versioning< T >();

	call	??$check_object_versioning@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >

; 461  :         check_object_level< T >();

	call	??$check_object_level@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >

; 462  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@load_standard@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_standard::invoke<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 8

; 463  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_const_loading@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_const_loading@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_const_loading<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 152  : inline void check_const_loading(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 153  :     typedef
; 154  :         typename mpl::or_<
; 155  :             typename boost::serialization::is_wrapper< T >,
; 156  :             typename mpl::not_<
; 157  :                 typename boost::is_const< T >
; 158  :             >
; 159  :         >::type typex;
; 160  :     // cannot load data into a "const" object unless it's a
; 161  :     // wrapper around some other non-const object.
; 162  :     BOOST_STATIC_ASSERT(typex::value);
; 163  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_const_loading@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_const_loading<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 430  :     static void invoke(Archive & ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 431  :         typedef typename mpl::eval_if<
; 432  :                 // if its primitive
; 433  :                 mpl::equal_to<
; 434  :                     boost::serialization::implementation_level< T >,
; 435  :                     mpl::int_<boost::serialization::primitive_type>
; 436  :                 >,
; 437  :                 mpl::identity<load_primitive>,
; 438  :             // else
; 439  :             typename mpl::eval_if<
; 440  :             // class info / version
; 441  :             mpl::greater_equal<
; 442  :                         boost::serialization::implementation_level< T >,
; 443  :                         mpl::int_<boost::serialization::object_class_info>
; 444  :                     >,
; 445  :             // do standard load
; 446  :             mpl::identity<load_standard>,
; 447  :         // else
; 448  :         typename mpl::eval_if<
; 449  :             // no tracking
; 450  :                     mpl::equal_to<
; 451  :                         boost::serialization::tracking_level< T >,
; 452  :                         mpl::int_<boost::serialization::track_never>
; 453  :                 >,
; 454  :                 // do a fast load
; 455  :                 mpl::identity<load_only>,
; 456  :             // else
; 457  :             // do a fast load only tracking is turned off
; 458  :             mpl::identity<load_conditional>
; 459  :         > > >::type typex;
; 460  :         check_object_versioning< T >();

	call	??$check_object_versioning@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 461  :         check_object_level< T >();

	call	??$check_object_level@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 462  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8

; 463  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_const_loading@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_const_loading@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_const_loading<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 152  : inline void check_const_loading(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 153  :     typedef
; 154  :         typename mpl::or_<
; 155  :             typename boost::serialization::is_wrapper< T >,
; 156  :             typename mpl::not_<
; 157  :                 typename boost::is_const< T >
; 158  :             >
; 159  :         >::type typex;
; 160  :     // cannot load data into a "const" object unless it's a
; 161  :     // wrapper around some other non-const object.
; 162  :     BOOST_STATIC_ASSERT(typex::value);
; 163  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_const_loading@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_const_loading<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@save_standard@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@save_standard@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_standard::invoke<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 253  :         static void invoke(Archive &ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 254  :             ar.save_object(

	call	?get_const_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@SAABV?$oserializer@Vtext_oarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_const_instance
	push	eax
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	call	?save_object@basic_oarchive@detail@archive@boost@@QAEXPBXABVbasic_oserializer@234@@Z ; boost::archive::detail::basic_oarchive::save_object

; 255  :                 & t, 
; 256  :                 boost::serialization::singleton<
; 257  :                     oserializer<Archive, T>
; 258  :                 >::get_const_instance()
; 259  :             );
; 260  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@save_standard@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_standard::invoke<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 64   : inline void check_object_versioning(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_versioning@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 232  :         static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 233  :             save_access::save_primitive(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$save_primitive@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8

; 234  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 64   : inline void check_object_versioning(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_versioning@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\iterator\iterator_facade.hpp
;	COMDAT ??$equal@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V123@@iterator_core_access@iterators@boost@@CA_NABV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@12@0U?$bool_@$00@mpl@2@@Z
_TEXT	SEGMENT
_f1$ = 8						; size = 4
_f2$ = 12						; size = 4
___formal$ = 16						; size = 1
??$equal@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V123@@iterator_core_access@iterators@boost@@CA_NABV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@12@0U?$bool_@$00@mpl@2@@Z PROC ; boost::iterators::iterator_core_access::equal<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >, COMDAT

; 566  :       {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 567  :           return f1.equal(f2);

	mov	eax, DWORD PTR _f2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _f1$[ebp]
	call	??$equal@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@ABE_NABV012@@Z ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::equal<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>

; 568  :       }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$equal@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V123@@iterator_core_access@iterators@boost@@CA_NABV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@12@0U?$bool_@$00@mpl@2@@Z ENDP ; boost::iterators::iterator_core_access::equal<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\iterator\iterator_facade.hpp
;	COMDAT ??$?8V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@12@DHV012@DU312@DH@iterators@boost@@YA_NABV?$iterator_facade@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH@01@0@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
_lhs$ = 8						; size = 4
_rhs$ = 12						; size = 4
??$?8V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@12@DHV012@DU312@DH@iterators@boost@@YA_NABV?$iterator_facade@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH@01@0@Z PROC ; boost::iterators::operator==<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int,boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int>, COMDAT

; 899  :   BOOST_ITERATOR_FACADE_RELATION(==, return, equal)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	lea	ecx, DWORD PTR $T1[ebp]
	call	??B?$integral_constant@_N$00@boost@@QBEABU?$bool_@$00@mpl@1@XZ ; boost::integral_constant<bool,1>::operator boost::mpl::bool_<1> const &
	mov	al, BYTE PTR [eax]
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _rhs$[ebp]
	push	edx
	mov	eax, DWORD PTR _lhs$[ebp]
	push	eax
	call	??$equal@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V123@@iterator_core_access@iterators@boost@@CA_NABV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@12@0U?$bool_@$00@mpl@2@@Z ; boost::iterators::iterator_core_access::equal<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?8V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@12@DHV012@DU312@DH@iterators@boost@@YA_NABV?$iterator_facade@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH@01@0@Z ENDP ; boost::iterators::operator==<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int,boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@$$CBD@std@@YAPBDABD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBD@std@@YAPBDABD@Z PROC			; std::addressof<char const >, COMDAT

; 724  : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 725  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 726  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@$$CBD@std@@YAPBDABD@Z ENDP			; std::addressof<char const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PBD@std@@SAPBDABD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PBD@std@@SAPBDABD@Z PROC	; std::pointer_traits<char const *>::pointer_to, COMDAT

; 279  : 		{	// convert raw reference to pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 280  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@$$CBD@std@@YAPBDABD@Z	; std::addressof<char const >
	add	esp, 4

; 281  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PBD@std@@SAPBDABD@Z ENDP	; std::pointer_traits<char const *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\iterator\iterator_facade.hpp
;	COMDAT ??$dereference@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@iterator_core_access@iterators@boost@@CADABV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@12@@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
??$dereference@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@iterator_core_access@iterators@boost@@CADABV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@12@@Z PROC ; boost::iterators::iterator_core_access::dereference<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >, COMDAT

; 548  :       {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 549  :           return f.dereference();

	mov	ecx, DWORD PTR _f$[ebp]
	call	?dereference@?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@ABEDXZ ; boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>::dereference

; 550  :       }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$dereference@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@iterator_core_access@iterators@boost@@CADABV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@12@@Z ENDP ; boost::iterators::iterator_core_access::dereference<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\iterator\iterator_facade.hpp
;	COMDAT ??$increment@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@iterator_core_access@iterators@boost@@CAXAAV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@12@@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
??$increment@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@iterator_core_access@iterators@boost@@CAXAAV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@12@@Z PROC ; boost::iterators::iterator_core_access::increment<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >, COMDAT

; 554  :       {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 555  :           f.increment();

	mov	ecx, DWORD PTR _f$[ebp]
	call	?increment@?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@AAEXXZ ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::increment

; 556  :       }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$increment@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@iterator_core_access@iterators@boost@@CAXAAV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@12@@Z ENDP ; boost::iterators::iterator_core_access::increment<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 743  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 744  : 		_Ptr->~_Uty();

	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z

; 745  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@archive@boost@@YAXAAVtext_iarchive@01@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@archive@boost@@YAXAAVtext_iarchive@01@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z PROC ; boost::archive::load<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 598  : inline void load(Archive & ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 599  :     // if this assertion trips. It means we're trying to load a
; 600  :     // const object with a compiler that doesn't have correct
; 601  :     // funtion template ordering.  On other compilers, this is
; 602  :     // handled below.
; 603  :     detail::check_const_loading< T >();

	call	??$check_const_loading@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >

; 604  :     typedef
; 605  :         typename mpl::eval_if<is_pointer< T >,
; 606  :             mpl::identity<detail::load_pointer_type<Archive> >
; 607  :         ,//else
; 608  :         typename mpl::eval_if<is_array< T >,
; 609  :             mpl::identity<detail::load_array_type<Archive> >
; 610  :         ,//else
; 611  :         typename mpl::eval_if<is_enum< T >,
; 612  :             mpl::identity<detail::load_enum_type<Archive> >
; 613  :         ,//else
; 614  :             mpl::identity<detail::load_non_pointer_type<Archive> >
; 615  :         >
; 616  :         >
; 617  :         >::type typex;
; 618  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 8

; 619  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$load@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@archive@boost@@YAXAAVtext_iarchive@01@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ENDP ; boost::archive::load<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load@Vtext_iarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@archive@boost@@YAXAAVtext_iarchive@01@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load@Vtext_iarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@archive@boost@@YAXAAVtext_iarchive@01@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::load<boost::archive::text_iarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 598  : inline void load(Archive & ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 599  :     // if this assertion trips. It means we're trying to load a
; 600  :     // const object with a compiler that doesn't have correct
; 601  :     // funtion template ordering.  On other compilers, this is
; 602  :     // handled below.
; 603  :     detail::check_const_loading< T >();

	call	??$check_const_loading@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 604  :     typedef
; 605  :         typename mpl::eval_if<is_pointer< T >,
; 606  :             mpl::identity<detail::load_pointer_type<Archive> >
; 607  :         ,//else
; 608  :         typename mpl::eval_if<is_array< T >,
; 609  :             mpl::identity<detail::load_array_type<Archive> >
; 610  :         ,//else
; 611  :         typename mpl::eval_if<is_enum< T >,
; 612  :             mpl::identity<detail::load_enum_type<Archive> >
; 613  :         ,//else
; 614  :             mpl::identity<detail::load_non_pointer_type<Archive> >
; 615  :         >
; 616  :         >
; 617  :         >::type typex;
; 618  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8

; 619  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$load@Vtext_iarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@archive@boost@@YAXAAVtext_iarchive@01@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::load<boost::archive::text_iarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 277  :     static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 278  :         typedef 
; 279  :             typename mpl::eval_if<
; 280  :             // if its primitive
; 281  :                 mpl::equal_to<
; 282  :                     boost::serialization::implementation_level< T >,
; 283  :                     mpl::int_<boost::serialization::primitive_type>
; 284  :                 >,
; 285  :                 mpl::identity<save_primitive>,
; 286  :             // else
; 287  :             typename mpl::eval_if<
; 288  :                 // class info / version
; 289  :                 mpl::greater_equal<
; 290  :                     boost::serialization::implementation_level< T >,
; 291  :                     mpl::int_<boost::serialization::object_class_info>
; 292  :                 >,
; 293  :                 // do standard save
; 294  :                 mpl::identity<save_standard>,
; 295  :             // else
; 296  :             typename mpl::eval_if<
; 297  :                     // no tracking
; 298  :                 mpl::equal_to<
; 299  :                     boost::serialization::tracking_level< T >,
; 300  :                     mpl::int_<boost::serialization::track_never>
; 301  :                 >,
; 302  :                 // do a fast save
; 303  :                 mpl::identity<save_only>,
; 304  :             // else
; 305  :                 // do a fast save only tracking is turned off
; 306  :                 mpl::identity<save_conditional>
; 307  :             > > >::type typex; 
; 308  :         check_object_versioning< T >();

	call	??$check_object_versioning@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >

; 309  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@save_standard@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_standard::invoke<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 8

; 310  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 277  :     static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 278  :         typedef 
; 279  :             typename mpl::eval_if<
; 280  :             // if its primitive
; 281  :                 mpl::equal_to<
; 282  :                     boost::serialization::implementation_level< T >,
; 283  :                     mpl::int_<boost::serialization::primitive_type>
; 284  :                 >,
; 285  :                 mpl::identity<save_primitive>,
; 286  :             // else
; 287  :             typename mpl::eval_if<
; 288  :                 // class info / version
; 289  :                 mpl::greater_equal<
; 290  :                     boost::serialization::implementation_level< T >,
; 291  :                     mpl::int_<boost::serialization::object_class_info>
; 292  :                 >,
; 293  :                 // do standard save
; 294  :                 mpl::identity<save_standard>,
; 295  :             // else
; 296  :             typename mpl::eval_if<
; 297  :                     // no tracking
; 298  :                 mpl::equal_to<
; 299  :                     boost::serialization::tracking_level< T >,
; 300  :                     mpl::int_<boost::serialization::track_never>
; 301  :                 >,
; 302  :                 // do a fast save
; 303  :                 mpl::identity<save_only>,
; 304  :             // else
; 305  :                 // do a fast save only tracking is turned off
; 306  :                 mpl::identity<save_conditional>
; 307  :             > > >::type typex; 
; 308  :         check_object_versioning< T >();

	call	??$check_object_versioning@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 309  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8

; 310  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\iterator\iterator_facade.hpp
;	COMDAT ??$?9V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@12@DHV012@DU312@DH@iterators@boost@@YA_NABV?$iterator_facade@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH@01@0@Z
_TEXT	SEGMENT
tv84 = -208						; size = 4
$T1 = -197						; size = 1
_lhs$ = 8						; size = 4
_rhs$ = 12						; size = 4
??$?9V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@12@DHV012@DU312@DH@iterators@boost@@YA_NABV?$iterator_facade@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH@01@0@Z PROC ; boost::iterators::operator!=<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int,boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int>, COMDAT

; 900  :   BOOST_ITERATOR_FACADE_RELATION(!=, return !, equal)

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	lea	ecx, DWORD PTR $T1[ebp]
	call	??B?$integral_constant@_N$00@boost@@QBEABU?$bool_@$00@mpl@1@XZ ; boost::integral_constant<bool,1>::operator boost::mpl::bool_<1> const &
	mov	al, BYTE PTR [eax]
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _rhs$[ebp]
	push	edx
	mov	eax, DWORD PTR _lhs$[ebp]
	push	eax
	call	??$equal@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V123@@iterator_core_access@iterators@boost@@CA_NABV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@12@0U?$bool_@$00@mpl@2@@Z ; boost::iterators::iterator_core_access::equal<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >
	add	esp, 12					; 0000000cH
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv84[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv84[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv84[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?9V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@12@DHV012@DU312@DH@iterators@boost@@YA_NABV?$iterator_facade@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH@01@0@Z ENDP ; boost::iterators::operator!=<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int,boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_range2@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WIUinput_iterator_tag@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 16
__Last$ = 24						; size = 16
___formal$ = 40						; size = 4
___formal$ = 44						; size = 4
___formal$ = 48						; size = 1
??$_Debug_range2@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WIUinput_iterator_tag@0@@Z PROC ; std::_Debug_range2<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >, COMDAT

; 946  : 	{	// test iterator pair for valid range, arbitrary iterators

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Debug_range2@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WIUinput_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 947  : 	static_cast<void>(_First == _Last);	// make sure they're comparable

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$?8V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@12@DHV012@DU312@DH@iterators@boost@@YA_NABV?$iterator_facade@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH@01@0@Z ; boost::iterators::operator==<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int,boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int>
	add	esp, 8

; 948  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Debug_range2@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WIUinput_iterator_tag@0@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ
__unwindfunclet$??$_Debug_range2@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WIUinput_iterator_tag@0@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ
__ehhandler$??$_Debug_range2@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WIUinput_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Debug_range2@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WIUinput_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Debug_range2@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WIUinput_iterator_tag@0@@Z ENDP ; std::_Debug_range2<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0ABV?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??$?0ABV?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> const &>, COMDAT
; _this$ = ecx

; 952  : 		{	// construct from a related allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@ABV?$allocator@D@std@@@std@@YAABV?$allocator@D@0@ABV10@@Z ; std::forward<std::allocator<char> const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>

; 953  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0ABV?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 863  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 864  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 865  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ??$load_override@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 65   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   :         archive::load(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	push	eax
	call	??$load@Vtext_iarchive@archive@boost@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@archive@boost@@YAXAAVtext_iarchive@01@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::load<boost::archive::text_iarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 8

; 67   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ??$load_override@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 65   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   :         archive::load(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	push	eax
	call	??$load@Vtext_iarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@archive@boost@@YAXAAVtext_iarchive@01@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::load<boost::archive::text_iarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8

; 67   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@$$CBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@archive@boost@@YAXAAVtext_oarchive@01@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@$$CBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@archive@boost@@YAXAAVtext_oarchive@01@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z PROC ; boost::archive::save<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const >, COMDAT

; 511  : inline void save(Archive & ar, /*const*/ T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 512  :     typedef 
; 513  :         typename mpl::eval_if<is_pointer< T >,
; 514  :             mpl::identity<detail::save_pointer_type<Archive> >,
; 515  :         //else
; 516  :         typename mpl::eval_if<is_enum< T >,
; 517  :             mpl::identity<detail::save_enum_type<Archive> >,
; 518  :         //else
; 519  :         typename mpl::eval_if<is_array< T >,
; 520  :             mpl::identity<detail::save_array_type<Archive> >,
; 521  :         //else
; 522  :             mpl::identity<detail::save_non_pointer_type<Archive> >
; 523  :         >
; 524  :         >
; 525  :         >::type typex;
; 526  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 8

; 527  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save@Vtext_oarchive@archive@boost@@$$CBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@archive@boost@@YAXAAVtext_oarchive@01@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ENDP ; boost::archive::save<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@archive@boost@@YAXAAVtext_oarchive@01@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@archive@boost@@YAXAAVtext_oarchive@01@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::save<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >, COMDAT

; 511  : inline void save(Archive & ar, /*const*/ T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 512  :     typedef 
; 513  :         typename mpl::eval_if<is_pointer< T >,
; 514  :             mpl::identity<detail::save_pointer_type<Archive> >,
; 515  :         //else
; 516  :         typename mpl::eval_if<is_enum< T >,
; 517  :             mpl::identity<detail::save_enum_type<Archive> >,
; 518  :         //else
; 519  :         typename mpl::eval_if<is_array< T >,
; 520  :             mpl::identity<detail::save_array_type<Archive> >,
; 521  :         //else
; 522  :             mpl::identity<detail::save_non_pointer_type<Archive> >
; 523  :         >
; 524  :         >
; 525  :         >::type typex;
; 526  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8

; 527  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save@Vtext_oarchive@archive@boost@@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@archive@boost@@YAXAAVtext_oarchive@01@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::save<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??$_Construct@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0Uinput_iterator_tag@1@@Z
_TEXT	SEGMENT
tv136 = -221						; size = 1
tv135 = -221						; size = 1
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 16
__Last$ = 24						; size = 16
___formal$ = 40						; size = 1
??$_Construct@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0Uinput_iterator_tag@1@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >, COMDAT
; _this$ = ecx

; 876  : 		{	// initialize from [_First, _Last), input iterators

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0Uinput_iterator_tag@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 1

; 877  : 		_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 878  : 		for (; _First != _Last; ++_First)

	jmp	SHORT $LN4@Construct
$LN2@Construct:
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$iterator_facade_base@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH$0A@$0A@@detail@iterators@boost@@QAEAAV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@23@XZ ; boost::iterators::detail::iterator_facade_base<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int,0,0>::operator++
$LN4@Construct:
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$?9V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@12@DHV012@DU312@DH@iterators@boost@@YA_NABV?$iterator_facade@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH@01@0@Z ; boost::iterators::operator!=<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int,boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int>
	add	esp, 8
	mov	BYTE PTR tv135[ebp], al
	movzx	edx, BYTE PTR tv135[ebp]
	test	edx, edx
	je	SHORT $LN3@Construct

; 879  : 			append((size_type)1, (_Elem)*_First);

	lea	ecx, DWORD PTR __First$[ebp]
	call	??D?$iterator_facade_base@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH$0A@$0A@@detail@iterators@boost@@QBEDXZ ; boost::iterators::detail::iterator_facade_base<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int,0,0>::operator*
	mov	BYTE PTR tv136[ebp], al
	movzx	eax, BYTE PTR tv136[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	jmp	SHORT $LN2@Construct
$LN3@Construct:
	jmp	SHORT $LN7@Construct
__catch$??$_Construct@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0Uinput_iterator_tag@1@@Z$0:

; 880  : 		_CATCH_ALL
; 881  : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 882  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 883  : 		_CATCH_END

	mov	eax, $LN12@Construct
	ret	0
$LN7@Construct:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$??$_Construct@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0Uinput_iterator_tag@1@@Z$1
$LN12@Construct:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$??$_Construct@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0Uinput_iterator_tag@1@@Z$1:

; 884  : 		}

	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ
$LN6@Construct:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0Uinput_iterator_tag@1@@Z$2:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ
__unwindfunclet$??$_Construct@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0Uinput_iterator_tag@1@@Z$3:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ
__ehhandler$??$_Construct@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0Uinput_iterator_tag@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-228]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0Uinput_iterator_tag@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0Uinput_iterator_tag@1@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Unchecked@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V123@@Z
_TEXT	SEGMENT
$T2 = -212						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Src$ = 12						; size = 16
??$_Unchecked@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V123@@Z PROC ; std::_Unchecked<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >, COMDAT

; 427  : 	{	// construct unchecked from checked, generic

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Unchecked@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V123@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 428  : 	return (_Src);

	lea	eax, DWORD PTR __Src$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@$$QAV012@@Z
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Src$[ebp]
	call	??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 429  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Unchecked@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V123@@Z$0:
	lea	ecx, DWORD PTR __Src$[ebp]
	jmp	??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ
__ehhandler$??$_Unchecked@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V123@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Unchecked@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V123@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Unchecked@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V123@@Z ENDP ; std::_Unchecked<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_range@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WI@Z
_TEXT	SEGMENT
tv144 = -264						; size = 4
tv141 = -260						; size = 4
tv147 = -256						; size = 4
$T2 = -248						; size = 4
$T3 = -236						; size = 4
$T4 = -221						; size = 1
$T5 = -209						; size = 1
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 16
__Last$ = 24						; size = 16
__File$ = 40						; size = 4
__Line$ = 44						; size = 4
??$_Debug_range@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WI@Z PROC ; std::_Debug_range<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >, COMDAT

; 966  : 	{	// test iterator pair for valid range

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Debug_range@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 967  : 	_Debug_range2(_First, _Last, _File, _Line, _Iter_cat_t<_InIt>());

	xor	eax, eax
	mov	BYTE PTR $T5[ebp], al
	movzx	ecx, BYTE PTR $T4[ebp]
	push	ecx
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@ABV012@@Z
	mov	DWORD PTR tv147[ebp], eax
	mov	eax, DWORD PTR tv147[ebp]
	mov	DWORD PTR tv141[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@ABV012@@Z
	mov	DWORD PTR tv144[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Debug_range2@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WIUinput_iterator_tag@0@@Z ; std::_Debug_range2<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >
	add	esp, 44					; 0000002cH

; 968  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Debug_range@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WI@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ
__unwindfunclet$??$_Debug_range@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WI@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ
__unwindfunclet$??$_Debug_range@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WI@Z$2:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ
__ehhandler$??$_Debug_range@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-268]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Debug_range@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Debug_range@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WI@Z ENDP ; std::_Debug_range<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\range\end.hpp
;	COMDAT ??$range_end@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
___$ReturnUdt$ = 8					; size = 4
_c$ = 12						; size = 4
??$range_end@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z PROC ; boost::range_detail::range_end<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >, COMDAT

; 42   :         {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR $T1[ebp], 0

; 43   :             //
; 44   :             // If you get a compile-error here, it is most likely because
; 45   :             // you have not implemented range_begin() properly in
; 46   :             // the namespace of C
; 47   :             //
; 48   :             return c.end();

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	call	?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 49   :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$range_end@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ENDP ; boost::range_detail::range_end<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\range\begin.hpp
;	COMDAT ??$range_begin@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
___$ReturnUdt$ = 8					; size = 4
_c$ = 12						; size = 4
??$range_begin@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z PROC ; boost::range_detail::range_begin<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >, COMDAT

; 41   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR $T1[ebp], 0

; 42   :         //
; 43   :         // If you get a compile-error here, it is most likely because
; 44   :         // you have not implemented range_begin() properly in
; 45   :         // the namespace of C
; 46   :         //
; 47   :         return c.begin();

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 48   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$range_begin@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ENDP ; boost::range_detail::range_begin<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0ABV?$allocator@D@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0ABV?$allocator@D@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>, COMDAT
; _this$ = ecx

; 289  : 		{	// construct from forwarded values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 287  : 		: _Ty1(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@ABV?$allocator@D@std@@@std@@YAABV?$allocator@D@0@ABV10@@Z ; std::forward<std::allocator<char> const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0ABV?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> const &>

; 288  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 290  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0ABV?$allocator@D@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@ABV?$allocator@D@std@@@std@@YAABV?$allocator@D@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$allocator@D@std@@@std@@YAABV?$allocator@D@0@ABV10@@Z PROC ; std::forward<std::allocator<char> const &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABV?$allocator@D@std@@@std@@YAABV?$allocator@D@0@ABV10@@Z ENDP ; std::forward<std::allocator<char> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 1002 : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1003 : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8

; 1004 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z PROC ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 739  : 	{	// do nothing for plain pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 740  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 741  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z ENDP ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
tv74 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN1@construct:

; 738  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx

; 743  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 744  : 		_Ptr->~_Uty();
; 745  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN1@construct:

; 738  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 743  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 744  : 		_Ptr->~_Uty();
; 745  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iarchive.hpp
;	COMDAT ??$load_override@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z PROC ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 69   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->detail_common_iarchive::load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load_override@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ENDP ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iarchive.hpp
;	COMDAT ??$load_override@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 69   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->detail_common_iarchive::load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load_override@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ??$save_override@$$CBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const >, COMDAT
; _this$ = ecx

; 69   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         archive::save(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	push	eax
	call	??$save@Vtext_oarchive@archive@boost@@$$CBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@archive@boost@@YAXAAVtext_oarchive@01@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::save<boost::archive::text_oarchive,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const >
	add	esp, 8

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >, COMDAT
; _this$ = ecx

; 69   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         archive::save(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	push	eax
	call	??$save@Vtext_oarchive@archive@boost@@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@archive@boost@@YAXAAVtext_oarchive@01@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::save<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
	add	esp, 8

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??$?0V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@X@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
tv225 = -336						; size = 4
tv223 = -332						; size = 4
tv222 = -328						; size = 4
tv219 = -324						; size = 4
tv213 = -324						; size = 4
tv217 = -320						; size = 4
tv210 = -320						; size = 4
tv216 = -316						; size = 4
tv71 = -316						; size = 4
$T2 = -308						; size = 4
$T3 = -296						; size = 4
$T4 = -284						; size = 4
$T5 = -272						; size = 4
$T6 = -257						; size = 1
$T7 = -245						; size = 1
$T8 = -236						; size = 4
$T9 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 16
__Last$ = 24						; size = 16
__Al$ = 40						; size = 4
??$?0V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@X@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0ABV?$allocator@D@1@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,void>, COMDAT
; _this$ = ecx

; 867  : 		{	// construct from [_First, _Last) with optional allocator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@X@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0ABV?$allocator@D@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 324				; 00000144H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-336]
	mov	ecx, 81					; 00000051H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 866  : 		: _Mybase(_Al)

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0ABV?$allocator@D@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::allocator<char> const &,void>
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 868  : 		_DEBUG_RANGE(_First, _Last);

	push	868					; 00000364H
	push	OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR $T9[ebp], esp
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??0?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@ABV012@@Z
	mov	DWORD PTR tv71[ebp], eax
	mov	ecx, DWORD PTR tv71[ebp]
	mov	DWORD PTR tv210[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR $T8[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@ABV012@@Z
	mov	DWORD PTR tv213[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	call	??$_Debug_range@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YAXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0PB_WI@Z ; std::_Debug_range<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >
	add	esp, 40					; 00000028H

; 869  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 870  : 		_Construct(_Unchecked(_First), _Unchecked(_Last), _Iter_cat_t<_Iter>());

	xor	eax, eax
	mov	BYTE PTR $T7[ebp], al
	movzx	ecx, BYTE PTR $T6[ebp]
	push	ecx
	sub	esp, 16					; 00000010H
	mov	esi, esp
	mov	DWORD PTR $T5[ebp], esp
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@ABV012@@Z
	mov	DWORD PTR tv216[ebp], eax
	push	esi
	call	??$_Unchecked@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V123@@Z ; std::_Unchecked<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >
	add	esp, 20					; 00000014H
	mov	DWORD PTR tv217[ebp], eax
	mov	eax, DWORD PTR tv217[ebp]
	mov	DWORD PTR tv219[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	sub	esp, 16					; 00000010H
	mov	esi, esp
	mov	DWORD PTR $T3[ebp], esp
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@ABV012@@Z
	mov	DWORD PTR tv222[ebp], eax
	push	esi
	call	??$_Unchecked@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@std@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V123@@Z ; std::_Unchecked<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >
	add	esp, 20					; 00000014H
	mov	DWORD PTR tv223[ebp], eax
	mov	eax, DWORD PTR tv223[ebp]
	mov	DWORD PTR tv225[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Construct@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0Uinput_iterator_tag@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >

; 871  : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 336				; 00000150H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@X@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0ABV?$allocator@D@1@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ
__unwindfunclet$??$?0V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@X@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0ABV?$allocator@D@1@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ
__unwindfunclet$??$?0V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@X@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0ABV?$allocator@D@1@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
__unwindfunclet$??$?0V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@X@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0ABV?$allocator@D@1@@Z$3:
	mov	ecx, DWORD PTR $T9[ebp]
	jmp	??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ
__unwindfunclet$??$?0V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@X@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0ABV?$allocator@D@1@@Z$6:
	mov	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ
__ehhandler$??$?0V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@X@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0ABV?$allocator@D@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-340]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@X@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0ABV?$allocator@D@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@X@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0ABV?$allocator@D@1@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,void>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\range\end.hpp
;	COMDAT ??$end@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_adl_barrier@boost@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
___$ReturnUdt$ = 8					; size = 4
_r$ = 12						; size = 4
??$end@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_adl_barrier@boost@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z PROC ; boost::range_adl_barrier::end<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 101  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR $T1[ebp], 0

; 102  : #if !BOOST_WORKAROUND(__BORLANDC__, BOOST_TESTED_AT(0x564))
; 103  :     using namespace range_detail;
; 104  : #endif
; 105  :     return range_end( r );

	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	call	??$range_end@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; boost::range_detail::range_end<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
	add	esp, 8
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 106  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$end@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_adl_barrier@boost@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ENDP ; boost::range_adl_barrier::end<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@$$QAV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@$$QAV012@@Z PROC ; boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QAE@$$QAV012@@Z
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@$$QAV012@@Z ENDP ; boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@ABV012@@Z PROC ; boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QAE@ABV012@@Z
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@ABV012@@Z ENDP ; boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ PROC ; boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>::~transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ ENDP ; boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>::~transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\iterator\transform_iterator.hpp
;	COMDAT ?dereference@?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@ABEDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?dereference@?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@ABEDXZ PROC ; boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>::dereference, COMDAT
; _this$ = ecx

; 122  :     { return m_f(*this->base()); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?base@?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QBEABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@XZ ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::base
	mov	ecx, eax
	call	??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEABDXZ ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
	mov	al, BYTE PTR [eax]
	movzx	ecx, al
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??R?$to_upperF@D@detail@algorithm@boost@@QBEDD@Z ; boost::algorithm::detail::to_upperF<char>::operator()
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?dereference@?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@ABEDXZ ENDP ; boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>::dereference
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\iterator\transform_iterator.hpp
;	COMDAT ??0?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@ABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@U?$to_upperF@D@detail@algorithm@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x$ = 8							; size = 4
_f$ = 12						; size = 4
??0?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@ABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@U?$to_upperF@D@detail@algorithm@2@@Z PROC ; boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>, COMDAT
; _this$ = ecx

; 88   :       : super_t(x), m_f(f) { }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QAE@ABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@Z ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _f$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@ABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@U?$to_upperF@D@detail@algorithm@2@@Z ENDP ; boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QAE@$$QAV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QAE@$$QAV012@@Z PROC ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QAE@$$QAV012@@Z ENDP ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QAE@ABV012@@Z PROC ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QAE@ABV012@@Z ENDP ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QAE@XZ PROC ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::~iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QAE@XZ ENDP ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::~iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\iterator\iterator_adaptor.hpp
;	COMDAT ?increment@?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?increment@?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@AAEXXZ PROC ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::increment, COMDAT
; _this$ = ecx

; 323  :       void increment() { ++m_iterator; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAEAAV01@XZ ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator++
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?increment@?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@AAEXXZ ENDP ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::increment
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\iterator\iterator_adaptor.hpp
;	COMDAT ?base@?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QBEABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?base@?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QBEABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@XZ PROC ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::base, COMDAT
; _this$ = ecx

; 273  :         { return m_iterator; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?base@?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QBEABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@XZ ENDP ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\iterator\iterator_adaptor.hpp
;	COMDAT ??0?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QAE@ABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iter$ = 8						; size = 4
??0?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QAE@ABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@Z PROC ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>, COMDAT
; _this$ = ecx

; 267  :       {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 266  :           : m_iterator(iter)

	mov	eax, DWORD PTR _iter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z

; 268  :       }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$iterator_adaptor@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DUuse_default@23@DU623@@iterators@boost@@QAE@ABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@Z ENDP ; boost::iterators::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>::iterator_adaptor<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,char,boost::iterators::use_default,char,boost::iterators::use_default>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\iterator\iterator_facade.hpp
;	COMDAT ?derived@?$iterator_facade_base@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH$0A@$0A@@detail@iterators@boost@@IBEABV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@34@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?derived@?$iterator_facade_base@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH$0A@$0A@@detail@iterators@boost@@IBEABV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@34@XZ PROC ; boost::iterators::detail::iterator_facade_base<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int,0,0>::derived, COMDAT
; _this$ = ecx

; 679  :         {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 680  :             return *static_cast<Derived const*>(this);

	mov	eax, DWORD PTR _this$[ebp]

; 681  :         }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?derived@?$iterator_facade_base@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH$0A@$0A@@detail@iterators@boost@@IBEABV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@34@XZ ENDP ; boost::iterators::detail::iterator_facade_base<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int,0,0>::derived
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\iterator\iterator_facade.hpp
;	COMDAT ?derived@?$iterator_facade_base@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH$0A@$0A@@detail@iterators@boost@@IAEAAV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@34@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?derived@?$iterator_facade_base@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH$0A@$0A@@detail@iterators@boost@@IAEAAV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@34@XZ PROC ; boost::iterators::detail::iterator_facade_base<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int,0,0>::derived, COMDAT
; _this$ = ecx

; 674  :         {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 675  :             return *static_cast<Derived*>(this);

	mov	eax, DWORD PTR _this$[ebp]

; 676  :         }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?derived@?$iterator_facade_base@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH$0A@$0A@@detail@iterators@boost@@IAEAAV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@34@XZ ENDP ; boost::iterators::detail::iterator_facade_base<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int,0,0>::derived
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\iterator\iterator_facade.hpp
;	COMDAT ??E?$iterator_facade_base@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH$0A@$0A@@detail@iterators@boost@@QAEAAV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@23@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??E?$iterator_facade_base@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH$0A@$0A@@detail@iterators@boost@@QAEAAV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@23@XZ PROC ; boost::iterators::detail::iterator_facade_base<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int,0,0>::operator++, COMDAT
; _this$ = ecx

; 664  :         {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 665  :             iterator_core_access::increment(this->derived());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?derived@?$iterator_facade_base@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH$0A@$0A@@detail@iterators@boost@@IAEAAV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@34@XZ ; boost::iterators::detail::iterator_facade_base<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int,0,0>::derived
	push	eax
	call	??$increment@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@iterator_core_access@iterators@boost@@CAXAAV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@12@@Z ; boost::iterators::iterator_core_access::increment<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >
	add	esp, 4

; 666  :             return this->derived();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?derived@?$iterator_facade_base@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH$0A@$0A@@detail@iterators@boost@@IAEAAV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@34@XZ ; boost::iterators::detail::iterator_facade_base<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int,0,0>::derived

; 667  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$iterator_facade_base@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH$0A@$0A@@detail@iterators@boost@@QAEAAV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@23@XZ ENDP ; boost::iterators::detail::iterator_facade_base<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int,0,0>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\iterator\iterator_facade.hpp
;	COMDAT ??D?$iterator_facade_base@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH$0A@$0A@@detail@iterators@boost@@QBEDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$iterator_facade_base@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH$0A@$0A@@detail@iterators@boost@@QBEDXZ PROC ; boost::iterators::detail::iterator_facade_base<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int,0,0>::operator*, COMDAT
; _this$ = ecx

; 654  :         {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 655  :             return iterator_core_access::dereference(this->derived());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?derived@?$iterator_facade_base@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH$0A@$0A@@detail@iterators@boost@@IBEABV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@34@XZ ; boost::iterators::detail::iterator_facade_base<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int,0,0>::derived
	push	eax
	call	??$dereference@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@@iterator_core_access@iterators@boost@@CADABV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@12@@Z ; boost::iterators::iterator_core_access::dereference<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default> >
	add	esp, 4

; 656  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$iterator_facade_base@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@DUrandom_access_traversal_tag@23@DH$0A@$0A@@detail@iterators@boost@@QBEDXZ ENDP ; boost::iterators::detail::iterator_facade_base<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,char,boost::iterators::random_access_traversal_tag,char,int,0,0>::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\iterator\transform_iterator.hpp
;	COMDAT ??$make_transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@iterators@boost@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@U?$to_upperF@D@detail@algorithm@1@@Z
_TEXT	SEGMENT
$T2 = -212						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_it$ = 12						; size = 12
_fun$ = 24						; size = 4
??$make_transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@iterators@boost@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@U?$to_upperF@D@detail@algorithm@1@@Z PROC ; boost::iterators::make_transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > > >, COMDAT

; 132  :   {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$make_transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@iterators@boost@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@U?$to_upperF@D@detail@algorithm@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 133  :       return transform_iterator<UnaryFunc, Iterator>(it, fun);

	mov	eax, DWORD PTR _fun$[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@ABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@U?$to_upperF@D@detail@algorithm@2@@Z ; boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 134  :   }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$make_transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@iterators@boost@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@U?$to_upperF@D@detail@algorithm@1@@Z$0:
	lea	ecx, DWORD PTR _it$[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__ehhandler$??$make_transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@iterators@boost@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@U?$to_upperF@D@detail@algorithm@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$make_transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@iterators@boost@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@U?$to_upperF@D@detail@algorithm@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$make_transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@iterators@boost@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@U?$to_upperF@D@detail@algorithm@1@@Z ENDP ; boost::iterators::make_transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\range\begin.hpp
;	COMDAT ??$begin@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_adl_barrier@boost@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
___$ReturnUdt$ = 8					; size = 4
_r$ = 12						; size = 4
??$begin@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_adl_barrier@boost@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z PROC ; boost::range_adl_barrier::begin<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 107  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR $T1[ebp], 0

; 108  : #if !BOOST_WORKAROUND(__BORLANDC__, BOOST_TESTED_AT(0x564))
; 109  :     using namespace range_detail;
; 110  : #endif
; 111  :     return range_begin( r );

	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	call	??$range_begin@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; boost::range_detail::range_begin<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
	add	esp, 8
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 112  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$begin@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_adl_barrier@boost@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ENDP ; boost::range_adl_barrier::begin<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??$?0ABV?$allocator@D@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
??$?0ABV?$allocator@D@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::allocator<char> const &,void>, COMDAT
; _this$ = ecx

; 622  : 		{	// construct allocator from _Al

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0ABV?$allocator@D@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 620  : 		: _Mypair(_One_then_variadic_args_t(),

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$forward@ABV?$allocator@D@std@@@std@@YAABV?$allocator@D@0@ABV10@@Z ; std::forward<std::allocator<char> const &>
	add	esp, 4
	push	eax
	movzx	ecx, BYTE PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0ABV?$allocator@D@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@D@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 623  : 		_Alloc_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy

; 624  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0ABV?$allocator@D@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
__ehhandler$??$?0ABV?$allocator@D@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0ABV?$allocator@D@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0ABV?$allocator@D@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::allocator<char> const &,void>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT
; _this$ = ecx

; 709  : 		{	// construct from a related allocator (do nothing)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 710  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<char> > &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range1@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Destroy_range1<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT

; 1099 : 	{	// destroy [_First, _Last), no special optimization

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1100 : 	for (; _First != _Last; ++_First)

	jmp	SHORT $LN4@Destroy_ra
$LN2@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR __First$[ebp], eax
$LN4@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN1@Destroy_ra

; 1101 : 		_Al.destroy(_Unfancy(_First));

	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	jmp	SHORT $LN2@Destroy_ra
$LN1@Destroy_ra:

; 1102 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range1@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Destroy_range1<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>

; 858  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT

; 863  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 864  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>

; 865  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 709  : 		{	// construct from a related allocator (do nothing)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 710  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>

; 858  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 863  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 864  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 865  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Pocma@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@0U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Pocma@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@0U?$integral_constant@_N$00@0@@Z PROC ; std::_Pocma<std::_Wrap_alloc<std::allocator<char> > >, COMDAT

; 1051 : 	{	// propagate on container move assignment

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Pocma@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@0U?$integral_constant@_N$00@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1052 : 	_Left = _STD move(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$move@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<char> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	??4?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEAAU01@$$QAU01@@Z ; std::_Wrap_alloc<std::allocator<char> >::operator=

; 1053 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Pocma@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@0U?$integral_constant@_N$00@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Pocma@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@0U?$integral_constant@_N$00@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Pocma@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@0U?$integral_constant@_N$00@0@@Z ENDP ; std::_Pocma<std::_Wrap_alloc<std::allocator<char> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ENDP ; std::forward<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >, COMDAT
; _this$ = ecx

; 289  : 		{	// construct from forwarded values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 287  : 		: _Ty1(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAU01@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >

; 288  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 290  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<char> > >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z PROC		; std::operator==<char,char>, COMDAT

; 795  : 	{	// test for allocator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 796  : 	return (true);

	mov	al, 1

; 797  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z ENDP		; std::operator==<char,char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?8V?$allocator@D@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8V?$allocator@D@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z PROC ; std::operator==<std::allocator<char>,std::allocator<char> >, COMDAT

; 1016 : 	{	// test for allocator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1017 : 	return (static_cast<const _Ty&>(_Left)

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z	; std::operator==<char,char>
	add	esp, 8

; 1018 : 		== static_cast<const _Other&>(_Right));
; 1019 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?8V?$allocator@D@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z ENDP ; std::operator==<std::allocator<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load_override@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 81   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 82   :         basic_text_iarchive<Archive>::load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load_override@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >

; 83   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load_override@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 81   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 82   :         basic_text_iarchive<Archive>::load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load_override@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 83   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ??$save_override@$$CBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const >, COMDAT
; _this$ = ecx

; 82   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 83   :         this->detail_common_oarchive::save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$save_override@$$CBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const >

; 84   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >, COMDAT
; _this$ = ecx

; 82   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 83   :         this->detail_common_oarchive::save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >

; 84   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
tv68 = -196						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::operator<<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2519 : 	{	// test if string < string

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 2520 : 	return (_Left.compare(_Right) < 0);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
	test	eax, eax
	jge	SHORT $LN3@operator
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv68[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv68[ebp]

; 2521 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\algorithm\string\detail\case_conv.hpp
;	COMDAT ??$transform_range_copy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$to_upperF@D@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV34@U?$to_upperF@D@012@@Z
_TEXT	SEGMENT
tv65 = -304						; size = 4
tv168 = -300						; size = 4
tv134 = -296						; size = 4
tv166 = -292						; size = 4
tv162 = -288						; size = 4
tv75 = -284						; size = 4
tv160 = -280						; size = 4
$T2 = -272						; size = 4
$T3 = -260						; size = 4
$T4 = -248						; size = 4
$T5 = -236						; size = 4
$T6 = -224						; size = 4
$T7 = -209						; size = 1
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_Input$ = 12						; size = 4
_Functor$ = 16						; size = 4
??$transform_range_copy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$to_upperF@D@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV34@U?$to_upperF@D@012@@Z PROC ; boost::algorithm::detail::transform_range_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::to_upperF<char> >, COMDAT

; 108  :             {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$transform_range_copy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$to_upperF@D@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV34@U?$to_upperF@D@012@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T2[ebp], 0

; 109  :                 return SequenceT(

	lea	ecx, DWORD PTR $T7[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	sub	esp, 16					; 00000010H
	mov	esi, esp
	mov	DWORD PTR $T6[ebp], esp
	mov	eax, DWORD PTR _Functor$[ebp]
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T5[ebp], esp
	mov	edx, DWORD PTR _Input$[ebp]
	push	edx
	push	ecx
	call	??$end@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_adl_barrier@boost@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; boost::range_adl_barrier::end<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8
	mov	DWORD PTR tv160[ebp], eax
	push	esi
	call	??$make_transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@iterators@boost@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@U?$to_upperF@D@detail@algorithm@1@@Z ; boost::iterators::make_transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > > >
	add	esp, 20					; 00000014H
	mov	DWORD PTR tv75[ebp], eax
	mov	eax, DWORD PTR tv75[ebp]
	mov	DWORD PTR tv162[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	sub	esp, 16					; 00000010H
	mov	esi, esp
	mov	DWORD PTR $T4[ebp], esp
	mov	ecx, DWORD PTR _Functor$[ebp]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	DWORD PTR $T3[ebp], esp
	mov	eax, DWORD PTR _Input$[ebp]
	push	eax
	push	edx
	call	??$begin@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_adl_barrier@boost@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; boost::range_adl_barrier::begin<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8
	mov	DWORD PTR tv166[ebp], eax
	push	esi
	call	??$make_transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@iterators@boost@@YA?AV?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@U?$to_upperF@D@detail@algorithm@1@@Z ; boost::iterators::make_transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > > >
	add	esp, 20					; 00000014H
	mov	DWORD PTR tv134[ebp], eax
	mov	ecx, DWORD PTR tv134[ebp]
	mov	DWORD PTR tv168[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@X@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@V?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@0ABV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::iterators::use_default,boost::iterators::use_default>,void>
	mov	DWORD PTR tv65[ebp], eax
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 110  :                     ::boost::make_transform_iterator(
; 111  :                         ::boost::begin(Input),
; 112  :                         Functor),
; 113  :                     ::boost::make_transform_iterator(
; 114  :                         ::boost::end(Input), 
; 115  :                         Functor));
; 116  :             }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$transform_range_copy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$to_upperF@D@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV34@U?$to_upperF@D@012@@Z$1:
	mov	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$transform_iterator@U?$to_upperF@D@detail@algorithm@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@Uuse_default@iterators@4@U784@@iterators@boost@@QAE@XZ
__ehhandler$??$transform_range_copy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$to_upperF@D@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV34@U?$to_upperF@D@012@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-308]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$transform_range_copy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$to_upperF@D@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV34@U?$to_upperF@D@012@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$transform_range_copy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$to_upperF@D@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV34@U?$to_upperF@D@012@@Z ENDP ; boost::algorithm::detail::transform_range_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::to_upperF<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\algorithm\string\detail\case_conv.hpp
;	COMDAT ??R?$to_upperF@D@detail@algorithm@boost@@QBEDD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_Ch$ = 8						; size = 1
??R?$to_upperF@D@detail@algorithm@boost@@QBEDD@Z PROC	; boost::algorithm::detail::to_upperF<char>::operator(), COMDAT
; _this$ = ecx

; 60   :                 {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 61   :                     #if defined(__BORLANDC__) && (__BORLANDC__ >= 0x560) && (__BORLANDC__ <= 0x564) && !defined(_USE_OLD_RW_STL)
; 62   :                         return std::toupper( static_cast<typename boost::make_unsigned <CharT>::type> ( Ch ));
; 63   :                     #else
; 64   :                         return std::toupper<CharT>( Ch, *m_Loc );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	movzx	edx, BYTE PTR _Ch$[ebp]
	push	edx
	call	??$toupper@D@std@@YADDABVlocale@0@@Z	; std::toupper<char>
	add	esp, 8

; 65   :                     #endif
; 66   :                 }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??R?$to_upperF@D@detail@algorithm@boost@@QBEDD@Z ENDP	; boost::algorithm::detail::to_upperF<char>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\algorithm\string\detail\case_conv.hpp
;	COMDAT ??0?$to_upperF@D@detail@algorithm@boost@@QAE@ABVlocale@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_Loc$ = 8						; size = 4
??0?$to_upperF@D@detail@algorithm@boost@@QAE@ABVlocale@std@@@Z PROC ; boost::algorithm::detail::to_upperF<char>::to_upperF<char>, COMDAT
; _this$ = ecx

; 56   :                 to_upperF( const std::locale& Loc ) : m_Loc( &Loc ) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Loc$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$to_upperF@D@detail@algorithm@boost@@QAE@ABVlocale@std@@@Z ENDP ; boost::algorithm::detail::to_upperF<char>::to_upperF<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT
; _this$ = ecx

; 141  : 			{	// test if stream state okay

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 142  : 			return (_Ok);

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+4]

; 143  : 			}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; _this$ = ecx

; 130  : 			{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 131  :  #if _HAS_EXCEPTIONS
; 132  : 			if (!_XSTD uncaught_exception())

	mov	esi, esp
	call	DWORD PTR __imp_?uncaught_exception@std@@YA_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@sentry

; 133  : 				this->_Myostr._Osfx();

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@sentry:

; 134  : 
; 135  :  #else /* _HAS_EXCEPTIONS */
; 136  : 			this->_Myostr._Osfx();
; 137  :  #endif /* _HAS_EXCEPTIONS */
; 138  : 			}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ostr$ = 8						; size = 4
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; _this$ = ecx

; 123  : 			{	// construct locking and testing stream

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 122  : 			: _Sentry_base(_Ostr)

	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@sentry
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@sentry
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR __Ostr$[ebp]
	je	SHORT $LN2@sentry

; 125  : 				_Ostr.tie()->flush();

	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	ecx, eax
	call	DWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@sentry:

; 126  : 			_Ok = _Ostr.good();	// store test only after flushing tie

	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+4], al

; 127  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv92 = -224						; size = 4
tv86 = -220						; size = 4
tv72 = -220						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = ecx

; 106  : 			{	// destroy after unlocking

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 107  : 			if (_Myostr.rdbuf() != 0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv72[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN3@Sentry_bas

; 108  : 				_Myostr.rdbuf()->_Unlock();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv86[ebp], ecx
	mov	edx, DWORD PTR tv86[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv86[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv92[ebp], eax
	mov	ecx, DWORD PTR tv92[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv92[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Sentry_bas:

; 109  : 			}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-228]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
tv93 = -212						; size = 4
tv87 = -208						; size = 4
tv73 = -208						; size = 4
_this$ = -8						; size = 4
__Ostr$ = 8						; size = 4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = ecx

; 100  : 			{	// lock the stream buffer, if there

	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 99   : 			: _Myostr(_Ostr)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR [eax], ecx

; 101  : 			if (_Myostr.rdbuf() != 0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv73[ebp], ecx
	mov	edx, DWORD PTR tv73[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv73[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN1@Sentry_bas

; 102  : 				_Myostr.rdbuf()->_Lock();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv87[ebp], ecx
	mov	edx, DWORD PTR tv87[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv87[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv93[ebp], eax
	mov	ecx, DWORD PTR tv93[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv93[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Sentry_bas:

; 103  : 			}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 724  : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 725  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 726  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z PROC ; std::pointer_traits<std::_Container_proxy *>::pointer_to, COMDAT

; 279  : 		{	// convert raw reference to pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 280  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ; std::addressof<std::_Container_proxy>
	add	esp, 4

; 281  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z ENDP ; std::pointer_traits<std::_Container_proxy *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 724  : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 725  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 726  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??$?0AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<char> > &>, COMDAT
; _this$ = ecx

; 952  : 		{	// construct from a related allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<char> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>

; 953  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z PROC	; std::pointer_traits<char *>::pointer_to, COMDAT

; 279  : 		{	// convert raw reference to pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 280  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4

; 281  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z ENDP	; std::pointer_traits<char *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Unfancy@$$CBD@std@@YAPBDPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@$$CBD@std@@YAPBDPBD@Z PROC			; std::_Unfancy<char const >, COMDAT

; 739  : 	{	// do nothing for plain pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 740  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 741  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unfancy@$$CBD@std@@YAPBDPBD@Z ENDP			; std::_Unfancy<char const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT

; 1114 : 	{	// destroy [_First, _Last), choose optimization

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1115 : 		// note that this is an optimization for debug mode codegen;
; 1116 : 		// in release mode the BE removes all of this
; 1117 : 	typedef typename _Alloc::value_type _Val;
; 1118 : 	_Destroy_range1(_First, _Last, _Al, typename conjunction<

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range1@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Destroy_range1<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
	add	esp, 16					; 00000010H

; 1119 : 		is_trivially_destructible<_Val>,
; 1120 : 		_Uses_default_destroy<_Alloc, _Val *>>::type());
; 1121 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
	add	esp, 12					; 0000000cH

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 739  : 	{	// do nothing for plain pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 740  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 741  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx

; 1002 : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1003 : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
	add	esp, 8

; 1004 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??$?0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>, COMDAT
; _this$ = ecx

; 952  : 		{	// construct from a related allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 953  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate, COMDAT
; _this$ = ecx

; 986  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 987  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate

; 988  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate, COMDAT
; _this$ = ecx

; 975  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 976  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate

; 977  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address, COMDAT
; _this$ = ecx

; 925  : 		{	// return address of mutable _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 926  : 		return (pointer_traits<pointer>::pointer_to(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z ; std::pointer_traits<std::_Container_proxy *>::pointer_to
	add	esp, 4

; 927  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx

; 724  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 725  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

	push	1
	push	8
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	?_Allocate@std@@YAPAXII_N@Z		; std::_Allocate
	add	esp, 12					; 0000000cH

; 726  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx

; 719  : 		{	// deallocate object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 720  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	8
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 721  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_pointer_if@$$CBD@std@@YAX_NPBDPB_WI@Z
_TEXT	SEGMENT
__Test$ = 8						; size = 1
__Ptr$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_pointer_if@$$CBD@std@@YAX_NPBDPB_WI@Z PROC	; std::_Debug_pointer_if<char const >, COMDAT

; 937  : 	{	// conditionally test pointer for non-singularity, pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 938  : 	if (_Test && _Ptr == 0)

	movzx	eax, BYTE PTR __Test$[ebp]
	test	eax, eax
	je	SHORT $LN1@Debug_poin
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN1@Debug_poin

; 939  : 		_DEBUG_ERROR2("invalid null pointer", _File, _Line);

	mov	esi, esp
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Debug_poin:

; 940  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_pointer_if@$$CBD@std@@YAX_NPBDPB_WI@Z ENDP	; std::_Debug_pointer_if<char const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPADPAD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@D@std@@YAPADPAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 739  : 	{	// do nothing for plain pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 740  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 741  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unfancy@D@std@@YAPADPAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 1002 : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1003 : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 1004 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@PAD@std@@YAPAPADAAPAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAD@std@@YAPAPADAAPAD@Z PROC		; std::addressof<char *>, COMDAT

; 724  : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 725  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 726  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@PAD@std@@YAPAPADAAPAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT
; _this$ = ecx

; 280  : 		{	// construct from forwarded values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 279  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 281  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Pocma@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z
_TEXT	SEGMENT
__Tag$ = -5						; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocma@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z PROC ; std::_Pocma<std::_Wrap_alloc<std::allocator<char> > >, COMDAT

; 1062 : 	{	// (maybe) propagate on container move assignment

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1063 : 	typename _Alty::propagate_on_container_move_assignment _Tag;
; 1064 : 	_Pocma(_Left, _Right, _Tag);

	movzx	eax, BYTE PTR __Tag$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Left$[ebp]
	push	edx
	call	??$_Pocma@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@0U?$integral_constant@_N$00@0@@Z ; std::_Pocma<std::_Wrap_alloc<std::allocator<char> > >
	add	esp, 12					; 0000000cH

; 1065 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Pocma
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Pocma:
	DD	1
	DD	$LN4@Pocma
$LN4@Pocma:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Pocma
$LN3@Pocma:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	0
??$_Pocma@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z ENDP ; std::_Pocma<std::_Wrap_alloc<std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAV?$allocator@D@1@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> >, COMDAT
; _this$ = ecx

; 952  : 		{	// construct from a related allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>

; 953  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAV?$allocator@D@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1><>, COMDAT
; _this$ = ecx

; 280  : 		{	// construct from forwarded values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 279  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 281  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>, COMDAT
; _this$ = ecx

; 622  : 		{	// construct allocator from _Al

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 620  : 		: _Mypair(_One_then_variadic_args_t(),

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
	add	esp, 4
	push	eax
	movzx	ecx, BYTE PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 623  : 		_Alloc_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy

; 624  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
__ehhandler$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z PROC ; std::move<std::_Wrap_alloc<std::allocator<char> > &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ENDP ; std::move<std::_Wrap_alloc<std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z
_TEXT	SEGMENT
tv175 = -364						; size = 4
tv188 = -360						; size = 4
tv185 = -356						; size = 4
tv195 = -352						; size = 4
tv183 = -348						; size = 4
tv194 = -344						; size = 4
tv180 = -340						; size = 4
tv193 = -336						; size = 4
tv178 = -332						; size = 4
tv192 = -328						; size = 4
tv174 = -324						; size = 4
tv191 = -320						; size = 4
$T2 = -312						; size = 12
$T3 = -292						; size = 4
$T4 = -280						; size = 12
$T5 = -260						; size = 4
$T6 = -248						; size = 4
$T7 = -236						; size = 4
$T8 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >, COMDAT
; _this$ = ecx

; 1202 : 		{	// assign [_First, _Last), input iterators

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 352				; 00000160H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-364]
	mov	ecx, 88					; 00000058H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1203 : 		return (replace(begin(), end(), _First, _Last));

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T7[ebp], esp
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv191[ebp], eax
	mov	ecx, DWORD PTR tv191[ebp]
	mov	DWORD PTR tv174[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T6[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv192[ebp], eax
	mov	eax, DWORD PTR tv192[ebp]
	mov	DWORD PTR tv178[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
	mov	DWORD PTR tv193[ebp], eax
	mov	edx, DWORD PTR tv193[ebp]
	mov	DWORD PTR tv180[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T5[ebp], esp
	mov	eax, DWORD PTR tv180[ebp]
	push	eax
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	DWORD PTR tv194[ebp], eax
	mov	ecx, DWORD PTR tv194[ebp]
	mov	DWORD PTR tv183[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	DWORD PTR tv195[ebp], eax
	mov	eax, DWORD PTR tv195[ebp]
	mov	DWORD PTR tv185[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	mov	edx, DWORD PTR tv185[ebp]
	push	edx
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	DWORD PTR tv188[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace
	mov	DWORD PTR tv175[ebp], eax
	mov	eax, DWORD PTR tv175[ebp]
	mov	DWORD PTR $T8[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T8[ebp]

; 1204 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 364				; 0000016cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$2:
	mov	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$3:
	mov	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$4:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$5:
	mov	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$6:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__ehhandler$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-368]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?9V?$allocator@D@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9V?$allocator@D@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z PROC ; std::operator!=<std::allocator<char>,std::allocator<char> >, COMDAT

; 1025 : 	{	// test for allocator inequality

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1026 : 	return (!(_Left == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8V?$allocator@D@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z ; std::operator==<std::allocator<char>,std::allocator<char> >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 1027 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?9V?$allocator@D@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z ENDP ; std::operator!=<std::allocator<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_pointer@$$CBD@std@@YAXPBDPB_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@$$CBD@std@@YAXPBDPB_WI@Z PROC		; std::_Debug_pointer<char const >, COMDAT

; 923  : 	{	// test pointer for non-singularity, pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 924  : 	if (_Ptr == 0)

	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN1@Debug_poin

; 925  : 		_DEBUG_ERROR2("invalid null pointer", _File, _Line);

	mov	esi, esp
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Debug_poin:

; 926  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_pointer@$$CBD@std@@YAXPBDPB_WI@Z ENDP		; std::_Debug_pointer<char const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_iterator<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??G?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??G?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@@Z PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator-, COMDAT
; _this$ = ecx

; 398  : 		{	// return difference of iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 399  : 		return (*(_Mybase *)this - _Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator-

; 400  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??G?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@@Z ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator-
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*, COMDAT
; _this$ = ecx

; 339  : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 340  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEABDXZ ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator*

; 341  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Parg$ = 8						; size = 4
__Pstring$ = 12						; size = 4
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
; _this$ = ecx

; 322  : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 321  : 		: _Mybase(_Parg, _Pstring)

	mov	eax, DWORD PTR __Pstring$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >

; 323  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@$$QAU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_const_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		{	// test for compatible iterator pair

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 254  : 		if (this->_Getcont() != _Right._Getcont())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	je	$LN1@Compat

; 255  : 			{
; 256  : 			_DEBUG_ERROR("string iterators incompatible");

	mov	esi, esp
	push	256					; 00000100H
	push	OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@KDEKGMPF@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 257  : 			_SCL_SECURE_INVALID_ARGUMENT;

	mov	eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
	test	eax, eax
	je	SHORT $LN4@Compat
	xor	ecx, ecx
	jne	SHORT $LN5@Compat
$LN4@Compat:
	mov	esi, esp
	push	OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	257					; 00000101H
	push	OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN5@Compat
	int	3
$LN5@Compat:
	mov	esi, esp
	push	0
	push	257					; 00000101H
	push	OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1MA@BDELDFHB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Compat:

; 258  : 			}
; 259  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator==, COMDAT
; _this$ = ecx

; 220  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 221  : 		_Compat(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEXABV12@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_Compat

; 222  : 		return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 223  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV01@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator-, COMDAT
; _this$ = ecx

; 209  : 		{	// return difference of iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 210  : 		_Compat(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEXABV12@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_Compat

; 211  : 		return (_Ptr - _Right._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+8]

; 212  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV01@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator-
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??E?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Mycont$ = -20						; size = 4
_this$ = -8						; size = 4
??E?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator++, COMDAT
; _this$ = ecx

; 99   : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 100  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 101  : 		const auto _Mycont = static_cast<const _Mystr *>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax

; 102  : 		if (_Mycont == 0
; 103  : 			|| _Ptr == nullptr_t{}
; 104  : 			|| _Mycont->_Myptr() + _Mycont->_Mysize <= _Unfancy(_Ptr))

	cmp	DWORD PTR __Mycont$[ebp], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR __Mycont$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	esi, eax
	mov	eax, DWORD PTR __Mycont$[ebp]
	add	esi, DWORD PTR [eax+20]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	??$_Unfancy@$$CBD@std@@YAPBDPBD@Z	; std::_Unfancy<char const >
	add	esp, 4
	cmp	esi, eax
	ja	SHORT $LN2@operator
$LN3@operator:

; 105  : 			{	// report error
; 106  : 			_DEBUG_ERROR("string iterator not incrementable");

	mov	esi, esp
	push	106					; 0000006aH
	push	OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EE@HAKOGNPH@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 107  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	107					; 0000006bH
	push	OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	mov	esi, esp
	push	0
	push	107					; 0000006bH
	push	OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1MI@IFMPOAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:

; 108  : 			}
; 109  : 
; 110  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 111  : 		_SCL_SECURE_VALIDATE(_Ptr != nullptr_t{});
; 112  : 		const auto _Mycont = static_cast<const _Mystr *>(this->_Getcont());
; 113  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 114  : 		_SCL_SECURE_VALIDATE_RANGE(_Unfancy(_Ptr) < _Mycont->_Myptr() + _Mycont->_Mysize);
; 115  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 116  : 
; 117  : 		++_Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 118  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 119  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEABDXZ
_TEXT	SEGMENT
tv77 = -232						; size = 4
__Contptr$ = -32					; size = 4
__Mycont$ = -20						; size = 4
_this$ = -8						; size = 4
??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEABDXZ PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator*, COMDAT
; _this$ = ecx

; 67   : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 68   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 69   : 		const auto _Mycont = static_cast<const _Mystr *>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax

; 70   : 		const auto _Contptr = _Mycont ? _Mycont->_Myptr() : 0;

	cmp	DWORD PTR __Mycont$[ebp], 0
	je	SHORT $LN5@operator
	mov	ecx, DWORD PTR __Mycont$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	DWORD PTR tv77[ebp], 0
$LN6@operator:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR __Contptr$[ebp], eax

; 71   : 		if (_Mycont == 0
; 72   : 			|| _Ptr == nullptr_t{}
; 73   : 			|| _Unfancy(_Ptr) < _Contptr
; 74   : 			|| _Contptr + _Mycont->_Mysize <= _Unfancy(_Ptr))

	cmp	DWORD PTR __Mycont$[ebp], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	??$_Unfancy@$$CBD@std@@YAPBDPBD@Z	; std::_Unfancy<char const >
	add	esp, 4
	cmp	eax, DWORD PTR __Contptr$[ebp]
	jb	SHORT $LN3@operator
	mov	eax, DWORD PTR __Mycont$[ebp]
	mov	esi, DWORD PTR __Contptr$[ebp]
	add	esi, DWORD PTR [eax+20]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	??$_Unfancy@$$CBD@std@@YAPBDPBD@Z	; std::_Unfancy<char const >
	add	esp, 4
	cmp	esi, eax
	ja	SHORT $LN2@operator
$LN3@operator:

; 75   : 			{	// report error
; 76   : 			_DEBUG_ERROR("string iterator not dereferencable");

	mov	esi, esp
	push	76					; 0000004cH
	push	OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@CNCHLAOB@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 77   : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN7@operator
	xor	ecx, ecx
	jne	SHORT $LN8@operator
$LN7@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	77					; 0000004dH
	push	OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN8@operator
	int	3
$LN8@operator:
	mov	esi, esp
	push	0
	push	77					; 0000004dH
	push	OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1MG@GDGHDIKC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:

; 78   : 			}
; 79   : 
; 80   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 81   : 		_SCL_SECURE_VALIDATE(_Ptr != nullptr_t{});
; 82   : 		const auto _Mycont = static_cast<const _Mystr *>(this->_Getcont());
; 83   : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 84   : 		const auto _Contptr = _Mycont->_Myptr();
; 85   : 		_SCL_SECURE_VALIDATE_RANGE(_Contptr <= _Unfancy(_Ptr) && _Unfancy(_Ptr) < _Contptr + _Mycont->_Mysize);
; 86   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 87   : 
; 88   : 		_Analysis_assume_(_Ptr != nullptr_t{});
; 89   : 
; 90   : 		return (*_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 91   : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEABDXZ ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pstring$ = 12						; size = 4
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
; _this$ = ecx

; 49   : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 48   : 		: _Ptr(_Parg)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 50   : 		this->_Adopt(_Pstring);

	mov	eax, DWORD PTR __Pstring$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 51   : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@$$QAU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@$$QAU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_iarchive.hpp
;	COMDAT ??$?5V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?5V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z PROC ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 67   :     Archive & operator>>(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 68   :         this->This()->load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	mov	ecx, eax
	call	??$load_override@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >

; 69   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This

; 70   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?5V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ENDP ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_iarchive.hpp
;	COMDAT ??$?5V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?5V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 67   :     Archive & operator>>(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 68   :         this->This()->load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	mov	ecx, eax
	call	??$load_override@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 69   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This

; 70   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?5V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	mov	ecx, eax
	call	??$save_override@$$CBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const >

; 71   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?6V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	mov	ecx, eax
	call	??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >

; 71   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?6V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??$?ODU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?ODU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::operator><char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2549 : 	{	// test if string > string

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 2550 : 	return (_Right < _Left);

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	call	??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8

; 2551 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?ODU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::operator><char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
tv68 = -196						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::operator==<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2459 : 	{	// test for string equality

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 2460 : 	return (_Left.compare(_Right) == 0);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
	test	eax, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv68[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv68[ebp]

; 2461 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\algorithm\string\case_conv.hpp
;	COMDAT ??$to_upper_copy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@ABVlocale@3@@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
$T2 = -200						; size = 4
___$ReturnUdt$ = 8					; size = 4
_Input$ = 12						; size = 4
_Loc$ = 16						; size = 4
??$to_upper_copy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@ABVlocale@3@@Z PROC ; boost::algorithm::to_upper_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 140  :         {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR $T1[ebp], 0

; 141  :             return ::boost::algorithm::detail::transform_range_copy<SequenceT>(

	mov	eax, DWORD PTR _Loc$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$to_upperF@D@detail@algorithm@boost@@QAE@ABVlocale@std@@@Z ; boost::algorithm::detail::to_upperF<char>::to_upperF<char>
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _Input$[ebp]
	push	edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	call	??$transform_range_copy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$to_upperF@D@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV34@U?$to_upperF@D@012@@Z ; boost::algorithm::detail::transform_range_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::to_upperF<char> >
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 142  :                 Input,
; 143  :                 ::boost::algorithm::detail::to_upperF<
; 144  :                     typename range_value<SequenceT>::type >(Loc));
; 145  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$to_upper_copy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@ABVlocale@3@@Z ENDP ; boost::algorithm::to_upper_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Ostr$ = 8						; size = 4
??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z PROC ; std::endl<char,std::char_traits<char> >, COMDAT

; 991  : 	{	// insert newline and flush stream

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 992  : 	_Ostr.put(_Ostr.widen('\n'));

	mov	esi, esp
	push	10					; 0000000aH
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	call	DWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 993  : 	_Ostr.flush();

	mov	esi, esp
	mov	ecx, DWORD PTR __Ostr$[ebp]
	call	DWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp

; 994  : 	return (_Ostr);

	mov	eax, DWORD PTR __Ostr$[ebp]

; 995  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ENDP ; std::endl<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
$T2 = -244						; size = 4
__Tmp$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++, COMDAT
; _this$ = ecx

; 346  : 		{	// postincrement

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0

; 347  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 348  : 		++*this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++

; 349  : 		return (_Tmp);

	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 350  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN9@operator:
	DD	1
	DD	$LN8@operator
$LN8@operator:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN6@operator
$LN6@operator:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z$0:
	lea	ecx, DWORD PTR __Tmp$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++, COMDAT
; _this$ = ecx

; 340  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 341  : 		++*(_Mybase *)this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++

; 342  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 343  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*, COMDAT
; _this$ = ecx

; 330  : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 331  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*

; 332  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 313  : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 312  : 		: _Mybase(_Parg, _Pvector)

	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >

; 314  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 307  : 	_Vector_iterator()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 308  : 		{	// construct with null vector pointer

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >

; 309  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAEAAU01@$$QAU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Compat, COMDAT
; _this$ = ecx

; 245  : 		{	// test for compatible iterator pair

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 246  : 		if (this->_Getcont() != _Right._Getcont())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	je	$LN1@Compat

; 247  : 			{
; 248  : 			_DEBUG_ERROR("vector iterators incompatible");

	mov	esi, esp
	push	248					; 000000f8H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 249  : 			_SCL_SECURE_INVALID_ARGUMENT;

	mov	eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
	test	eax, eax
	je	SHORT $LN4@Compat
	xor	ecx, ecx
	jne	SHORT $LN5@Compat
$LN4@Compat:
	mov	esi, esp
	push	OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	249					; 000000f9H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN5@Compat
	int	3
$LN5@Compat:
	mov	esi, esp
	push	0
	push	249					; 000000f9H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BGI@CFILNOOP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Compat:

; 250  : 			}
; 251  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=, COMDAT
; _this$ = ecx

; 218  : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 219  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 220  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==, COMDAT
; _this$ = ecx

; 212  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 213  : 		_Compat(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Compat

; 214  : 		return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 215  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
$T2 = -244						; size = 4
__Tmp$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++, COMDAT
; _this$ = ecx

; 118  : 		{	// postincrement

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0

; 119  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 120  : 		++*this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++

; 121  : 		return (_Tmp);

	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 122  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN9@operator:
	DD	1
	DD	$LN8@operator
$LN8@operator:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN6@operator
$LN6@operator:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z$0:
	lea	ecx, DWORD PTR __Tmp$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Mycont$ = -20						; size = 4
_this$ = -8						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++, COMDAT
; _this$ = ecx

; 95   : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 96   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 97   : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax

; 98   : 		if (_Mycont == 0
; 99   : 			|| _Ptr == nullptr_t{}
; 100  : 			|| _Mycont->_Mylast <= _Ptr)

	cmp	DWORD PTR __Mycont$[ebp], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR __Mycont$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN2@operator
$LN3@operator:

; 101  : 			{	// report error
; 102  : 			_DEBUG_ERROR("vector iterator not incrementable");

	mov	esi, esp
	push	102					; 00000066H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 103  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	103					; 00000067H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	mov	esi, esp
	push	0
	push	103					; 00000067H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BHA@MHIPJLE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:

; 104  : 			}
; 105  : 
; 106  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 107  : 		_SCL_SECURE_VALIDATE(_Ptr != _Tptr());
; 108  : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());
; 109  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 110  : 		_SCL_SECURE_VALIDATE_RANGE(_Ptr < _Mycont->_Mylast);
; 111  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 112  : 
; 113  : 		++_Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 114  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 115  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ
_TEXT	SEGMENT
__Mycont$ = -20						; size = 4
_this$ = -8						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*, COMDAT
; _this$ = ecx

; 65   : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 67   : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax

; 68   : 		if (_Mycont == 0
; 69   : 			|| _Ptr == _Tptr()
; 70   : 			|| _Ptr < _Mycont->_Myfirst
; 71   : 			|| _Mycont->_Mylast <= _Ptr)

	cmp	DWORD PTR __Mycont$[ebp], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Mycont$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jb	SHORT $LN3@operator
	mov	eax, DWORD PTR __Mycont$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN2@operator
$LN3@operator:

; 72   : 			{	// report error
; 73   : 			_DEBUG_ERROR("vector iterator not dereferencable");

	mov	esi, esp
	push	73					; 00000049H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 74   : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	74					; 0000004aH
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	mov	esi, esp
	push	0
	push	74					; 0000004aH
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BGO@ENKEMOHL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:

; 75   : 			}
; 76   : 
; 77   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 78   : 		_SCL_SECURE_VALIDATE(_Ptr != _Tptr());
; 79   : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());
; 80   : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 81   : 		_SCL_SECURE_VALIDATE_RANGE(_Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast);
; 82   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 83   : 
; 84   : 		_Analysis_assume_(_Ptr != _Tptr());
; 85   : 
; 86   : 		return (*_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 87   : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 47   : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 46   : 		: _Ptr(_Parg)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 48   : 		this->_Adopt(_Pvector);

	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 49   : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 42   : 		{	// construct with null pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ

; 41   : 		: _Ptr()

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 43   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAEAAU01@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAEAAU01@$$QAU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAEAAU01@$$QAU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string
;	COMDAT ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
tv411 = -340						; size = 8
tv294 = -332						; size = 4
tv291 = -332						; size = 8
tv289 = -332						; size = 4
tv136 = -332						; size = 4
tv329 = -328						; size = 8
tv293 = -328						; size = 4
tv288 = -328						; size = 4
tv290 = -324						; size = 4
tv138 = -324						; size = 4
tv292 = -321						; size = 1
tv287 = -321						; size = 1
$T2 = -316						; size = 4
$T3 = -304						; size = 4
$T4 = -292						; size = 4
$T5 = -280						; size = 4
$T6 = -268						; size = 4
__Ok$ = -64						; size = 8
__Pad$ = -48						; size = 4
__Size$ = -36						; size = 4
__State$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Str$ = 12						; size = 4
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 170  : 	{	// insert a string

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 324				; 00000144H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-340]
	mov	ecx, 81					; 00000051H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 171  : 	typedef basic_ostream<_Elem, _Traits> _Myos;
; 172  : 	typedef basic_string<_Elem, _Traits, _Alloc> _Mystr;
; 173  : 	typedef typename _Mystr::size_type _Mysizt;
; 174  : 
; 175  : 	ios_base::iostate _State = ios_base::goodbit;

	mov	DWORD PTR __State$[ebp], 0

; 176  : 	_Mysizt _Size = _Str.size();

	mov	ecx, DWORD PTR __Str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	DWORD PTR __Size$[ebp], eax

; 177  : 	_Mysizt _Pad = _Ostr.width() <= 0 || (_Mysizt)_Ostr.width() <= _Size

	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv329[ebp], eax
	mov	DWORD PTR tv329[ebp+4], edx
	cmp	DWORD PTR tv329[ebp+4], 0
	jl	SHORT $LN17@operator
	jg	SHORT $LN24@operator
	cmp	DWORD PTR tv329[ebp], 0
	jbe	SHORT $LN17@operator
$LN24@operator:
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR __Size$[ebp]
	jbe	SHORT $LN17@operator
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Size$[ebp]
	mov	DWORD PTR tv136[ebp], eax
	jmp	SHORT $LN18@operator
$LN17@operator:
	mov	DWORD PTR tv136[ebp], 0
$LN18@operator:
	mov	eax, DWORD PTR tv136[ebp]
	mov	DWORD PTR __Pad$[ebp], eax

; 178  : 		? 0 : (_Mysizt)_Ostr.width() - _Size;
; 179  : 	const typename _Myos::sentry _Ok(_Ostr);

	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 180  : 
; 181  : 	if (!_Ok)

	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN8@operator

; 182  : 		_State |= ios_base::badbit;

	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax

; 183  : 	else

	jmp	$LN9@operator
$LN8@operator:

; 184  : 		{	// state okay, insert characters
; 185  : 	_TRY_IO_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 1

; 186  : 		if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left)

	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv138[ebp], eax
	mov	eax, DWORD PTR tv138[ebp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN11@operator

; 187  : 			for (; 0 < _Pad; --_Pad)	// pad on left

	jmp	SHORT $LN4@operator
$LN2@operator:
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	DWORD PTR __Pad$[ebp], eax
$LN4@operator:
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN11@operator

; 188  : 				if (_Traits::eq_int_type(_Traits::eof(),

	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR tv287[ebp], al
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv288[ebp], eax
	mov	esi, esp
	movzx	eax, BYTE PTR tv287[ebp]
	push	eax
	mov	ecx, DWORD PTR tv288[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv289[ebp], eax
	mov	ecx, DWORD PTR tv289[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T5[ebp], eax
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@operator

; 189  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 190  : 					{	// insertion failed, quit
; 191  : 					_State |= ios_base::badbit;

	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax

; 192  : 					break;

	jmp	SHORT $LN11@operator
$LN12@operator:

; 193  : 					}
; 194  : 
; 195  : 		if (_State == ios_base::goodbit

	jmp	$LN2@operator
$LN11@operator:

; 196  : 			&& _Ostr.rdbuf()->sputn(_Str.c_str(), (streamsize)_Size)

	cmp	DWORD PTR __State$[ebp], 0
	jne	$LN13@operator
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv290[ebp], eax
	mov	eax, DWORD PTR __Size$[ebp]
	xor	ecx, ecx
	mov	esi, esp
	push	ecx
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	mov	ecx, DWORD PTR tv290[ebp]
	call	DWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv291[ebp], eax
	mov	DWORD PTR tv291[ebp+4], edx
	mov	edx, DWORD PTR __Size$[ebp]
	xor	eax, eax
	mov	DWORD PTR tv411[ebp], edx
	mov	DWORD PTR tv411[ebp+4], eax
	mov	ecx, DWORD PTR tv291[ebp]
	cmp	ecx, DWORD PTR tv411[ebp]
	jne	SHORT $LN25@operator
	mov	edx, DWORD PTR tv291[ebp+4]
	cmp	edx, DWORD PTR tv411[ebp+4]
	je	SHORT $LN13@operator
$LN25@operator:

; 197  : 				!= (streamsize)_Size)
; 198  : 				_State |= ios_base::badbit;

	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax

; 199  : 		else

	jmp	$LN14@operator
$LN13@operator:

; 200  : 			for (; 0 < _Pad; --_Pad)	// pad on right

	jmp	SHORT $LN7@operator
$LN5@operator:
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	DWORD PTR __Pad$[ebp], eax
$LN7@operator:
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN14@operator

; 201  : 				if (_Traits::eq_int_type(_Traits::eof(),

	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR tv292[ebp], al
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv293[ebp], eax
	mov	esi, esp
	movzx	eax, BYTE PTR tv292[ebp]
	push	eax
	mov	ecx, DWORD PTR tv293[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv294[ebp], eax
	mov	ecx, DWORD PTR tv294[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T3[ebp], eax
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN15@operator

; 202  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 203  : 					{	// insertion failed, quit
; 204  : 					_State |= ios_base::badbit;

	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax

; 205  : 					break;

	jmp	SHORT $LN14@operator
$LN15@operator:

; 206  : 					}

	jmp	$LN5@operator
$LN14@operator:

; 207  : 		_Ostr.width(0);

	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN19@operator
__catch$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$0:

; 208  : 		_CATCH_IO_(_Ostr)

	mov	esi, esp
	push	1
	push	4
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, $LN23@operator
	ret	0
$LN19@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN9@operator
$LN23@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN9@operator:

; 209  : 		}
; 210  : 
; 211  : 	_Ostr.setstate(_State);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR __State$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 212  : 	return (_Ostr);

	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	eax, DWORD PTR $T2[ebp]

; 213  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN29@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 340				; 00000154H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN29@operator:
	DD	1
	DD	$LN28@operator
$LN28@operator:
	DD	-64					; ffffffc0H
	DD	8
	DD	$LN26@operator
$LN26@operator:
	DB	95					; 0000005fH
	DB	79					; 0000004fH
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
__ehhandler$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-344]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
_TEXT	SEGMENT
tv135 = -352						; size = 8
tv342 = -344						; size = 8
tv290 = -340						; size = 4
tv287 = -340						; size = 8
tv285 = -340						; size = 4
tv328 = -336						; size = 8
tv289 = -336						; size = 4
tv284 = -336						; size = 4
tv286 = -332						; size = 4
tv137 = -332						; size = 4
tv288 = -329						; size = 1
tv283 = -329						; size = 1
$T2 = -324						; size = 4
$T3 = -312						; size = 4
$T4 = -300						; size = 4
$T5 = -288						; size = 4
$T6 = -276						; size = 4
__Ok$ = -72						; size = 8
__Pad$ = -56						; size = 8
__Count$ = -40						; size = 8
__State$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT

; 780  : 	{	// insert NTBS into char stream

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 336				; 00000150H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 781  : 	typedef char _Elem;
; 782  : 	typedef basic_ostream<_Elem, _Traits> _Myos;
; 783  : 	ios_base::iostate _State = ios_base::goodbit;

	mov	DWORD PTR __State$[ebp], 0

; 784  : 	streamsize _Count = (streamsize)_Traits::length(_Val);	// may overflow

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	xor	ecx, ecx
	mov	DWORD PTR __Count$[ebp], eax
	mov	DWORD PTR __Count$[ebp+4], ecx

; 785  : 	streamsize _Pad = _Ostr.width() <= 0 || _Ostr.width() <= _Count

	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv328[ebp], eax
	mov	DWORD PTR tv328[ebp+4], edx
	cmp	DWORD PTR tv328[ebp+4], 0
	jl	SHORT $LN17@operator
	jg	SHORT $LN24@operator
	cmp	DWORD PTR tv328[ebp], 0
	jbe	SHORT $LN17@operator
$LN24@operator:
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv342[ebp], eax
	mov	DWORD PTR tv342[ebp+4], edx
	mov	eax, DWORD PTR tv342[ebp+4]
	cmp	eax, DWORD PTR __Count$[ebp+4]
	jl	SHORT $LN17@operator
	jg	SHORT $LN25@operator
	mov	ecx, DWORD PTR tv342[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jbe	SHORT $LN17@operator
$LN25@operator:
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Count$[ebp]
	sbb	edx, DWORD PTR __Count$[ebp+4]
	mov	DWORD PTR tv135[ebp], eax
	mov	DWORD PTR tv135[ebp+4], edx
	jmp	SHORT $LN18@operator
$LN17@operator:
	xorps	xmm0, xmm0
	movlpd	QWORD PTR tv135[ebp], xmm0
$LN18@operator:
	mov	ecx, DWORD PTR tv135[ebp]
	mov	DWORD PTR __Pad$[ebp], ecx
	mov	edx, DWORD PTR tv135[ebp+4]
	mov	DWORD PTR __Pad$[ebp+4], edx

; 786  : 		? 0 : _Ostr.width() - _Count;
; 787  : 	const typename _Myos::sentry _Ok(_Ostr);

	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 788  : 
; 789  : 	if (!_Ok)

	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN8@operator

; 790  : 		_State |= ios_base::badbit;

	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax

; 791  : 	else

	jmp	$LN9@operator
$LN8@operator:

; 792  : 		{	// state okay, insert
; 793  : 		_TRY_IO_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 1

; 794  : 		if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left)

	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv137[ebp], eax
	mov	eax, DWORD PTR tv137[ebp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN11@operator

; 795  : 			for (; 0 < _Pad; --_Pad)	// pad on left

	jmp	SHORT $LN4@operator
$LN2@operator:
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR __Pad$[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR __Pad$[ebp], eax
	mov	DWORD PTR __Pad$[ebp+4], ecx
$LN4@operator:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	$LN11@operator
	jg	SHORT $LN26@operator
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN11@operator
$LN26@operator:

; 796  : 				if (_Traits::eq_int_type(_Traits::eof(),

	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR tv283[ebp], al
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv284[ebp], eax
	mov	esi, esp
	movzx	eax, BYTE PTR tv283[ebp]
	push	eax
	mov	ecx, DWORD PTR tv284[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv285[ebp], eax
	mov	ecx, DWORD PTR tv285[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T5[ebp], eax
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@operator

; 797  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 798  : 					{	// insertion failed, quit
; 799  : 					_State |= ios_base::badbit;

	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax

; 800  : 					break;

	jmp	SHORT $LN11@operator
$LN12@operator:

; 801  : 					}
; 802  : 
; 803  : 		if (_State == ios_base::goodbit

	jmp	$LN2@operator
$LN11@operator:

; 804  : 			&& _Ostr.rdbuf()->sputn(_Val, _Count) != _Count)

	cmp	DWORD PTR __State$[ebp], 0
	jne	SHORT $LN13@operator
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv286[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR __Count$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR tv286[ebp]
	call	DWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv287[ebp], eax
	mov	DWORD PTR tv287[ebp+4], edx
	mov	eax, DWORD PTR tv287[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jne	SHORT $LN27@operator
	mov	ecx, DWORD PTR tv287[ebp+4]
	cmp	ecx, DWORD PTR __Count$[ebp+4]
	je	SHORT $LN13@operator
$LN27@operator:

; 805  : 			_State |= ios_base::badbit;

	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
$LN13@operator:

; 806  : 
; 807  : 		if (_State == ios_base::goodbit)

	cmp	DWORD PTR __State$[ebp], 0
	jne	$LN14@operator

; 808  : 			for (; 0 < _Pad; --_Pad)	// pad on right

	jmp	SHORT $LN7@operator
$LN5@operator:
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR __Pad$[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR __Pad$[ebp], eax
	mov	DWORD PTR __Pad$[ebp+4], ecx
$LN7@operator:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	$LN14@operator
	jg	SHORT $LN28@operator
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN14@operator
$LN28@operator:

; 809  : 				if (_Traits::eq_int_type(_Traits::eof(),

	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR tv288[ebp], al
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv289[ebp], eax
	mov	esi, esp
	movzx	eax, BYTE PTR tv288[ebp]
	push	eax
	mov	ecx, DWORD PTR tv289[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv290[ebp], eax
	mov	ecx, DWORD PTR tv290[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T3[ebp], eax
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN15@operator

; 810  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 811  : 					{	// insertion failed, quit
; 812  : 					_State |= ios_base::badbit;

	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax

; 813  : 					break;

	jmp	SHORT $LN14@operator
$LN15@operator:

; 814  : 					}

	jmp	$LN5@operator
$LN14@operator:

; 815  : 		_Ostr.width(0);

	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN19@operator
__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0:

; 816  : 		_CATCH_IO_(_Ostr)

	mov	esi, esp
	push	1
	push	4
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, $LN23@operator
	ret	0
$LN19@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN9@operator
$LN23@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN9@operator:

; 817  : 		}
; 818  : 
; 819  : 	_Ostr.setstate(_State);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR __State$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 820  : 	return (_Ostr);

	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	eax, DWORD PTR $T2[ebp]

; 821  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN32@operator:
	DD	1
	DD	$LN31@operator
$LN31@operator:
	DD	-72					; ffffffb8H
	DD	8
	DD	$LN29@operator
$LN29@operator:
	DB	95					; 0000005fH
	DB	79					; 0000004fH
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-356]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ENDP ; std::operator<<<std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCCompany@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCCompany@@UAEPAXI@Z PROC				; CCompany::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CCompany@@UAE@XZ			; CCompany::~CCompany
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	228					; 000000e4H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCCompany@@UAEPAXI@Z ENDP				; CCompany::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\company.cpp
;	COMDAT ?greater@CCompany@@EAE_NAAVCContact@@@Z
_TEXT	SEGMENT
tv88 = -316						; size = 4
tv86 = -312						; size = 4
tv89 = -308						; size = 4
$T2 = -300						; size = 28
$T3 = -264						; size = 28
$T4 = -225						; size = 1
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_right$ = 8						; size = 4
?greater@CCompany@@EAE_NAAVCContact@@@Z PROC		; CCompany::greater, COMDAT
; _this$ = ecx

; 189  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?greater@CCompany@@EAE_NAAVCContact@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 190  : 	return (getSortableName() > right.getSortableName());

	mov	esi, esp
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv89[ebp], eax
	mov	ecx, DWORD PTR tv89[ebp]
	mov	DWORD PTR tv86[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR tv86[ebp]
	push	edx
	mov	esi, esp
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv88[ebp], eax
	mov	ecx, DWORD PTR tv88[ebp]
	push	ecx
	call	??$?ODU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator><char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	BYTE PTR $T4[ebp], al
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	al, BYTE PTR $T4[ebp]

; 191  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?greater@CCompany@@EAE_NAAVCContact@@@Z$0:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?greater@CCompany@@EAE_NAAVCContact@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-320]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?greater@CCompany@@EAE_NAAVCContact@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?greater@CCompany@@EAE_NAAVCContact@@@Z ENDP		; CCompany::greater
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\company.cpp
;	COMDAT ?getEmailAddresses@CCompany@@AAEXXZ
_TEXT	SEGMENT
tv87 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
?getEmailAddresses@CCompany@@AAEXXZ PROC		; CCompany::getEmailAddresses, COMDAT
; _this$ = ecx

; 120  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 121  : 	CUserInterface::displaySubMenu(emailAddressMenu, emailAddresses, "email address");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T1[ebp], esp
	push	OFFSET ??_C@_0O@JDDDPOOG@email?5address?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv87[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 128				; 00000080H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	push	ecx
	call	?displaySubMenu@CUserInterface@@SAXAAVCCustomMenu@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; CUserInterface::displaySubMenu
	add	esp, 36					; 00000024H

; 122  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getEmailAddresses@CCompany@@AAEXXZ ENDP		; CCompany::getEmailAddresses
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\company.cpp
;	COMDAT ?getFaxNumbers@CCompany@@AAEXXZ
_TEXT	SEGMENT
tv87 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
?getFaxNumbers@CCompany@@AAEXXZ PROC			; CCompany::getFaxNumbers, COMDAT
; _this$ = ecx

; 115  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 116  : 	CUserInterface::displaySubMenu(faxNumberMenu, faxNumbers, "fax number");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T1[ebp], esp
	push	OFFSET ??_C@_0L@IDMPELLM@fax?5number?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv87[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 112				; 00000070H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	push	ecx
	call	?displaySubMenu@CUserInterface@@SAXAAVCCustomMenu@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; CUserInterface::displaySubMenu
	add	esp, 36					; 00000024H

; 117  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getFaxNumbers@CCompany@@AAEXXZ ENDP			; CCompany::getFaxNumbers
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\company.cpp
;	COMDAT ?getPhoneNumbers@CCompany@@AAEXXZ
_TEXT	SEGMENT
tv87 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
?getPhoneNumbers@CCompany@@AAEXXZ PROC			; CCompany::getPhoneNumbers, COMDAT
; _this$ = ecx

; 110  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 111  : 	CUserInterface::displaySubMenu(phoneNumberMenu, phoneNumbers, "phone number");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T1[ebp], esp
	push	OFFSET ??_C@_0N@KEFPBKIO@phone?5number?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv87[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 96					; 00000060H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	?displaySubMenu@CUserInterface@@SAXAAVCCustomMenu@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; CUserInterface::displaySubMenu
	add	esp, 36					; 00000024H

; 112  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getPhoneNumbers@CCompany@@AAEXXZ ENDP			; CCompany::getPhoneNumbers
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\company.cpp
;	COMDAT ?generateMenus@CCompany@@EAEXXZ
_TEXT	SEGMENT
tv486 = -412						; size = 4
tv484 = -412						; size = 4
tv482 = -412						; size = 4
tv480 = -412						; size = 4
tv478 = -412						; size = 4
tv476 = -412						; size = 4
tv474 = -412						; size = 4
tv472 = -412						; size = 4
tv470 = -412						; size = 4
tv468 = -412						; size = 4
tv466 = -412						; size = 4
tv464 = -412						; size = 4
tv462 = -412						; size = 4
tv460 = -412						; size = 4
tv458 = -412						; size = 4
tv456 = -412						; size = 4
tv454 = -412						; size = 4
$T1 = -404						; size = 4
$T2 = -392						; size = 4
$T3 = -380						; size = 4
$T4 = -368						; size = 4
$T5 = -356						; size = 4
$T6 = -344						; size = 4
$T7 = -332						; size = 4
$T8 = -320						; size = 4
$T9 = -308						; size = 4
$T10 = -296						; size = 4
$T11 = -284						; size = 4
$T12 = -272						; size = 4
$T13 = -260						; size = 4
$T14 = -248						; size = 4
$T15 = -236						; size = 4
$T16 = -224						; size = 4
$T17 = -212						; size = 4
_this$ = -8						; size = 4
?generateMenus@CCompany@@EAEXXZ PROC			; CCompany::generateMenus, COMDAT
; _this$ = ecx

; 86   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 412				; 0000019cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-412]
	mov	ecx, 103				; 00000067H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 87   : 	contactMenu.addMenuOption('A', "Enter name");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T17[ebp], esp
	push	OFFSET ??_C@_0L@EIELKJJE@Enter?5name?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv454[ebp], eax
	push	65					; 00000041H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?addMenuOption@CCustomMenu@@QAE_NDV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CCustomMenu::addMenuOption

; 88   : 	contactMenu.addMenuOption('B', "Edit phone numbers");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T16[ebp], esp
	push	OFFSET ??_C@_0BD@LCFAHLH@Edit?5phone?5numbers?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv456[ebp], eax
	push	66					; 00000042H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?addMenuOption@CCustomMenu@@QAE_NDV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CCustomMenu::addMenuOption

; 89   : 	contactMenu.addMenuOption('C', "Edit fax numbers");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T15[ebp], esp
	push	OFFSET ??_C@_0BB@EEBFEAFE@Edit?5fax?5numbers?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv458[ebp], eax
	push	67					; 00000043H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?addMenuOption@CCustomMenu@@QAE_NDV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CCustomMenu::addMenuOption

; 90   : 	contactMenu.addMenuOption('D', "Edit email addresses");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T14[ebp], esp
	push	OFFSET ??_C@_0BF@PEBHBCKH@Edit?5email?5addresses?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv460[ebp], eax
	push	68					; 00000044H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?addMenuOption@CCustomMenu@@QAE_NDV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CCustomMenu::addMenuOption

; 91   : 	contactMenu.addMenuOption('E', "Enter address");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T13[ebp], esp
	push	OFFSET ??_C@_0O@EEFLFDIA@Enter?5address?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv462[ebp], eax
	push	69					; 00000045H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?addMenuOption@CCustomMenu@@QAE_NDV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CCustomMenu::addMenuOption

; 92   : 	contactMenu.addMenuOption('F', "Enter hours");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T12[ebp], esp
	push	OFFSET ??_C@_0M@BGJFKBDI@Enter?5hours?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv464[ebp], eax
	push	70					; 00000046H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?addMenuOption@CCustomMenu@@QAE_NDV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CCustomMenu::addMenuOption

; 93   : 	contactMenu.addMenuOption('G', "Enter website");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T11[ebp], esp
	push	OFFSET ??_C@_0O@OAMALGNP@Enter?5website?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv466[ebp], eax
	push	71					; 00000047H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?addMenuOption@CCustomMenu@@QAE_NDV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CCustomMenu::addMenuOption

; 94   : 	contactMenu.addMenuOption('H', "Finish editing contact");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T10[ebp], esp
	push	OFFSET ??_C@_0BH@KBHLMDIH@Finish?5editing?5contact?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv468[ebp], eax
	push	72					; 00000048H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?addMenuOption@CCustomMenu@@QAE_NDV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CCustomMenu::addMenuOption

; 95   : 
; 96   : 	phoneNumberMenu.addMenuOption('A', "Add phone number");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T9[ebp], esp
	push	OFFSET ??_C@_0BB@FAHCJKFO@Add?5phone?5number?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv470[ebp], eax
	push	65					; 00000041H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?addMenuOption@CCustomMenu@@QAE_NDV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CCustomMenu::addMenuOption

; 97   : 	phoneNumberMenu.addMenuOption('B', "Remove phone number");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T8[ebp], esp
	push	OFFSET ??_C@_0BE@HPCFJHJF@Remove?5phone?5number?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv472[ebp], eax
	push	66					; 00000042H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?addMenuOption@CCustomMenu@@QAE_NDV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CCustomMenu::addMenuOption

; 98   : 	phoneNumberMenu.addMenuOption('C', "Return to previous menu");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T7[ebp], esp
	push	OFFSET ??_C@_0BI@KGPMIEGO@Return?5to?5previous?5menu?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv474[ebp], eax
	push	67					; 00000043H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?addMenuOption@CCustomMenu@@QAE_NDV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CCustomMenu::addMenuOption

; 99   : 
; 100  : 	faxNumberMenu.addMenuOption('A', "Add fax number");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T6[ebp], esp
	push	OFFSET ??_C@_0P@PJBDCCA@Add?5fax?5number?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv476[ebp], eax
	push	65					; 00000041H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	?addMenuOption@CCustomMenu@@QAE_NDV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CCustomMenu::addMenuOption

; 101  : 	faxNumberMenu.addMenuOption('B', "Remove fax number");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T5[ebp], esp
	push	OFFSET ??_C@_0BC@KGBPMKIC@Remove?5fax?5number?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv478[ebp], eax
	push	66					; 00000042H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	?addMenuOption@CCustomMenu@@QAE_NDV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CCustomMenu::addMenuOption

; 102  : 	faxNumberMenu.addMenuOption('C', "Return to previous menu");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	push	OFFSET ??_C@_0BI@KGPMIEGO@Return?5to?5previous?5menu?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv480[ebp], eax
	push	67					; 00000043H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	?addMenuOption@CCustomMenu@@QAE_NDV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CCustomMenu::addMenuOption

; 103  : 
; 104  : 	emailAddressMenu.addMenuOption('A', "Add email address");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	push	OFFSET ??_C@_0BC@BFBEABLC@Add?5email?5address?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv482[ebp], eax
	push	65					; 00000041H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	?addMenuOption@CCustomMenu@@QAE_NDV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CCustomMenu::addMenuOption

; 105  : 	emailAddressMenu.addMenuOption('B', "Remove email address");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	push	OFFSET ??_C@_0BF@BJINENIH@Remove?5email?5address?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv484[ebp], eax
	push	66					; 00000042H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	?addMenuOption@CCustomMenu@@QAE_NDV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CCustomMenu::addMenuOption

; 106  : 	emailAddressMenu.addMenuOption('C', "Return to previous menu");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T1[ebp], esp
	push	OFFSET ??_C@_0BI@KGPMIEGO@Return?5to?5previous?5menu?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv486[ebp], eax
	push	67					; 00000043H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	?addMenuOption@CCustomMenu@@QAE_NDV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CCustomMenu::addMenuOption

; 107  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 412				; 0000019cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?generateMenus@CCompany@@EAEXXZ ENDP			; CCompany::generateMenus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAXI@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAXI@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
__Pnext$ = -44						; size = 4
__Lock$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range, COMDAT
; _this$ = ecx

; 1775 : 		{	// orphan iterators within specified (inclusive) range

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1776 : 		_Lockit _Lock(_LOCK_DEBUG);

	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1777 : 		const_iterator **_Pnext = (const_iterator **)this->_Getpfirst();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax

; 1778 : 		if (_Pnext != 0)

	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN4@Orphan_ran
$LN2@Orphan_ran:

; 1779 : 			{	// test an iterator
; 1780 : 			while (*_Pnext != 0)

	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN4@Orphan_ran

; 1781 : 				if ((*_Pnext)->_Ptr < _First || _Last < (*_Pnext)->_Ptr)

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR __First$[ebp]
	jb	SHORT $LN7@Orphan_ran
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Last$[ebp]
	cmp	edx, DWORD PTR [ecx+8]
	jae	SHORT $LN5@Orphan_ran
$LN7@Orphan_ran:

; 1782 : 					_Pnext = (const_iterator **)(*_Pnext)->_Getpnext();

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax

; 1783 : 				else

	jmp	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:

; 1784 : 					{	// orphan the iterator
; 1785 : 					(*_Pnext)->_Clrcont();

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont

; 1786 : 					*_Pnext = *(const_iterator **)(*_Pnext)->_Getpnext();

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN6@Orphan_ran:

; 1787 : 					}

	jmp	SHORT $LN2@Orphan_ran
$LN4@Orphan_ran:

; 1788 : 			}
; 1789 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Orphan_ran
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN13@Orphan_ran:
	DD	1
	DD	$LN12@Orphan_ran
$LN12@Orphan_ran:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN10@Orphan_ran
$LN10@Orphan_ran:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen, COMDAT
; _this$ = ecx

; 1764 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1765 : 		_Xlength_error("vector<T> too long");

	mov	esi, esp
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xlen:

; 1766 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy, COMDAT
; _this$ = ecx

; 1636 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1637 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
	cmp	DWORD PTR [eax], 0
	je	$LN1@Tidy

; 1638 : 			{	// something to free, destroy and deallocate it
; 1639 : 			this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Orphan_all

; 1640 : 			_Destroy(this->_Myfirst(), this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy

; 1641 : 			this->_Getal().deallocate(this->_Myfirst(),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myend
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
	mov	ecx, DWORD PTR [esi]
	sub	ecx, DWORD PTR [eax]
	mov	eax, ecx
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate

; 1642 : 				this->_Myend() - this->_Myfirst());
; 1643 : 			this->_Myfirst() = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
	mov	DWORD PTR [eax], 0

; 1644 : 			this->_Mylast() = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast
	mov	DWORD PTR [eax], 0

; 1645 : 			this->_Myend() = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myend
	mov	DWORD PTR [eax], 0
$LN1@Tidy:

; 1646 : 			}
; 1647 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve, COMDAT
; _this$ = ecx

; 1626 : 		{	// ensure room for _Count new elements, grow exponentially

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1627 : 		if (_Unused_capacity() < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve

; 1628 : 			{	// need more room, try to get it
; 1629 : 			if (max_size() - size() < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN3@Reserve

; 1630 : 				_Xlen();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
$LN3@Reserve:

; 1631 : 			_Reallocate(_Grow_to(size() + _Count));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEII@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reallocate
$LN4@Reserve:

; 1632 : 			}
; 1633 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -48						; size = 4
__Ptr$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reallocate, COMDAT
; _this$ = ecx

; 1601 : 		{	// move to array of exactly _Count elements

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1602 : 		pointer _Ptr = this->_Getal().allocate(_Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax

; 1603 : 
; 1604 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1605 : 		_Umove(this->_Myfirst(), this->_Mylast(), _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z$0:

; 1606 : 		_CATCH_ALL
; 1607 : 		this->_Getal().deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate

; 1608 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1609 : 		_CATCH_END

	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z$1:

; 1610 : 
; 1611 : 		size_type _Size = size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
	mov	DWORD PTR __Size$[ebp], eax

; 1612 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Reallocate

; 1613 : 			{	// destroy and deallocate old array
; 1614 : 			_Destroy(this->_Myfirst(), this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy

; 1615 : 			this->_Getal().deallocate(this->_Myfirst(),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myend
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [esi]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate
$LN3@Reallocate:

; 1616 : 				this->_Myend() - this->_Myfirst());
; 1617 : 			}
; 1618 : 
; 1619 : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Orphan_all

; 1620 : 		this->_Myend() = _Ptr + _Count;

	imul	esi, DWORD PTR __Count$[ebp], 28
	add	esi, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myend
	mov	DWORD PTR [eax], esi

; 1621 : 		this->_Mylast() = _Ptr + _Size;

	imul	esi, DWORD PTR __Size$[ebp], 28
	add	esi, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast
	mov	DWORD PTR [eax], esi

; 1622 : 		this->_Myfirst() = _Ptr;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx
$LN4@Reallocate:

; 1623 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reallocate
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
__Capacity$ = -20					; size = 4
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEII@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Grow_to, COMDAT
; _this$ = ecx

; 1585 : 		{	// grow by 50% or at least to _Count

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1586 : 		size_type _Capacity = capacity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax

; 1587 : 
; 1588 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax

; 1589 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%
; 1590 : 		if (_Capacity < _Count)

	mov	eax, DWORD PTR __Capacity$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN2@Grow_to

; 1591 : 			_Capacity = _Count;

	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
$LN2@Grow_to:

; 1592 : 		return (_Capacity);

	mov	eax, DWORD PTR __Capacity$[ebp]

; 1593 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEII@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy, COMDAT
; _this$ = ecx

; 1580 : 		{	// destroy [_First, _Last) using allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1581 : 		_Destroy_range(_First, _Last, this->_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
	push	eax
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
	add	esp, 12					; 0000000cH

; 1582 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Pop_back_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Ptr$ = -20						; size = 4
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Pop_back_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Pop_back_n, COMDAT
; _this$ = ecx

; 1527 : 		{	// erase _Count elements at end

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1528 : 		pointer _Ptr = this->_Mylast() - _Count;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast
	imul	ecx, DWORD PTR __Count$[ebp], 28
	mov	edx, DWORD PTR [eax]
	sub	edx, ecx
	mov	DWORD PTR __Ptr$[ebp], edx

; 1529 : 
; 1530 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1531 : 		_Orphan_range(_Ptr, this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range

; 1532 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1533 : 
; 1534 : 		_Destroy(_Ptr, this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy

; 1535 : 		this->_Mylast() = _Ptr;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx

; 1536 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Pop_back_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Pop_back_n
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size, COMDAT
; _this$ = ecx

; 1184 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1185 : 		return (this->_Getal().max_size());

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size

; 1186 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size, COMDAT
; _this$ = ecx

; 1179 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1180 : 		return (this->_Mylast() - this->_Myfirst());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
	mov	ecx, DWORD PTR [esi]
	sub	ecx, DWORD PTR [eax]
	mov	eax, ecx
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx

; 1181 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?resize@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z
_TEXT	SEGMENT
tv143 = -224						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
?resize@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::resize, COMDAT
; _this$ = ecx

; 1133 : 		{	// determine new length, padding as needed

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?resize@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1134 : 		if (_Newsize < size())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
	cmp	DWORD PTR __Newsize$[ebp], eax
	jae	SHORT $LN2@resize

; 1135 : 			_Pop_back_n(size() - _Newsize);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
	sub	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Pop_back_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Pop_back_n
	jmp	$LN6@resize
$LN2@resize:

; 1136 : 		else if (size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	$LN6@resize

; 1137 : 			{	// pad as needed
; 1138 : 			_Reserve(_Newsize - size());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
	mov	ecx, DWORD PTR __Newsize$[ebp]
	sub	ecx, eax
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve

; 1139 : 			_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1140 : 			_Uninitialized_default_fill_n(this->_Mylast(), _Newsize - size(),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
	mov	ecx, DWORD PTR __Newsize$[ebp]
	sub	ecx, eax
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast
	mov	edx, DWORD PTR [eax]
	push	edx
	call	??$_Uninitialized_default_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z ; std::_Uninitialized_default_fill_n<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,unsigned int,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN7@resize
__catch$?resize@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z$0:

; 1141 : 				this->_Getal());
; 1142 : 			_CATCH_ALL
; 1143 : 			_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy

; 1144 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1145 : 			_CATCH_END

	mov	eax, $LN10@resize
	ret	0
$LN7@resize:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?resize@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z$1
$LN10@resize:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?resize@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z$1:

; 1146 : 			this->_Mylast() += _Newsize - size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast
	mov	DWORD PTR tv143[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
	mov	ecx, DWORD PTR __Newsize$[ebp]
	sub	ecx, eax
	imul	edx, ecx, 28
	mov	eax, DWORD PTR tv143[ebp]
	add	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv143[ebp]
	mov	DWORD PTR [ecx], edx
$LN6@resize:

; 1147 : 			}
; 1148 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?resize@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-228]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?resize@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?resize@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::resize
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end, COMDAT
; _this$ = ecx

; 1067 : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1068 : 		return (iterator(this->_Mylast(), &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1069 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin, COMDAT
; _this$ = ecx

; 1062 : 		{	// return iterator for beginning of nonmutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1063 : 		return (const_iterator(this->_Myfirst(), &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1064 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin, COMDAT
; _this$ = ecx

; 1057 : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1058 : 		return (iterator(this->_Myfirst(), &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1059 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Unused_capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Unused_capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unused_capacity, COMDAT
; _this$ = ecx

; 1047 : 		{	// micro-optimization for capacity() - size()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1048 : 		return (this->_Myend() - this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myend
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast
	mov	ecx, DWORD PTR [esi]
	sub	ecx, DWORD PTR [eax]
	mov	eax, ecx
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx

; 1049 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity, COMDAT
; _this$ = ecx

; 1042 : 		{	// return current length of allocated storage

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1043 : 		return (this->_Myend() - this->_Myfirst());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myend
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
	mov	ecx, DWORD PTR [esi]
	sub	ecx, DWORD PTR [eax]
	mov	eax, ecx
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx

; 1044 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::reserve, COMDAT
; _this$ = ecx

; 1032 : 		{	// determine new minimum length of allocated storage

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1033 : 		if (capacity() < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@reserve

; 1034 : 			{	// something to do, check and reallocate
; 1035 : 			if (max_size() < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN3@reserve

; 1036 : 				_Xlen();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
$LN3@reserve:

; 1037 : 			_Reallocate(_Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reallocate
$LN4@reserve:

; 1038 : 			}
; 1039 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 975  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 976  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy

; 977  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 707  : 		{	// construct empty vector

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 706  : 		: _Mybase()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >

; 708  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 319  : 		{	// return const reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 320  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 321  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 314  : 		{	// return reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 315  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 316  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 299  : 		{	// return const reference to first

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 300  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 301  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 294  : 		{	// return reference to first

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 295  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 296  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 488  : 		{	// initialize values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12

; 485  : 		: _Myfirst(),

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 486  : 		_Mylast(),

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 487  : 		_Myend()

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 489  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myend, COMDAT
; _this$ = ecx

; 667  : 		{	// return const reference to _Myend

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 668  : 		return (_Get_data()._Myend);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data
	add	eax, 12					; 0000000cH

; 669  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myend, COMDAT
; _this$ = ecx

; 662  : 		{	// return reference to _Myend

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 663  : 		return (_Get_data()._Myend);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data
	add	eax, 12					; 0000000cH

; 664  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast, COMDAT
; _this$ = ecx

; 657  : 		{	// return const reference to _Mylast

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 658  : 		return (_Get_data()._Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data
	add	eax, 8

; 659  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast, COMDAT
; _this$ = ecx

; 652  : 		{	// return reference to _Mylast

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 653  : 		return (_Get_data()._Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data
	add	eax, 8

; 654  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst, COMDAT
; _this$ = ecx

; 647  : 		{	// return const reference to _Myfirst

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 648  : 		return (_Get_data()._Myfirst);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data
	add	eax, 4

; 649  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst, COMDAT
; _this$ = ecx

; 642  : 		{	// return reference to _Myfirst

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 643  : 		return (_Get_data()._Myfirst);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data
	add	eax, 4

; 644  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data, COMDAT
; _this$ = ecx

; 637  : 		{	// return const reference to _Vector_val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 638  : 		return (_Mypair._Get_second());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_second

; 639  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data, COMDAT
; _this$ = ecx

; 632  : 		{	// return reference to _Vector_val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 633  : 		return (_Mypair._Get_second());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_second

; 634  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal, COMDAT
; _this$ = ecx

; 627  : 		{	// return const reference to allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return (_Mypair._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first

; 629  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal, COMDAT
; _this$ = ecx

; 622  : 		{	// return reference to allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 623  : 		return (_Mypair._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first

; 624  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Orphan_all, COMDAT
; _this$ = ecx

; 612  : 		{	// orphan all iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 613  : 		_Get_data()._Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data
	mov	ecx, eax
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 614  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myproxy, COMDAT
; _this$ = ecx

; 601  : 		{	// return reference to _Myproxy

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 602  : 		return (_Get_data()._Myproxy);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data

; 603  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getpfirst, COMDAT
; _this$ = ecx

; 596  : 		{	// get address of iterator chain

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 597  : 		return (_Get_data()._Getpfirst());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data
	mov	ecx, eax
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst

; 598  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -17					; size = 1
_this$ = -8						; size = 4
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Free_proxy, COMDAT
; _this$ = ecx

; 586  : 		{	// destroy proxy

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 587  : 		typename _Alty::template rebind<_Container_proxy>::other
; 588  : 			_Alproxy(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>

; 589  : 		_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Orphan_all

; 590  : 		_Alproxy.destroy(_Myproxy());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>

; 591  : 		_Alproxy.deallocate(_Alproxy.address(*_Myproxy()), 1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate

; 592  : 		_Myproxy() = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myproxy
	mov	DWORD PTR [eax], 0

; 593  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Free_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Free_proxy:
	DD	1
	DD	$LN4@Free_proxy
$LN4@Free_proxy:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Free_proxy
$LN3@Free_proxy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -228						; size = 8
__Alproxy$ = -17					; size = 1
_this$ = -8						; size = 4
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Alloc_proxy, COMDAT
; _this$ = ecx

; 577  : 		{	// construct proxy

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		typename _Alty::template rebind<_Container_proxy>::other
; 579  : 			_Alproxy(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>

; 580  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	push	eax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myproxy
	mov	DWORD PTR [eax], esi

; 581  : 		_Alproxy.construct(_Myproxy(), _Container_proxy());

	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>

; 582  : 		_Myproxy()->_Mycont = &_Get_data();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myproxy
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax], esi

; 583  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Alloc_prox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Alloc_prox:
	DD	1
	DD	$LN4@Alloc_prox
$LN4@Alloc_prox:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Alloc_prox
$LN3@Alloc_prox:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy proxy

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 559  : 		_Free_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Free_proxy

; 560  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 544  : 		{	// default construct allocator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 543  : 		: _Mypair(_Zero_then_variadic_args_t())

	movzx	eax, BYTE PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1><>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 545  : 		_Alloc_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Alloc_proxy

; 546  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size, COMDAT
; _this$ = ecx

; 1007 : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1008 : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAIABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
	add	esp, 4

; 1009 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate, COMDAT
; _this$ = ecx

; 986  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 987  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate

; 988  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::allocate, COMDAT
; _this$ = ecx

; 975  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 976  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate

; 977  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 936  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 935  : 		: _Mybase()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 937  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAIABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAIABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size, COMDAT

; 868  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 869  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size

; 870  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAIABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size, COMDAT
; _this$ = ecx

; 748  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 749  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 153391689				; 09249249H

; 750  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate, COMDAT
; _this$ = ecx

; 724  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 725  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

	push	1
	push	28					; 0000001cH
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	?_Allocate@std@@YAPAXII_N@Z		; std::_Allocate
	add	esp, 12					; 0000000cH

; 726  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate, COMDAT
; _this$ = ecx

; 719  : 		{	// deallocate object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 720  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	28					; 0000001cH
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 721  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 699  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 700  : 		{	// construct default allocator (do nothing)
; 701  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\company.cpp
;	COMDAT ?load@CCompany@@UAEXAAVtext_iarchive@archive@boost@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ar$ = 8						; size = 4
_version$ = 12						; size = 4
?load@CCompany@@UAEXAAVtext_iarchive@archive@boost@@I@Z PROC ; CCompany::load, COMDAT
; _this$ = ecx

; 207  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 208  : 	ar >> name;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 68					; 00000044H
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?5V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 209  : 	ar >> phoneNumbers;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 96					; 00000060H
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?5V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >

; 210  : 	ar >> faxNumbers;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 112				; 00000070H
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?5V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >

; 211  : 	ar >> emailAddresses;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 128				; 00000080H
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?5V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >

; 212  : 	ar >> address;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 144				; 00000090H
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?5V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 213  : 	ar >> hours;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 172				; 000000acH
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?5V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 214  : 	ar >> website;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 200				; 000000c8H
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?5V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 215  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?load@CCompany@@UAEXAAVtext_iarchive@archive@boost@@I@Z ENDP ; CCompany::load
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\company.cpp
;	COMDAT ?save@CCompany@@UBEXAAVtext_oarchive@archive@boost@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ar$ = 8						; size = 4
_version$ = 12						; size = 4
?save@CCompany@@UBEXAAVtext_oarchive@archive@boost@@I@Z PROC ; CCompany::save, COMDAT
; _this$ = ecx

; 195  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 196  : 	ar << name;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 68					; 00000044H
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?6V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 197  : 	ar << phoneNumbers;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 96					; 00000060H
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?6V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >

; 198  : 	ar << faxNumbers;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 112				; 00000070H
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?6V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >

; 199  : 	ar << emailAddresses;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 128				; 00000080H
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?6V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >

; 200  : 	ar << address;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 144				; 00000090H
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?6V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 201  : 	ar << hours;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 172				; 000000acH
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?6V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 202  : 	ar << website;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 200				; 000000c8H
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?6V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 203  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?save@CCompany@@UBEXAAVtext_oarchive@archive@boost@@I@Z ENDP ; CCompany::save
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\company.cpp
;	COMDAT ?getSortableName@CCompany@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?getSortableName@CCompany@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CCompany::getSortableName, COMDAT
; _this$ = ecx

; 183  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 184  : 	return name;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 68					; 00000044H
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 185  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getSortableName@CCompany@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CCompany::getSortableName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\company.cpp
;	COMDAT ??8CCompany@@UBE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
_inName$ = 8						; size = 28
??8CCompany@@UBE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; CCompany::operator==, COMDAT
; _this$ = ecx

; 177  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 178  : 	return name == inName;

	lea	eax, DWORD PTR _inName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	push	ecx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	lea	ecx, DWORD PTR _inName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	al, BYTE PTR $T1[ebp]

; 179  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
??8CCompany@@UBE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CCompany::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\company.cpp
;	COMDAT ?contains@CCompany@@UAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv95 = -364						; size = 4
tv93 = -360						; size = 4
tv130 = -356						; size = 4
tv91 = -352						; size = 4
tv129 = -348						; size = 4
tv89 = -344						; size = 4
tv128 = -340						; size = 4
$T2 = -332						; size = 28
$T3 = -296						; size = 8
$T4 = -280						; size = 28
$T5 = -244						; size = 8
$T6 = -225						; size = 1
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_someName$ = 8						; size = 4
?contains@CCompany@@UAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; CCompany::contains, COMDAT
; _this$ = ecx

; 171  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?contains@CCompany@@UAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 352				; 00000160H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-364]
	mov	ecx, 88					; 00000058H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 172  : 	return boost::algorithm::to_upper_copy(name) == boost::algorithm::to_upper_copy(someName);

	lea	ecx, DWORD PTR $T5[ebp]
	call	??0locale@std@@QAE@XZ			; std::locale::locale
	mov	DWORD PTR tv128[ebp], eax
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR tv89[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv89[ebp]
	push	ecx
	mov	edx, DWORD PTR _someName$[ebp]
	push	edx
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??$to_upper_copy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@ABVlocale@3@@Z ; boost::algorithm::to_upper_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv129[ebp], eax
	mov	ecx, DWORD PTR tv129[ebp]
	mov	DWORD PTR tv91[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv91[ebp]
	push	edx
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0locale@std@@QAE@XZ			; std::locale::locale
	mov	DWORD PTR tv130[ebp], eax
	mov	eax, DWORD PTR tv130[ebp]
	mov	DWORD PTR tv93[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv93[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 68					; 00000044H
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??$to_upper_copy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@ABVlocale@3@@Z ; boost::algorithm::to_upper_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv95[ebp], eax
	mov	ecx, DWORD PTR tv95[ebp]
	push	ecx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	BYTE PTR $T6[ebp], al
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1locale@std@@QAE@XZ			; std::locale::~locale
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1locale@std@@QAE@XZ			; std::locale::~locale
	mov	al, BYTE PTR $T6[ebp]

; 173  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 364				; 0000016cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?contains@CCompany@@UAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__unwindfunclet$?contains@CCompany@@UAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?contains@CCompany@@UAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$?contains@CCompany@@UAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-368]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?contains@CCompany@@UAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?contains@CCompany@@UAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CCompany::contains
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\company.cpp
;	COMDAT ?getContactInformation@CCompany@@UAEXXZ
_TEXT	SEGMENT
tv215 = -436						; size = 4
tv210 = -436						; size = 4
tv205 = -436						; size = 4
tv200 = -436						; size = 4
tv213 = -432						; size = 4
tv208 = -432						; size = 4
tv203 = -432						; size = 4
tv198 = -432						; size = 4
tv212 = -428						; size = 4
tv207 = -428						; size = 4
tv202 = -428						; size = 4
tv197 = -428						; size = 4
tv74 = -428						; size = 4
$T1 = -420						; size = 28
$T2 = -384						; size = 4
$T3 = -372						; size = 28
$T4 = -336						; size = 4
$T5 = -324						; size = 28
$T6 = -288						; size = 4
$T7 = -276						; size = 28
$T8 = -240						; size = 4
_mainMenuChoice$9 = -33					; size = 1
_exit$ = -21						; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?getContactInformation@CCompany@@UAEXXZ PROC		; CCompany::getContactInformation, COMDAT
; _this$ = ecx

; 33   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 436				; 000001b4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-436]
	mov	ecx, 109				; 0000006dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 34   : 	bool exit = false;

	mov	BYTE PTR _exit$[ebp], 0
$LN2@getContact:

; 35   : 
; 36   : 	while (!exit)

	movzx	eax, BYTE PTR _exit$[ebp]
	test	eax, eax
	jne	$LN1@getContact

; 37   : 	{
; 38   : 		char mainMenuChoice = CUserInterface::displayMenu(contactMenu);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	?displayMenu@CUserInterface@@SADAAVCCustomMenu@@@Z ; CUserInterface::displayMenu
	add	esp, 4
	mov	BYTE PTR _mainMenuChoice$9[ebp], al

; 39   : 
; 40   : 		switch (mainMenuChoice)

	movsx	eax, BYTE PTR _mainMenuChoice$9[ebp]
	mov	DWORD PTR tv74[ebp], eax
	mov	ecx, DWORD PTR tv74[ebp]
	sub	ecx, 65					; 00000041H
	mov	DWORD PTR tv74[ebp], ecx
	cmp	DWORD PTR tv74[ebp], 7
	ja	$LN4@getContact
	mov	edx, DWORD PTR tv74[ebp]
	jmp	DWORD PTR $LN23@getContact[edx*4]
$LN6@getContact:

; 41   : 		{
; 42   : 		case 'A':
; 43   : 		{
; 44   : 			name = CUserInterface::getUserInput("Company name: ");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T8[ebp], esp
	push	OFFSET ??_C@_0P@HGHHJMJK@Company?5name?3?5?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv197[ebp], eax
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	call	?getUserInput@CUserInterface@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z ; CUserInterface::getUserInput
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv198[ebp], eax
	mov	ecx, DWORD PTR tv198[ebp]
	mov	DWORD PTR tv200[ebp], ecx
	mov	edx, DWORD PTR tv200[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 45   : 			break;

	jmp	$LN4@getContact
$LN7@getContact:

; 46   : 		}
; 47   : 		case 'B':
; 48   : 		{
; 49   : 			getPhoneNumbers();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPhoneNumbers@CCompany@@AAEXXZ	; CCompany::getPhoneNumbers

; 50   : 			break;

	jmp	$LN4@getContact
$LN8@getContact:

; 51   : 		}
; 52   : 		case 'C':
; 53   : 		{
; 54   : 			getFaxNumbers();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?getFaxNumbers@CCompany@@AAEXXZ		; CCompany::getFaxNumbers

; 55   : 			break;

	jmp	$LN4@getContact
$LN9@getContact:

; 56   : 		}
; 57   : 		case 'D':
; 58   : 		{
; 59   : 			getEmailAddresses();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?getEmailAddresses@CCompany@@AAEXXZ	; CCompany::getEmailAddresses

; 60   : 			break;

	jmp	$LN4@getContact
$LN10@getContact:

; 61   : 		}
; 62   : 		case 'E':
; 63   : 		{
; 64   : 			address = CUserInterface::getUserInput("Address: ");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T6[ebp], esp
	push	OFFSET ??_C@_09GAGNALJM@Address?3?5?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv202[ebp], eax
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	call	?getUserInput@CUserInterface@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z ; CUserInterface::getUserInput
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR tv205[ebp], ecx
	mov	edx, DWORD PTR tv205[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 65   : 			break;

	jmp	$LN4@getContact
$LN11@getContact:

; 66   : 		}
; 67   : 		case 'F':
; 68   : 		{
; 69   : 			hours = CUserInterface::getUserInput("Hours: ");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	push	OFFSET ??_C@_07FEKBIJ@Hours?3?5?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv207[ebp], eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	?getUserInput@CUserInterface@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z ; CUserInterface::getUserInput
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv208[ebp], eax
	mov	ecx, DWORD PTR tv208[ebp]
	mov	DWORD PTR tv210[ebp], ecx
	mov	edx, DWORD PTR tv210[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 70   : 			break;

	jmp	SHORT $LN4@getContact
$LN12@getContact:

; 71   : 		}
; 72   : 		case 'G':
; 73   : 		{
; 74   : 			website = CUserInterface::getUserInput("Website: ");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	push	OFFSET ??_C@_09INCOPIGL@Website?3?5?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv212[ebp], eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?getUserInput@CUserInterface@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z ; CUserInterface::getUserInput
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv213[ebp], eax
	mov	ecx, DWORD PTR tv213[ebp]
	mov	DWORD PTR tv215[ebp], ecx
	mov	edx, DWORD PTR tv215[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 200				; 000000c8H
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 75   : 			break;

	jmp	SHORT $LN4@getContact
$LN13@getContact:

; 76   : 		}
; 77   : 		case 'H':
; 78   : 			exit = true;

	mov	BYTE PTR _exit$[ebp], 1
$LN4@getContact:

; 79   : 			break;
; 80   : 		}
; 81   : 	}

	jmp	$LN2@getContact
$LN1@getContact:

; 82   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 436				; 000001b4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN23@getContact:
	DD	$LN6@getContact
	DD	$LN7@getContact
	DD	$LN8@getContact
	DD	$LN9@getContact
	DD	$LN10@getContact
	DD	$LN11@getContact
	DD	$LN12@getContact
	DD	$LN13@getContact
?getContactInformation@CCompany@@UAEXXZ ENDP		; CCompany::getContactInformation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\company.cpp
;	COMDAT ?displayName@CCompany@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?displayName@CCompany@@UAEXXZ PROC			; CCompany::displayName, COMDAT
; _this$ = ecx

; 165  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 166  : 	cout << "\t" << name << endl;

	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 68					; 00000044H
	push	eax
	push	OFFSET ??_C@_01GPOEFGEJ@?7?$AA@
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	ecx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 167  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?displayName@CCompany@@UAEXXZ ENDP			; CCompany::displayName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\company.cpp
;	COMDAT ?display@CCompany@@UAEXXZ
_TEXT	SEGMENT
tv301 = -668						; size = 4
tv216 = -668						; size = 4
tv131 = -668						; size = 4
tv415 = -664						; size = 4
tv404 = -664						; size = 4
tv393 = -664						; size = 4
tv432 = -660						; size = 4
tv428 = -660						; size = 4
tv424 = -660						; size = 4
tv422 = -656						; size = 4
tv420 = -656						; size = 4
tv417 = -656						; size = 4
tv413 = -656						; size = 4
tv411 = -656						; size = 4
tv409 = -656						; size = 4
tv406 = -656						; size = 4
tv402 = -656						; size = 4
tv400 = -656						; size = 4
tv398 = -656						; size = 4
tv395 = -656						; size = 4
tv391 = -656						; size = 4
tv434 = -652						; size = 4
tv433 = -652						; size = 4
tv431 = -652						; size = 4
tv430 = -652						; size = 4
tv429 = -652						; size = 4
tv427 = -652						; size = 4
tv426 = -652						; size = 4
tv425 = -652						; size = 4
tv423 = -652						; size = 4
tv307 = -652						; size = 4
tv222 = -652						; size = 4
tv137 = -652						; size = 4
$T2 = -644						; size = 12
$T3 = -621						; size = 1
$T4 = -612						; size = 12
$T5 = -589						; size = 1
$T6 = -580						; size = 12
$T7 = -560						; size = 12
$T8 = -540						; size = 12
$T9 = -520						; size = 12
$T10 = -497						; size = 1
$T11 = -488						; size = 12
$T12 = -465						; size = 1
$T13 = -456						; size = 12
$T14 = -436						; size = 12
$T15 = -416						; size = 12
$T16 = -396						; size = 12
$T17 = -373						; size = 1
$T18 = -364						; size = 12
$T19 = -341						; size = 1
$T20 = -332						; size = 12
$T21 = -312						; size = 12
$T22 = -292						; size = 12
_it$23 = -80						; size = 12
_it$24 = -60						; size = 12
_it$25 = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?display@CCompany@@UAEXXZ PROC				; CCompany::display, COMDAT
; _this$ = ecx

; 126  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?display@CCompany@@UAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 656				; 00000290H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-668]
	mov	ecx, 164				; 000000a4H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 	cout << "            Name:  " << name << "\n";

	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 68					; 00000044H
	push	eax
	push	OFFSET ??_C@_0BE@MLGHGCIF@?5?5?5?5?5?5?5?5?5?5?5?5Name?3?5?5?$AA@
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	ecx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8

; 128  : 	cout << "   Phone Numbers:  " << (phoneNumbers.begin() == phoneNumbers.end() ? "\n" : "");

	lea	eax, DWORD PTR $T21[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	mov	DWORD PTR tv423[ebp], eax
	mov	ecx, DWORD PTR tv423[ebp]
	mov	DWORD PTR tv391[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR tv391[ebp]
	push	edx
	lea	eax, DWORD PTR $T22[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	mov	DWORD PTR tv424[ebp], eax
	mov	ecx, DWORD PTR tv424[ebp]
	mov	DWORD PTR tv393[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv393[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN15@display
	mov	DWORD PTR tv131[ebp], OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	jmp	SHORT $LN16@display
$LN15@display:
	mov	DWORD PTR tv131[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN16@display:
	mov	eax, DWORD PTR tv131[ebp]
	push	eax
	push	OFFSET ??_C@_0BE@HDLJGIGO@?5?5?5Phone?5Numbers?3?5?5?$AA@
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	ecx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T22[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T21[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ

; 129  : 	for (vector<string>::const_iterator it = phoneNumbers.begin(); it != phoneNumbers.end(); ++it)

	lea	eax, DWORD PTR $T20[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	mov	DWORD PTR tv425[ebp], eax
	mov	ecx, DWORD PTR tv425[ebp]
	mov	DWORD PTR tv395[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv395[ebp]
	push	edx
	lea	ecx, DWORD PTR _it$25[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T20[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
	jmp	SHORT $LN4@display
$LN2@display:
	lea	ecx, DWORD PTR _it$25[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
$LN4@display:
	lea	eax, DWORD PTR $T18[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	mov	DWORD PTR tv137[ebp], eax
	mov	ecx, DWORD PTR tv137[ebp]
	mov	DWORD PTR tv398[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR tv398[ebp]
	push	edx
	lea	ecx, DWORD PTR _it$25[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
	mov	BYTE PTR $T19[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T18[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T19[ebp]
	test	eax, eax
	je	$LN3@display

; 130  : 	{
; 131  : 		if (it != phoneNumbers.begin())

	lea	eax, DWORD PTR $T16[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	mov	DWORD PTR tv426[ebp], eax
	mov	ecx, DWORD PTR tv426[ebp]
	mov	DWORD PTR tv400[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR tv400[ebp]
	push	edx
	lea	ecx, DWORD PTR _it$25[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
	mov	BYTE PTR $T17[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T16[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T17[ebp]
	test	eax, eax
	je	SHORT $LN11@display

; 132  : 		{
; 133  : 			cout << "                   ";

	push	OFFSET ??_C@_0BE@PAALNHLB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$AA@
	mov	eax, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
$LN11@display:

; 134  : 		}
; 135  : 
; 136  : 		cout << (*it) << "\n";

	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	lea	ecx, DWORD PTR _it$25[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
	push	eax
	mov	eax, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	jmp	$LN2@display
$LN3@display:

; 137  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$25[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ

; 138  : 	cout << "     Fax Numbers:  " << (faxNumbers.begin() == faxNumbers.end() ? "\n" : "");

	lea	eax, DWORD PTR $T14[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	mov	DWORD PTR tv427[ebp], eax
	mov	ecx, DWORD PTR tv427[ebp]
	mov	DWORD PTR tv402[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	mov	edx, DWORD PTR tv402[ebp]
	push	edx
	lea	eax, DWORD PTR $T15[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	mov	DWORD PTR tv428[ebp], eax
	mov	ecx, DWORD PTR tv428[ebp]
	mov	DWORD PTR tv404[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR tv404[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN17@display
	mov	DWORD PTR tv216[ebp], OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	jmp	SHORT $LN18@display
$LN17@display:
	mov	DWORD PTR tv216[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN18@display:
	mov	eax, DWORD PTR tv216[ebp]
	push	eax
	push	OFFSET ??_C@_0BE@BBGIJEAL@?5?5?5?5?5Fax?5Numbers?3?5?5?$AA@
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	ecx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T15[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T14[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ

; 139  : 	for (vector<string>::const_iterator it = faxNumbers.begin(); it != faxNumbers.end(); ++it)

	lea	eax, DWORD PTR $T13[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	mov	DWORD PTR tv429[ebp], eax
	mov	ecx, DWORD PTR tv429[ebp]
	mov	DWORD PTR tv406[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 9
	mov	edx, DWORD PTR tv406[ebp]
	push	edx
	lea	ecx, DWORD PTR _it$24[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR $T13[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
	jmp	SHORT $LN7@display
$LN5@display:
	lea	ecx, DWORD PTR _it$24[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
$LN7@display:
	lea	eax, DWORD PTR $T11[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	mov	DWORD PTR tv222[ebp], eax
	mov	ecx, DWORD PTR tv222[ebp]
	mov	DWORD PTR tv409[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	edx, DWORD PTR tv409[ebp]
	push	edx
	lea	ecx, DWORD PTR _it$24[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
	mov	BYTE PTR $T12[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR $T11[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T12[ebp]
	test	eax, eax
	je	$LN6@display

; 140  : 	{
; 141  : 		if (it != faxNumbers.begin())

	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	mov	DWORD PTR tv430[ebp], eax
	mov	ecx, DWORD PTR tv430[ebp]
	mov	DWORD PTR tv411[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	edx, DWORD PTR tv411[ebp]
	push	edx
	lea	ecx, DWORD PTR _it$24[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
	mov	BYTE PTR $T10[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR $T9[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T10[ebp]
	test	eax, eax
	je	SHORT $LN12@display

; 142  : 		{
; 143  : 			cout << "                   ";

	push	OFFSET ??_C@_0BE@PAALNHLB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$AA@
	mov	eax, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
$LN12@display:

; 144  : 		}
; 145  : 
; 146  : 		cout << (*it) << "\n";

	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	lea	ecx, DWORD PTR _it$24[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
	push	eax
	mov	eax, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	jmp	$LN5@display
$LN6@display:

; 147  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$24[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ

; 148  : 	cout << " Email Addresses:  " << (emailAddresses.begin() == emailAddresses.end() ? "\n" : "");

	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	mov	DWORD PTR tv431[ebp], eax
	mov	ecx, DWORD PTR tv431[ebp]
	mov	DWORD PTR tv413[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	edx, DWORD PTR tv413[ebp]
	push	edx
	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	mov	DWORD PTR tv432[ebp], eax
	mov	ecx, DWORD PTR tv432[ebp]
	mov	DWORD PTR tv415[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	ecx, DWORD PTR tv415[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN19@display
	mov	DWORD PTR tv301[ebp], OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	jmp	SHORT $LN20@display
$LN19@display:
	mov	DWORD PTR tv301[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN20@display:
	mov	eax, DWORD PTR tv301[ebp]
	push	eax
	push	OFFSET ??_C@_0BE@DDKDJAIC@?5Email?5Addresses?3?5?5?$AA@
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	ecx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ

; 149  : 	for (vector<string>::const_iterator it = emailAddresses.begin(); it != emailAddresses.end(); ++it)

	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	mov	DWORD PTR tv433[ebp], eax
	mov	ecx, DWORD PTR tv433[ebp]
	mov	DWORD PTR tv417[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	edx, DWORD PTR tv417[ebp]
	push	edx
	lea	ecx, DWORD PTR _it$23[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
	jmp	SHORT $LN10@display
$LN8@display:
	lea	ecx, DWORD PTR _it$23[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
$LN10@display:
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	mov	DWORD PTR tv307[ebp], eax
	mov	ecx, DWORD PTR tv307[ebp]
	mov	DWORD PTR tv420[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	mov	edx, DWORD PTR tv420[ebp]
	push	edx
	lea	ecx, DWORD PTR _it$23[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
	mov	BYTE PTR $T5[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T5[ebp]
	test	eax, eax
	je	$LN9@display

; 150  : 	{
; 151  : 		if (it != emailAddresses.begin())

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	mov	DWORD PTR tv434[ebp], eax
	mov	ecx, DWORD PTR tv434[ebp]
	mov	DWORD PTR tv422[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	mov	edx, DWORD PTR tv422[ebp]
	push	edx
	lea	ecx, DWORD PTR _it$23[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
	mov	BYTE PTR $T3[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T3[ebp]
	test	eax, eax
	je	SHORT $LN13@display

; 152  : 		{
; 153  : 			cout << "                   ";

	push	OFFSET ??_C@_0BE@PAALNHLB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$AA@
	mov	eax, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
$LN13@display:

; 154  : 		}
; 155  : 
; 156  : 		cout << (*it) << "\n";

	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	lea	ecx, DWORD PTR _it$23[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
	push	eax
	mov	eax, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	jmp	$LN8@display
$LN9@display:

; 157  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$23[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ

; 158  : 	cout << "         Address:  " << address << "\n";

	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 144				; 00000090H
	push	eax
	push	OFFSET ??_C@_0BE@LOEDLNEE@?5?5?5?5?5?5?5?5?5Address?3?5?5?$AA@
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	ecx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8

; 159  : 	cout << "           Hours:  " << hours << "\n";

	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 172				; 000000acH
	push	eax
	push	OFFSET ??_C@_0BE@JHLBEJEA@?5?5?5?5?5?5?5?5?5?5?5Hours?3?5?5?$AA@
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	ecx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8

; 160  : 	cout << "         Website:  " << website << endl << endl;

	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	edi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 200				; 000000c8H
	push	eax
	push	OFFSET ??_C@_0BE@JNHHJJAI@?5?5?5?5?5?5?5?5?5Website?3?5?5?$AA@
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	ecx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 161  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN44@display
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 668				; 0000029cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN44@display:
	DD	3
	DD	$LN43@display
$LN43@display:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN39@display
	DD	-60					; ffffffc4H
	DD	12					; 0000000cH
	DD	$LN40@display
	DD	-80					; ffffffb0H
	DD	12					; 0000000cH
	DD	$LN41@display
$LN41@display:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
$LN40@display:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
$LN39@display:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?display@CCompany@@UAEXXZ$0:
	lea	ecx, DWORD PTR $T21[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?display@CCompany@@UAEXXZ$1:
	lea	ecx, DWORD PTR $T22[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?display@CCompany@@UAEXXZ$2:
	lea	ecx, DWORD PTR $T20[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?display@CCompany@@UAEXXZ$3:
	lea	ecx, DWORD PTR _it$25[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?display@CCompany@@UAEXXZ$4:
	lea	ecx, DWORD PTR $T18[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?display@CCompany@@UAEXXZ$5:
	lea	ecx, DWORD PTR $T16[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?display@CCompany@@UAEXXZ$6:
	lea	ecx, DWORD PTR $T14[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?display@CCompany@@UAEXXZ$7:
	lea	ecx, DWORD PTR $T15[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?display@CCompany@@UAEXXZ$8:
	lea	ecx, DWORD PTR $T13[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?display@CCompany@@UAEXXZ$9:
	lea	ecx, DWORD PTR _it$24[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?display@CCompany@@UAEXXZ$10:
	lea	ecx, DWORD PTR $T11[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?display@CCompany@@UAEXXZ$11:
	lea	ecx, DWORD PTR $T9[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?display@CCompany@@UAEXXZ$12:
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?display@CCompany@@UAEXXZ$13:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?display@CCompany@@UAEXXZ$14:
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?display@CCompany@@UAEXXZ$15:
	lea	ecx, DWORD PTR _it$23[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?display@CCompany@@UAEXXZ$16:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?display@CCompany@@UAEXXZ$17:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?display@CCompany@@UAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-672]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?display@CCompany@@UAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?display@CCompany@@UAEXXZ ENDP				; CCompany::display
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\company.cpp
;	COMDAT ?classType@CCompany@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?classType@CCompany@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CCompany::classType, COMDAT
; _this$ = ecx

; 27   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 28   : 	return "CCompany";

	push	OFFSET ??_C@_08FGJDGFCJ@CCompany?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 29   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?classType@CCompany@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CCompany::classType
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\company.cpp
;	COMDAT ??1CCompany@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CCompany@@UAE@XZ PROC				; CCompany::~CCompany, COMDAT
; _this$ = ecx

; 22   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CCompany@@6B@

; 23   : }

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 200				; 000000c8H
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CContact@@UAE@XZ			; CContact::~CContact
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CCompany@@UAE@XZ ENDP				; CCompany::~CCompany
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\company.cpp
;	COMDAT ??0CCompany@@QAE@_N@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_notDefault$ = 8					; size = 1
??0CCompany@@QAE@_N@Z PROC				; CCompany::CCompany, COMDAT
; _this$ = ecx

; 15   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CCompany@@QAE@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CContact@@QAE@XZ			; CContact::CContact
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CCompany@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 200				; 000000c8H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 7

; 16   : 	// Generate the menus for a company
; 17   : 	generateMenus();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?generateMenus@CCompany@@EAEXXZ		; CCompany::generateMenus

; 18   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CCompany@@QAE@_N@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CContact@@UAE@XZ			; CContact::~CContact
__unwindfunclet$??0CCompany@@QAE@_N@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CCompany@@QAE@_N@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$??0CCompany@@QAE@_N@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$??0CCompany@@QAE@_N@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$??0CCompany@@QAE@_N@Z$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CCompany@@QAE@_N@Z$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CCompany@@QAE@_N@Z$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 200				; 000000c8H
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CCompany@@QAE@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CCompany@@QAE@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CCompany@@QAE@_N@Z ENDP				; CCompany::CCompany
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\company.cpp
;	COMDAT ??0CCompany@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0CCompany@@QAE@XZ PROC				; CCompany::CCompany, COMDAT
; _this$ = ecx

; 6    : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CCompany@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CContact@@QAE@XZ			; CContact::CContact
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CCompany@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 200				; 000000c8H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 7

; 7    : 	// Generate the menus for a company
; 8    : 	generateMenus();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?generateMenus@CCompany@@EAEXXZ		; CCompany::generateMenus

; 9    : 
; 10   : 	// Show the edit menu for the company
; 11   : 	getContactInformation();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?getContactInformation@CCompany@@UAEXXZ	; CCompany::getContactInformation

; 12   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CCompany@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CContact@@UAE@XZ			; CContact::~CContact
__unwindfunclet$??0CCompany@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CCompany@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$??0CCompany@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$??0CCompany@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$??0CCompany@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CCompany@@QAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CCompany@@QAE@XZ$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 200				; 000000c8H
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CCompany@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CCompany@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CCompany@@QAE@XZ ENDP				; CCompany::CCompany
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_oarchive.hpp
;	COMDAT ?save@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVitem_version_type@serialization@3@@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?save@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVitem_version_type@serialization@3@@Z PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save, COMDAT
; _this$ = ecx

; 70   :     void save(const boost::serialization::item_version_type & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 71   :         save(static_cast<const unsigned int>(t));

	mov	ecx, DWORD PTR _t$[ebp]
	call	??Bitem_version_type@serialization@boost@@QBEIXZ ; boost::serialization::item_version_type::operator unsigned int
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$save@I@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABI@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<unsigned int>

; 72   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?save@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVitem_version_type@serialization@3@@Z ENDP ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This, COMDAT
; _this$ = ecx

; 46   :     Archive * This(){

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 47   :         return static_cast<Archive *>(this);

	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN3@This
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 24					; 00000018H
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@This
$LN3@This:
	mov	DWORD PTR tv68[ebp], 0
$LN4@This:
	mov	eax, DWORD PTR tv68[ebp]

; 48   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\basic_oserializer.hpp
;	COMDAT ?serialized_as_pointer@basic_oserializer@detail@archive@boost@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
?serialized_as_pointer@basic_oserializer@detail@archive@boost@@QBE_NXZ PROC ; boost::archive::detail::basic_oserializer::serialized_as_pointer, COMDAT
; _this$ = ecx

; 57   :     bool serialized_as_pointer() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 58   :         return m_bpos != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@serialized
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@serialized
$LN3@serialized:
	mov	DWORD PTR tv66[ebp], 0
$LN4@serialized:
	mov	al, BYTE PTR tv66[ebp]

; 59   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?serialized_as_pointer@basic_oserializer@detail@archive@boost@@QBE_NXZ ENDP ; boost::archive::detail::basic_oserializer::serialized_as_pointer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ?load@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVitem_version_type@serialization@3@@Z
_TEXT	SEGMENT
_v$ = -20						; size = 4
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?load@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVitem_version_type@serialization@3@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load, COMDAT
; _this$ = ecx

; 63   :     void load(boost::serialization::item_version_type & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 64   :         unsigned int v;
; 65   :         load(v);

	lea	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load@I@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAI@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<unsigned int>

; 66   :         t = boost::serialization::item_version_type(v);

	push	ecx
	mov	ecx, esp
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	call	??0item_version_type@serialization@boost@@QAE@I@Z ; boost::serialization::item_version_type::item_version_type
	mov	ecx, DWORD PTR _t$[ebp]
	call	??4item_version_type@serialization@boost@@QAEAAV012@V012@@Z ; boost::serialization::item_version_type::operator=

; 67   :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@load
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN5@load:
	DD	1
	DD	$LN4@load
$LN4@load:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@load
$LN3@load:
	DB	118					; 00000076H
	DB	0
?load@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVitem_version_type@serialization@3@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_iarchive.hpp
;	COMDAT ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ PROC ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This, COMDAT
; _this$ = ecx

; 45   :     Archive * This(){

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 46   :         return static_cast<Archive *>(this);

	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN3@This
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 24					; 00000018H
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@This
$LN3@This:
	mov	DWORD PTR tv68[ebp], 0
$LN4@This:
	mov	eax, DWORD PTR tv68[ebp]

; 47   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ENDP ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\item_version_type.hpp
;	COMDAT ??Bitem_version_type@serialization@boost@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bitem_version_type@serialization@boost@@QBEIXZ PROC	; boost::serialization::item_version_type::operator unsigned int, COMDAT
; _this$ = ecx

; 43   :     operator base_type () const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 44   :         return t;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 45   :     }                

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??Bitem_version_type@serialization@boost@@QBEIXZ ENDP	; boost::serialization::item_version_type::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\item_version_type.hpp
;	COMDAT ??4item_version_type@serialization@boost@@QAEAAV012@V012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??4item_version_type@serialization@boost@@QAEAAV012@V012@@Z PROC ; boost::serialization::item_version_type::operator=, COMDAT
; _this$ = ecx

; 38   :     item_version_type & operator=(item_version_type rhs){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 39   :         t = rhs.t; 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	DWORD PTR [eax], ecx

; 40   :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 41   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4item_version_type@serialization@boost@@QAEAAV012@V012@@Z ENDP ; boost::serialization::item_version_type::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\item_version_type.hpp
;	COMDAT ??0item_version_type@serialization@boost@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t_$ = 8						; size = 4
??0item_version_type@serialization@boost@@QAE@ABV012@@Z PROC ; boost::serialization::item_version_type::item_version_type, COMDAT
; _this$ = ecx

; 37   :     {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 36   :         t(t_.t)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t_$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 37   :     {}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0item_version_type@serialization@boost@@QAE@ABV012@@Z ENDP ; boost::serialization::item_version_type::item_version_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\item_version_type.hpp
;	COMDAT ??0item_version_type@serialization@boost@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t_$ = 8						; size = 4
??0item_version_type@serialization@boost@@QAE@I@Z PROC	; boost::serialization::item_version_type::item_version_type, COMDAT
; _this$ = ecx

; 32   :     explicit item_version_type(const unsigned int t_) : t(t_){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t_$[ebp]
	mov	DWORD PTR [eax], ecx

; 33   :         BOOST_ASSERT(t_ <= boost::integer_traits<base_type>::const_max);

	cmp	DWORD PTR _t_$[ebp], -1
	jbe	SHORT $LN1@item_versi
	mov	esi, esp
	push	33					; 00000021H
	push	OFFSET ??_C@_1KC@JIPKAKFO@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
	push	OFFSET ??_C@_1GE@MNCNLAH@?$AAt?$AA_?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAb?$AAo?$AAo?$AAs?$AAt?$AA?3?$AA?3?$AAi?$AAn?$AAt?$AAe?$AAg?$AAe?$AAr?$AA_?$AAt?$AAr?$AAa?$AAi?$AAt?$AAs?$AA?$DM?$AAb?$AAa?$AAs?$AAe@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@item_versi:

; 34   :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0item_version_type@serialization@boost@@QAE@I@Z ENDP	; boost::serialization::item_version_type::item_version_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\basic_iserializer.hpp
;	COMDAT ?serialized_as_pointer@basic_iserializer@detail@archive@boost@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
?serialized_as_pointer@basic_iserializer@detail@archive@boost@@QBE_NXZ PROC ; boost::archive::detail::basic_iserializer::serialized_as_pointer, COMDAT
; _this$ = ecx

; 56   :     bool serialized_as_pointer() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 57   :         return m_bpis != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@serialized
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@serialized
$LN3@serialized:
	mov	DWORD PTR tv66[ebp], 0
$LN4@serialized:
	mov	al, BYTE PTR tv66[ebp]

; 58   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?serialized_as_pointer@basic_iserializer@detail@archive@boost@@QBE_NXZ ENDP ; boost::archive::detail::basic_iserializer::serialized_as_pointer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\collection_size_type.hpp
;	COMDAT ??Bcollection_size_type@serialization@boost@@QAEAAIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bcollection_size_type@serialization@boost@@QAEAAIXZ PROC ; boost::serialization::collection_size_type::operator unsigned int &, COMDAT
; _this$ = ecx

; 45   :     operator base_type & () {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 46   :         return t;

	mov	eax, DWORD PTR _this$[ebp]

; 47   :     }                

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??Bcollection_size_type@serialization@boost@@QAEAAIXZ ENDP ; boost::serialization::collection_size_type::operator unsigned int &
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\collection_size_type.hpp
;	COMDAT ??Bcollection_size_type@serialization@boost@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bcollection_size_type@serialization@boost@@QBEIXZ PROC ; boost::serialization::collection_size_type::operator unsigned int, COMDAT
; _this$ = ecx

; 41   :     operator base_type () const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 42   :         return t;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 43   :     }                

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??Bcollection_size_type@serialization@boost@@QBEIXZ ENDP ; boost::serialization::collection_size_type::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\collection_size_type.hpp
;	COMDAT ??0collection_size_type@serialization@boost@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t_$ = 8						; size = 4
??0collection_size_type@serialization@boost@@QAE@ABV012@@Z PROC ; boost::serialization::collection_size_type::collection_size_type, COMDAT
; _this$ = ecx

; 31   :     {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 30   :         t(t_.t)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t_$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 31   :     {}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0collection_size_type@serialization@boost@@QAE@ABV012@@Z ENDP ; boost::serialization::collection_size_type::collection_size_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\collection_size_type.hpp
;	COMDAT ??0collection_size_type@serialization@boost@@QAE@ABI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t_$ = 8						; size = 4
??0collection_size_type@serialization@boost@@QAE@ABI@Z PROC ; boost::serialization::collection_size_type::collection_size_type, COMDAT
; _this$ = ecx

; 28   :     {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 27   :         t(t_)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t_$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 28   :     {}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0collection_size_type@serialization@boost@@QAE@ABI@Z ENDP ; boost::serialization::collection_size_type::collection_size_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\collection_size_type.hpp
;	COMDAT ??0collection_size_type@serialization@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0collection_size_type@serialization@boost@@QAE@XZ PROC ; boost::serialization::collection_size_type::collection_size_type, COMDAT
; _this$ = ecx

; 25   :     collection_size_type(): t(0) {};

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0collection_size_type@serialization@boost@@QAE@XZ ENDP ; boost::serialization::collection_size_type::collection_size_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??Bversion_type@serialization@boost@@QBEABIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bversion_type@serialization@boost@@QBEABIXZ PROC	; boost::serialization::version_type::operator unsigned int const &, COMDAT
; _this$ = ecx

; 61   : BOOST_STRONG_TYPEDEF(unsigned int, version_type)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??Bversion_type@serialization@boost@@QBEABIXZ ENDP	; boost::serialization::version_type::operator unsigned int const &
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??0version_type@serialization@boost@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t_$ = 8						; size = 4
??0version_type@serialization@boost@@QAE@I@Z PROC	; boost::serialization::version_type::version_type, COMDAT
; _this$ = ecx

; 61   : BOOST_STRONG_TYPEDEF(unsigned int, version_type)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t_$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0version_type@serialization@boost@@QAE@I@Z ENDP	; boost::serialization::version_type::version_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\extended_type_info_typeid.hpp
;	COMDAT ?get_debug_info@extended_type_info_typeid_0@typeid_system@serialization@boost@@EBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get_debug_info@extended_type_info_typeid_0@typeid_system@serialization@boost@@EBEPBDXZ PROC ; boost::serialization::typeid_system::extended_type_info_typeid_0::get_debug_info, COMDAT
; _this$ = ecx

; 55   :     virtual const char * get_debug_info() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   :         if(static_cast<const std::type_info *>(0) == m_ti)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN2@get_debug_

; 57   :             return static_cast<const char *>(0);

	xor	eax, eax
	jmp	SHORT $LN1@get_debug_
$LN2@get_debug_:

; 58   :         return m_ti->name();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	call	?name@type_info@@QBEPBDXZ		; type_info::name
$LN1@get_debug_:

; 59   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?get_debug_info@extended_type_info_typeid_0@typeid_system@serialization@boost@@EBEPBDXZ ENDP ; boost::serialization::typeid_system::extended_type_info_typeid_0::get_debug_info
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\type_traits\integral_constant.hpp
;	COMDAT ??B?$integral_constant@_N$00@boost@@QBEABU?$bool_@$00@mpl@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$integral_constant@_N$00@boost@@QBEABU?$bool_@$00@mpl@1@XZ PROC ; boost::integral_constant<bool,1>::operator boost::mpl::bool_<1> const &, COMDAT
; _this$ = ecx

; 91   :       {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 92   :          static const char data = 0;
; 93   :          return dereference(reinterpret_cast<const mpl::bool_<val>*>(&data));

	push	OFFSET ?data@?1???B?$integral_constant@_N$00@boost@@QBEABU?$bool_@$00@mpl@2@XZ@4DB ;  ?? ::DB::mpl::XZ::`boost::integral_constant<bool,1>::operator boost::mpl::bool_<1> const &'::`2'::data
	call	??$dereference@$$CBU?$bool_@$00@mpl@boost@@@?$integral_constant@_N$00@boost@@SAABU?$bool_@$00@mpl@1@PBU231@@Z ; boost::integral_constant<bool,1>::dereference<boost::mpl::bool_<1> const >
	add	esp, 4

; 94   :       }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$integral_constant@_N$00@boost@@QBEABU?$bool_@$00@mpl@1@XZ ENDP ; boost::integral_constant<bool,1>::operator boost::mpl::bool_<1> const &
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??Bversion_type@archive@boost@@QAEAAIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bversion_type@archive@boost@@QAEAAIXZ PROC		; boost::archive::version_type::operator unsigned int &, COMDAT
; _this$ = ecx

; 97   :     operator base_type  & (){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 98   :         return t;

	mov	eax, DWORD PTR _this$[ebp]

; 99   :     }                

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??Bversion_type@archive@boost@@QAEAAIXZ ENDP		; boost::archive::version_type::operator unsigned int &
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??0version_type@archive@boost@@QAE@ABI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t_$ = 8						; size = 4
??0version_type@archive@boost@@QAE@ABI@Z PROC		; boost::archive::version_type::version_type, COMDAT
; _this$ = ecx

; 82   :     explicit version_type(const unsigned int & t_) : t(t_){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t_$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 83   :         BOOST_ASSERT(t_ <= boost::integer_traits<base_type>::const_max);

	mov	eax, DWORD PTR _t_$[ebp]
	cmp	DWORD PTR [eax], -1
	jbe	SHORT $LN1@version_ty
	mov	esi, esp
	push	83					; 00000053H
	push	OFFSET ??_C@_1IO@DBEBMPEE@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
	push	OFFSET ??_C@_1GE@MNCNLAH@?$AAt?$AA_?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAb?$AAo?$AAo?$AAs?$AAt?$AA?3?$AA?3?$AAi?$AAn?$AAt?$AAe?$AAg?$AAe?$AAr?$AA_?$AAt?$AAr?$AAa?$AAi?$AAt?$AAs?$AA?$DM?$AAb?$AAa?$AAs?$AAe@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@version_ty:

; 84   :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0version_type@archive@boost@@QAE@ABI@Z ENDP		; boost::archive::version_type::version_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??Mlibrary_version_type@archive@boost@@QBE_NABV012@@Z
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??Mlibrary_version_type@archive@boost@@QBE_NABV012@@Z PROC ; boost::archive::library_version_type::operator<, COMDAT
; _this$ = ecx

; 67   :     bool operator<(const library_version_type & rhs) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 68   :         return t < rhs.t;

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _rhs$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	ecx, eax
	jge	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 69   :     }   

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??Mlibrary_version_type@archive@boost@@QBE_NABV012@@Z ENDP ; boost::archive::library_version_type::operator<
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??0library_version_type@archive@boost@@QAE@ABI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t_$ = 8						; size = 4
??0library_version_type@archive@boost@@QAE@ABI@Z PROC	; boost::archive::library_version_type::library_version_type, COMDAT
; _this$ = ecx

; 46   :     explicit library_version_type(const unsigned int & t_) : t(t_){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t_$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx

; 47   :         BOOST_ASSERT(t_ <= boost::integer_traits<base_type>::const_max);

	mov	eax, DWORD PTR _t_$[ebp]
	cmp	DWORD PTR [eax], 65535			; 0000ffffH
	jbe	SHORT $LN1@library_ve
	mov	esi, esp
	push	47					; 0000002fH
	push	OFFSET ??_C@_1IO@DBEBMPEE@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
	push	OFFSET ??_C@_1GE@MNCNLAH@?$AAt?$AA_?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAb?$AAo?$AAo?$AAs?$AAt?$AA?3?$AA?3?$AAi?$AAn?$AAt?$AAe?$AAg?$AAe?$AAr?$AA_?$AAt?$AAr?$AAa?$AAi?$AAt?$AAs?$AA?$DM?$AAb?$AAa?$AAs?$AAe@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@library_ve:

; 48   :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0library_version_type@archive@boost@@QAE@ABI@Z ENDP	; boost::archive::library_version_type::library_version_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Darchive_exception@archive@boost@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??_Darchive_exception@archive@boost@@QAEXXZ PROC	; boost::archive::archive_exception::`vbase destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??1archive_exception@archive@boost@@UAE@XZ ; boost::archive::archive_exception::~archive_exception
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??_Darchive_exception@archive@boost@@QAEXXZ ENDP	; boost::archive::archive_exception::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\io\ios_state.hpp
;	COMDAT ?restore@ios_precision_saver@io@boost@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?restore@ios_precision_saver@io@boost@@QAEXXZ PROC	; boost::io::ios_precision_saver::restore, COMDAT
; _this$ = ecx

; 73   :         { s_save_.precision( a_save_ ); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?precision@ios_base@std@@QAE_J_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?restore@ios_precision_saver@io@boost@@QAEXXZ ENDP	; boost::io::ios_precision_saver::restore
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\io\ios_state.hpp
;	COMDAT ??1ios_precision_saver@io@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1ios_precision_saver@io@boost@@QAE@XZ PROC		; boost::io::ios_precision_saver::~ios_precision_saver, COMDAT
; _this$ = ecx

; 70   :         { this->restore(); }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1ios_precision_saver@io@boost@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?restore@ios_precision_saver@io@boost@@QAEXXZ ; boost::io::ios_precision_saver::restore
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1ios_precision_saver@io@boost@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1ios_precision_saver@io@boost@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1ios_precision_saver@io@boost@@QAE@XZ ENDP		; boost::io::ios_precision_saver::~ios_precision_saver
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\io\ios_state.hpp
;	COMDAT ??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z PROC ; boost::io::ios_precision_saver::ios_precision_saver, COMDAT
; _this$ = ecx

; 65   :         {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 64   :         : s_save_( s ), a_save_( s.precision() )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?precision@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], edx

; 65   :         {}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z ENDP ; boost::io::ios_precision_saver::ios_precision_saver
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\io\ios_state.hpp
;	COMDAT ?restore@ios_flags_saver@io@boost@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?restore@ios_flags_saver@io@boost@@QAEXXZ PROC		; boost::io::ios_flags_saver::restore, COMDAT
; _this$ = ecx

; 48   :         { s_save_.flags( a_save_ ); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?flags@ios_base@std@@QAEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?restore@ios_flags_saver@io@boost@@QAEXXZ ENDP		; boost::io::ios_flags_saver::restore
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\io\ios_state.hpp
;	COMDAT ??1ios_flags_saver@io@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1ios_flags_saver@io@boost@@QAE@XZ PROC		; boost::io::ios_flags_saver::~ios_flags_saver, COMDAT
; _this$ = ecx

; 45   :         { this->restore(); }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1ios_flags_saver@io@boost@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?restore@ios_flags_saver@io@boost@@QAEXXZ ; boost::io::ios_flags_saver::restore
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1ios_flags_saver@io@boost@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1ios_flags_saver@io@boost@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1ios_flags_saver@io@boost@@QAE@XZ ENDP		; boost::io::ios_flags_saver::~ios_flags_saver
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\io\ios_state.hpp
;	COMDAT ??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z PROC ; boost::io::ios_flags_saver::ios_flags_saver, COMDAT
; _this$ = ecx

; 40   :         {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 39   :         : s_save_( s ), a_save_( s.flags() )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 40   :         {}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z ENDP ; boost::io::ios_flags_saver::ios_flags_saver
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT
$T2 = -292						; size = 4
$T3 = -280						; size = 12
__Pfmod$4 = -68						; size = 4
__Pf$5 = -56						; size = 4
__Id$6 = -44						; size = 4
__Psave$7 = -32						; size = 4
__Lock$8 = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Loc$ = 8						; size = 4
??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z PROC ; std::use_facet<std::ctype<char> >, COMDAT

; 553  : 	{	// get facet reference from locale

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 284				; 0000011cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-296]
	mov	ecx, 71					; 00000047H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 554  :  #if _NO_LOCALES
; 555  : 	static _Wrap_facet<_Facet> _Wfac;
; 556  : 	return (*(_Facet *)&_Wfac);
; 557  : 
; 558  :  #else /* _NO_LOCALES */
; 559  : 	_BEGIN_LOCK(_LOCK_LOCALE)	// the thread lock, make get atomic

	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR __Lock$8[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 560  : 		const locale::facet *_Psave =
; 561  : 			_Facetptr<_Facet>::_Psave;	// static pointer to lazy facet

	mov	eax, DWORD PTR ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::ctype<char> >::_Psave
	mov	DWORD PTR __Psave$7[ebp], eax

; 562  : 
; 563  : 		size_t _Id = _Facet::id;

	mov	esi, esp
	mov	ecx, DWORD PTR __imp_?id@?$ctype@D@std@@2V0locale@2@A
	call	DWORD PTR __imp_??Bid@locale@std@@QAEIXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Id$6[ebp], eax

; 564  : 		const locale::facet *_Pf = _Loc._Getfacet(_Id);

	mov	eax, DWORD PTR __Id$6[ebp]
	push	eax
	mov	ecx, DWORD PTR __Loc$[ebp]
	call	?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z ; std::locale::_Getfacet
	mov	DWORD PTR __Pf$5[ebp], eax

; 565  : 
; 566  : 		if (_Pf != 0)

	cmp	DWORD PTR __Pf$5[ebp], 0
	je	SHORT $LN2@use_facet
	jmp	$LN3@use_facet
$LN2@use_facet:

; 567  : 			;	// got facet from locale
; 568  : 		else if (_Psave != 0)

	cmp	DWORD PTR __Psave$7[ebp], 0
	je	SHORT $LN4@use_facet

; 569  : 			_Pf = _Psave;	// lazy facet already allocated

	mov	eax, DWORD PTR __Psave$7[ebp]
	mov	DWORD PTR __Pf$5[ebp], eax
	jmp	SHORT $LN3@use_facet
$LN4@use_facet:

; 570  : 		else if (_Facet::_Getcat(&_Psave, &_Loc) == (size_t)(-1))

	mov	esi, esp
	mov	eax, DWORD PTR __Loc$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Psave$7[ebp]
	push	ecx
	call	DWORD PTR __imp_?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	jne	SHORT $LN6@use_facet

; 571  : 
; 572  :  #if _HAS_EXCEPTIONS
; 573  : 
; 574  : 			_THROW_NCEE(_XSTD bad_cast, _EMPTY_ARGUMENT);	// lazy disallowed

	lea	ecx, DWORD PTR $T3[ebp]
	call	??0bad_cast@std@@QAE@XZ			; std::bad_cast::bad_cast
	push	OFFSET __TI2?AVbad_cast@std@@
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	__CxxThrowException@8

; 575  : 
; 576  :  #else /* _HAS_EXCEPTIONS */
; 577  : 			abort();	// lazy disallowed
; 578  :  #endif /* _HAS_EXCEPTIONS */
; 579  : 
; 580  : 		else

	jmp	SHORT $LN3@use_facet
$LN6@use_facet:

; 581  : 			{	// queue up lazy facet for destruction
; 582  : 			_Pf = _Psave;

	mov	eax, DWORD PTR __Psave$7[ebp]
	mov	DWORD PTR __Pf$5[ebp], eax

; 583  : 			_Facetptr<_Facet>::_Psave = _Psave;

	mov	eax, DWORD PTR __Psave$7[ebp]
	mov	DWORD PTR ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B, eax ; std::_Facetptr<std::ctype<char> >::_Psave

; 584  : 
; 585  : 			locale::facet *_Pfmod = (_Facet *)_Psave;

	mov	eax, DWORD PTR __Psave$7[ebp]
	mov	DWORD PTR __Pfmod$4[ebp], eax

; 586  : 			_Pfmod->_Incref();

	mov	eax, DWORD PTR __Pfmod$4[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR __Pfmod$4[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 587  : 
; 588  :  #if defined(_M_CEE)
; 589  : 			_Facet_Register_m(_Pfmod);
; 590  : 
; 591  :  #else /* defined(_M_CEE) */
; 592  : 			_Facet_Register(_Pfmod);

	mov	eax, DWORD PTR __Pfmod$4[ebp]
	push	eax
	call	?_Facet_Register@std@@YAXPAV_Facet_base@1@@Z ; std::_Facet_Register
	add	esp, 4
$LN3@use_facet:

; 593  :  #endif /* defined(_M_CEE) */
; 594  : 			}
; 595  : 
; 596  : 		return ((const _Facet&)(*_Pf));	// should be dynamic_cast

	mov	eax, DWORD PTR __Pf$5[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$8[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T2[ebp]
$LN8@use_facet:

; 597  : 	_END_LOCK()
; 598  :  #endif /* _NO_LOCALES */
; 599  : 	}	// end of use_facet body

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@use_facet
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 296				; 00000128H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN14@use_facet:
	DD	2
	DD	$LN13@use_facet
$LN13@use_facet:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN10@use_facet
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN11@use_facet
$LN11@use_facet:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	0
$LN10@use_facet:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$8[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-300]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ENDP ; std::use_facet<std::ctype<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z
_TEXT	SEGMENT
tv83 = -232						; size = 4
tv71 = -232						; size = 4
__Ptr0$1 = -32						; size = 4
__Facptr$ = -20						; size = 4
_this$ = -8						; size = 4
__Id$ = 8						; size = 4
?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z PROC		; std::locale::_Getfacet, COMDAT
; _this$ = ecx

; 458  : 		{	// look up a facet in locale object

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 459  : 		const facet *_Facptr = _Id < _Ptr->_Facetcount

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Id$[ebp]
	cmp	edx, DWORD PTR [ecx+12]
	jae	SHORT $LN6@Getfacet
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR __Id$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR tv71[ebp], ecx
	jmp	SHORT $LN7@Getfacet
$LN6@Getfacet:
	mov	DWORD PTR tv71[ebp], 0
$LN7@Getfacet:
	mov	edx, DWORD PTR tv71[ebp]
	mov	DWORD PTR __Facptr$[ebp], edx

; 460  : 			? _Ptr->_Facetvec[_Id] : 0;	// null if id off end
; 461  : 		if (_Facptr != 0 || !_Ptr->_Xparent)

	cmp	DWORD PTR __Facptr$[ebp], 0
	jne	SHORT $LN4@Getfacet
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	movzx	edx, BYTE PTR [ecx+20]
	test	edx, edx
	jne	SHORT $LN2@Getfacet
$LN4@Getfacet:

; 462  : 			return (_Facptr);	// found facet or not transparent

	mov	eax, DWORD PTR __Facptr$[ebp]
	jmp	SHORT $LN1@Getfacet

; 463  : 		else

	jmp	SHORT $LN1@Getfacet
$LN2@Getfacet:

; 464  : 			{	// look in current locale
; 465  : 			locale::_Locimp *_Ptr0 = _Getgloballocale();

	mov	esi, esp
	call	DWORD PTR __imp_?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Ptr0$1[ebp], eax

; 466  : 			return (_Id < _Ptr0->_Facetcount

	mov	eax, DWORD PTR __Ptr0$1[ebp]
	mov	ecx, DWORD PTR __Id$[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jae	SHORT $LN8@Getfacet
	mov	edx, DWORD PTR __Ptr0$1[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR __Id$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR tv83[ebp], edx
	jmp	SHORT $LN9@Getfacet
$LN8@Getfacet:
	mov	DWORD PTR tv83[ebp], 0
$LN9@Getfacet:
	mov	eax, DWORD PTR tv83[ebp]
$LN1@Getfacet:

; 467  : 				? _Ptr0->_Facetvec[_Id]	// get from current locale
; 468  : 				: 0);	// no entry in current locale
; 469  : 			}
; 470  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z ENDP		; std::locale::_Getfacet
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??1locale@std@@QAE@XZ
_TEXT	SEGMENT
tv84 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1locale@std@@QAE@XZ PROC				; std::locale::~locale, COMDAT
; _this$ = ecx

; 430  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1locale@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 431  : 		if (_Ptr != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@locale

; 432  : 			delete _Ptr->_Decref();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T3[ebp], eax
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN4@locale
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN3@locale
$LN4@locale:
	mov	DWORD PTR tv84[ebp], 0
$LN3@locale:

; 433  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1locale@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1locale@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1locale@std@@QAE@XZ ENDP				; std::locale::~locale
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??0locale@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0locale@std@@QAE@XZ PROC				; std::locale::locale, COMDAT
; _this$ = ecx

; 331  : 		{	// construct from current locale

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0locale@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 330  : 		: _Ptr(_Init(true))

	mov	esi, esp
	push	1
	call	DWORD PTR __imp_?_Init@locale@std@@CAPAV_Locimp@12@_N@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 332  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0locale@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0locale@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0locale@std@@QAE@XZ ENDP				; std::locale::locale
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_cast@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gbad_cast@std@@UAEPAXI@Z PROC			; std::bad_cast::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_cast@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_cast@std@@UAEPAXI@Z ENDP			; std::bad_cast::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_cast@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0bad_cast@std@@QAE@ABV01@@Z PROC			; std::bad_cast::bad_cast, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_cast@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_cast@std@@QAE@ABV01@@Z ENDP			; std::bad_cast::bad_cast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_cast@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1bad_cast@std@@UAE@XZ PROC				; std::bad_cast::~bad_cast, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_cast@std@@UAE@XZ ENDP				; std::bad_cast::~bad_cast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_typeinfo.h
;	COMDAT ??0bad_cast@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0bad_cast@std@@QAE@XZ PROC				; std::bad_cast::bad_cast, COMDAT
; _this$ = ecx

; 125  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 124  :         : exception("bad cast", 1)

	push	1
	push	OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@QBDH@Z		; std::exception::exception

; 125  :     {

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_cast@std@@6B@

; 126  :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0bad_cast@std@@QAE@XZ ENDP				; std::bad_cast::bad_cast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_typeinfo.h
;	COMDAT ?name@type_info@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?name@type_info@@QBEPBDXZ PROC				; type_info::name, COMDAT
; _this$ = ecx

; 90   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 91   :         #ifdef _M_CEE_PURE
; 92   :         return __std_type_info_name(&_Data, static_cast<__type_info_node*>(__type_info_root_node.ToPointer()));
; 93   :         #else
; 94   :         return __std_type_info_name(&_Data, &__type_info_root_node);

	mov	esi, esp
	push	OFFSET ?__type_info_root_node@@3U__type_info_node@@A ; __type_info_root_node
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	DWORD PTR __imp____std_type_info_name
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 95   :         #endif
; 96   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?name@type_info@@QBEPBDXZ ENDP				; type_info::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	28					; 0000001cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2282 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2283 : 		_Xout_of_range("invalid string position");

	mov	esi, esp
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xran:

; 2284 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset, COMDAT
; _this$ = ecx

; 2270 : 		{	// checks whether _Off is in the bounds of [0, this->size()]

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		if (this->_Mysize() < _Off)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Off$[ebp]
	jae	SHORT $LN3@Check_offs

; 2272 : 			_Xran();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN3@Check_offs:

; 2273 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2265 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2266 : 		_Xlength_error("string too long");

	mov	esi, esp
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xlen:

; 2267 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -20						; size = 4
_this$ = -8						; size = 4
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2248 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2249 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN2@Tidy
	jmp	$LN3@Tidy
$LN2@Tidy:

; 2250 : 			;
; 2251 : 		else if (this->_BUF_SIZE <= this->_Myres())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	cmp	DWORD PTR [eax], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2252 : 			{	// copy any leftovers to small buffer and deallocate
; 2253 : 			pointer _Ptr = this->_Bx()._Ptr;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2254 : 			this->_Getal().destroy(_STD addressof(this->_Bx()._Ptr));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
	push	eax
	call	??$addressof@PAD@std@@YAPAPADAAPAD@Z	; std::addressof<char *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2255 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN5@Tidy

; 2256 : 				_Traits::copy(this->_Bx()._Buf,

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN5@Tidy:

; 2257 : 					_Unfancy(_Ptr), _Newsize);
; 2258 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	mov	eax, DWORD PTR [eax]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2259 : 			}
; 2260 : 		this->_Myres() = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	mov	DWORD PTR [eax], 15			; 0000000fH

; 2261 : 		_Eos(_Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2262 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2238 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2239 : 		if (_Ptr == nullptr_t{} || _Ptr < this->_Myptr()
; 2240 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN4@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN4@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	add	esi, DWORD PTR [eax]
	cmp	esi, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN2@Inside
$LN4@Inside:

; 2241 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN1@Inside

; 2242 : 		else

	jmp	SHORT $LN1@Inside
$LN2@Inside:

; 2243 : 			return (true);

	mov	al, 1
$LN1@Inside:

; 2244 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv140 = -208						; size = 4
tv133 = -208						; size = 4
_this$ = -8						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2224 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2225 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN2@Grow

; 2226 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Grow:

; 2227 : 		if (this->_Myres() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN3@Grow

; 2228 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2229 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	eax, BYTE PTR __Trim$[ebp]
	test	eax, eax
	je	SHORT $LN5@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN5@Grow

; 2230 : 			_Tidy(true,	// copy and deallocate if trimming to small string

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv133[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv133[ebp], eax
$LN10@Grow:
	mov	ecx, DWORD PTR tv133[ebp]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2231 : 				_Newsize < this->_Mysize() ? _Newsize : this->_Mysize());
; 2232 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2233 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2234 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv140[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv140[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv140[ebp]
$LN8@Grow:

; 2235 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
$T1 = -221						; size = 1
__Dx$ = -20						; size = 4
_this$ = -8						; size = 4
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		auto& _Dx = this->_Get_data();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
	mov	DWORD PTR __Dx$[ebp], eax

; 2219 : 		_Traits::assign(_Dx._Myptr()[_Dx._Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR __Dx$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+20], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR __Dx$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2220 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv217 = -248						; size = 4
tv216 = -248						; size = 4
__Ptr$ = -48						; size = 4
__Newres$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN2@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], eax
	jmp	SHORT $LN3@Copy
$LN2@Copy:

; 2186 : 		else if (this->_Myres() / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	mov	edx, DWORD PTR [eax]
	shr	edx, 1
	cmp	edx, esi
	ja	SHORT $LN4@Copy
	jmp	SHORT $LN3@Copy
$LN4@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres() <= max_size() - this->_Myres() / 2)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	mov	esi, DWORD PTR [eax]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	edi, eax
	sub	edi, esi
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	cmp	DWORD PTR [eax], edi
	ja	SHORT $LN6@Copy

; 2189 : 			_Newres = this->_Myres()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	mov	esi, DWORD PTR [eax]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	add	esi, DWORD PTR [eax]
	mov	DWORD PTR __Newres$[ebp], esi

; 2190 : 				+ this->_Myres() / 2;	// grow exponentially if possible
; 2191 : 		else

	jmp	SHORT $LN3@Copy
$LN6@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN3@Copy:

; 2193 : 
; 2194 : 		pointer _Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv216[ebp], eax
	mov	ecx, DWORD PTR tv216[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], eax

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv217[ebp], eax
	mov	ecx, DWORD PTR tv217[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN10@Copy

; 2208 : 			_Traits::copy(_Unfancy(_Ptr), this->_Myptr(),

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN10@Copy:

; 2209 : 				_Oldlen);	// copy existing elements
; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(_STD addressof(this->_Bx()._Ptr), _Ptr);

	lea	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
	push	eax
	call	??$addressof@PAD@std@@YAPAPADAAPAD@Z	; std::addressof<char *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres() = _Newres;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	mov	ecx, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [eax], ecx

; 2213 : 		_Eos(_Oldlen);

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@Copy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN23@Copy:
	DD	1
	DD	$LN22@Copy
$LN22@Copy:
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN20@Copy
$LN20@Copy:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ch$ = 16						; size = 1
?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign, COMDAT
; _this$ = ecx

; 2174 : 		{	// assign _Count copies of _Ch beginning at _Off

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2175 : 		if (_Count == 1)

	cmp	DWORD PTR __Count$[ebp], 1
	jne	SHORT $LN2@Chassign

; 2176 : 			_Traits::assign(*(this->_Myptr() + _Off), _Ch);

	lea	eax, DWORD PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2177 : 		else

	jmp	SHORT $LN1@Chassign
$LN2@Chassign:

; 2178 : 			_Traits::assign(this->_Myptr() + _Off, _Count, _Ch);

	movzx	eax, BYTE PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAPADPADID@Z ; std::char_traits<char>::assign
	add	esp, 12					; 0000000cH
$LN1@Chassign:

; 2179 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT
; _this$ = ecx

; 2120 : 		{	// compare [0, _Mysize()) with _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2121 : 		return (_Traits_compare(this->_Myptr(), this->_Mysize(),

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	push	eax
	call	?_Traits_compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAHQBDI0I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Traits_compare
	add	esp, 16					; 00000010H

; 2122 : 			_Right._Myptr(), _Right._Mysize()));
; 2123 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z
_TEXT	SEGMENT
__Max_effective_size$ = -20				; size = 4
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__Size$ = 12						; size = 4
?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size, COMDAT
; _this$ = ecx

; 2111 : 		{	// trims _Size to the longest it can be assuming a string starting at _Off

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2112 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Max_effective_size$[ebp], eax

; 2113 : 		if (_Size <= _Max_effective_size)

	mov	eax, DWORD PTR __Size$[ebp]
	cmp	eax, DWORD PTR __Max_effective_size$[ebp]
	ja	SHORT $LN2@Clamp_suff

; 2114 : 			return (_Size);

	mov	eax, DWORD PTR __Size$[ebp]
	jmp	SHORT $LN1@Clamp_suff

; 2115 : 		else

	jmp	SHORT $LN1@Clamp_suff
$LN2@Clamp_suff:

; 2116 : 			return (_Max_effective_size);

	mov	eax, DWORD PTR __Max_effective_size$[ebp]
$LN1@Clamp_suff:

; 2117 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Traits_compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAHQBDI0I@Z
_TEXT	SEGMENT
tv65 = -220						; size = 4
__Ans$ = -20						; size = 4
__Min_size$ = -8					; size = 4
__Left$ = 8						; size = 4
__Left_size$ = 12					; size = 4
__Right$ = 16						; size = 4
__Right_size$ = 20					; size = 4
?_Traits_compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAHQBDI0I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Traits_compare, COMDAT

; 2094 : 		{	// compare [_Left, _Left + _Left_size) to [_Right, _Right + _Right_size) using _Traits

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 2095 : 		const size_type _Min_size = _Left_size < _Right_size ? _Left_size : _Right_size;

	mov	eax, DWORD PTR __Left_size$[ebp]
	cmp	eax, DWORD PTR __Right_size$[ebp]
	jae	SHORT $LN6@Traits_com
	mov	ecx, DWORD PTR __Left_size$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
	jmp	SHORT $LN7@Traits_com
$LN6@Traits_com:
	mov	edx, DWORD PTR __Right_size$[ebp]
	mov	DWORD PTR tv65[ebp], edx
$LN7@Traits_com:
	mov	eax, DWORD PTR tv65[ebp]
	mov	DWORD PTR __Min_size$[ebp], eax

; 2096 : 		const int _Ans = _Traits::compare(_Left, _Right, _Min_size);

	mov	eax, DWORD PTR __Min_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Left$[ebp]
	push	edx
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ans$[ebp], eax

; 2097 : 
; 2098 : 		if (_Ans != 0)

	cmp	DWORD PTR __Ans$[ebp], 0
	je	SHORT $LN2@Traits_com

; 2099 : 			return (_Ans);

	mov	eax, DWORD PTR __Ans$[ebp]
	jmp	SHORT $LN1@Traits_com
$LN2@Traits_com:

; 2100 : 
; 2101 : 		if (_Left_size < _Right_size)

	mov	eax, DWORD PTR __Left_size$[ebp]
	cmp	eax, DWORD PTR __Right_size$[ebp]
	jae	SHORT $LN3@Traits_com

; 2102 : 			return (-1);

	or	eax, -1
	jmp	SHORT $LN1@Traits_com
$LN3@Traits_com:

; 2103 : 
; 2104 : 		if (_Left_size > _Right_size)

	mov	eax, DWORD PTR __Left_size$[ebp]
	cmp	eax, DWORD PTR __Right_size$[ebp]
	jbe	SHORT $LN4@Traits_com

; 2105 : 			return (1);

	mov	eax, 1
	jmp	SHORT $LN1@Traits_com
$LN4@Traits_com:

; 2106 : 
; 2107 : 		return (0);

	xor	eax, eax
$LN1@Traits_com:

; 2108 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Traits_compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAHQBDI0I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Traits_compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
tv75 = -232						; size = 4
$T1 = -221						; size = 1
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1769 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1770 : 		const size_type _Num = this->_Getal().max_size();

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1771 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	eax, DWORD PTR __Num$[ebp]
	sub	eax, 1
	mov	DWORD PTR tv75[ebp], eax
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1772 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1764 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1765 : 		return (this->_Mysize());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]

; 1766 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx

; 1742 : 		{	// return pointer to null-terminated nonmutable array

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1743 : 		return (this->_Myptr());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr

; 1744 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
_TEXT	SEGMENT
__Mydata$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end, COMDAT
; _this$ = ecx

; 1612 : 		{	// return iterator for end of nonmutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1613 : 		auto _Mydata = &this->_Get_data();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
	mov	DWORD PTR __Mydata$[ebp], eax

; 1614 : 		return (const_iterator(this->_Getal().address(*_Mydata->_Myptr()) + _Mydata->_Mysize, _Mydata));

	mov	eax, DWORD PTR __Mydata$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mydata$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?address@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEPBDABD@Z ; std::_Wrap_alloc<std::allocator<char> >::address
	mov	ecx, DWORD PTR __Mydata$[ebp]
	add	eax, DWORD PTR [ecx+20]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1615 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
_TEXT	SEGMENT
__Mydata$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end, COMDAT
; _this$ = ecx

; 1606 : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1607 : 		auto _Mydata = &this->_Get_data();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
	mov	DWORD PTR __Mydata$[ebp], eax

; 1608 : 		return (iterator(this->_Getal().address(*_Mydata->_Myptr()) + _Mydata->_Mysize, _Mydata));

	mov	eax, DWORD PTR __Mydata$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mydata$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?address@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEPADAAD@Z ; std::_Wrap_alloc<std::allocator<char> >::address
	mov	ecx, DWORD PTR __Mydata$[ebp]
	add	eax, DWORD PTR [ecx+20]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1609 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
_TEXT	SEGMENT
__Mydata$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin, COMDAT
; _this$ = ecx

; 1600 : 		{	// return iterator for beginning of nonmutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1601 : 		auto _Mydata = &this->_Get_data();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
	mov	DWORD PTR __Mydata$[ebp], eax

; 1602 : 		return (const_iterator(this->_Getal().address(*_Mydata->_Myptr()), _Mydata));

	mov	eax, DWORD PTR __Mydata$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mydata$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?address@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEPBDABD@Z ; std::_Wrap_alloc<std::allocator<char> >::address
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1603 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
_TEXT	SEGMENT
__Mydata$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin, COMDAT
; _this$ = ecx

; 1594 : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1595 : 		auto _Mydata = &this->_Get_data();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
	mov	DWORD PTR __Mydata$[ebp], eax

; 1596 : 		return (iterator(this->_Getal().address(*_Mydata->_Myptr()), _Mydata));

	mov	eax, DWORD PTR __Mydata$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mydata$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?address@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEPADAAD@Z ; std::_Wrap_alloc<std::allocator<char> >::address
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1597 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z
_TEXT	SEGMENT
tv167 = -276						; size = 4
tv165 = -276						; size = 4
tv173 = -272						; size = 4
tv172 = -272						; size = 4
$T2 = -264						; size = 4
$T3 = -252						; size = 12
$T4 = -232						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__First2$ = 32						; size = 12
__Last2$ = 44						; size = 12
?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace, COMDAT
; _this$ = ecx

; 1584 : 		{	// replace [_First, _Last) with [_First2, _Last2), const_iterators

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 3

; 1585 : 		if (_First2 == _Last2)

	lea	eax, DWORD PTR __Last2$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First2$[ebp]
	call	??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@replace

; 1586 : 			erase(_First - begin(), _Last - _First);

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator-
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	DWORD PTR tv172[ebp], eax
	mov	edx, DWORD PTR tv172[ebp]
	mov	DWORD PTR tv165[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR tv165[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator-
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ

; 1587 : 		else

	jmp	SHORT $LN3@replace
$LN2@replace:

; 1588 : 			replace(_First - begin(), _Last - _First,

	lea	eax, DWORD PTR __First2$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Last2$[ebp]
	call	??G?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator-
	push	eax
	lea	ecx, DWORD PTR __First2$[ebp]
	call	??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator-
	push	eax
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	DWORD PTR tv173[ebp], eax
	mov	eax, DWORD PTR tv173[ebp]
	mov	DWORD PTR tv167[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR tv167[ebp]
	push	ecx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator-
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
$LN3@replace:

; 1589 : 				&*_First2, _Last2 - _First2);
; 1590 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First2$[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last2$[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T2[ebp]

; 1591 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	48					; 00000030H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z$0:
	lea	ecx, DWORD PTR __Last2$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z$1:
	lea	ecx, DWORD PTR __First2$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z$2:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z$3:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z$4:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z$5:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__ehhandler$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-280]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIPBDI@Z
_TEXT	SEGMENT
tv68 = -229						; size = 1
__Num$ = -32						; size = 4
__Nm$ = -20						; size = 4
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__N0$ = 12						; size = 4
__Ptr$ = 16						; size = 4
__Count$ = 20						; size = 4
?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIPBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace, COMDAT
; _this$ = ecx

; 1453 : 		{	// replace [_Off, _Off + _N0) with [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1454 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);

	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN9@replace
	mov	BYTE PTR tv68[ebp], 1
	jmp	SHORT $LN10@replace
$LN9@replace:
	mov	BYTE PTR tv68[ebp], 0
$LN10@replace:
	push	1454					; 000005aeH
	push	OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	movzx	ecx, BYTE PTR tv68[ebp]
	push	ecx
	call	??$_Debug_pointer_if@$$CBD@std@@YAX_NPBDPB_WI@Z ; std::_Debug_pointer_if<char const >
	add	esp, 16					; 00000010H

; 1455 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@replace

; 1456 : 			return (replace(_Off, _N0, *this,

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __N0$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace
	jmp	$LN8@replace
$LN2@replace:

; 1457 : 				_Ptr - this->_Myptr(),
; 1458 : 				_Count));	// substring, replace carefully
; 1459 : 		_Check_offset(_Off);

	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset

; 1460 : 		_N0 = _Clamp_suffix_size(_Off, _N0);

	mov	eax, DWORD PTR __N0$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
	mov	DWORD PTR __N0$[ebp], eax

; 1461 : 		if (npos - _Count <= this->_Mysize() - _N0)

	or	esi, -1
	sub	esi, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR __N0$[ebp]
	cmp	esi, eax
	ja	SHORT $LN3@replace

; 1462 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN3@replace:

; 1463 : 		size_type _Nm = this->_Mysize() - _N0 - _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR __N0$[ebp]
	sub	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Nm$[ebp], eax

; 1464 : 
; 1465 : 		if (_Count < _N0)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __N0$[ebp]
	jae	SHORT $LN4@replace

; 1466 : 			_Traits::move(this->_Myptr() + _Off + _Count,

	mov	eax, DWORD PTR __Nm$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __N0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
$LN4@replace:

; 1467 : 				this->_Myptr() + _Off + _N0,
; 1468 : 				_Nm);	// smaller hole, move tail up
; 1469 : 		const size_type _Num = this->_Mysize() + _Count - _N0;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR __Count$[ebp]
	sub	eax, DWORD PTR __N0$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1470 : 		if ((0 < _Count || 0 < _N0)
; 1471 : 			&& _Grow(_Num))

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN6@replace
	cmp	DWORD PTR __N0$[ebp], 0
	jbe	SHORT $LN5@replace
$LN6@replace:
	push	0
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@replace

; 1472 : 			{	// make room and rearrange
; 1473 : 			if (_N0 < _Count)

	mov	eax, DWORD PTR __N0$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN7@replace

; 1474 : 				_Traits::move(this->_Myptr() + _Off + _Count,

	mov	eax, DWORD PTR __Nm$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __N0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
$LN7@replace:

; 1475 : 					this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1476 : 			_Traits::copy(this->_Myptr() + _Off, _Ptr, _Count);	// fill hole

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1477 : 			_Eos(_Num);

	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN5@replace:

; 1478 : 			}
; 1479 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN8@replace:

; 1480 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIPBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIABV12@II@Z
_TEXT	SEGMENT
__Newsize$ = -32					; size = 4
__Nm$ = -20						; size = 4
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__N0$ = 12						; size = 4
__Right$ = 16						; size = 4
__Roff$ = 20						; size = 4
__Count$ = 24						; size = 4
?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace, COMDAT
; _this$ = ecx

; 1389 : 		{	// replace [_Off, _Off + _N0) with _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1390 : 		_Check_offset(_Off);

	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset

; 1391 : 		_Right._Check_offset(_Roff);

	mov	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset

; 1392 : 		_N0 = _Clamp_suffix_size(_Off, _N0);

	mov	eax, DWORD PTR __N0$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
	mov	DWORD PTR __N0$[ebp], eax

; 1393 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
	mov	DWORD PTR __Count$[ebp], eax

; 1394 : 		if (npos - _Count <= this->_Mysize() - _N0)

	or	esi, -1
	sub	esi, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR __N0$[ebp]
	cmp	esi, eax
	ja	SHORT $LN2@replace

; 1395 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@replace:

; 1396 : 
; 1397 : 		const size_type _Nm = this->_Mysize() - _N0 - _Off;	// length of kept tail

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR __N0$[ebp]
	sub	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Nm$[ebp], eax

; 1398 : 		const size_type _Newsize = this->_Mysize() + _Count - _N0;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR __Count$[ebp]
	sub	eax, DWORD PTR __N0$[ebp]
	mov	DWORD PTR __Newsize$[ebp], eax

; 1399 : 		if (this->_Mysize() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN3@replace

; 1400 : 			_Grow(_Newsize);

	push	0
	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
$LN3@replace:

; 1401 : 
; 1402 : 		if (_Count == _N0)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __N0$[ebp]
	jne	SHORT $LN4@replace

; 1403 : 			{	// only one movement required, so _Traits::move handles any overlap
; 1404 : 			_Traits::move(this->_Myptr() + _Off,

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
	jmp	$LN5@replace
$LN4@replace:

; 1405 : 				_Right._Myptr() + _Roff, _Count);	// fill hole
; 1406 : 			}
; 1407 : 		else if (this != &_Right)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	SHORT $LN6@replace

; 1408 : 			{	// no overlap, just move down and copy in new stuff
; 1409 : 			_Traits::move(this->_Myptr() + _Off + _Count,

	mov	eax, DWORD PTR __Nm$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __N0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1410 : 				this->_Myptr() + _Off + _N0, _Nm);	// empty hole
; 1411 : 			_Traits::copy(this->_Myptr() + _Off,

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
	jmp	$LN5@replace
$LN6@replace:

; 1412 : 				_Right._Myptr() + _Roff, _Count);	// fill hole
; 1413 : 			}
; 1414 : 		else if (_Count < _N0)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __N0$[ebp]
	jae	SHORT $LN8@replace

; 1415 : 			{	// hole doesn't get larger, just copy in substring
; 1416 : 			_Traits::move(this->_Myptr() + _Off,

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1417 : 				this->_Myptr() + _Roff, _Count);	// fill hole
; 1418 : 			_Traits::move(this->_Myptr() + _Off + _Count,

	mov	eax, DWORD PTR __Nm$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __N0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
	jmp	$LN5@replace
$LN8@replace:

; 1419 : 				this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1420 : 			}
; 1421 : 		else if (_Roff <= _Off)

	mov	eax, DWORD PTR __Roff$[ebp]
	cmp	eax, DWORD PTR __Off$[ebp]
	ja	SHORT $LN10@replace

; 1422 : 			{	// hole gets larger, substring begins before hole
; 1423 : 			_Traits::move(this->_Myptr() + _Off + _Count,

	mov	eax, DWORD PTR __Nm$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __N0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1424 : 				this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1425 : 			_Traits::move(this->_Myptr() + _Off,

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
	jmp	$LN5@replace
$LN10@replace:

; 1426 : 				this->_Myptr() + _Roff, _Count);	// fill hole
; 1427 : 			}
; 1428 : 		else if (_Off + _N0 <= _Roff)

	mov	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __N0$[ebp]
	cmp	eax, DWORD PTR __Roff$[ebp]
	ja	SHORT $LN12@replace

; 1429 : 			{	// hole gets larger, substring begins after hole
; 1430 : 			_Traits::move(this->_Myptr() + _Off + _Count,

	mov	eax, DWORD PTR __Nm$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __N0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1431 : 				this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1432 : 			_Traits::move(this->_Myptr() + _Off,

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	mov	ecx, DWORD PTR __Roff$[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	sub	ecx, DWORD PTR __N0$[ebp]
	add	eax, ecx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1433 : 				this->_Myptr() + (_Roff + _Count - _N0),
; 1434 : 				_Count);	// fill hole
; 1435 : 			}
; 1436 : 		else

	jmp	SHORT $LN5@replace
$LN12@replace:

; 1437 : 			{	// hole gets larger, substring begins in hole
; 1438 : 			_Traits::move(this->_Myptr() + _Off,

	mov	eax, DWORD PTR __N0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1439 : 				this->_Myptr() + _Roff, _N0);	// fill old hole
; 1440 : 			_Traits::move(this->_Myptr() + _Off + _Count,

	mov	eax, DWORD PTR __Nm$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __N0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1441 : 				this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1442 : 			_Traits::move(this->_Myptr() + _Off + _N0,

	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, DWORD PTR __N0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __N0$[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
$LN5@replace:

; 1443 : 				this->_Myptr() + _Roff + _Count,
; 1444 : 				_Count - _N0);	// fill rest of new hole
; 1445 : 			}
; 1446 : 
; 1447 : 		_Eos(_Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1448 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN14@replace:

; 1449 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -32					; size = 4
__Ptr$2 = -20						; size = 4
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1347 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1348 : 		_Check_offset(_Off);

	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset

; 1349 : 		if (this->_Mysize() - _Off <= _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN2@erase

; 1350 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN3@erase
$LN2@erase:

; 1351 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@erase

; 1352 : 			{	// move elements down
; 1353 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1354 : 			size_type _Newsize = this->_Mysize() - _Count;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1355 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	eax, DWORD PTR __Newsize$1[ebp]
	sub	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$2[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	push	edx
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1356 : 			_Eos(_Newsize);

	mov	eax, DWORD PTR __Newsize$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN3@erase:

; 1357 : 			}
; 1358 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1359 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1340 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1341 : 		_Check_offset(_Off);

	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset

; 1342 : 		_Eos(_Off);

	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1343 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1344 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1180 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1181 : 		_DEBUG_POINTER(_Ptr);

	push	1181					; 0000049dH
	push	OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@$$CBD@std@@YAXPBDPB_WI@Z ; std::_Debug_pointer<char const >
	add	esp, 12					; 0000000cH

; 1182 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1183 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
tv68 = -205						; size = 1
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1165 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1166 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);

	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN5@assign
	mov	BYTE PTR tv68[ebp], 1
	jmp	SHORT $LN6@assign
$LN5@assign:
	mov	BYTE PTR tv68[ebp], 0
$LN6@assign:
	push	1166					; 0000048eH
	push	OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	movzx	ecx, BYTE PTR tv68[ebp]
	push	ecx
	call	??$_Debug_pointer_if@$$CBD@std@@YAX_NPBDPB_WI@Z ; std::_Debug_pointer_if<char const >
	add	esp, 16					; 00000010H

; 1167 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1168 : 			return (assign(*this,

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN1@assign
$LN2@assign:

; 1169 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1170 : 
; 1171 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@assign

; 1172 : 			{	// make room and assign new stuff
; 1173 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1174 : 			_Eos(_Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN3@assign:

; 1175 : 			}
; 1176 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN1@assign:

; 1177 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1149 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1150 : 		_Right._Check_offset(_Roff);

	mov	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset

; 1151 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
	mov	DWORD PTR __Count$[ebp], eax

; 1152 : 
; 1153 : 		if (this == &_Right)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN2@assign

; 1154 : 			erase((size_type)(_Roff + _Count)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1155 : 		else if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@assign

; 1156 : 			{	// make room and assign new stuff
; 1157 : 			_Traits::copy(this->_Myptr(),

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1158 : 				_Right._Myptr() + _Roff, _Count);
; 1159 : 			_Eos(_Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN3@assign:

; 1160 : 			}
; 1161 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1162 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z
_TEXT	SEGMENT
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
__Ch$ = 12						; size = 1
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 1111 : 		{	// append _Count * _Ch

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1112 : 		if (npos - this->_Mysize() <= _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	ecx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	sub	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Count$[ebp]
	ja	SHORT $LN2@append

; 1113 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@append:

; 1114 : 
; 1115 : 		const size_type _Num = this->_Mysize() + _Count;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1116 : 		if (0 < _Count && _Grow(_Num))

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@append
	push	0
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@append

; 1117 : 			{	// make room and append new stuff using assign
; 1118 : 			_Chassign(this->_Mysize(), _Count, _Ch);

	movzx	eax, BYTE PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign

; 1119 : 			_Eos(_Num);

	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN3@append:

; 1120 : 			}
; 1121 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN4@append:

; 1122 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 1016 : 		{	// destroy the string

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1017 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 1018 : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv, COMDAT
; _this$ = ecx

; 961  : 		{	// assign by moving _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 962  : 		if (_Right._Myres() < this->_BUF_SIZE)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	cmp	DWORD PTR [eax], 16			; 00000010H
	jae	SHORT $LN2@Assign_rv

; 963  : 			_Traits::move(this->_Bx()._Buf, _Right._Bx()._Buf,

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 964  : 				_Right._Mysize() + 1);
; 965  : 		else

	jmp	SHORT $LN3@Assign_rv
$LN2@Assign_rv:

; 966  : 			{	// copy pointer
; 967  : 			this->_Getal().construct(_STD addressof(this->_Bx()._Ptr), _Right._Bx()._Ptr);

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
	push	eax
	call	??$addressof@PAD@std@@YAPAPADAAPAD@Z	; std::addressof<char *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 968  : 			_Right._Bx()._Ptr = pointer();

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
	mov	DWORD PTR [eax], 0
$LN3@Assign_rv:

; 969  : 			}
; 970  : 		this->_Mysize() = _Right._Mysize();

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 971  : 		this->_Myres() = _Right._Myres();

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 972  : 		_Right._Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 973  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx

; 928  : 		{	// assign by moving _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 929  : 		if (this != &_Right)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	$LN2@operator

; 930  : 			{	// different, assign it
; 931  : 			_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 932  : 
; 933  : 			if (_Alty::propagate_on_container_move_assignment::value
; 934  : 				&& this->_Getal() != _Right._Getal())

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	push	eax
	call	??$?9V?$allocator@D@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z ; std::operator!=<std::allocator<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator

; 935  : 				this->_Move_alloc(_Right._Getal());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Move_alloc@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Move_alloc
$LN3@operator:

; 936  : 
; 937  : 			if (this->_Getal() != _Right._Getal())

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	push	eax
	call	??$?9V?$allocator@D@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z ; std::operator!=<std::allocator<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@operator

; 938  : 				assign(_Right.begin(), _Right.end());

	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	DWORD PTR $T3[ebp], esp
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >

; 939  : 			else

	jmp	SHORT $LN2@operator
$LN4@operator:

; 940  : 				_Assign_rv(_STD forward<_Myt>(_Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
$LN2@operator:

; 941  : 			}
; 942  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 943  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 911  : 		{	// construct by moving _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 910  : 		: _Mybase(_STD move(_Right._Getal()))

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	push	eax
	call	??$move@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<char> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>

; 912  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 913  : 		_Assign_rv(_STD forward<_Myt>(_Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv

; 914  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 836  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 835  : 		: _Mybase()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 837  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 838  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 839  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 794  : 		{	// construct empty string

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 793  : 		: _Mybase()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >

; 795  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 796  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
$T2 = -233						; size = 1
$T3 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 780  : 		{	// construct by copying _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 777  : 		: _Mybase(_Right._Getal().select_on_container_copy_construction())

	movzx	eax, BYTE PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@U_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 781  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 782  : 		assign(_Right, 0, npos);

	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	eax
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 783  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 319  : 		{	// return const reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 320  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 321  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 314  : 		{	// return reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 315  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 316  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 299  : 		{	// return const reference to first

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 300  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 301  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 294  : 		{	// return reference to first

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 295  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 296  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres, COMDAT
; _this$ = ecx

; 733  : 		{	// return reference to _Myres

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 734  : 		return (_Get_data()._Myres);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
	add	eax, 24					; 00000018H

; 735  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize, COMDAT
; _this$ = ecx

; 728  : 		{	// return const reference to _Mysize

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 729  : 		return (_Get_data()._Mysize);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
	add	eax, 20					; 00000014H

; 730  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize, COMDAT
; _this$ = ecx

; 723  : 		{	// return reference to _Mysize

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 724  : 		return (_Get_data()._Mysize);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
	add	eax, 20					; 00000014H

; 725  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx, COMDAT
; _this$ = ecx

; 713  : 		{	// return reference to _Bx

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 714  : 		return (_Get_data()._Bx);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
	add	eax, 4

; 715  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT
; _this$ = ecx

; 706  : 		{	// return const reference to _String_val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 707  : 		return (_Mypair._Get_second());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second

; 708  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT
; _this$ = ecx

; 701  : 		{	// return reference to _String_val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 702  : 		return (_Mypair._Get_second());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second

; 703  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 696  : 		{	// return const reference to allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 697  : 		return (_Mypair._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 698  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 691  : 		{	// return reference to allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 692  : 		return (_Mypair._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 693  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all, COMDAT
; _this$ = ecx

; 681  : 		{	// orphan all iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 682  : 		_Get_data()._Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
	mov	ecx, eax
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 683  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy, COMDAT
; _this$ = ecx

; 670  : 		{	// return reference to _Myproxy

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 671  : 		return (_Get_data()._Myproxy);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data

; 672  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Free_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -17					; size = 1
_this$ = -8						; size = 4
?_Free_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Free_proxy, COMDAT
; _this$ = ecx

; 655  : 		{	// destroy proxy

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 656  : 		typename _Alty::template rebind<_Container_proxy>::other
; 657  : 			_Alproxy(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<char> > &>

; 658  : 		_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all

; 659  : 		_Alproxy.destroy(_Myproxy());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>

; 660  : 		_Alproxy.deallocate(_Alproxy.address(*_Myproxy()), 1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate

; 661  : 		_Myproxy() = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
	mov	DWORD PTR [eax], 0

; 662  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Free_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Free_proxy:
	DD	1
	DD	$LN4@Free_proxy
$LN4@Free_proxy:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Free_proxy
$LN3@Free_proxy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Free_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -228						; size = 8
__Alproxy$ = -17					; size = 1
_this$ = -8						; size = 4
?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy, COMDAT
; _this$ = ecx

; 646  : 		{	// construct proxy

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 647  : 		typename _Alty::template rebind<_Container_proxy>::other
; 648  : 			_Alproxy(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<char> > &>

; 649  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	push	eax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
	mov	DWORD PTR [eax], esi

; 650  : 		_Alproxy.construct(_Myproxy(), _Container_proxy());

	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>

; 651  : 		_Myproxy()->_Mycont = &_Get_data();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax], esi

; 652  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Alloc_prox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Alloc_prox:
	DD	1
	DD	$LN4@Alloc_prox
$LN4@Alloc_prox:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Alloc_prox
$LN3@Alloc_prox:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Move_alloc@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Al$ = 8						; size = 4
?_Move_alloc@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@@Z PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Move_alloc, COMDAT
; _this$ = ecx

; 639  : 		{	// replace old allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 640  : 		_Free_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Free_proxy

; 641  : 		_Pocma(_Getal(), _Al);

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	push	eax
	call	??$_Pocma@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z ; std::_Pocma<std::_Wrap_alloc<std::allocator<char> > >
	add	esp, 8

; 642  : 		_Alloc_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy

; 643  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Move_alloc@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@@Z ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Move_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 627  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		_Free_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Free_proxy

; 629  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 613  : 		{	// default construct allocator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 612  : 		: _Mypair(_Zero_then_variadic_args_t())

	movzx	eax, BYTE PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 614  : 		_Alloc_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy

; 615  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
__ehhandler$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr, COMDAT
; _this$ = ecx

; 582  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 583  : 		return (_Get_data()._Myptr());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
	mov	ecx, eax
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr

; 584  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr, COMDAT
; _this$ = ecx

; 577  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Get_data()._Myptr());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
	mov	ecx, eax
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr

; 579  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT
; _this$ = ecx

; 533  : 			{	// user-provided, for fancy pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 534  : 			}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT
; _this$ = ecx

; 528  : 		_Bxty()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 529  : 			{	// user-provided, for fancy pointers
; 530  : 			}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 520  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 521  : 		return (this->_BUF_SIZE <= _Myres

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 522  : 			? _Unfancy(_Bx._Ptr)
; 523  : 			: _Bx._Buf);
; 524  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 513  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 514  : 		return (this->_BUF_SIZE <= _Myres

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 515  : 			? _Unfancy(_Bx._Ptr)
; 516  : 			: _Bx._Buf);
; 517  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 498  : 		{	// initialize values

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 495  : 		: _Bx(),

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty

; 496  : 		_Mysize(0),

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0

; 497  : 		_Myres(0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0

; 499  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1007 : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1008 : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 1009 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 986  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 987  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 988  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 975  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 976  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 977  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??4?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEAAU01@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??4?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEAAU01@$$QAU01@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::operator=, COMDAT
; _this$ = ecx

; 962  : 		{	// assign by moving

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 963  : 		_Mybase::operator=(_STD move(_Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$move@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<char> > &>
	add	esp, 4

; 964  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 965  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEAAU01@$$QAU01@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAU01@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 946  : 		{	// construct by moving

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 945  : 		: _Mybase(_STD move(_Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$move@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<char> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>

; 947  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAU01@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 936  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 935  : 		: _Mybase()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 937  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?address@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEPBDABD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?address@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEPBDABD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::address, COMDAT
; _this$ = ecx

; 930  : 		{	// return address of nonmutable _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 931  : 		return (pointer_traits<const_pointer>::pointer_to(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	?pointer_to@?$pointer_traits@PBD@std@@SAPBDABD@Z ; std::pointer_traits<char const *>::pointer_to
	add	esp, 4

; 932  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?address@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEPBDABD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::address
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?address@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEPADAAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?address@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEPADAAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::address, COMDAT
; _this$ = ecx

; 925  : 		{	// return address of mutable _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 926  : 		return (pointer_traits<pointer>::pointer_to(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z ; std::pointer_traits<char *>::pointer_to
	add	esp, 4

; 927  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?address@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEPADAAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::address
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@U_Nil@2@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 1
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@U_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction, COMDAT
; _this$ = ecx

; 912  : 		{	// get allocator to use

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 913  : 		return (_Mytraits::select_on_container_copy_construction(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAV?$allocator@D@1@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 914  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@U_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Al$ = 12						; size = 4
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z PROC ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction, COMDAT

; 874  : 		{	// get allocator to use

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 875  : 		return (_Al);

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 876  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ENDP ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 868  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 869  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 870  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 748  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 749  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 750  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 724  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 725  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

	push	1
	push	1
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	?_Allocate@std@@YAPAXII_N@Z		; std::_Allocate
	add	esp, 12					; 0000000cH

; 726  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 719  : 		{	// deallocate object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 720  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 721  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 703  : 	allocator(const allocator<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 704  : 		{	// construct by copying (do nothing)
; 705  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 699  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 700  : 		{	// construct default allocator (do nothing)
; 701  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?_Deallocate@std@@YAXPAXII@Z
_TEXT	SEGMENT
__Ptr_container$1 = -44					; size = 4
__Ptr_ptr$2 = -32					; size = 4
__Ptr_user$3 = -20					; size = 4
__User_size$ = -8					; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Sz$ = 16						; size = 4
?_Deallocate@std@@YAXPAXII@Z PROC			; std::_Deallocate, COMDAT

; 92   : 	{	// deallocate storage for _Count elements of size _Sz

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 93   :  #if defined(_M_IX86) || defined(_M_X64)
; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Sz$[ebp]
	cmp	DWORD PTR __Count$[ebp], eax
	jbe	SHORT $LN2@Deallocate
	mov	eax, OFFSET ??_C@_0BN@HMCJOMKN@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5_Sz?$AA@
	test	eax, eax
	je	SHORT $LN10@Deallocate
	xor	ecx, ecx
	jne	SHORT $LN11@Deallocate
$LN10@Deallocate:
	mov	esi, esp
	push	OFFSET ??_C@_1EI@MLOBABC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AA_?$AAS?$AAz?$AA?$CC?$AA?5?$AA?$CG@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	mov	edx, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	edx, 2
	push	edx
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN11@Deallocate
	int	3
$LN11@Deallocate:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	eax, 2
	push	eax
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Deallocate:

; 95   : 	const size_t _User_size = _Count * _Sz;

	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, DWORD PTR __Sz$[ebp]
	mov	DWORD PTR __User_size$[ebp], eax

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	DWORD PTR __User_size$[ebp], 4096	; 00001000H
	jb	$LN3@Deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Ptr_user$3[ebp], eax

; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

	mov	eax, DWORD PTR __Ptr_user$3[ebp]
	and	eax, 31					; 0000001fH
	je	SHORT $LN4@Deallocate
	mov	eax, OFFSET ??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@
	test	eax, eax
	je	SHORT $LN12@Deallocate
	xor	ecx, ecx
	jne	SHORT $LN13@Deallocate
$LN12@Deallocate:
	mov	esi, esp
	push	OFFSET ??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	mov	edx, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	edx, 8
	push	edx
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN13@Deallocate
	int	3
$LN13@Deallocate:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	eax, 8
	push	eax
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@Deallocate:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);

	mov	eax, DWORD PTR __Ptr_user$3[ebp]
	sub	eax, 4
	mov	DWORD PTR __Ptr_ptr$2[ebp], eax

; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	eax, DWORD PTR __Ptr_ptr$2[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Ptr_container$1[ebp], ecx

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(

	mov	eax, 4
	imul	ecx, eax, -1
	mov	edx, DWORD PTR __Ptr_ptr$2[ebp]
	cmp	DWORD PTR [edx+ecx], -84215046		; fafafafaH
	je	SHORT $LN5@Deallocate
	mov	eax, OFFSET ??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@
	test	eax, eax
	je	SHORT $LN14@Deallocate
	xor	ecx, ecx
	jne	SHORT $LN15@Deallocate
$LN14@Deallocate:
	mov	esi, esp
	push	OFFSET ??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	mov	edx, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	edx, 18					; 00000012H
	push	edx
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN15@Deallocate
	int	3
$LN15@Deallocate:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	eax, 18					; 00000012H
	push	eax
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@Deallocate:

; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

	mov	eax, DWORD PTR __Ptr_container$1[ebp]
	cmp	eax, DWORD PTR __Ptr_user$3[ebp]
	jb	SHORT $LN6@Deallocate
	mov	eax, OFFSET ??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@
	test	eax, eax
	je	SHORT $LN16@Deallocate
	xor	ecx, ecx
	jne	SHORT $LN17@Deallocate
$LN16@Deallocate:
	mov	esi, esp
	push	OFFSET ??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	mov	edx, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	edx, 22					; 00000016H
	push	edx
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN17@Deallocate
	int	3
$LN17@Deallocate:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	eax, 22					; 00000016H
	push	eax
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@Deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)

	mov	eax, DWORD PTR __Ptr_user$3[ebp]
	sub	eax, DWORD PTR __Ptr_container$1[ebp]
	cmp	eax, 8
	jae	SHORT $LN7@Deallocate
	mov	eax, OFFSET ??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@
	test	eax, eax
	je	SHORT $LN18@Deallocate
	xor	ecx, ecx
	jne	SHORT $LN19@Deallocate
$LN18@Deallocate:
	mov	esi, esp
	push	OFFSET ??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	mov	edx, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	edx, 26					; 0000001aH
	push	edx
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN19@Deallocate
	int	3
$LN19@Deallocate:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	eax, 26					; 0000001aH
	push	eax
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@Deallocate:

; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)
; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

	mov	eax, DWORD PTR __Ptr_user$3[ebp]
	sub	eax, DWORD PTR __Ptr_container$1[ebp]
	cmp	eax, 39					; 00000027H
	jbe	SHORT $LN8@Deallocate
	mov	eax, OFFSET ??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@
	test	eax, eax
	je	SHORT $LN20@Deallocate
	xor	ecx, ecx
	jne	SHORT $LN21@Deallocate
$LN20@Deallocate:
	mov	esi, esp
	push	OFFSET ??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	mov	edx, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	edx, 34					; 00000022H
	push	edx
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN21@Deallocate
	int	3
$LN21@Deallocate:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	eax, 34					; 00000022H
	push	eax
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@Deallocate:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	eax, DWORD PTR __Ptr_container$1[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax
$LN3@Deallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 133  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Deallocate@std@@YAXPAXII@Z ENDP			; std::_Deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?_Allocate@std@@YAPAXII_N@Z
_TEXT	SEGMENT
__Ptr_container$1 = -44					; size = 4
__Block_size$2 = -32					; size = 4
__User_size$ = -20					; size = 4
__Ptr$ = -8						; size = 4
__Count$ = 8						; size = 4
__Sz$ = 12						; size = 4
__Try_aligned_allocation$ = 16				; size = 1
?_Allocate@std@@YAPAXII_N@Z PROC			; std::_Allocate, COMDAT

; 48   : 	{	// allocate storage for _Count elements of size _Sz

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 49   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 50   : 
; 51   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN2@Allocate

; 52   : 		return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	jmp	$LN9@Allocate
$LN2@Allocate:

; 53   : 
; 54   : 	// check overflow of multiply
; 55   : 	if ((size_t)(-1) / _Sz < _Count)

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Sz$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN3@Allocate

; 56   : 		_Xbad_alloc();	// report no memory

	mov	esi, esp
	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Allocate:

; 57   : 	const size_t _User_size = _Count * _Sz;

	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, DWORD PTR __Sz$[ebp]
	mov	DWORD PTR __User_size$[ebp], eax

; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	movzx	eax, BYTE PTR __Try_aligned_allocation$[ebp]
	test	eax, eax
	je	$LN4@Allocate
	cmp	DWORD PTR __User_size$[ebp], 4096	; 00001000H
	jb	$LN4@Allocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	mov	eax, DWORD PTR __User_size$[ebp]
	add	eax, 39					; 00000027H
	mov	DWORD PTR __Block_size$2[ebp], eax

; 66   : 		if (_Block_size <= _User_size)

	mov	eax, DWORD PTR __Block_size$2[ebp]
	cmp	eax, DWORD PTR __User_size$[ebp]
	ja	SHORT $LN6@Allocate

; 67   : 			_Xbad_alloc();	// report no memory

	mov	esi, esp
	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@Allocate:

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	mov	eax, DWORD PTR __Block_size$2[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr_container$1[ebp], eax

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	cmp	DWORD PTR __Ptr_container$1[ebp], 0
	jne	SHORT $LN7@Allocate
	mov	eax, OFFSET ??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@
	test	eax, eax
	je	SHORT $LN10@Allocate
	xor	ecx, ecx
	jne	SHORT $LN11@Allocate
$LN10@Allocate:
	mov	esi, esp
	push	OFFSET ??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	mov	edx, DWORD PTR ?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA
	add	edx, 22					; 00000016H
	push	edx
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN11@Allocate
	int	3
$LN11@Allocate:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA
	add	eax, 22					; 00000016H
	push	eax
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@Allocate:

; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	mov	eax, DWORD PTR __Ptr_container$1[ebp]
	add	eax, 39					; 00000027H
	and	eax, -32				; ffffffe0H
	mov	DWORD PTR __Ptr$[ebp], eax

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	eax, 4
	imul	ecx, eax, -1
	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR __Ptr_container$1[ebp]
	mov	DWORD PTR [edx+ecx], eax

; 74   : 
; 75   :  #ifdef _DEBUG
; 76   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;

	mov	eax, 4
	imul	ecx, eax, -2
	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [edx+ecx], -84215046		; fafafafaH

; 77   :  #endif /* _DEBUG */
; 78   : 		}
; 79   : 	else

	jmp	$LN5@Allocate
$LN4@Allocate:

; 80   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 81   : 
; 82   : 		{	// allocate normal block
; 83   : 		_Ptr = ::operator new(_User_size);

	mov	eax, DWORD PTR __User_size$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN5@Allocate
	mov	eax, OFFSET ??_C@_09GLJCAGLP@_Ptr?5?$CB?$DN?50?$AA@
	test	eax, eax
	je	SHORT $LN12@Allocate
	xor	ecx, ecx
	jne	SHORT $LN13@Allocate
$LN12@Allocate:
	mov	esi, esp
	push	OFFSET ??_C@_1CC@GKJLLHIM@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	mov	edx, DWORD PTR ?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA
	add	edx, 36					; 00000024H
	push	edx
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN13@Allocate
	int	3
$LN13@Allocate:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA
	add	eax, 36					; 00000024H
	push	eax
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@Allocate:

; 85   : 		}
; 86   : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN9@Allocate:

; 87   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Allocate@std@@YAPAXII_N@Z ENDP			; std::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -20						; size = 4
_this$ = -8						; size = 4
?_Orphan_me@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT
; _this$ = ecx

; 193  : 		{	// cut ties with parent

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 194  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 195  : 		if (_Myproxy != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Orphan_me

; 196  : 			{	// adopted, remove self from list
; 197  : 			_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$1[ebp], ecx
$LN2@Orphan_me:

; 198  : 			while (*_Pnext != 0 && *_Pnext != this)

	mov	eax, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Orphan_me
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _this$[ebp]
	je	SHORT $LN3@Orphan_me

; 199  : 				_Pnext = &(*_Pnext)->_Mynextiter;

	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$1[ebp], ecx
	jmp	SHORT $LN2@Orphan_me
$LN3@Orphan_me:

; 200  : 
; 201  : 			if (*_Pnext == 0)

	mov	eax, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN5@Orphan_me

; 202  : 				_DEBUG_ERROR("ITERATOR LIST CORRUPTED!");

	mov	esi, esp
	push	202					; 000000caH
	push	OFFSET ??_C@_1JA@MHADJNIL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@Orphan_me:

; 203  : 			*_Pnext = _Mynextiter;

	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 204  : 			_Myproxy = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@Orphan_me:

; 205  : 			}
; 206  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 207  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_me@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ PROC	; std::_Iterator_base12::_Getpnext, COMDAT
; _this$ = ecx

; 188  : 		{	// get address of remaining iterator chain

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 189  : 		return (&_Mynextiter);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4

; 190  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ENDP	; std::_Iterator_base12::_Getpnext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx

; 183  : 		{	// get owning container

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 184  : 		return (_Myproxy == 0 ? 0 : _Myproxy->_Mycont);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getcont
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@Getcont
$LN3@Getcont:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv68[ebp], eax
$LN4@Getcont:
	mov	eax, DWORD PTR tv68[ebp]

; 185  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Clrcont@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Clrcont@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Clrcont, COMDAT
; _this$ = ecx

; 178  : 		{	// disown owning container

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 179  : 		_Myproxy = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 180  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Clrcont@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Clrcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$2 = -56						; size = 4
__Parent_proxy$3 = -44					; size = 4
__Lock$4 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx

; 149  : 		{	// adopt this iterator by parent

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 150  : 		if (_Parent == 0)

	cmp	DWORD PTR __Parent$[ebp], 0
	jne	SHORT $LN2@Adopt

; 151  : 			{	// no future parent, just disown current parent
; 152  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 153  : 			_Lockit _Lock(_LOCK_DEBUG);

	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$4[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 154  : 			_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 155  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 156  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$4[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp

; 157  : 		else

	jmp	SHORT $LN1@Adopt
$LN2@Adopt:

; 158  : 			{	// have a parent, do adoption
; 159  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;

	mov	eax, DWORD PTR __Parent$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Parent_proxy$3[ebp], ecx

; 160  : 
; 161  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 162  : 			if (_Myproxy != _Parent_proxy)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Parent_proxy$3[ebp]
	je	SHORT $LN1@Adopt

; 163  : 				{	// change parentage
; 164  : 				_Lockit _Lock(_LOCK_DEBUG);

	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 165  : 				_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 166  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parent_proxy$3[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 167  : 				_Parent_proxy->_Myfirstiter = this;

	mov	eax, DWORD PTR __Parent_proxy$3[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 168  : 				_Myproxy = _Parent_proxy;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parent_proxy$3[ebp]
	mov	DWORD PTR [eax], ecx

; 169  : 				}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Adopt:

; 170  : 
; 171  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 172  : 			_Myproxy = _Parent_proxy;
; 173  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 174  : 			}
; 175  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@Adopt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN12@Adopt:
	DD	2
	DD	$LN11@Adopt
$LN11@Adopt:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN8@Adopt
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN9@Adopt
$LN9@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN8@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$4[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx

; 141  : 		{	// destroy the iterator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Iterator_base12@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 142  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 143  : 		_Lockit _Lock(_LOCK_DEBUG);

	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 144  : 		_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 145  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 146  : 		}

	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@Iterator_b
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@Iterator_b:
	DD	1
	DD	$LN5@Iterator_b
$LN5@Iterator_b:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN3@Iterator_b
$LN3@Iterator_b:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Iterator_base12@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
__Lock$2 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z PROC		; std::_Iterator_base12::operator=, COMDAT
; _this$ = ecx

; 124  : 		{	// assign an iterator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 125  : 		if (_Myproxy == _Right._Myproxy)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN2@operator
	jmp	SHORT $LN3@operator
$LN2@operator:

; 126  : 			;
; 127  : 		else if (_Right._Myproxy != 0)

	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN4@operator

; 128  : 			_Adopt(_Right._Myproxy->_Mycont);

	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 129  : 		else

	jmp	SHORT $LN3@operator
$LN4@operator:

; 130  : 			{	// becoming invalid, disown current parent
; 131  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 132  : 			_Lockit _Lock(_LOCK_DEBUG);

	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 133  : 			_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 134  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 135  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@operator:

; 136  : 
; 137  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 138  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN11@operator:
	DD	1
	DD	$LN10@operator
$LN10@operator:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN8@operator
$LN8@operator:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ENDP		; std::_Iterator_base12::operator=
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0_Iterator_base12@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??0_Iterator_base12@std@@QAE@ABU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 119  : 		{	// copy an iterator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 118  : 		: _Myproxy(0), _Mynextiter(0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 120  : 		*this = _Right;

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=

; 121  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Iterator_base12@std@@QAE@ABU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 114  : 		{	// construct orphaned iterator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 113  : 		: _Myproxy(0), _Mynextiter(0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 115  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -32						; size = 4
__Lock$2 = -20						; size = 4
_this$ = -8						; size = 4
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx

; 215  : 	{	// orphan all iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 216  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 217  : 	if (_Myproxy != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Orphan_all

; 218  : 		{	// proxy allocated, drain it
; 219  : 		_Lockit _Lock(_LOCK_DEBUG);

	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 220  : 
; 221  : 		for (_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$1[ebp], ecx
	jmp	SHORT $LN4@Orphan_all
$LN2@Orphan_all:

; 222  : 			*_Pnext != 0; *_Pnext = (*_Pnext)->_Mynextiter)

	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnext$1[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN4@Orphan_all:
	mov	eax, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Orphan_all

; 223  : 			(*_Pnext)->_Myproxy = 0;

	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], 0
	jmp	SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 224  : 		_Myproxy->_Myfirstiter = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], 0

; 225  : 		}

	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Orphan_all:

; 226  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 227  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Orphan_all
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@Orphan_all:
	DD	1
	DD	$LN9@Orphan_all
$LN9@Orphan_all:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@Orphan_all
$LN8@Orphan_all:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Container_base12::_Getpfirst, COMDAT
; _this$ = ecx

; 99   : 		{	// get address of iterator chain

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 100  : 		return (_Myproxy == 0 ? 0 : &_Myproxy->_Myfirstiter);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getpfirst
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@Getpfirst
$LN3@Getpfirst:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR tv68[ebp], edx
$LN4@Getpfirst:
	mov	eax, DWORD PTR tv68[ebp]

; 101  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Container_base12::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??1_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::~_Container_base12, COMDAT
; _this$ = ecx

; 94   : 		{	// destroy the container

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Container_base12@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 95   : 		_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 96   : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Container_base12@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Container_base12@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::~_Container_base12
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx

; 80   : 		{	// construct childless container

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 79   : 		: _Myproxy(0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 81   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx

; 68   : 		{	// construct from pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 67   : 		: _Mycont(0), _Myfirstiter(0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 69   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$char_traits@D@std@@SAHXZ PROC			; std::char_traits<char>::eof, COMDAT

; 605  : 		{	// return end-of-file metacharacter

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 606  : 		return (EOF);

	or	eax, -1

; 607  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?eof@?$char_traits@D@std@@SAHXZ ENDP			; std::char_traits<char>::eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z
_TEXT	SEGMENT
tv65 = -196						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z PROC	; std::char_traits<char>::eq_int_type, COMDAT

; 594  : 		{	// test for metacharacter equality

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 595  : 		return (_Left == _Right);

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@eq_int_typ
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
	mov	DWORD PTR tv65[ebp], 0
$LN4@eq_int_typ:
	mov	al, BYTE PTR tv65[ebp]

; 596  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ENDP	; std::char_traits<char>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 564  : 		{	// assign an element

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 565  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 566  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAPADPADID@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ch$ = 16						; size = 1
?assign@?$char_traits@D@std@@SAPADPADID@Z PROC		; std::char_traits<char>::assign, COMDAT

; 559  : 		{	// assign _Count * _Ch to [_First, ...)

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 560  : 		return ((_Elem *)_CSTD memset(_First, _Ch, _Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	movsx	ecx, BYTE PTR __Ch$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH

; 561  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAPADPADID@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 552  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 553  : 		return (_Count == 0 ? _First1

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	esi, esp
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));
; 555  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 529  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 530  : 		return (_Count == 0 ? _First1

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));
; 532  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -196						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 522  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 523  : 		return (*_First == 0 ? 0

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 			: _CSTD strlen(_First));
; 525  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?compare@?$char_traits@D@std@@SAHPBD0I@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?compare@?$char_traits@D@std@@SAHPBD0I@Z PROC		; std::char_traits<char>::compare, COMDAT

; 516  : 		{	// compare [_First1, _First1 + _Count) with [_First2, ...)

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 517  : 		return (_Count == 0 ? 0

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@compare
	mov	DWORD PTR tv69[ebp], 0
	jmp	SHORT $LN4@compare
$LN3@compare:
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@compare:
	mov	eax, DWORD PTR tv69[ebp]

; 518  : 			: _CSTD memcmp(_First1, _First2, _Count));
; 519  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?compare@?$char_traits@D@std@@SAHPBD0I@Z ENDP		; std::char_traits<char>::compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 87   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 88   :         (void)_Size;
; 89   :         return _Where;

	mov	eax, DWORD PTR __Where$[ebp]

; 90   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 88   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 89   :         return _Data._What ? _Data._What : "Unknown exception";

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@what
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv69[ebp], edx
	jmp	SHORT $LN4@what
$LN3@what:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception?$AA@
$LN4@what:
	mov	eax, DWORD PTR tv69[ebp]

; 90   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 83   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 84   :         __std_exception_destroy(&_Data);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp____std_exception_destroy
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 85   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 66   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 65   :         : _Data()

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax

; 67   :         __std_exception_copy(&_Other._Data, &_Data);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR __Other$[ebp]
	add	ecx, 4
	push	ecx
	call	DWORD PTR __imp____std_exception_copy
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 68   :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@QBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Message$ = 8						; size = 4
___formal$ = 12						; size = 4
??0exception@std@@QAE@QBDH@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 60   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 59   :         : _Data()

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax

; 61   :         _Data._What = _Message;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Message$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 62   :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0exception@std@@QAE@QBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\company.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\company.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
