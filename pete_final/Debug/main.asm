; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	S:\Chris\OneDrive - UAT\C++ Programming II\pete_final\pete_final\main.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0exception@std@@QAE@QBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?compare@?$char_traits@D@std@@SAHPBD0I@Z	; std::char_traits<char>::compare
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAPADPADID@Z	; std::char_traits<char>::assign
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	?to_char_type@?$char_traits@D@std@@SADABH@Z	; std::char_traits<char>::to_char_type
PUBLIC	?to_int_type@?$char_traits@D@std@@SAHABD@Z	; std::char_traits<char>::to_int_type
PUBLIC	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z	; std::char_traits<char>::eq_int_type
PUBLIC	?not_eof@?$char_traits@D@std@@SAHABH@Z		; std::char_traits<char>::not_eof
PUBLIC	?eof@?$char_traits@D@std@@SAHXZ			; std::char_traits<char>::eof
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
PUBLIC	??1_Container_base12@std@@QAE@XZ		; std::_Container_base12::~_Container_base12
PUBLIC	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QAE@ABU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Clrcont@_Iterator_base12@std@@QAEXXZ		; std::_Iterator_base12::_Clrcont
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ	; std::_Iterator_base12::_Getpnext
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	?_Allocate@std@@YAPAXII_N@Z			; std::_Allocate
PUBLIC	?_Deallocate@std@@YAXPAXII@Z			; std::_Deallocate
PUBLIC	?_Init_atomic_counter@std@@YAXAAKK@Z		; std::_Init_atomic_counter
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@U_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	?address@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEPADAAD@Z ; std::_Wrap_alloc<std::allocator<char> >::address
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAU01@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
PUBLIC	??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
PUBLIC	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
PUBLIC	?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
PUBLIC	?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
PUBLIC	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
PUBLIC	?_Traits_compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAHQBDI0I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Traits_compare
PUBLIC	?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
PUBLIC	?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	?name@type_info@@QBEPBDXZ			; type_info::name
PUBLIC	??0bad_cast@std@@QAE@XZ				; std::bad_cast::bad_cast
PUBLIC	??1bad_cast@std@@UAE@XZ				; std::bad_cast::~bad_cast
PUBLIC	??0bad_cast@std@@QAE@ABV01@@Z			; std::bad_cast::bad_cast
PUBLIC	??_Gbad_cast@std@@UAEPAXI@Z			; std::bad_cast::`scalar deleting destructor'
PUBLIC	??1locale@std@@QAE@XZ				; std::locale::~locale
PUBLIC	?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z	; std::locale::_Getfacet
PUBLIC	??0_Ref_count_base@std@@IAE@XZ			; std::_Ref_count_base::_Ref_count_base
PUBLIC	??1_Ref_count_base@std@@UAE@XZ			; std::_Ref_count_base::~_Ref_count_base
PUBLIC	?_Incref@_Ref_count_base@std@@QAEXXZ		; std::_Ref_count_base::_Incref
PUBLIC	?_Decref@_Ref_count_base@std@@QAEXXZ		; std::_Ref_count_base::_Decref
PUBLIC	?_Decwref@_Ref_count_base@std@@QAEXXZ		; std::_Ref_count_base::_Decwref
PUBLIC	?_Get_deleter@_Ref_count_base@std@@UBEPAXABVtype_info@@@Z ; std::_Ref_count_base::_Get_deleter
PUBLIC	??_G_Ref_count_base@std@@UAEPAXI@Z		; std::_Ref_count_base::`scalar deleting destructor'
PUBLIC	?_Enable_shared@std@@YAXPDX0@Z			; std::_Enable_shared
PUBLIC	?_Check_C_return@std@@YAHH@Z			; std::_Check_C_return
PUBLIC	?_Thrd_startX@std@@YAHPAU_Thrd_imp_t@@P6GIPAX@Z1@Z ; std::_Thrd_startX
PUBLIC	?_Mtx_initX@std@@YAHPAPAU_Mtx_internal_imp_t@@H@Z ; std::_Mtx_initX
PUBLIC	?_Mtx_lockX@std@@YAHPAU_Mtx_internal_imp_t@@@Z	; std::_Mtx_lockX
PUBLIC	?_Mtx_unlockX@std@@YAHPAU_Mtx_internal_imp_t@@@Z ; std::_Mtx_unlockX
PUBLIC	?_Cnd_initX@std@@YAHPAPAU_Cnd_internal_imp_t@@@Z ; std::_Cnd_initX
PUBLIC	?_Cnd_waitX@std@@YAHPAU_Cnd_internal_imp_t@@PAU_Mtx_internal_imp_t@@@Z ; std::_Cnd_waitX
PUBLIC	?_Cnd_signalX@std@@YAHPAU_Cnd_internal_imp_t@@@Z ; std::_Cnd_signalX
PUBLIC	??0_Auto_cnd@std@@QAE@PAU_Cnd_internal_imp_t@@@Z ; std::_Auto_cnd::_Auto_cnd
PUBLIC	??1_Auto_cnd@std@@QAE@XZ			; std::_Auto_cnd::~_Auto_cnd
PUBLIC	?_Release@_Auto_cnd@std@@QAEXXZ			; std::_Auto_cnd::_Release
PUBLIC	??0_Auto_mtx@std@@QAE@PAU_Mtx_internal_imp_t@@@Z ; std::_Auto_mtx::_Auto_mtx
PUBLIC	??1_Auto_mtx@std@@QAE@XZ			; std::_Auto_mtx::~_Auto_mtx
PUBLIC	?_Release@_Auto_mtx@std@@QAEXXZ			; std::_Auto_mtx::_Release
PUBLIC	??0_Pad@std@@QAE@XZ				; std::_Pad::_Pad
PUBLIC	??1_Pad@std@@QAE@XZ				; std::_Pad::~_Pad
PUBLIC	?_Launch@_Pad@std@@QAEXPAU_Thrd_imp_t@@@Z	; std::_Pad::_Launch
PUBLIC	?_Release@_Pad@std@@QAEXXZ			; std::_Pad::_Release
PUBLIC	?_Call_func@_Pad@std@@CGIPAX@Z			; std::_Pad::_Call_func
PUBLIC	??1thread@std@@QAE@XZ				; std::thread::~thread
PUBLIC	?joinable@thread@std@@QBE_NXZ			; std::thread::joinable
PUBLIC	?join@thread@std@@QAEXXZ			; std::thread::join
PUBLIC	?get_id@thread@std@@QBE?AVid@12@XZ		; std::thread::get_id
PUBLIC	?get_id@this_thread@std@@YA?AVid@thread@2@XZ	; std::this_thread::get_id
PUBLIC	??0id@thread@std@@AAE@I@Z			; std::thread::id::id
PUBLIC	??8std@@YA_NVid@thread@0@0@Z			; std::operator==
PUBLIC	??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_flags_saver::ios_flags_saver
PUBLIC	??1ios_flags_saver@io@boost@@QAE@XZ		; boost::io::ios_flags_saver::~ios_flags_saver
PUBLIC	?restore@ios_flags_saver@io@boost@@QAEXXZ	; boost::io::ios_flags_saver::restore
PUBLIC	??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_precision_saver::ios_precision_saver
PUBLIC	??1ios_precision_saver@io@boost@@QAE@XZ		; boost::io::ios_precision_saver::~ios_precision_saver
PUBLIC	?restore@ios_precision_saver@io@boost@@QAEXXZ	; boost::io::ios_precision_saver::restore
PUBLIC	??_Darchive_exception@archive@boost@@QAEXXZ	; boost::archive::archive_exception::`vbase destructor'
PUBLIC	??0version_type@archive@boost@@QAE@ABI@Z	; boost::archive::version_type::version_type
PUBLIC	??4version_type@archive@boost@@QAEAAV012@ABV012@@Z ; boost::archive::version_type::operator=
PUBLIC	??Bversion_type@archive@boost@@QBEIXZ		; boost::archive::version_type::operator unsigned int
PUBLIC	??Bversion_type@archive@boost@@QAEAAIXZ		; boost::archive::version_type::operator unsigned int &
PUBLIC	??Bclass_id_type@archive@boost@@QBEHXZ		; boost::archive::class_id_type::operator int
PUBLIC	??Bclass_id_type@archive@boost@@QAEAAFXZ	; boost::archive::class_id_type::operator short &
PUBLIC	??Bobject_id_type@archive@boost@@QBEIXZ		; boost::archive::object_id_type::operator unsigned int
PUBLIC	??Bobject_id_type@archive@boost@@QAEAAIXZ	; boost::archive::object_id_type::operator unsigned int &
PUBLIC	??Btracking_type@archive@boost@@QBE_NXZ		; boost::archive::tracking_type::operator bool
PUBLIC	??Btracking_type@archive@boost@@QAEAA_NXZ	; boost::archive::tracking_type::operator bool &
PUBLIC	??Bclass_name_type@archive@boost@@QBEAAPBDXZ	; boost::archive::class_name_type::operator char const * &
PUBLIC	?get_debug_info@extended_type_info_typeid_0@typeid_system@serialization@boost@@EBEPBDXZ ; boost::serialization::typeid_system::extended_type_info_typeid_0::get_debug_info
PUBLIC	??0version_type@serialization@boost@@QAE@I@Z	; boost::serialization::version_type::version_type
PUBLIC	??Bversion_type@serialization@boost@@QBEABIXZ	; boost::serialization::version_type::operator unsigned int const &
PUBLIC	?serialized_as_pointer@basic_iserializer@detail@archive@boost@@QBE_NXZ ; boost::archive::detail::basic_iserializer::serialized_as_pointer
PUBLIC	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
PUBLIC	?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVversion_type@34@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload
PUBLIC	?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVobject_id_type@34@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload
PUBLIC	?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_type@34@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload
PUBLIC	?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_optional_type@34@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload
PUBLIC	?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUtracking_type@34@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload
PUBLIC	?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUclass_name_type@34@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload
PUBLIC	??1?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@UAE@XZ ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::~common_iarchive<boost::archive::text_iarchive>
PUBLIC	?load_override@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_optional_type@23@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override
PUBLIC	??1?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@MAE@XZ ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::~basic_text_iarchive<boost::archive::text_iarchive>
PUBLIC	??_G?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@MAEPAXI@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`scalar deleting destructor'
PUBLIC	?load@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@23@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load
PUBLIC	??1?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@MAE@XZ ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::~text_iarchive_impl<boost::archive::text_iarchive>
PUBLIC	??_G?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@MAEPAXI@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`scalar deleting destructor'
PUBLIC	??0text_iarchive@archive@boost@@QAE@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@I@Z ; boost::archive::text_iarchive::text_iarchive
PUBLIC	??1text_iarchive@archive@boost@@UAE@XZ		; boost::archive::text_iarchive::~text_iarchive
PUBLIC	??_Gtext_iarchive@archive@boost@@UAEPAXI@Z	; boost::archive::text_iarchive::`scalar deleting destructor'
PUBLIC	?serialized_as_pointer@basic_oserializer@detail@archive@boost@@QBE_NXZ ; boost::archive::detail::basic_oserializer::serialized_as_pointer
PUBLIC	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
PUBLIC	?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVversion_type@34@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
PUBLIC	?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_id_type@34@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
PUBLIC	?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_reference_type@34@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
PUBLIC	?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_type@34@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
PUBLIC	?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_reference_type@34@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
PUBLIC	?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_optional_type@34@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
PUBLIC	?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXABUclass_name_type@34@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
PUBLIC	?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXUtracking_type@34@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
PUBLIC	??1?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@UAE@XZ ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::~common_oarchive<boost::archive::text_oarchive>
PUBLIC	?newline@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::newline
PUBLIC	?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_id_type@23@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override
PUBLIC	?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_optional_type@23@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override
PUBLIC	?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override
PUBLIC	??1?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@MAE@XZ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::~basic_text_oarchive<boost::archive::text_oarchive>
PUBLIC	??_G?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@MAEPAXI@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`scalar deleting destructor'
PUBLIC	?save@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVversion_type@23@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save
PUBLIC	??1?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@MAE@XZ ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::~text_oarchive_impl<boost::archive::text_oarchive>
PUBLIC	??_G?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@MAEPAXI@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`scalar deleting destructor'
PUBLIC	??0text_oarchive@archive@boost@@QAE@AAV?$basic_ostream@DU?$char_traits@D@std@@@std@@I@Z ; boost::archive::text_oarchive::text_oarchive
PUBLIC	??1text_oarchive@archive@boost@@UAE@XZ		; boost::archive::text_oarchive::~text_oarchive
PUBLIC	??_Gtext_oarchive@archive@boost@@UAEPAXI@Z	; boost::archive::text_oarchive::`scalar deleting destructor'
PUBLIC	??O@YA_NAAVCContact@@0@Z			; operator>
PUBLIC	??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z		; std::_Fgetc<char>
PUBLIC	??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z		; std::_Fputc<char>
PUBLIC	??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z		; std::_Ungetc<char>
PUBLIC	?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z ; Chris::sort
PUBLIC	??0?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAE@XZ ; std::allocator<std::shared_ptr<CContact> >::allocator<std::shared_ptr<CContact> >
PUBLIC	?deallocate@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@2@I@Z ; std::allocator<std::shared_ptr<CContact> >::deallocate
PUBLIC	?allocate@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEPAV?$shared_ptr@VCContact@@@2@I@Z ; std::allocator<std::shared_ptr<CContact> >::allocate
PUBLIC	?max_size@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QBEIXZ ; std::allocator<std::shared_ptr<CContact> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAIABV?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEPAV?$shared_ptr@VCContact@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::max_size
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >
PUBLIC	??1?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::~_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Free_proxy
PUBLIC	?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getpfirst
PUBLIC	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myproxy
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Orphan_all
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >::~_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>
PUBLIC	??0?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >
PUBLIC	?push_back@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAEX$$QAV?$shared_ptr@VCContact@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::push_back
PUBLIC	??1?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::~vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >
PUBLIC	?capacity@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::capacity
PUBLIC	?_Unused_capacity@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Unused_capacity
PUBLIC	?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::begin
PUBLIC	?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
PUBLIC	?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Make_iter
PUBLIC	?size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::size
PUBLIC	?max_size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::max_size
PUBLIC	?push_back@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAEXABV?$shared_ptr@VCContact@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::push_back
PUBLIC	?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::erase
PUBLIC	?_Destroy@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXPAV?$shared_ptr@VCContact@@@2@0@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Destroy
PUBLIC	?_Grow_to@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEII@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Grow_to
PUBLIC	?_Inside@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBE_NPBV?$shared_ptr@VCContact@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Inside
PUBLIC	?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Reallocate
PUBLIC	?_Reserve@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Reserve
PUBLIC	?_Tidy@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Tidy
PUBLIC	?_Xlen@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Xlen
PUBLIC	?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Orphan_range
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>
PUBLIC	??4?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::operator=
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEABV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+=
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator!=
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Compat
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
PUBLIC	??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator=
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+=
PUBLIC	??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+
PUBLIC	??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator-=
PUBLIC	??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator-
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
PUBLIC	??4?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator=
PUBLIC	??0?$_Ptr_base@VCContact@@@std@@QAE@XZ		; std::_Ptr_base<CContact>::_Ptr_base<CContact>
PUBLIC	??0?$_Ptr_base@VCContact@@@std@@QAE@$$QAV01@@Z	; std::_Ptr_base<CContact>::_Ptr_base<CContact>
PUBLIC	?_Swap@?$_Ptr_base@VCContact@@@std@@QAEXAAV12@@Z ; std::_Ptr_base<CContact>::_Swap
PUBLIC	?_Get@?$_Ptr_base@VCContact@@@std@@QBEPAVCContact@@XZ ; std::_Ptr_base<CContact>::_Get
PUBLIC	?_Decref@?$_Ptr_base@VCContact@@@std@@QAEXXZ	; std::_Ptr_base<CContact>::_Decref
PUBLIC	?_Reset@?$_Ptr_base@VCContact@@@std@@QAEXPAVCContact@@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<CContact>::_Reset
PUBLIC	?_Reset0@?$_Ptr_base@VCContact@@@std@@QAEXPAVCContact@@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<CContact>::_Reset0
PUBLIC	??0?$shared_ptr@VCContact@@@std@@QAE@ABV01@@Z	; std::shared_ptr<CContact>::shared_ptr<CContact>
PUBLIC	??0?$shared_ptr@VCContact@@@std@@QAE@$$QAV01@@Z	; std::shared_ptr<CContact>::shared_ptr<CContact>
PUBLIC	??4?$shared_ptr@VCContact@@@std@@QAEAAV01@$$QAV01@@Z ; std::shared_ptr<CContact>::operator=
PUBLIC	??1?$shared_ptr@VCContact@@@std@@QAE@XZ		; std::shared_ptr<CContact>::~shared_ptr<CContact>
PUBLIC	??4?$shared_ptr@VCContact@@@std@@QAEAAV01@ABV01@@Z ; std::shared_ptr<CContact>::operator=
PUBLIC	?swap@?$shared_ptr@VCContact@@@std@@QAEXAAV12@@Z ; std::shared_ptr<CContact>::swap
PUBLIC	??D?$shared_ptr@VCContact@@@std@@QBEAAVCContact@@XZ ; std::shared_ptr<CContact>::operator*
PUBLIC	??C?$shared_ptr@VCContact@@@std@@QBEPAVCContact@@XZ ; std::shared_ptr<CContact>::operator->
PUBLIC	??_G?$shared_ptr@VCContact@@@std@@QAEPAXI@Z	; std::shared_ptr<CContact>::`scalar deleting destructor'
PUBLIC	?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; updateContactLists
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
PUBLIC	??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >
PUBLIC	??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
PUBLIC	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
PUBLIC	?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
PUBLIC	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
PUBLIC	?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Lock
PUBLIC	?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock
PUBLIC	?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::overflow
PUBLIC	?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail
PUBLIC	?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_filebuf<char,std::char_traits<char> >::underflow
PUBLIC	?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_filebuf<char,std::char_traits<char> >::uflow
PUBLIC	?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
PUBLIC	?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
PUBLIC	?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z ; std::basic_filebuf<char,std::char_traits<char> >::setbuf
PUBLIC	?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_filebuf<char,std::char_traits<char> >::sync
PUBLIC	?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::imbue
PUBLIC	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init
PUBLIC	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
PUBLIC	?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDU_Mbstatet@@@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
PUBLIC	?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
PUBLIC	?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back
PUBLIC	??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_ofstream<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ofstream<char,std::char_traits<char> >::`vbase destructor'
PUBLIC	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?6VCContact@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVCContact@@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<CContact>
PUBLIC	?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; getContactList
PUBLIC	??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
PUBLIC	??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >
PUBLIC	??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_ifstream<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ifstream<char,std::char_traits<char> >::`vbase destructor'
PUBLIC	??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z ; std::make_shared<CCompany,bool>
PUBLIC	??0?$_Ptr_base@VCCompany@@@std@@QAE@XZ		; std::_Ptr_base<CCompany>::_Ptr_base<CCompany>
PUBLIC	??0?$_Ptr_base@VCCompany@@@std@@QAE@$$QAV01@@Z	; std::_Ptr_base<CCompany>::_Ptr_base<CCompany>
PUBLIC	?_Decref@?$_Ptr_base@VCCompany@@@std@@QAEXXZ	; std::_Ptr_base<CCompany>::_Decref
PUBLIC	?_Reset0@?$_Ptr_base@VCCompany@@@std@@QAEXPAVCCompany@@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<CCompany>::_Reset0
PUBLIC	??0?$shared_ptr@VCCompany@@@std@@QAE@XZ		; std::shared_ptr<CCompany>::shared_ptr<CCompany>
PUBLIC	??0?$shared_ptr@VCCompany@@@std@@QAE@$$QAV01@@Z	; std::shared_ptr<CCompany>::shared_ptr<CCompany>
PUBLIC	??1?$shared_ptr@VCCompany@@@std@@QAE@XZ		; std::shared_ptr<CCompany>::~shared_ptr<CCompany>
PUBLIC	??$?0VCCompany@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCCompany@@@1@@Z ; std::shared_ptr<CContact>::shared_ptr<CContact><CCompany,void>
PUBLIC	??$?5VCContact@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVCContact@@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><CContact>
PUBLIC	??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z ; std::make_shared<CPerson,bool>
PUBLIC	??0?$_Ptr_base@VCPerson@@@std@@QAE@XZ		; std::_Ptr_base<CPerson>::_Ptr_base<CPerson>
PUBLIC	??0?$_Ptr_base@VCPerson@@@std@@QAE@$$QAV01@@Z	; std::_Ptr_base<CPerson>::_Ptr_base<CPerson>
PUBLIC	?_Decref@?$_Ptr_base@VCPerson@@@std@@QAEXXZ	; std::_Ptr_base<CPerson>::_Decref
PUBLIC	?_Reset0@?$_Ptr_base@VCPerson@@@std@@QAEXPAVCPerson@@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<CPerson>::_Reset0
PUBLIC	??0?$shared_ptr@VCPerson@@@std@@QAE@XZ		; std::shared_ptr<CPerson>::shared_ptr<CPerson>
PUBLIC	??0?$shared_ptr@VCPerson@@@std@@QAE@$$QAV01@@Z	; std::shared_ptr<CPerson>::shared_ptr<CPerson>
PUBLIC	??1?$shared_ptr@VCPerson@@@std@@QAE@XZ		; std::shared_ptr<CPerson>::~shared_ptr<CPerson>
PUBLIC	??$?0VCPerson@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCPerson@@@1@@Z ; std::shared_ptr<CContact>::shared_ptr<CContact><CPerson,void>
PUBLIC	_main
PUBLIC	??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z ; std::thread::thread<void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,void>
PUBLIC	??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ ; std::make_shared<CPerson>
PUBLIC	??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ ; std::make_shared<CCompany>
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
PUBLIC	??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::getline<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$_Move_unchecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00@Z ; std::_Move_unchecked<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *>
PUBLIC	??$addressof@$$CBV?$shared_ptr@VCContact@@@std@@@std@@YAPBV?$shared_ptr@VCContact@@@0@ABV10@@Z ; std::addressof<std::shared_ptr<CContact> const >
PUBLIC	??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unfancy<std::shared_ptr<CContact> >
PUBLIC	??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@AAV21@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> &>
PUBLIC	??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@ABV21@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> const &>
PUBLIC	??$addressof@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::addressof<std::shared_ptr<CContact> >
PUBLIC	??$forward@V?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::forward<std::shared_ptr<CContact> >
PUBLIC	??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >
PUBLIC	??$_Reset@VCContact@@@?$_Ptr_base@VCContact@@@std@@QAEXABV01@@Z ; std::_Ptr_base<CContact>::_Reset<CContact>
PUBLIC	??$?6Utracking_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABUtracking_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::tracking_type>
PUBLIC	??$?6Uclass_name_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABUclass_name_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_name_type>
PUBLIC	??$?6Vclass_id_optional_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_optional_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_id_optional_type>
PUBLIC	??$?6Vclass_id_reference_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_reference_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_id_reference_type>
PUBLIC	??$?6Vclass_id_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_id_type>
PUBLIC	??$?6Vobject_reference_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVobject_reference_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::object_reference_type>
PUBLIC	??$?6Vobject_id_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVobject_id_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::object_id_type>
PUBLIC	??$?6Vversion_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVversion_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::version_type>
PUBLIC	??$?5Uclass_name_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAUclass_name_type@23@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::class_name_type>
PUBLIC	??$?5Utracking_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAUtracking_type@23@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::tracking_type>
PUBLIC	??$?5Vclass_id_optional_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVclass_id_optional_type@23@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::class_id_optional_type>
PUBLIC	??$?5Vclass_id_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVclass_id_type@23@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::class_id_type>
PUBLIC	??$?5Vobject_id_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVobject_id_type@23@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::object_id_type>
PUBLIC	??$?5Vversion_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVversion_type@23@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::version_type>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>
PUBLIC	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEABDXZ ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
PUBLIC	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
PUBLIC	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$_Debug_pointer@$$CBD@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char const >
PUBLIC	??$move@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<char> > &>
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>
PUBLIC	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z		; std::fpos<_Mbstatet>::fpos<_Mbstatet>
PUBLIC	??0?$fpos@U_Mbstatet@@@std@@QAE@U_Mbstatet@@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
PUBLIC	?state@?$fpos@U_Mbstatet@@@std@@QBE?AU_Mbstatet@@XZ ; std::fpos<_Mbstatet>::state
PUBLIC	?seekpos@?$fpos@U_Mbstatet@@@std@@QBE_JXZ	; std::fpos<_Mbstatet>::seekpos
PUBLIC	??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ		; std::fpos<_Mbstatet>::operator __int64
PUBLIC	??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1><>
PUBLIC	??$_Destroy_range@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@PAV?$shared_ptr@VCContact@@@2@@std@@YAXPAV?$shared_ptr@VCContact@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::shared_ptr<CContact> >,std::shared_ptr<CContact> *>
PUBLIC	??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAV?$allocator@D@1@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> >
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$addressof@PAD@std@@YAPAPADAAPAD@Z		; std::addressof<char *>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$_Unfancy@D@std@@YAPADPAD@Z			; std::_Unfancy<char>
PUBLIC	??$_Debug_pointer_if@$$CBD@std@@YAX_NPBDPB_WI@Z	; std::_Debug_pointer_if<char const >
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$swap@PAV_Ref_count_base@std@@X@std@@YAXAAPAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *,void>
PUBLIC	??$swap@PAVCContact@@X@std@@YAXAAPAVCContact@@0@Z ; std::swap<CContact *,void>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$?0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > > &>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$_Umove@PAV?$shared_ptr@VCContact@@@std@@@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEPAV?$shared_ptr@VCContact@@@1@PAV21@00@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Umove<std::shared_ptr<CContact> *>
PUBLIC	??$_Unfancy@$$CBD@std@@YAPBDPBD@Z		; std::_Unfancy<char const >
PUBLIC	?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z ; std::pointer_traits<char *>::pointer_to
PUBLIC	??$?0AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<char> > &>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z ; std::pointer_traits<std::_Container_proxy *>::pointer_to
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$save_override@$$CBVCContact@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVCContact@@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<CContact const >
PUBLIC	?_Getptr@?$_Ref_count_obj@VCCompany@@@std@@QBEPAVCCompany@@XZ ; std::_Ref_count_obj<CCompany>::_Getptr
PUBLIC	?_Destroy@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ ; std::_Ref_count_obj<CCompany>::_Destroy
PUBLIC	?_Delete_this@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ ; std::_Ref_count_obj<CCompany>::_Delete_this
PUBLIC	??1?$_Ref_count_obj@VCCompany@@@std@@UAE@XZ	; std::_Ref_count_obj<CCompany>::~_Ref_count_obj<CCompany>
PUBLIC	??_G?$_Ref_count_obj@VCCompany@@@std@@UAEPAXI@Z	; std::_Ref_count_obj<CCompany>::`scalar deleting destructor'
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
PUBLIC	??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z ; std::_Ref_count_obj<CCompany>::_Ref_count_obj<CCompany><bool>
PUBLIC	??$_Resetp0@VCCompany@@@?$shared_ptr@VCCompany@@@std@@QAEXPAVCCompany@@PAV_Ref_count_base@1@@Z ; std::shared_ptr<CCompany>::_Resetp0<CCompany>
PUBLIC	??$move@AAV?$shared_ptr@VCCompany@@@std@@@std@@YA$$QAV?$shared_ptr@VCCompany@@@0@AAV10@@Z ; std::move<std::shared_ptr<CCompany> &>
PUBLIC	??$?0VCCompany@@@?$_Ptr_base@VCContact@@@std@@QAE@$$QAV?$_Ptr_base@VCCompany@@@1@@Z ; std::_Ptr_base<CContact>::_Ptr_base<CContact><CCompany>
PUBLIC	??$load_override@VCContact@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVCContact@@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<CContact>
PUBLIC	?_Getptr@?$_Ref_count_obj@VCPerson@@@std@@QBEPAVCPerson@@XZ ; std::_Ref_count_obj<CPerson>::_Getptr
PUBLIC	?_Destroy@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ ; std::_Ref_count_obj<CPerson>::_Destroy
PUBLIC	?_Delete_this@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ ; std::_Ref_count_obj<CPerson>::_Delete_this
PUBLIC	??1?$_Ref_count_obj@VCPerson@@@std@@UAE@XZ	; std::_Ref_count_obj<CPerson>::~_Ref_count_obj<CPerson>
PUBLIC	??_G?$_Ref_count_obj@VCPerson@@@std@@UAEPAXI@Z	; std::_Ref_count_obj<CPerson>::`scalar deleting destructor'
PUBLIC	??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z ; std::_Ref_count_obj<CPerson>::_Ref_count_obj<CPerson><bool>
PUBLIC	??$_Resetp0@VCPerson@@@?$shared_ptr@VCPerson@@@std@@QAEXPAVCPerson@@PAV_Ref_count_base@1@@Z ; std::shared_ptr<CPerson>::_Resetp0<CPerson>
PUBLIC	??$move@AAV?$shared_ptr@VCPerson@@@std@@@std@@YA$$QAV?$shared_ptr@VCPerson@@@0@AAV10@@Z ; std::move<std::shared_ptr<CPerson> &>
PUBLIC	??$?0VCPerson@@@?$_Ptr_base@VCContact@@@std@@QAE@$$QAV?$_Ptr_base@VCPerson@@@1@@Z ; std::_Ptr_base<CContact>::_Ptr_base<CContact><CPerson>
PUBLIC	??$forward@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YAA6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZA6AX01@Z@Z ; std::forward<void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
PUBLIC	??$forward@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z ; std::forward<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>
PUBLIC	??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z ; std::make_unique<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??R?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@QBEXPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ; std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator()
PUBLIC	?get_deleter@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEAAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@XZ ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::get_deleter
PUBLIC	?_Myptr@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myptr
PUBLIC	?_Myptr@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEABQAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myptr
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAEAAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAEAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QBEABQAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Get_second
PUBLIC	??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@$$QAV01@@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??1?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??D?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
PUBLIC	?get@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::get
PUBLIC	?release@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::release
PUBLIC	??1?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ; std::_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??1?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ; std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??1?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ ; std::tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??1?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@XZ ; std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??_G?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAEPAXI@Z ; std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`scalar deleting destructor'
PUBLIC	??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z ; std::_Launch<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ ; std::_Ref_count_obj<CPerson>::_Ref_count_obj<CPerson><>
PUBLIC	??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ ; std::_Ref_count_obj<CCompany>::_Ref_count_obj<CCompany><>
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??$move@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::move<std::basic_istream<char,std::char_traits<char> > &>
PUBLIC	??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z ; std::getline<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$_Ptr_move_cat@V?$shared_ptr@VCContact@@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAV?$shared_ptr@VCContact@@@0@0@Z ; std::_Ptr_move_cat<std::shared_ptr<CContact>,std::shared_ptr<CContact> >
PUBLIC	??$_Move_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00U_General_ptr_iterator_tag@0@@Z ; std::_Move_unchecked1<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *>
PUBLIC	??$forward@AAV?$shared_ptr@VCContact@@@std@@@std@@YAAAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::forward<std::shared_ptr<CContact> &>
PUBLIC	??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@AAV31@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> &>
PUBLIC	??$forward@ABV?$shared_ptr@VCContact@@@std@@@std@@YAABV?$shared_ptr@VCContact@@@0@ABV10@@Z ; std::forward<std::shared_ptr<CContact> const &>
PUBLIC	??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@ABV31@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> const &>
PUBLIC	??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@$$QAV31@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >
PUBLIC	??$save_override@$$CBUtracking_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUtracking_type@12@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::tracking_type const >
PUBLIC	??$save_override@$$CBVclass_id_reference_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_reference_type const >
PUBLIC	??$save_override@$$CBVclass_id_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_type@12@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_type const >
PUBLIC	??$save_override@$$CBVobject_reference_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_reference_type@12@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::object_reference_type const >
PUBLIC	??$save_override@$$CBVversion_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVversion_type@12@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::version_type const >
PUBLIC	??$load_override@Utracking_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::tracking_type>
PUBLIC	??$load_override@Vclass_id_optional_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_optional_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::class_id_optional_type>
PUBLIC	??$load_override@Vclass_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::class_id_type>
PUBLIC	??$load_override@Vobject_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::object_id_type>
PUBLIC	??$load_override@Vversion_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::version_type>
PUBLIC	??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >
PUBLIC	??$_Destroy_range1@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@PAV?$shared_ptr@VCContact@@@2@@std@@YAXPAV?$shared_ptr@VCContact@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Destroy_range1<std::allocator<std::shared_ptr<CContact> >,std::shared_ptr<CContact> *>
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$move@AAPAV_Ref_count_base@std@@@std@@YA$$QAPAV_Ref_count_base@0@AAPAV10@@Z ; std::move<std::_Ref_count_base * &>
PUBLIC	??$move@AAPAVCContact@@@std@@YA$$QAPAVCContact@@AAPAV1@@Z ; std::move<CContact * &>
PUBLIC	??$forward@AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > > &>
PUBLIC	??$?0V?$shared_ptr@VCContact@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::shared_ptr<CContact> >
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$_Uninitialized_move@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *,std::allocator<std::shared_ptr<CContact> > >
PUBLIC	??$forward@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<char> > &>
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??$?6V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$save_override@$$CBVobject_id_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVobject_id_type@23@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::object_id_type const >
PUBLIC	??$save_override@$$CBVCContact@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVCContact@@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<CContact const >
PUBLIC	??$load_override@VCContact@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVCContact@@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<CContact>
PUBLIC	??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z ; std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>
PUBLIC	??$forward@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YA$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@AAV10@@Z ; std::forward<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	?_Go@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@UAEXXZ ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Go
PUBLIC	?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXPAV12@@Z ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Run
PUBLIC	??1?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@QAE@XZ ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??$?0V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@QAE@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@1@@Z ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > ><std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_istream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??$move@AAV?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::move<std::shared_ptr<CContact> &>
PUBLIC	??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@AAV21@@Z ; std::allocator<std::shared_ptr<CContact> >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> &>
PUBLIC	??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@ABV21@@Z ; std::allocator<std::shared_ptr<CContact> >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> const &>
PUBLIC	??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@$$QAV21@@Z ; std::allocator<std::shared_ptr<CContact> >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >
PUBLIC	??$save_override@$$CBUtracking_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABUtracking_type@23@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::tracking_type const >
PUBLIC	??$save_override@$$CBVclass_id_reference_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVclass_id_reference_type@23@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_reference_type const >
PUBLIC	??$save_override@$$CBVclass_id_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVclass_id_type@23@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_type const >
PUBLIC	??$save_override@$$CBVobject_reference_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVobject_reference_type@23@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::object_reference_type const >
PUBLIC	??$save_override@$$CBVversion_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVversion_type@23@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::version_type const >
PUBLIC	??$load_override@Utracking_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::tracking_type>
PUBLIC	??$load_override@Vclass_id_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::class_id_type>
PUBLIC	??$load_override@Vobject_id_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::object_id_type>
PUBLIC	??$load_override@Vversion_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@12@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::version_type>
PUBLIC	??$destroy@V?$shared_ptr@VCContact@@@std@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::destroy<std::shared_ptr<CContact> >
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$_Unchecked@PAV?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unchecked<std::shared_ptr<CContact> *>
PUBLIC	??$_Uninitialized_move_al_unchecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z ; std::_Uninitialized_move_al_unchecked<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *,std::allocator<std::shared_ptr<CContact> > >
PUBLIC	??$_Rechecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAAAPAV?$shared_ptr@VCContact@@@0@AAPAV10@PAV10@@Z ; std::_Rechecked<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *>
PUBLIC	??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
PUBLIC	??$save@Vtext_oarchive@archive@boost@@$$CBVobject_id_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVobject_id_type@01@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::archive::object_id_type const >
PUBLIC	??$?0PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *>
PUBLIC	??$_Execute@$0A@$00$01@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@U?$integer_sequence@I$0A@$00$01@1@@Z ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Execute<0,1,2>
PUBLIC	??$forward@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@0@AAU10@@Z ; std::forward<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$?0PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@@Z ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$save@Vtext_oarchive@archive@boost@@$$CBVCContact@@@archive@boost@@YAXAAVtext_oarchive@01@ABVCContact@@@Z ; boost::archive::save<boost::archive::text_oarchive,CContact const >
PUBLIC	??$load_override@VCContact@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVCContact@@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<CContact>
PUBLIC	??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::_Exact_args_t,std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>
PUBLIC	??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@?$_Tuple_val@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@Z ; std::_Tuple_val<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>::_Tuple_val<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)><void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
PUBLIC	??$save@Vtext_oarchive@archive@boost@@$$CBUtracking_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABUtracking_type@01@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::archive::tracking_type const >
PUBLIC	??$save@Vtext_oarchive@archive@boost@@$$CBVclass_id_reference_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVclass_id_reference_type@01@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::archive::class_id_reference_type const >
PUBLIC	??$save@Vtext_oarchive@archive@boost@@$$CBVclass_id_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVclass_id_type@01@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::archive::class_id_type const >
PUBLIC	??$save@Vtext_oarchive@archive@boost@@$$CBVobject_reference_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVobject_reference_type@01@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::archive::object_reference_type const >
PUBLIC	??$save@Vtext_oarchive@archive@boost@@$$CBVversion_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVversion_type@01@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::archive::version_type const >
PUBLIC	??$load_override@Utracking_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAUtracking_type@23@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::tracking_type>
PUBLIC	??$load_override@Vclass_id_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVclass_id_type@23@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::class_id_type>
PUBLIC	??$load_override@Vobject_id_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVobject_id_type@23@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::object_id_type>
PUBLIC	??$load_override@Vversion_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVversion_type@23@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::version_type>
PUBLIC	??$destroy@V?$shared_ptr@VCContact@@@std@@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::destroy<std::shared_ptr<CContact> >
PUBLIC	??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked1<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *,std::allocator<std::shared_ptr<CContact> > >
PUBLIC	??$?0U?$integral_constant@_N$00@std@@@_Any_tag@std@@QAE@$$QAU?$integral_constant@_N$00@1@@Z ; std::_Any_tag::_Any_tag<std::integral_constant<bool,1> >
PUBLIC	??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
PUBLIC	??$invoke@Vobject_id_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVobject_id_type@23@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::object_id_type>
PUBLIC	??$?0AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1><std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>
PUBLIC	??$get@$0A@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z ; std::get<0,void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$move@AAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YA$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAP6AX01@Z@Z ; std::move<void (__cdecl*&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
PUBLIC	??$get@$00P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z ; std::get<1,void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$move@AAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z ; std::move<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > * &>
PUBLIC	??$get@$01P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z ; std::get<2,void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??$forward@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YA$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAP6AX01@Z@Z ; std::forward<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
PUBLIC	??$_Call@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@_Invoker_functor@std@@SAX$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@$$QAV31@@Z ; std::_Invoker_functor::_Call<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$invoke@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAX$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV10@$$QAV20@@Z ; std::invoke<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$?0U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1><std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>
PUBLIC	??$invoke@VCContact@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVCContact@@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<CContact>
PUBLIC	??$load@Vtext_iarchive@archive@boost@@VCContact@@@archive@boost@@YAXAAVtext_iarchive@01@AAVCContact@@@Z ; boost::archive::load<boost::archive::text_iarchive,CContact>
PUBLIC	??$?0U_Exact_args_t@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$V$0A@@?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@U_Exact_args_t@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::_Exact_args_t,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>
PUBLIC	??$?0PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@?$_Tuple_val@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@@Z ; std::_Tuple_val<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>::_Tuple_val<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *><std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>
PUBLIC	??$invoke@Utracking_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABUtracking_type@23@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::tracking_type>
PUBLIC	??$invoke@Vclass_id_reference_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVclass_id_reference_type@23@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::class_id_reference_type>
PUBLIC	??$invoke@Vclass_id_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVclass_id_type@23@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::class_id_type>
PUBLIC	??$invoke@Vobject_reference_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVobject_reference_type@23@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::object_reference_type>
PUBLIC	??$invoke@Vversion_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVversion_type@23@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::version_type>
PUBLIC	??$load@Vtext_iarchive@archive@boost@@Utracking_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAUtracking_type@01@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::archive::tracking_type>
PUBLIC	??$load@Vtext_iarchive@archive@boost@@Vclass_id_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVclass_id_type@01@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::archive::class_id_type>
PUBLIC	??$load@Vtext_iarchive@archive@boost@@Vobject_id_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVobject_id_type@01@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::archive::object_id_type>
PUBLIC	??$load@Vtext_iarchive@archive@boost@@Vversion_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVversion_type@01@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::archive::version_type>
PUBLIC	??$destroy@V?$shared_ptr@VCContact@@@std@@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@@Z ; std::allocator<std::shared_ptr<CContact> >::destroy<std::shared_ptr<CContact> >
PUBLIC	??$save@Vtext_oarchive@archive@boost@@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@archive@boost@@YAXAAVtext_oarchive@01@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::save<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
PUBLIC	??$check_object_versioning@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::object_id_type>
PUBLIC	??$invoke@Vobject_id_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVobject_id_type@34@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::object_id_type>
PUBLIC	??$forward@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@YAAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@AAPAV10@@Z ; std::forward<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>
PUBLIC	??$check_object_versioning@VCContact@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<CContact>
PUBLIC	??$invoke@VCContact@@@save_standard@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVCContact@@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_standard::invoke<CContact>
PUBLIC	??$check_const_loading@VCContact@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<CContact>
PUBLIC	??$invoke@VCContact@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVCContact@@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<CContact>
PUBLIC	??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>
PUBLIC	??$?0AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??$check_object_versioning@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::tracking_type>
PUBLIC	??$invoke@Utracking_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABUtracking_type@34@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::tracking_type>
PUBLIC	??$check_object_versioning@Vclass_id_reference_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::class_id_reference_type>
PUBLIC	??$invoke@Vclass_id_reference_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVclass_id_reference_type@34@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::class_id_reference_type>
PUBLIC	??$check_object_versioning@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::class_id_type>
PUBLIC	??$invoke@Vclass_id_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVclass_id_type@34@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::class_id_type>
PUBLIC	??$check_object_versioning@Vobject_reference_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::object_reference_type>
PUBLIC	??$invoke@Vobject_reference_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVobject_reference_type@34@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::object_reference_type>
PUBLIC	??$check_object_versioning@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::version_type>
PUBLIC	??$invoke@Vversion_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVversion_type@34@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::version_type>
PUBLIC	??$check_const_loading@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::archive::tracking_type>
PUBLIC	??$invoke@Utracking_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAUtracking_type@23@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::tracking_type>
PUBLIC	??$check_const_loading@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::archive::class_id_type>
PUBLIC	??$invoke@Vclass_id_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVclass_id_type@23@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::class_id_type>
PUBLIC	??$check_const_loading@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::archive::object_id_type>
PUBLIC	??$invoke@Vobject_id_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVobject_id_type@23@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::object_id_type>
PUBLIC	??$check_const_loading@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::archive::version_type>
PUBLIC	??$invoke@Vversion_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVversion_type@23@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::version_type>
PUBLIC	??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$save_primitive@Vtext_oarchive@archive@boost@@Vobject_id_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVobject_id_type@12@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::object_id_type>
PUBLIC	?use@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@@Z ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::use
PUBLIC	?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance
PUBLIC	?get_const_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@SAABV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_const_instance
PUBLIC	??0?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@QAE@XZ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::oserializer<boost::archive::text_oarchive,CContact>
PUBLIC	?save_object_data@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBEXAAVbasic_oarchive@234@PBX@Z ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::save_object_data
PUBLIC	?class_info@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::class_info
PUBLIC	?tracking@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NI@Z ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::tracking
PUBLIC	?version@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE?AVversion_type@34@XZ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::version
PUBLIC	?is_polymorphic@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::is_polymorphic
PUBLIC	??1?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAE@XZ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::~oserializer<boost::archive::text_oarchive,CContact>
PUBLIC	??_G?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAEPAXI@Z ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`scalar deleting destructor'
PUBLIC	??$check_object_level@VCContact@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<CContact>
PUBLIC	??$invoke@VCContact@@@load_standard@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABVCContact@@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_standard::invoke<CContact>
PUBLIC	??$save_primitive@Vtext_oarchive@archive@boost@@Utracking_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABUtracking_type@12@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::tracking_type>
PUBLIC	??$save_primitive@Vtext_oarchive@archive@boost@@Vclass_id_reference_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVclass_id_reference_type@12@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::class_id_reference_type>
PUBLIC	??$save_primitive@Vtext_oarchive@archive@boost@@Vclass_id_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVclass_id_type@12@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::class_id_type>
PUBLIC	??$save_primitive@Vtext_oarchive@archive@boost@@Vobject_reference_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVobject_reference_type@12@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::object_reference_type>
PUBLIC	??$save_primitive@Vtext_oarchive@archive@boost@@Vversion_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVversion_type@12@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::version_type>
PUBLIC	??$check_object_level@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::archive::tracking_type>
PUBLIC	??$invoke@Utracking_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAUtracking_type@34@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::tracking_type>
PUBLIC	??$check_object_level@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::archive::class_id_type>
PUBLIC	??$invoke@Vclass_id_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVclass_id_type@34@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::class_id_type>
PUBLIC	??$check_object_level@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::archive::object_id_type>
PUBLIC	??$invoke@Vobject_id_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVobject_id_type@34@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::object_id_type>
PUBLIC	??$check_object_level@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::archive::version_type>
PUBLIC	??$invoke@Vversion_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVversion_type@34@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::version_type>
PUBLIC	??$check_object_versioning@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$save@Vobject_id_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_id_type@12@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::object_id_type>
PUBLIC	??1?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::~singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >
PUBLIC	??0?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >
PUBLIC	??_G?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`scalar deleting destructor'
PUBLIC	??__Ft@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ@YAXXZ ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance'::`2'::`dynamic atexit destructor for 't''
PUBLIC	?use@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAXPBV?$extended_type_info_typeid@VCContact@@@23@@Z ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::use
PUBLIC	?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance
PUBLIC	?get_const_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@SAABV?$extended_type_info_typeid@VCContact@@@23@XZ ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_const_instance
PUBLIC	??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ ; boost::serialization::extended_type_info_typeid<CContact>::extended_type_info_typeid<CContact>
PUBLIC	??1?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAE@XZ ; boost::serialization::extended_type_info_typeid<CContact>::~extended_type_info_typeid<CContact>
PUBLIC	?construct@?$extended_type_info_typeid@VCContact@@@serialization@boost@@UBAPAXIZZ ; boost::serialization::extended_type_info_typeid<CContact>::construct
PUBLIC	?destroy@?$extended_type_info_typeid@VCContact@@@serialization@boost@@UBEXQBX@Z ; boost::serialization::extended_type_info_typeid<CContact>::destroy
PUBLIC	??_G?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAEPAXI@Z ; boost::serialization::extended_type_info_typeid<CContact>::`scalar deleting destructor'
PUBLIC	??$destroy@VCContact@@@access@serialization@boost@@SAXPBVCContact@@@Z ; boost::serialization::access::destroy<CContact>
PUBLIC	??$__vcrt_va_start_verify_argument_type@I@@YAXXZ ; __vcrt_va_start_verify_argument_type<unsigned int>
PUBLIC	??$factory@VCContact@@$0A@@serialization@boost@@YAPAVCContact@@PAD@Z ; boost::serialization::factory<CContact,0>
PUBLIC	??$factory@VCContact@@$00@serialization@boost@@YAPAVCContact@@PAD@Z ; boost::serialization::factory<CContact,1>
PUBLIC	??$factory@VCContact@@$01@serialization@boost@@YAPAVCContact@@PAD@Z ; boost::serialization::factory<CContact,2>
PUBLIC	??$factory@VCContact@@$02@serialization@boost@@YAPAVCContact@@PAD@Z ; boost::serialization::factory<CContact,3>
PUBLIC	??$factory@VCContact@@$03@serialization@boost@@YAPAVCContact@@PAD@Z ; boost::serialization::factory<CContact,4>
PUBLIC	??1?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::~singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >
PUBLIC	??0?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@QAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >
PUBLIC	??_G?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@UAEPAXI@Z ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`scalar deleting destructor'
PUBLIC	??__Ft@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ@YAXXZ ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance'::`2'::`dynamic atexit destructor for 't''
PUBLIC	??$guid@VCContact@@@serialization@boost@@YAPBDXZ ; boost::serialization::guid<CContact>
PUBLIC	??$smart_cast_reference@AAVtext_oarchive@archive@boost@@Vbasic_oarchive@detail@23@@serialization@boost@@YAAAVtext_oarchive@archive@1@AAVbasic_oarchive@detail@31@@Z ; boost::serialization::smart_cast_reference<boost::archive::text_oarchive &,boost::archive::detail::basic_oarchive>
PUBLIC	??$serialize_adl@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z ; boost::serialization::serialize_adl<boost::archive::text_oarchive,CContact>
PUBLIC	?use@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@@Z ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::use
PUBLIC	?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance
PUBLIC	?get_const_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@SAABV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_const_instance
PUBLIC	?destroy@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@EBEXPAX@Z ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::destroy
PUBLIC	??0?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@IAE@XZ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::iserializer<boost::archive::text_iarchive,CContact>
PUBLIC	?load_object_data@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBEXAAVbasic_iarchive@234@PAXI@Z ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::load_object_data
PUBLIC	?class_info@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::class_info
PUBLIC	?tracking@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NI@Z ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::tracking
PUBLIC	?version@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE?AVversion_type@34@XZ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::version
PUBLIC	?is_polymorphic@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::is_polymorphic
PUBLIC	??1?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAE@XZ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::~iserializer<boost::archive::text_iarchive,CContact>
PUBLIC	??_G?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAEPAXI@Z ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`scalar deleting destructor'
PUBLIC	??$save@Utracking_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUtracking_type@12@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::tracking_type>
PUBLIC	??$save@Vclass_id_reference_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::class_id_reference_type>
PUBLIC	??$save@Vclass_id_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_type@12@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::class_id_type>
PUBLIC	??$save@Vobject_reference_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_reference_type@12@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::object_reference_type>
PUBLIC	??$load_primitive@Vtext_iarchive@archive@boost@@Utracking_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAUtracking_type@12@@Z ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::tracking_type>
PUBLIC	??$load_primitive@Vtext_iarchive@archive@boost@@Vclass_id_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVclass_id_type@12@@Z ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::class_id_type>
PUBLIC	??$load_primitive@Vtext_iarchive@archive@boost@@Vobject_id_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVobject_id_type@12@@Z ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::object_id_type>
PUBLIC	??$load_primitive@Vtext_iarchive@archive@boost@@Vversion_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVversion_type@12@@Z ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::version_type>
PUBLIC	??$save_primitive@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::object_id_type>
PUBLIC	?call@?$guid_impl@VCContact@@@ext@serialization@boost@@SAPBDXZ ; boost::serialization::ext::guid_impl<CContact>::call
PUBLIC	??$save@I@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABI@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<unsigned int>
PUBLIC	??1?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::~singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >
PUBLIC	??0?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >
PUBLIC	??_G?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`scalar deleting destructor'
PUBLIC	??__Ft@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ@YAXXZ ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance'::`2'::`dynamic atexit destructor for 't''
PUBLIC	??$cast@Vbasic_oarchive@detail@archive@boost@@@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@3@AAVbasic_oarchive@detail@53@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::cast<boost::archive::detail::basic_oarchive>
PUBLIC	??$serialize@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z ; boost::serialization::serialize<boost::archive::text_oarchive,CContact>
PUBLIC	??$smart_cast_reference@AAVtext_iarchive@archive@boost@@Vbasic_iarchive@detail@23@@serialization@boost@@YAAAVtext_iarchive@archive@1@AAVbasic_iarchive@detail@31@@Z ; boost::serialization::smart_cast_reference<boost::archive::text_iarchive &,boost::archive::detail::basic_iarchive>
PUBLIC	??$serialize_adl@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z ; boost::serialization::serialize_adl<boost::archive::text_iarchive,CContact>
PUBLIC	??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::tracking_type>
PUBLIC	??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::class_id_reference_type>
PUBLIC	??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::class_id_type>
PUBLIC	??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::object_reference_type>
PUBLIC	??$load@Utracking_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::archive::tracking_type>
PUBLIC	??$load@Vclass_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::archive::class_id_type>
PUBLIC	??$load@Vobject_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::archive::object_id_type>
PUBLIC	??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::object_id_type>
PUBLIC	??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<unsigned int>
PUBLIC	??$load@I@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAI@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<unsigned int>
PUBLIC	??$cast@Vbasic_oarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@4@AAVbasic_oarchive@detail@64@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::polymorphic::cast<boost::archive::detail::basic_oarchive>
PUBLIC	??$serialize@Vtext_oarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@AAVCContact@@I@Z ; boost::serialization::access::serialize<boost::archive::text_oarchive,CContact>
PUBLIC	??$cast@Vbasic_iarchive@detail@archive@boost@@@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@3@AAVbasic_iarchive@detail@53@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::cast<boost::archive::detail::basic_iarchive>
PUBLIC	??$serialize@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z ; boost::serialization::serialize<boost::archive::text_iarchive,CContact>
PUBLIC	??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::tracking_type>
PUBLIC	??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::class_id_reference_type>
PUBLIC	??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::class_id_type>
PUBLIC	??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::object_reference_type>
PUBLIC	??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::archive::tracking_type>
PUBLIC	??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::archive::class_id_type>
PUBLIC	??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::archive::object_id_type>
PUBLIC	??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
PUBLIC	??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<unsigned int>
PUBLIC	??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<unsigned int>
PUBLIC	??$cast@Vbasic_oarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@5@AAVbasic_oarchive@detail@75@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::polymorphic::cross::cast<boost::archive::detail::basic_oarchive>
PUBLIC	??$serialize@Vtext_oarchive@archive@boost@@@CContact@@IAEXAAVtext_oarchive@archive@boost@@I@Z ; CContact::serialize<boost::archive::text_oarchive>
PUBLIC	??$cast@Vbasic_iarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@4@AAVbasic_iarchive@detail@64@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::polymorphic::cast<boost::archive::detail::basic_iarchive>
PUBLIC	??$serialize@Vtext_iarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAVCContact@@I@Z ; boost::serialization::access::serialize<boost::archive::text_iarchive,CContact>
PUBLIC	??$split_member@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z ; boost::serialization::split_member<boost::archive::text_oarchive,CContact>
PUBLIC	??$cast@Vbasic_iarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@5@AAVbasic_iarchive@detail@75@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::polymorphic::cross::cast<boost::archive::detail::basic_iarchive>
PUBLIC	??$serialize@Vtext_iarchive@archive@boost@@@CContact@@IAEXAAVtext_iarchive@archive@boost@@I@Z ; CContact::serialize<boost::archive::text_iarchive>
PUBLIC	?invoke@?$member_saver@Vtext_oarchive@archive@boost@@VCContact@@@detail@serialization@boost@@SAXAAVtext_oarchive@archive@4@ABVCContact@@I@Z ; boost::serialization::detail::member_saver<boost::archive::text_oarchive,CContact>::invoke
PUBLIC	??$split_member@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z ; boost::serialization::split_member<boost::archive::text_iarchive,CContact>
PUBLIC	??$member_save@Vtext_oarchive@archive@boost@@$$CBVCContact@@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@ABVCContact@@I@Z ; boost::serialization::access::member_save<boost::archive::text_oarchive,CContact const >
PUBLIC	?invoke@?$member_loader@Vtext_iarchive@archive@boost@@VCContact@@@detail@serialization@boost@@SAXAAVtext_iarchive@archive@4@AAVCContact@@I@Z ; boost::serialization::detail::member_loader<boost::archive::text_iarchive,CContact>::invoke
PUBLIC	??$member_load@Vtext_iarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAVCContact@@I@Z ; boost::serialization::access::member_load<boost::archive::text_iarchive,CContact>
PUBLIC	??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z ; std::basic_ifstream<char,std::char_traits<char> >::`vector deleting destructor'
PUBLIC	??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z ; std::basic_ofstream<char,std::char_traits<char> >::`vector deleting destructor'
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception?$AA@	; `string'
PUBLIC	??_C@_1JA@MHADJNIL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA	; `std::_Allocate'::`1'::__LINE__Var
PUBLIC	??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@ ; `string'
PUBLIC	??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@	; `string'
PUBLIC	??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_09GLJCAGLP@_Ptr?5?$CB?$DN?50?$AA@		; `string'
PUBLIC	??_C@_1CC@GKJLLHIM@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA ; `std::_Deallocate'::`1'::__LINE__Var
PUBLIC	??_C@_0BN@HMCJOMKN@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5_Sz?$AA@ ; `string'
PUBLIC	??_C@_1EI@MLOBABC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AA_?$AAS?$AAz?$AA?$CC?$AA?5?$AA?$CG@ ; `string'
PUBLIC	??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@ ; `string'
PUBLIC	??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@ ; `string'
PUBLIC	??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@ ; `string'
PUBLIC	??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@ ; `string'
PUBLIC	??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@ ; `string'
PUBLIC	??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ ; `string'
PUBLIC	??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@ ; `string'
PUBLIC	??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@ ; `string'
PUBLIC	??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@ ; `string'
PUBLIC	?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
PUBLIC	??_7bad_cast@std@@6B@				; std::bad_cast::`vftable'
PUBLIC	??_C@_08EPJLHIJG@bad?5cast?$AA@			; `string'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_7_Ref_count_base@std@@6B@			; std::_Ref_count_base::`vftable'
PUBLIC	??_7_Pad@std@@6B@				; std::_Pad::`vftable'
PUBLIC	??_C@_1IO@DBEBMPEE@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ ; `string'
PUBLIC	??_C@_1GE@MNCNLAH@?$AAt?$AA_?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAb?$AAo?$AAo?$AAs?$AAt?$AA?3?$AA?3?$AAi?$AAn?$AAt?$AAe?$AAg?$AAe?$AAr?$AA_?$AAt?$AAr?$AAa?$AAi?$AAt?$AAs?$AA?$DM?$AAb?$AAa?$AAs?$AAe@ ; `string'
PUBLIC	??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ ; `string'
PUBLIC	??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ ; `string'
PUBLIC	??_7?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@6B@ ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`vftable'
PUBLIC	??_7?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@6B@ ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`vftable'
PUBLIC	??_7text_iarchive@archive@boost@@6B@		; boost::archive::text_iarchive::`vftable'
PUBLIC	??_7?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@6B@ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`vftable'
PUBLIC	??_7?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@6B@ ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`vftable'
PUBLIC	??_7text_oarchive@archive@boost@@6B@		; boost::archive::text_oarchive::`vftable'
PUBLIC	??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`vftable'
PUBLIC	??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ofstream<char,std::char_traits<char> >::`vftable'
PUBLIC	??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@ ; std::basic_ofstream<char,std::char_traits<char> >::`vbtable'
PUBLIC	??_C@_0O@MIMFNFBN@Companies?4txt?$AA@		; `string'
PUBLIC	??_C@_0L@GLLABICK@People?4txt?$AA@		; `string'
PUBLIC	??_C@_07EEOOECP@CPerson?$AA@			; `string'
PUBLIC	??_C@_08FGJDGFCJ@CCompany?$AA@			; `string'
PUBLIC	??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ifstream<char,std::char_traits<char> >::`vftable'
PUBLIC	??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@ ; std::basic_ifstream<char,std::char_traits<char> >::`vbtable'
PUBLIC	??_C@_0M@IKMOJNDM@contactList?$AA@		; `string'
PUBLIC	??_C@_0CG@MNNPHAFE@You?5don?8t?5have?5any?5contacts?5to?5r@ ; `string'
PUBLIC	??_C@_05PDJBBECF@pause?$AA@			; `string'
PUBLIC	??_C@_0FJ@GBCKFMI@Enter?5the?5name?5of?5the?5person?5or?5@ ; `string'
PUBLIC	??_C@_0DA@FLPABHKE@That?5contact?5was?5not?5found?5in?5yo@ ; `string'
PUBLIC	??_C@_0CP@GFNLJBBP@The?5contact?5was?5removed?5from?5you@ ; `string'
PUBLIC	??_C@_0CE@GGNPEDJA@You?5don?8t?5have?5any?5contacts?5to?5e@ ; `string'
PUBLIC	??_C@_0EB@GEBCPOHK@Enter?5the?5name?5of?5the?5person?5or?5@ ; `string'
PUBLIC	??_C@_03LCPHGAHP@cls?$AA@			; `string'
PUBLIC	??_C@_0DP@KOHCCCHA@Enter?5the?5first?5name?0?5last?5name?0@ ; `string'
PUBLIC	??_C@_0BA@KBDJCHMC@Found?5contacts?3?$AA@	; `string'
PUBLIC	??_C@_04OHJIHAFH@None?$AA@			; `string'
PUBLIC	??_C@_0CH@MIDKGGF@You?5don?8t?5have?5any?5contacts?5to?5d@ ; `string'
PUBLIC	??_C@_08HDBDJBNL@Goodbye?$CB?$AA@		; `string'
PUBLIC	??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@ ; `string'
PUBLIC	??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ ; `string'
PUBLIC	??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ ; `string'
PUBLIC	??_C@_1BAM@EPPOFCB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ ; `string'
PUBLIC	??_C@_1BAK@LJFLLKPP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@ ; `string'
PUBLIC	??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BAE@OFDFOOPB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
PUBLIC	??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@ ; `string'
PUBLIC	??_C@_1BAM@HBINONGC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_1EG@CNCHLAOB@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ ; `string'
PUBLIC	??_C@_1MG@GDGHDIKC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	__TI2?AVbad_cast@std@@
PUBLIC	__CTA2?AVbad_cast@std@@
PUBLIC	??_R0?AVbad_cast@std@@@8			; std::bad_cast `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
PUBLIC	??_7?$_Ref_count_obj@VCCompany@@@std@@6B@	; std::_Ref_count_obj<CCompany>::`vftable'
PUBLIC	??_7?$_Ref_count_obj@VCPerson@@@std@@6B@	; std::_Ref_count_obj<CPerson>::`vftable'
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::codecvt<char,char,_Mbstatet> >::_Psave
PUBLIC	??_7?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@6B@ ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`vftable'
PUBLIC	?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@A ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::instance
PUBLIC	??_7?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`vftable'
PUBLIC	?m_is_destroyed@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@2_NA ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::m_is_destroyed
PUBLIC	??_7?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`vftable'
PUBLIC	?t@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@634@A ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance'::`2'::t
PUBLIC	?$TSS0@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_oarchive::erializer,CContact>
PUBLIC	??_C@_1JC@GIHFICPP@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ ; `string'
PUBLIC	??_C@_1GC@KKEDEOBO@?$AA?$CB?$AA?5?$AAd?$AAe?$AAt?$AAa?$AAi?$AAl?$AA?3?$AA?3?$AAs?$AAi?$AAn?$AAg?$AAl?$AAe?$AAt?$AAo?$AAn?$AA_?$AAw?$AAr?$AAa?$AAp?$AAp?$AAe?$AAr?$AA?$DM?$AA?5?$AAT?$AA?5?$AA?$DO@ ; `string'
PUBLIC	?instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@VCContact@@@23@A ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::instance
PUBLIC	??_7?$extended_type_info_typeid@VCContact@@@serialization@boost@@6B@ ; boost::serialization::extended_type_info_typeid<CContact>::`vftable'
PUBLIC	??_C@_1LC@ILBAKICL@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ ; `string'
PUBLIC	??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@ ; `string'
PUBLIC	?m_is_destroyed@?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@2_NA ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::m_is_destroyed
PUBLIC	??_7?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`vftable'
PUBLIC	?t@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4V?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@34@A ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance'::`2'::t
PUBLIC	?$TSS0@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::et_instance,signed char,VCContact::tended_type_info_typeid>
PUBLIC	??_R0?AVCContact@@@8				; CContact `RTTI Type Descriptor'
PUBLIC	?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@A ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::instance
PUBLIC	??_7?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`vftable'
PUBLIC	??_C@_1IO@PLLJMNBK@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ ; `string'
PUBLIC	?m_is_destroyed@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@2_NA ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::m_is_destroyed
PUBLIC	??_7?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`vftable'
PUBLIC	?t@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@634@A ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance'::`2'::t
PUBLIC	?$TSS0@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_iarchive::erializer,CContact>
PUBLIC	__TI2?AVarchive_exception@archive@boost@@
PUBLIC	__CTA2?AVarchive_exception@archive@boost@@
PUBLIC	??_R0?AVarchive_exception@archive@boost@@@8	; boost::archive::archive_exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVarchive_exception@archive@boost@@@8??0archive_exception@archive@boost@@QAE@ABV012@@Z152
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12004
PUBLIC	??_R0?AVbasic_oarchive@detail@archive@boost@@@8	; boost::archive::detail::basic_oarchive `RTTI Type Descriptor'
PUBLIC	??_R0?AVtext_oarchive@archive@boost@@@8		; boost::archive::text_oarchive `RTTI Type Descriptor'
PUBLIC	??_R0?AVbasic_iarchive@detail@archive@boost@@@8	; boost::archive::detail::basic_iarchive `RTTI Type Descriptor'
PUBLIC	??_R0?AVtext_iarchive@archive@boost@@@8		; boost::archive::text_iarchive `RTTI Type Descriptor'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_filebuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ifstream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVios_base@std@@@8			; std::ios_base `RTTI Type Descriptor'
PUBLIC	??_R3ios_base@std@@8				; std::ios_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ios_base@std@@8				; std::ios_base::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AV?$_Iosb@H@std@@@8			; std::_Iosb<int> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@A@3EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
PUBLIC	??_R17A@3EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
PUBLIC	??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ofstream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R4bad_cast@std@@6B@				; std::bad_cast::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_cast@std@@8				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_cast@std@@8				; std::bad_cast::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_cast@std@@8			; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Ref_count_base@std@@6B@			; std::_Ref_count_base::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Ref_count_base@std@@@8			; std::_Ref_count_base `RTTI Type Descriptor'
PUBLIC	??_R3_Ref_count_base@std@@8			; std::_Ref_count_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Ref_count_base@std@@8			; std::_Ref_count_base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Ref_count_base@std@@8		; std::_Ref_count_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Pad@std@@6B@				; std::_Pad::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Pad@std@@@8				; std::_Pad `RTTI Type Descriptor'
PUBLIC	??_R3_Pad@std@@8				; std::_Pad::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Pad@std@@8				; std::_Pad::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Pad@std@@8			; std::_Pad::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EN@noncopyable@noncopyable_@boost@@8	; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (4,-1,0,77)'
PUBLIC	??_R0?AVnoncopyable@noncopyable_@boost@@@8	; boost::noncopyable_::noncopyable `RTTI Type Descriptor'
PUBLIC	??_R3noncopyable@noncopyable_@boost@@8		; boost::noncopyable_::noncopyable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2noncopyable@noncopyable_@boost@@8		; boost::noncopyable_::noncopyable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@noncopyable@noncopyable_@boost@@8	; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4text_iarchive@archive@boost@@6B@		; boost::archive::text_iarchive::`RTTI Complete Object Locator'
PUBLIC	??_R3text_iarchive@archive@boost@@8		; boost::archive::text_iarchive::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2text_iarchive@archive@boost@@8		; boost::archive::text_iarchive::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@text_iarchive@archive@boost@@8	; boost::archive::text_iarchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8 ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@@8 ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive> `RTTI Type Descriptor'
PUBLIC	??_R3?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8 ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8 ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`RTTI Base Class Array'
PUBLIC	??_R1BI@?0A@EA@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (24,-1,0,64)'
PUBLIC	??_R0?AV?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@@8 ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8 ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@@8 ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive> `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8 ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8 ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@@8 ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive> `RTTI Type Descriptor'
PUBLIC	??_R3?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@basic_iarchive@detail@archive@boost@@8 ; boost::archive::detail::basic_iarchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3basic_iarchive@detail@archive@boost@@8	; boost::archive::detail::basic_iarchive::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2basic_iarchive@detail@archive@boost@@8	; boost::archive::detail::basic_iarchive::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@helper_collection@detail@archive@boost@@8 ; boost::archive::detail::helper_collection::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVhelper_collection@detail@archive@boost@@@8 ; boost::archive::detail::helper_collection `RTTI Type Descriptor'
PUBLIC	??_R3helper_collection@detail@archive@boost@@8	; boost::archive::detail::helper_collection::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2helper_collection@detail@archive@boost@@8	; boost::archive::detail::helper_collection::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@helper_collection@detail@archive@boost@@8 ; boost::archive::detail::helper_collection::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BI@?0A@EA@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Descriptor at (24,-1,0,64)'
PUBLIC	??_R0?AV?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@@8 ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive> `RTTI Type Descriptor'
PUBLIC	??_R3?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@6B@ ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@6B@ ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`RTTI Complete Object Locator'
PUBLIC	??_R4text_oarchive@archive@boost@@6B@		; boost::archive::text_oarchive::`RTTI Complete Object Locator'
PUBLIC	??_R3text_oarchive@archive@boost@@8		; boost::archive::text_oarchive::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2text_oarchive@archive@boost@@8		; boost::archive::text_oarchive::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@text_oarchive@archive@boost@@8	; boost::archive::text_oarchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8 ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@@8 ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive> `RTTI Type Descriptor'
PUBLIC	??_R3?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8 ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8 ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`RTTI Base Class Array'
PUBLIC	??_R1CA@?0A@EA@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (32,-1,0,64)'
PUBLIC	??_R0?AV?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@@8 ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8 ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@@8 ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive> `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8 ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8 ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@@8 ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive> `RTTI Type Descriptor'
PUBLIC	??_R3?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@basic_oarchive@detail@archive@boost@@8 ; boost::archive::detail::basic_oarchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3basic_oarchive@detail@archive@boost@@8	; boost::archive::detail::basic_oarchive::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2basic_oarchive@detail@archive@boost@@8	; boost::archive::detail::basic_oarchive::`RTTI Base Class Array'
PUBLIC	??_R1BI@?0A@EA@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Descriptor at (24,-1,0,64)'
PUBLIC	??_R0?AV?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@@8 ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive> `RTTI Type Descriptor'
PUBLIC	??_R3?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@6B@ ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@6B@ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$_Ref_count_obj@VCCompany@@@std@@6B@	; std::_Ref_count_obj<CCompany>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$_Ref_count_obj@VCCompany@@@std@@@8	; std::_Ref_count_obj<CCompany> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Ref_count_obj@VCCompany@@@std@@8	; std::_Ref_count_obj<CCompany>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Ref_count_obj@VCCompany@@@std@@8	; std::_Ref_count_obj<CCompany>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Ref_count_obj@VCCompany@@@std@@8 ; std::_Ref_count_obj<CCompany>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$_Ref_count_obj@VCPerson@@@std@@6B@	; std::_Ref_count_obj<CPerson>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$_Ref_count_obj@VCPerson@@@std@@@8	; std::_Ref_count_obj<CPerson> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Ref_count_obj@VCPerson@@@std@@8		; std::_Ref_count_obj<CPerson>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Ref_count_obj@VCPerson@@@std@@8		; std::_Ref_count_obj<CPerson>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Ref_count_obj@VCPerson@@@std@@8 ; std::_Ref_count_obj<CPerson>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@6B@ ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@@8 ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > `RTTI Type Descriptor'
PUBLIC	??_R3?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8 ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8 ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8 ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@8 ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> `RTTI Type Descriptor'
PUBLIC	??_R3?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@basic_oserializer@detail@archive@boost@@8 ; boost::archive::detail::basic_oserializer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVbasic_oserializer@detail@archive@boost@@@8 ; boost::archive::detail::basic_oserializer `RTTI Type Descriptor'
PUBLIC	??_R3basic_oserializer@detail@archive@boost@@8	; boost::archive::detail::basic_oserializer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2basic_oserializer@detail@archive@boost@@8	; boost::archive::detail::basic_oserializer::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@basic_serializer@detail@archive@boost@@8 ; boost::archive::detail::basic_serializer::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVbasic_serializer@detail@archive@boost@@@8 ; boost::archive::detail::basic_serializer `RTTI Type Descriptor'
PUBLIC	??_R3basic_serializer@detail@archive@boost@@8	; boost::archive::detail::basic_serializer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2basic_serializer@detail@archive@boost@@8	; boost::archive::detail::basic_serializer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@basic_serializer@detail@archive@boost@@8 ; boost::archive::detail::basic_serializer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EN@noncopyable@noncopyable_@boost@@8	; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (0,-1,0,77)'
PUBLIC	??_R4?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> > `RTTI Type Descriptor'
PUBLIC	??_R3?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$extended_type_info_typeid@VCContact@@@serialization@boost@@6B@ ; boost::serialization::extended_type_info_typeid<CContact>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$extended_type_info_typeid@VCContact@@@serialization@boost@@@8 ; boost::serialization::extended_type_info_typeid<CContact> `RTTI Type Descriptor'
PUBLIC	??_R3?$extended_type_info_typeid@VCContact@@@serialization@boost@@8 ; boost::serialization::extended_type_info_typeid<CContact>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$extended_type_info_typeid@VCContact@@@serialization@boost@@8 ; boost::serialization::extended_type_info_typeid<CContact>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$extended_type_info_typeid@VCContact@@@serialization@boost@@8 ; boost::serialization::extended_type_info_typeid<CContact>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@extended_type_info_typeid_0@typeid_system@serialization@boost@@8 ; boost::serialization::typeid_system::extended_type_info_typeid_0::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVextended_type_info_typeid_0@typeid_system@serialization@boost@@@8 ; boost::serialization::typeid_system::extended_type_info_typeid_0 `RTTI Type Descriptor'
PUBLIC	??_R3extended_type_info_typeid_0@typeid_system@serialization@boost@@8 ; boost::serialization::typeid_system::extended_type_info_typeid_0::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2extended_type_info_typeid_0@typeid_system@serialization@boost@@8 ; boost::serialization::typeid_system::extended_type_info_typeid_0::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@extended_type_info@serialization@boost@@8 ; boost::serialization::extended_type_info::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVextended_type_info@serialization@boost@@@8 ; boost::serialization::extended_type_info `RTTI Type Descriptor'
PUBLIC	??_R3extended_type_info@serialization@boost@@8	; boost::serialization::extended_type_info::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2extended_type_info@serialization@boost@@8	; boost::serialization::extended_type_info::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EP@noncopyable@noncopyable_@boost@@8	; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (4,-1,0,79)'
PUBLIC	??_R1BB@?0A@EA@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8 ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Base Class Descriptor at (17,-1,0,64)'
PUBLIC	??_R0?AV?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@@8 ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> > `RTTI Type Descriptor'
PUBLIC	??_R3?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8 ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8 ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8 ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@singleton_module@serialization@boost@@8 ; boost::serialization::singleton_module::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVsingleton_module@serialization@boost@@@8 ; boost::serialization::singleton_module `RTTI Type Descriptor'
PUBLIC	??_R3singleton_module@serialization@boost@@8	; boost::serialization::singleton_module::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2singleton_module@serialization@boost@@8	; boost::serialization::singleton_module::`RTTI Base Class Array'
PUBLIC	??_R1BB@?0A@EA@singleton_module@serialization@boost@@8 ; boost::serialization::singleton_module::`RTTI Base Class Descriptor at (17,-1,0,64)'
PUBLIC	??_R1BB@?0A@EC@noncopyable@noncopyable_@boost@@8 ; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (17,-1,0,66)'
PUBLIC	??_R4?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@@8 ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> > `RTTI Type Descriptor'
PUBLIC	??_R3?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@8 ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> `RTTI Type Descriptor'
PUBLIC	??_R3?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@basic_iserializer@detail@archive@boost@@8 ; boost::archive::detail::basic_iserializer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVbasic_iserializer@detail@archive@boost@@@8 ; boost::archive::detail::basic_iserializer `RTTI Type Descriptor'
PUBLIC	??_R3basic_iserializer@detail@archive@boost@@8	; boost::archive::detail::basic_iserializer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2basic_iserializer@detail@archive@boost@@8	; boost::archive::detail::basic_iserializer::`RTTI Base Class Array'
PUBLIC	??_R4?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> > `RTTI Type Descriptor'
PUBLIC	??_R3?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___invalid_parameter_noinfo:PROC
EXTRN	__imp_??0_Lockit@std@@QAE@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:PROC
EXTRN	__imp___errno:PROC
EXTRN	__imp__system:PROC
EXTRN	__imp___get_stream_buffer_pointers:PROC
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fflush:PROC
EXTRN	__imp__fgetc:PROC
EXTRN	__imp__fgetpos:PROC
EXTRN	__imp__fputc:PROC
EXTRN	__imp__fsetpos:PROC
EXTRN	__imp___fseeki64:PROC
EXTRN	__imp__fwrite:PROC
EXTRN	__imp__setvbuf:PROC
EXTRN	__imp__ungetc:PROC
EXTRN	__imp___lock_file:PROC
EXTRN	__imp___unlock_file:PROC
EXTRN	_memcmp:PROC
EXTRN	_memcpy:PROC
EXTRN	__imp__memmove:PROC
EXTRN	_memset:PROC
EXTRN	_strlen:PROC
EXTRN	__imp_?uncaught_exception@std@@YA_NXZ:PROC
EXTRN	__imp__terminate:PROC
EXTRN	__imp____std_exception_copy:PROC
EXTRN	__imp____std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	__imp_?_Debug_message@std@@YAXPB_W0I@Z:PROC
EXTRN	__imp_?_Xbad_alloc@std@@YAXXZ:PROC
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
EXTRN	__imp____std_type_info_name:PROC
EXTRN	??_Ebad_cast@std@@UAEPAXI@Z:PROC		; std::bad_cast::`vector deleting destructor'
EXTRN	?_Facet_Register@std@@YAXPAV_Facet_base@1@@Z:PROC ; std::_Facet_Register
EXTRN	__imp_??Bid@locale@std@@QAEIXZ:PROC
EXTRN	__imp_?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ:PROC
EXTRN	__imp_?always_noconv@codecvt_base@std@@QBE_NXZ:PROC
EXTRN	__imp_?in@?$codecvt@DDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PBD1AAPBDPAD3AAPAD@Z:PROC
EXTRN	__imp_?out@?$codecvt@DDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PBD1AAPBDPAD3AAPAD@Z:PROC
EXTRN	__imp_?unshift@?$codecvt@DDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PAD1AAPAD@Z:PROC
EXTRN	__imp_?_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z:PROC
EXTRN	__imp_??Bios_base@std@@QBE_NXZ:PROC
EXTRN	__imp_?good@ios_base@std@@QBE_NXZ:PROC
EXTRN	__imp_?fail@ios_base@std@@QBE_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QBEHXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QAEHH@Z:PROC
EXTRN	__imp_?precision@ios_base@std@@QBE_JXZ:PROC
EXTRN	__imp_?precision@ios_base@std@@QAE_J_J@Z:PROC
EXTRN	__imp_?width@ios_base@std@@QBE_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QAE_J_J@Z:PROC
EXTRN	__imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QBE?AVlocale@2@XZ:PROC
EXTRN	__imp_?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ:PROC
EXTRN	__imp_?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ:PROC
EXTRN	__imp_?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z:PROC
EXTRN	__imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z:PROC
EXTRN	__imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?_Gndec@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ:PROC
EXTRN	__imp_?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ:PROC
EXTRN	__imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ:PROC
EXTRN	__imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ:PROC
EXTRN	__imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAPAD0PAH001@Z:PROC
EXTRN	__imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ:PROC
EXTRN	__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z:PROC
EXTRN	__imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z:PROC
EXTRN	__imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_N@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z:PROC
EXTRN	__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ:PROC
EXTRN	__imp_??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z:PROC
EXTRN	__imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z:PROC
EXTRN	__imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_N@Z:PROC
EXTRN	__imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAF@Z:PROC
EXTRN	__imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAI@Z:PROC
EXTRN	??_E_Ref_count_base@std@@UAEPAXI@Z:PROC		; std::_Ref_count_base::`vector deleting destructor'
EXTRN	__imp___Thrd_start:PROC
EXTRN	__imp___Thrd_join:PROC
EXTRN	__imp___Thrd_id:PROC
EXTRN	__imp___Mtx_init:PROC
EXTRN	__imp___Mtx_destroy:PROC
EXTRN	__imp___Mtx_lock:PROC
EXTRN	__imp___Mtx_unlock:PROC
EXTRN	__imp___Cnd_init:PROC
EXTRN	__imp___Cnd_destroy:PROC
EXTRN	__imp___Cnd_wait:PROC
EXTRN	__imp___Cnd_signal:PROC
EXTRN	__imp___Cnd_do_broadcast_at_thread_exit:PROC
EXTRN	__imp_?_Throw_C_error@std@@YAXH@Z:PROC
EXTRN	__imp_?_Throw_Cpp_error@std@@YAXH@Z:PROC
EXTRN	??0CUserInterface@@QAE@XZ:PROC			; CUserInterface::CUserInterface
EXTRN	??1CUserInterface@@QAE@XZ:PROC			; CUserInterface::~CUserInterface
EXTRN	?displayStartScreen@CUserInterface@@QAEXXZ:PROC	; CUserInterface::displayStartScreen
EXTRN	?displayMainMenu@CUserInterface@@QAEDXZ:PROC	; CUserInterface::displayMainMenu
EXTRN	?displayContactChoiceMenu@CUserInterface@@QAEDXZ:PROC ; CUserInterface::displayContactChoiceMenu
EXTRN	?getUserInput@CUserInterface@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z:PROC ; CUserInterface::getUserInput
EXTRN	__imp___wassert:PROC
EXTRN	??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z:PROC ; boost::archive::archive_exception::archive_exception
EXTRN	??0archive_exception@archive@boost@@QAE@ABV012@@Z:PROC ; boost::archive::archive_exception::archive_exception
EXTRN	??1archive_exception@archive@boost@@UAE@XZ:PROC	; boost::archive::archive_exception::~archive_exception
EXTRN	??1basic_iarchive@detail@archive@boost@@UAE@XZ:PROC ; boost::archive::detail::basic_iarchive::~basic_iarchive
EXTRN	?load_object@basic_iarchive@detail@archive@boost@@QAEXPAXABVbasic_iserializer@234@@Z:PROC ; boost::archive::detail::basic_iarchive::load_object
EXTRN	?key_unregister@extended_type_info@serialization@boost@@IBEXXZ:PROC ; boost::serialization::extended_type_info::key_unregister
EXTRN	?key_register@extended_type_info@serialization@boost@@IBEXXZ:PROC ; boost::serialization::extended_type_info::key_register
EXTRN	??0extended_type_info_typeid_0@typeid_system@serialization@boost@@IAE@PBD@Z:PROC ; boost::serialization::typeid_system::extended_type_info_typeid_0::extended_type_info_typeid_0
EXTRN	??1extended_type_info_typeid_0@typeid_system@serialization@boost@@MAE@XZ:PROC ; boost::serialization::typeid_system::extended_type_info_typeid_0::~extended_type_info_typeid_0
EXTRN	?type_register@extended_type_info_typeid_0@typeid_system@serialization@boost@@IAEXABVtype_info@@@Z:PROC ; boost::serialization::typeid_system::extended_type_info_typeid_0::type_register
EXTRN	?type_unregister@extended_type_info_typeid_0@typeid_system@serialization@boost@@IAEXXZ:PROC ; boost::serialization::typeid_system::extended_type_info_typeid_0::type_unregister
EXTRN	?is_less_than@extended_type_info_typeid_0@typeid_system@serialization@boost@@UBE_NABVextended_type_info@34@@Z:PROC ; boost::serialization::typeid_system::extended_type_info_typeid_0::is_less_than
EXTRN	?is_equal@extended_type_info_typeid_0@typeid_system@serialization@boost@@UBE_NABVextended_type_info@34@@Z:PROC ; boost::serialization::typeid_system::extended_type_info_typeid_0::is_equal
EXTRN	??0basic_iserializer@detail@archive@boost@@IAE@ABVextended_type_info@serialization@3@@Z:PROC ; boost::archive::detail::basic_iserializer::basic_iserializer
EXTRN	??1basic_iserializer@detail@archive@boost@@MAE@XZ:PROC ; boost::archive::detail::basic_iserializer::~basic_iserializer
EXTRN	??1?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAE@XZ:PROC ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::~basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >
EXTRN	??_E?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@MAEPAXI@Z:PROC ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`vector deleting destructor'
EXTRN	?load_override@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUclass_name_type@23@@Z:PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override
EXTRN	??0?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAE@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@I@Z:PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::text_iarchive_impl<boost::archive::text_iarchive>
EXTRN	??_E?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@MAEPAXI@Z:PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`vector deleting destructor'
EXTRN	??_Etext_iarchive@archive@boost@@UAEPAXI@Z:PROC	; boost::archive::text_iarchive::`vector deleting destructor'
EXTRN	??1basic_oarchive@detail@archive@boost@@MAE@XZ:PROC ; boost::archive::detail::basic_oarchive::~basic_oarchive
EXTRN	?save_object@basic_oarchive@detail@archive@boost@@QAEXPBXABVbasic_oserializer@234@@Z:PROC ; boost::archive::detail::basic_oarchive::save_object
EXTRN	?end_preamble@basic_oarchive@detail@archive@boost@@QAEXXZ:PROC ; boost::archive::detail::basic_oarchive::end_preamble
EXTRN	??0basic_oserializer@detail@archive@boost@@IAE@ABVextended_type_info@serialization@3@@Z:PROC ; boost::archive::detail::basic_oserializer::basic_oserializer
EXTRN	??1basic_oserializer@detail@archive@boost@@MAE@XZ:PROC ; boost::archive::detail::basic_oserializer::~basic_oserializer
EXTRN	??1?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAE@XZ:PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::~basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >
EXTRN	?newtoken@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ:PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::newtoken
EXTRN	??_E?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@MAEPAXI@Z:PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`vector deleting destructor'
EXTRN	?save@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save
EXTRN	??0?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAE@AAV?$basic_ostream@DU?$char_traits@D@std@@@std@@I@Z:PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::text_oarchive_impl<boost::archive::text_oarchive>
EXTRN	??_E?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@MAEPAXI@Z:PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`vector deleting destructor'
EXTRN	??_Etext_oarchive@archive@boost@@UAEPAXI@Z:PROC	; boost::archive::text_oarchive::`vector deleting destructor'
EXTRN	??0CCompany@@QAE@XZ:PROC			; CCompany::CCompany
EXTRN	??0CCompany@@QAE@_N@Z:PROC			; CCompany::CCompany
EXTRN	??0CPerson@@QAE@XZ:PROC				; CPerson::CPerson
EXTRN	??0CPerson@@QAE@_N@Z:PROC			; CPerson::CPerson
EXTRN	__imp_?_Fiopen@std@@YAPAU_iobuf@@PBDHH@Z:PROC
EXTRN	??_E?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_filebuf<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_ofstream<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_ifstream<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??_E?$_Ref_count_obj@VCCompany@@@std@@UAEPAXI@Z:PROC ; std::_Ref_count_obj<CCompany>::`vector deleting destructor'
EXTRN	??_E?$_Ref_count_obj@VCPerson@@@std@@UAEPAXI@Z:PROC ; std::_Ref_count_obj<CPerson>::`vector deleting destructor'
EXTRN	??_E?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAEPAXI@Z:PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`vector deleting destructor'
EXTRN	??_E?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z:PROC ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`vector deleting destructor'
EXTRN	??_E?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAEPAXI@Z:PROC ; boost::serialization::extended_type_info_typeid<CContact>::`vector deleting destructor'
EXTRN	??_E?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@UAEPAXI@Z:PROC ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`vector deleting destructor'
EXTRN	??_E?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAEPAXI@Z:PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`vector deleting destructor'
EXTRN	??_E?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z:PROC ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`vector deleting destructor'
EXTRN	?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc
EXTRN	?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn
EXTRN	?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsputn
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___RTDynamicCast:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	__imp_?_BADOFF@std@@3_JB:QWORD
EXTRN	?__type_info_root_node@@3U__type_info_node@@A:BYTE ; __type_info_root_node
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__imp_?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A:DWORD
EXTRN	__imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	___security_cookie:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A
_BSS	SEGMENT
?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A DQ 01H DUP (?) ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PBVfacet@locale@2@B
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PBVfacet@locale@2@B DD 01H DUP (?) ; std::_Facetptr<std::codecvt<char,char,_Mbstatet> >::_Psave
_BSS	ENDS
;	COMDAT ?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@A
_BSS	SEGMENT
?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@A DD 01H DUP (?) ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::instance
_BSS	ENDS
;	COMDAT ?m_is_destroyed@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@2_NA
_BSS	SEGMENT
?m_is_destroyed@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@2_NA DB 01H DUP (?) ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::m_is_destroyed
_BSS	ENDS
;	COMDAT ?t@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@634@A
_BSS	SEGMENT
?t@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@634@A DB 0cH DUP (?) ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance'::`2'::t
_BSS	ENDS
;	COMDAT ?$TSS0@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_oarchive::erializer,CContact>
_BSS	ENDS
;	COMDAT ?instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@VCContact@@@23@A
_BSS	SEGMENT
?instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@VCContact@@@23@A DD 01H DUP (?) ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::instance
_BSS	ENDS
;	COMDAT ?m_is_destroyed@?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@2_NA
_BSS	SEGMENT
?m_is_destroyed@?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@2_NA DB 01H DUP (?) ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::m_is_destroyed
_BSS	ENDS
;	COMDAT ?t@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4V?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@34@A
_BSS	SEGMENT
?t@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4V?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@34@A DB 014H DUP (?) ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance'::`2'::t
_BSS	ENDS
;	COMDAT ?$TSS0@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::et_instance,signed char,VCContact::tended_type_info_typeid>
_BSS	ENDS
;	COMDAT ?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@A
_BSS	SEGMENT
?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@A DD 01H DUP (?) ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::instance
_BSS	ENDS
;	COMDAT ?m_is_destroyed@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@2_NA
_BSS	SEGMENT
?m_is_destroyed@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@2_NA DB 01H DUP (?) ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::m_is_destroyed
_BSS	ENDS
;	COMDAT ?t@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@634@A
_BSS	SEGMENT
?t@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@634@A DB 0cH DUP (?) ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance'::`2'::t
_BSS	ENDS
;	COMDAT ?$TSS0@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_iarchive::erializer,CContact>
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??instance$initializer$@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0P6AXXZA@@3P6AXXZA DD FLAT:??__E?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@A@@YAXXZ ; ??instance$initializer$@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 DD FLAT:??_R0?AV?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R2?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 DD FLAT:??_R1A@?0A@EA@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@basic_iserializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EA@basic_serializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R3?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 DD 00H ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@@8
data$r	SEGMENT
??_R0?AV?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$singleton_wrapper@V?$iserializer@Vtext_iarchive@ar'
	DB	'chive@boost@@VCContact@@@detail@archive@boost@@@detail@serial'
	DB	'ization@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@
rdata$r	SEGMENT
??_R4?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@ DD 00H ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@@8
	DD	FLAT:??_R3?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2basic_iserializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2basic_iserializer@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@basic_iserializer@detail@archive@boost@@8 ; boost::archive::detail::basic_iserializer::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@basic_serializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3basic_iserializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3basic_iserializer@detail@archive@boost@@8 DD 00H	; boost::archive::detail::basic_iserializer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2basic_iserializer@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbasic_iserializer@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AVbasic_iserializer@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::basic_iserializer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbasic_iserializer@detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@basic_iserializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@basic_iserializer@detail@archive@boost@@8 DD FLAT:??_R0?AVbasic_iserializer@detail@archive@boost@@@8 ; boost::archive::detail::basic_iserializer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3basic_iserializer@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 DD FLAT:??_R0?AV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@8 ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@basic_iserializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EA@basic_serializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 DD 00H ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$iserializer@Vtext_iarchive@archive@boost@@VCContac'
	DB	't@@@detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@
rdata$r	SEGMENT
??_R4?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@ DD 00H ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@8
	DD	FLAT:??_R3?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8 DD FLAT:??_R0?AV?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@@8 ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	07H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R2?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8 DD FLAT:??_R1A@?0A@EA@?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$extended_type_info_typeid@VCContact@@@serialization@boost@@8
	DD	FLAT:??_R1A@?0A@EA@extended_type_info_typeid_0@typeid_system@serialization@boost@@8
	DD	FLAT:??_R1A@?0A@EA@extended_type_info@serialization@boost@@8
	DD	FLAT:??_R13?0A@EP@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R1BB@?0A@EA@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8
	DD	FLAT:??_R1BB@?0A@EA@singleton_module@serialization@boost@@8
	DD	FLAT:??_R1BB@?0A@EC@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R3?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8 DD 00H ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	08H
	DD	FLAT:??_R2?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@@8
data$r	SEGMENT
??_R0?AV?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$singleton_wrapper@V?$extended_type_info_typeid@VCC'
	DB	'ontact@@@serialization@boost@@@detail@serialization@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@6B@
rdata$r	SEGMENT
??_R4?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@6B@ DD 00H ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@@8
	DD	FLAT:??_R3?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1BB@?0A@EC@noncopyable@noncopyable_@boost@@8
rdata$r	SEGMENT
??_R1BB@?0A@EC@noncopyable@noncopyable_@boost@@8 DD FLAT:??_R0?AVnoncopyable@noncopyable_@boost@@@8 ; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (17,-1,0,66)'
	DD	00H
	DD	011H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1BB@?0A@EA@singleton_module@serialization@boost@@8
rdata$r	SEGMENT
??_R1BB@?0A@EA@singleton_module@serialization@boost@@8 DD FLAT:??_R0?AVsingleton_module@serialization@boost@@@8 ; boost::serialization::singleton_module::`RTTI Base Class Descriptor at (17,-1,0,64)'
	DD	01H
	DD	011H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3singleton_module@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2singleton_module@serialization@boost@@8
rdata$r	SEGMENT
??_R2singleton_module@serialization@boost@@8 DD FLAT:??_R1A@?0A@EA@singleton_module@serialization@boost@@8 ; boost::serialization::singleton_module::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3singleton_module@serialization@boost@@8
rdata$r	SEGMENT
??_R3singleton_module@serialization@boost@@8 DD 00H	; boost::serialization::singleton_module::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2singleton_module@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVsingleton_module@serialization@boost@@@8
data$r	SEGMENT
??_R0?AVsingleton_module@serialization@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::serialization::singleton_module `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVsingleton_module@serialization@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@singleton_module@serialization@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@singleton_module@serialization@boost@@8 DD FLAT:??_R0?AVsingleton_module@serialization@boost@@@8 ; boost::serialization::singleton_module::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3singleton_module@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8 DD FLAT:??_R0?AV?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@@8 ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8
rdata$r	SEGMENT
??_R2?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8 DD FLAT:??_R1A@?0A@EA@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8 ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@singleton_module@serialization@boost@@8
	DD	FLAT:??_R1A@?0A@EA@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8
rdata$r	SEGMENT
??_R3?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8 DD 00H ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@@8
data$r	SEGMENT
??_R0?AV?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$singleton@V?$extended_type_info_typeid@VCContact@@'
	DB	'@serialization@boost@@@serialization@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1BB@?0A@EA@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8
rdata$r	SEGMENT
??_R1BB@?0A@EA@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8 DD FLAT:??_R0?AV?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@@8 ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Base Class Descriptor at (17,-1,0,64)'
	DD	02H
	DD	011H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EP@noncopyable@noncopyable_@boost@@8
rdata$r	SEGMENT
??_R13?0A@EP@noncopyable@noncopyable_@boost@@8 DD FLAT:??_R0?AVnoncopyable@noncopyable_@boost@@@8 ; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (4,-1,0,79)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	04fH
	DD	FLAT:??_R3noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2extended_type_info@serialization@boost@@8
rdata$r	SEGMENT
??_R2extended_type_info@serialization@boost@@8 DD FLAT:??_R1A@?0A@EA@extended_type_info@serialization@boost@@8 ; boost::serialization::extended_type_info::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3extended_type_info@serialization@boost@@8
rdata$r	SEGMENT
??_R3extended_type_info@serialization@boost@@8 DD 00H	; boost::serialization::extended_type_info::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2extended_type_info@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVextended_type_info@serialization@boost@@@8
data$r	SEGMENT
??_R0?AVextended_type_info@serialization@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::serialization::extended_type_info `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVextended_type_info@serialization@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@extended_type_info@serialization@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@extended_type_info@serialization@boost@@8 DD FLAT:??_R0?AVextended_type_info@serialization@boost@@@8 ; boost::serialization::extended_type_info::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3extended_type_info@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2extended_type_info_typeid_0@typeid_system@serialization@boost@@8
rdata$r	SEGMENT
??_R2extended_type_info_typeid_0@typeid_system@serialization@boost@@8 DD FLAT:??_R1A@?0A@EA@extended_type_info_typeid_0@typeid_system@serialization@boost@@8 ; boost::serialization::typeid_system::extended_type_info_typeid_0::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@extended_type_info@serialization@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3extended_type_info_typeid_0@typeid_system@serialization@boost@@8
rdata$r	SEGMENT
??_R3extended_type_info_typeid_0@typeid_system@serialization@boost@@8 DD 00H ; boost::serialization::typeid_system::extended_type_info_typeid_0::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2extended_type_info_typeid_0@typeid_system@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVextended_type_info_typeid_0@typeid_system@serialization@boost@@@8
data$r	SEGMENT
??_R0?AVextended_type_info_typeid_0@typeid_system@serialization@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::serialization::typeid_system::extended_type_info_typeid_0 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVextended_type_info_typeid_0@typeid_system@serializat'
	DB	'ion@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@extended_type_info_typeid_0@typeid_system@serialization@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@extended_type_info_typeid_0@typeid_system@serialization@boost@@8 DD FLAT:??_R0?AVextended_type_info_typeid_0@typeid_system@serialization@boost@@@8 ; boost::serialization::typeid_system::extended_type_info_typeid_0::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3extended_type_info_typeid_0@typeid_system@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$extended_type_info_typeid@VCContact@@@serialization@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$extended_type_info_typeid@VCContact@@@serialization@boost@@8 DD FLAT:??_R0?AV?$extended_type_info_typeid@VCContact@@@serialization@boost@@@8 ; boost::serialization::extended_type_info_typeid<CContact>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	06H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$extended_type_info_typeid@VCContact@@@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$extended_type_info_typeid@VCContact@@@serialization@boost@@8
rdata$r	SEGMENT
??_R2?$extended_type_info_typeid@VCContact@@@serialization@boost@@8 DD FLAT:??_R1A@?0A@EA@?$extended_type_info_typeid@VCContact@@@serialization@boost@@8 ; boost::serialization::extended_type_info_typeid<CContact>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@extended_type_info_typeid_0@typeid_system@serialization@boost@@8
	DD	FLAT:??_R1A@?0A@EA@extended_type_info@serialization@boost@@8
	DD	FLAT:??_R13?0A@EP@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R1BB@?0A@EA@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8
	DD	FLAT:??_R1BB@?0A@EA@singleton_module@serialization@boost@@8
	DD	FLAT:??_R1BB@?0A@EC@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$extended_type_info_typeid@VCContact@@@serialization@boost@@8
rdata$r	SEGMENT
??_R3?$extended_type_info_typeid@VCContact@@@serialization@boost@@8 DD 00H ; boost::serialization::extended_type_info_typeid<CContact>::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	07H
	DD	FLAT:??_R2?$extended_type_info_typeid@VCContact@@@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$extended_type_info_typeid@VCContact@@@serialization@boost@@@8
data$r	SEGMENT
??_R0?AV?$extended_type_info_typeid@VCContact@@@serialization@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::serialization::extended_type_info_typeid<CContact> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$extended_type_info_typeid@VCContact@@@serializatio'
	DB	'n@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$extended_type_info_typeid@VCContact@@@serialization@boost@@6B@
rdata$r	SEGMENT
??_R4?$extended_type_info_typeid@VCContact@@@serialization@boost@@6B@ DD 00H ; boost::serialization::extended_type_info_typeid<CContact>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$extended_type_info_typeid@VCContact@@@serialization@boost@@@8
	DD	FLAT:??_R3?$extended_type_info_typeid@VCContact@@@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 DD FLAT:??_R0?AV?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R2?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 DD FLAT:??_R1A@?0A@EA@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@basic_oserializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EA@basic_serializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R3?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 DD 00H ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@@8
data$r	SEGMENT
??_R0?AV?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$singleton_wrapper@V?$oserializer@Vtext_oarchive@ar'
	DB	'chive@boost@@VCContact@@@detail@archive@boost@@@detail@serial'
	DB	'ization@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@
rdata$r	SEGMENT
??_R4?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@ DD 00H ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@@8
	DD	FLAT:??_R3?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EN@noncopyable@noncopyable_@boost@@8 DD FLAT:??_R0?AVnoncopyable@noncopyable_@boost@@@8 ; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (0,-1,0,77)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@basic_serializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@basic_serializer@detail@archive@boost@@8 DD FLAT:??_R0?AVbasic_serializer@detail@archive@boost@@@8 ; boost::archive::detail::basic_serializer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3basic_serializer@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2basic_serializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2basic_serializer@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@basic_serializer@detail@archive@boost@@8 ; boost::archive::detail::basic_serializer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3basic_serializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3basic_serializer@detail@archive@boost@@8 DD 00H	; boost::archive::detail::basic_serializer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2basic_serializer@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbasic_serializer@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AVbasic_serializer@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::basic_serializer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbasic_serializer@detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R13?0A@EA@basic_serializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R13?0A@EA@basic_serializer@detail@archive@boost@@8 DD FLAT:??_R0?AVbasic_serializer@detail@archive@boost@@@8 ; boost::archive::detail::basic_serializer::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3basic_serializer@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2basic_oserializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2basic_oserializer@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@basic_oserializer@detail@archive@boost@@8 ; boost::archive::detail::basic_oserializer::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@basic_serializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3basic_oserializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3basic_oserializer@detail@archive@boost@@8 DD 00H	; boost::archive::detail::basic_oserializer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2basic_oserializer@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbasic_oserializer@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AVbasic_oserializer@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::basic_oserializer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbasic_oserializer@detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@basic_oserializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@basic_oserializer@detail@archive@boost@@8 DD FLAT:??_R0?AVbasic_oserializer@detail@archive@boost@@@8 ; boost::archive::detail::basic_oserializer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3basic_oserializer@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 DD FLAT:??_R0?AV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@8 ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@basic_oserializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EA@basic_serializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 DD 00H ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$oserializer@Vtext_oarchive@archive@boost@@VCContac'
	DB	't@@@detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@
rdata$r	SEGMENT
??_R4?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@ DD 00H ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@8
	DD	FLAT:??_R3?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8 DD FLAT:??_R0?AV?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@@8 ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8
rdata$r	SEGMENT
??_R2?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8 ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Pad@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8
rdata$r	SEGMENT
??_R3?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8 DD 00H ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@'
	DB	'V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCC'
	DB	'ontact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@st'
	DB	'd@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?'
	DB	'$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allo'
	DB	'cator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_stri'
	DB	'ng@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@st'
	DB	'd@@@2@@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@6B@ DD 00H ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@@8
	DD	FLAT:??_R3?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Ref_count_obj@VCPerson@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Ref_count_obj@VCPerson@@@std@@8 DD FLAT:??_R0?AV?$_Ref_count_obj@VCPerson@@@std@@@8 ; std::_Ref_count_obj<CPerson>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Ref_count_obj@VCPerson@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Ref_count_obj@VCPerson@@@std@@8
rdata$r	SEGMENT
??_R2?$_Ref_count_obj@VCPerson@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Ref_count_obj@VCPerson@@@std@@8 ; std::_Ref_count_obj<CPerson>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Ref_count_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Ref_count_obj@VCPerson@@@std@@8
rdata$r	SEGMENT
??_R3?$_Ref_count_obj@VCPerson@@@std@@8 DD 00H		; std::_Ref_count_obj<CPerson>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Ref_count_obj@VCPerson@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Ref_count_obj@VCPerson@@@std@@@8
data$r	SEGMENT
??_R0?AV?$_Ref_count_obj@VCPerson@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Ref_count_obj<CPerson> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Ref_count_obj@VCPerson@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$_Ref_count_obj@VCPerson@@@std@@6B@
rdata$r	SEGMENT
??_R4?$_Ref_count_obj@VCPerson@@@std@@6B@ DD 00H	; std::_Ref_count_obj<CPerson>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Ref_count_obj@VCPerson@@@std@@@8
	DD	FLAT:??_R3?$_Ref_count_obj@VCPerson@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Ref_count_obj@VCCompany@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Ref_count_obj@VCCompany@@@std@@8 DD FLAT:??_R0?AV?$_Ref_count_obj@VCCompany@@@std@@@8 ; std::_Ref_count_obj<CCompany>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Ref_count_obj@VCCompany@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Ref_count_obj@VCCompany@@@std@@8
rdata$r	SEGMENT
??_R2?$_Ref_count_obj@VCCompany@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Ref_count_obj@VCCompany@@@std@@8 ; std::_Ref_count_obj<CCompany>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Ref_count_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Ref_count_obj@VCCompany@@@std@@8
rdata$r	SEGMENT
??_R3?$_Ref_count_obj@VCCompany@@@std@@8 DD 00H		; std::_Ref_count_obj<CCompany>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Ref_count_obj@VCCompany@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Ref_count_obj@VCCompany@@@std@@@8
data$r	SEGMENT
??_R0?AV?$_Ref_count_obj@VCCompany@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Ref_count_obj<CCompany> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Ref_count_obj@VCCompany@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$_Ref_count_obj@VCCompany@@@std@@6B@
rdata$r	SEGMENT
??_R4?$_Ref_count_obj@VCCompany@@@std@@6B@ DD 00H	; std::_Ref_count_obj<CCompany>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Ref_count_obj@VCCompany@@@std@@@8
	DD	FLAT:??_R3?$_Ref_count_obj@VCCompany@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R4?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@6B@
rdata$r	SEGMENT
??_R4?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@6B@ DD 00H ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@@8
	DD	FLAT:??_R3?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R4?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@6B@
rdata$r	SEGMENT
??_R4?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@6B@ DD 00H ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@@8
	DD	FLAT:??_R3?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 DD FLAT:??_R0?AV?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@@8 ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 DD 00H ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$interface_oarchive@Vtext_oarchive@archive@boost@@@'
	DB	'detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1BI@?0A@EA@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1BI@?0A@EA@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 DD FLAT:??_R0?AV?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@@8 ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Descriptor at (24,-1,0,64)'
	DD	00H
	DD	018H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2basic_oarchive@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2basic_oarchive@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@basic_oarchive@detail@archive@boost@@8 ; boost::archive::detail::basic_oarchive::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R13?0A@EA@helper_collection@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3basic_oarchive@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3basic_oarchive@detail@archive@boost@@8 DD 00H	; boost::archive::detail::basic_oarchive::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2basic_oarchive@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@basic_oarchive@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@basic_oarchive@detail@archive@boost@@8 DD FLAT:??_R0?AVbasic_oarchive@detail@archive@boost@@@8 ; boost::archive::detail::basic_oarchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3basic_oarchive@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@basic_oarchive@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R13?0A@EA@helper_collection@detail@archive@boost@@8
	DD	FLAT:??_R1BI@?0A@EA@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 DD 00H ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$common_oarchive@Vtext_oarchive@archive@boost@@@det'
	DB	'ail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 DD FLAT:??_R0?AV?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@@8 ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8
rdata$r	SEGMENT
??_R2?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8 ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@basic_oarchive@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R13?0A@EA@helper_collection@detail@archive@boost@@8
	DD	FLAT:??_R1BI@?0A@EA@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8
rdata$r	SEGMENT
??_R3?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8 DD 00H ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	06H
	DD	FLAT:??_R2?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_text_oarchive@Vtext_oarchive@archive@boost@@'
	DB	'@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8 DD FLAT:??_R0?AV?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@@8 ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 DD FLAT:??_R0?AV?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@@8 ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	SEGMENT
??_R2?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	SEGMENT
??_R3?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 DD 00H ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_text_oprimitive@V?$basic_ostream@DU?$char_tr'
	DB	'aits@D@std@@@std@@@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1CA@?0A@EA@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	SEGMENT
??_R1CA@?0A@EA@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 DD FLAT:??_R0?AV?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@@8 ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (32,-1,0,64)'
	DD	00H
	DD	020H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8
rdata$r	SEGMENT
??_R2?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8 ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`RTTI Base Class Array'
	DD	FLAT:??_R1CA@?0A@EA@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@basic_oarchive@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R13?0A@EA@helper_collection@detail@archive@boost@@8
	DD	FLAT:??_R1BI@?0A@EA@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8
rdata$r	SEGMENT
??_R3?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8 DD 00H ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	08H
	DD	FLAT:??_R2?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@'
	DB	'archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8 DD FLAT:??_R0?AV?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@@8 ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	07H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@text_oarchive@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@text_oarchive@archive@boost@@8 DD FLAT:??_R0?AVtext_oarchive@archive@boost@@@8 ; boost::archive::text_oarchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3text_oarchive@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2text_oarchive@archive@boost@@8
rdata$r	SEGMENT
??_R2text_oarchive@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@text_oarchive@archive@boost@@8 ; boost::archive::text_oarchive::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8
	DD	FLAT:??_R1CA@?0A@EA@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@basic_oarchive@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R13?0A@EA@helper_collection@detail@archive@boost@@8
	DD	FLAT:??_R1BI@?0A@EA@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3text_oarchive@archive@boost@@8
rdata$r	SEGMENT
??_R3text_oarchive@archive@boost@@8 DD 00H		; boost::archive::text_oarchive::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	09H
	DD	FLAT:??_R2text_oarchive@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R4text_oarchive@archive@boost@@6B@
rdata$r	SEGMENT
??_R4text_oarchive@archive@boost@@6B@ DD 00H		; boost::archive::text_oarchive::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVtext_oarchive@archive@boost@@@8
	DD	FLAT:??_R3text_oarchive@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R4?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@6B@
rdata$r	SEGMENT
??_R4?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@6B@ DD 00H ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@@8
	DD	FLAT:??_R3?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R4?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@6B@
rdata$r	SEGMENT
??_R4?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@6B@ DD 00H ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@@8
	DD	FLAT:??_R3?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 DD FLAT:??_R0?AV?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@@8 ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 DD 00H ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$interface_iarchive@Vtext_iarchive@archive@boost@@@'
	DB	'detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1BI@?0A@EA@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1BI@?0A@EA@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 DD FLAT:??_R0?AV?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@@8 ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Descriptor at (24,-1,0,64)'
	DD	00H
	DD	018H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@helper_collection@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@helper_collection@detail@archive@boost@@8 DD FLAT:??_R0?AVhelper_collection@detail@archive@boost@@@8 ; boost::archive::detail::helper_collection::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3helper_collection@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2helper_collection@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2helper_collection@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@helper_collection@detail@archive@boost@@8 ; boost::archive::detail::helper_collection::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3helper_collection@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3helper_collection@detail@archive@boost@@8 DD 00H	; boost::archive::detail::helper_collection::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2helper_collection@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVhelper_collection@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AVhelper_collection@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::helper_collection `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVhelper_collection@detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R13?0A@EA@helper_collection@detail@archive@boost@@8
rdata$r	SEGMENT
??_R13?0A@EA@helper_collection@detail@archive@boost@@8 DD FLAT:??_R0?AVhelper_collection@detail@archive@boost@@@8 ; boost::archive::detail::helper_collection::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3helper_collection@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2basic_iarchive@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2basic_iarchive@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@basic_iarchive@detail@archive@boost@@8 ; boost::archive::detail::basic_iarchive::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R13?0A@EA@helper_collection@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3basic_iarchive@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3basic_iarchive@detail@archive@boost@@8 DD 00H	; boost::archive::detail::basic_iarchive::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2basic_iarchive@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@basic_iarchive@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@basic_iarchive@detail@archive@boost@@8 DD FLAT:??_R0?AVbasic_iarchive@detail@archive@boost@@@8 ; boost::archive::detail::basic_iarchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3basic_iarchive@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@basic_iarchive@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R13?0A@EA@helper_collection@detail@archive@boost@@8
	DD	FLAT:??_R1BI@?0A@EA@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 DD 00H ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$common_iarchive@Vtext_iarchive@archive@boost@@@det'
	DB	'ail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 DD FLAT:??_R0?AV?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@@8 ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8
rdata$r	SEGMENT
??_R2?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8 ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@basic_iarchive@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R13?0A@EA@helper_collection@detail@archive@boost@@8
	DD	FLAT:??_R1BI@?0A@EA@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8
rdata$r	SEGMENT
??_R3?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8 DD 00H ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	06H
	DD	FLAT:??_R2?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_text_iarchive@Vtext_iarchive@archive@boost@@'
	DB	'@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8 DD FLAT:??_R0?AV?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@@8 ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 DD FLAT:??_R0?AV?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@@8 ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	SEGMENT
??_R2?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	SEGMENT
??_R3?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 DD 00H ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_text_iprimitive@V?$basic_istream@DU?$char_tr'
	DB	'aits@D@std@@@std@@@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1BI@?0A@EA@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	SEGMENT
??_R1BI@?0A@EA@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 DD FLAT:??_R0?AV?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@@8 ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (24,-1,0,64)'
	DD	00H
	DD	018H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8
rdata$r	SEGMENT
??_R2?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8 ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`RTTI Base Class Array'
	DD	FLAT:??_R1BI@?0A@EA@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@basic_iarchive@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R13?0A@EA@helper_collection@detail@archive@boost@@8
	DD	FLAT:??_R1BI@?0A@EA@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8
rdata$r	SEGMENT
??_R3?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8 DD 00H ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	08H
	DD	FLAT:??_R2?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@'
	DB	'archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8 DD FLAT:??_R0?AV?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@@8 ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	07H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@text_iarchive@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@text_iarchive@archive@boost@@8 DD FLAT:??_R0?AVtext_iarchive@archive@boost@@@8 ; boost::archive::text_iarchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3text_iarchive@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2text_iarchive@archive@boost@@8
rdata$r	SEGMENT
??_R2text_iarchive@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@text_iarchive@archive@boost@@8 ; boost::archive::text_iarchive::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8
	DD	FLAT:??_R1BI@?0A@EA@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@basic_iarchive@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R13?0A@EA@helper_collection@detail@archive@boost@@8
	DD	FLAT:??_R1BI@?0A@EA@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3text_iarchive@archive@boost@@8
rdata$r	SEGMENT
??_R3text_iarchive@archive@boost@@8 DD 00H		; boost::archive::text_iarchive::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	09H
	DD	FLAT:??_R2text_iarchive@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R4text_iarchive@archive@boost@@6B@
rdata$r	SEGMENT
??_R4text_iarchive@archive@boost@@6B@ DD 00H		; boost::archive::text_iarchive::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVtext_iarchive@archive@boost@@@8
	DD	FLAT:??_R3text_iarchive@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@noncopyable@noncopyable_@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@noncopyable@noncopyable_@boost@@8 DD FLAT:??_R0?AVnoncopyable@noncopyable_@boost@@@8 ; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2noncopyable@noncopyable_@boost@@8
rdata$r	SEGMENT
??_R2noncopyable@noncopyable_@boost@@8 DD FLAT:??_R1A@?0A@EA@noncopyable@noncopyable_@boost@@8 ; boost::noncopyable_::noncopyable::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3noncopyable@noncopyable_@boost@@8
rdata$r	SEGMENT
??_R3noncopyable@noncopyable_@boost@@8 DD 00H		; boost::noncopyable_::noncopyable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVnoncopyable@noncopyable_@boost@@@8
data$r	SEGMENT
??_R0?AVnoncopyable@noncopyable_@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::noncopyable_::noncopyable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVnoncopyable@noncopyable_@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	SEGMENT
??_R13?0A@EN@noncopyable@noncopyable_@boost@@8 DD FLAT:??_R0?AVnoncopyable@noncopyable_@boost@@@8 ; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (4,-1,0,77)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Pad@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Pad@std@@8 DD FLAT:??_R0?AV_Pad@std@@@8	; std::_Pad::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Pad@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Pad@std@@8
rdata$r	SEGMENT
??_R2_Pad@std@@8 DD FLAT:??_R1A@?0A@EA@_Pad@std@@8	; std::_Pad::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3_Pad@std@@8
rdata$r	SEGMENT
??_R3_Pad@std@@8 DD 00H					; std::_Pad::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2_Pad@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Pad@std@@@8
data$r	SEGMENT
??_R0?AV_Pad@std@@@8 DD FLAT:??_7type_info@@6B@		; std::_Pad `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Pad@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Pad@std@@6B@
rdata$r	SEGMENT
??_R4_Pad@std@@6B@ DD 00H				; std::_Pad::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Pad@std@@@8
	DD	FLAT:??_R3_Pad@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Ref_count_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Ref_count_base@std@@8 DD FLAT:??_R0?AV_Ref_count_base@std@@@8 ; std::_Ref_count_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Ref_count_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Ref_count_base@std@@8
rdata$r	SEGMENT
??_R2_Ref_count_base@std@@8 DD FLAT:??_R1A@?0A@EA@_Ref_count_base@std@@8 ; std::_Ref_count_base::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3_Ref_count_base@std@@8
rdata$r	SEGMENT
??_R3_Ref_count_base@std@@8 DD 00H			; std::_Ref_count_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2_Ref_count_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Ref_count_base@std@@@8
data$r	SEGMENT
??_R0?AV_Ref_count_base@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Ref_count_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Ref_count_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Ref_count_base@std@@6B@
rdata$r	SEGMENT
??_R4_Ref_count_base@std@@6B@ DD 00H			; std::_Ref_count_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Ref_count_base@std@@@8
	DD	FLAT:??_R3_Ref_count_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_cast@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_cast@std@@8 DD FLAT:??_R0?AVbad_cast@std@@@8 ; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_cast@std@@8
rdata$r	SEGMENT
??_R2bad_cast@std@@8 DD FLAT:??_R1A@?0A@EA@bad_cast@std@@8 ; std::bad_cast::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_cast@std@@8
rdata$r	SEGMENT
??_R3bad_cast@std@@8 DD 00H				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_cast@std@@6B@
rdata$r	SEGMENT
??_R4bad_cast@std@@6B@ DD 00H				; std::bad_cast::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_cast@std@@@8
	DD	FLAT:??_R3bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ofstream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	068H
	DD	04H
	DD	FLAT:??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17A@3EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
	DD	00H
	DD	08H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@A@3EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
	DD	01H
	DD	00H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R2?$_Iosb@H@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Iosb@H@std@@8 ; std::_Iosb<int>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R3?$_Iosb@H@std@@8 DD 00H				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Iosb@H@std@@@8
data$r	SEGMENT
??_R0?AV?$_Iosb@H@std@@@8 DD FLAT:??_7type_info@@6B@	; std::_Iosb<int> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Iosb@H@std@@', 00H
data$r	ENDS
;	COMDAT ??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ios_base@std@@8
rdata$r	SEGMENT
??_R2ios_base@std@@8 DD FLAT:??_R1A@?0A@EA@ios_base@std@@8 ; std::ios_base::`RTTI Base Class Array'
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ios_base@std@@8
rdata$r	SEGMENT
??_R3ios_base@std@@8 DD 00H				; std::ios_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVios_base@std@@@8
data$r	SEGMENT
??_R0?AVios_base@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ios_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVios_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ios_base@std@@8
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD 00H	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_istream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ifstream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	070H
	DD	04H
	DD	FLAT:??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_filebuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVtext_iarchive@archive@boost@@@8
data$r	SEGMENT
??_R0?AVtext_iarchive@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::text_iarchive `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVtext_iarchive@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVbasic_iarchive@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AVbasic_iarchive@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::basic_iarchive `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbasic_iarchive@detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVtext_oarchive@archive@boost@@@8
data$r	SEGMENT
??_R0?AVtext_oarchive@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::text_oarchive `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVtext_oarchive@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVbasic_oarchive@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AVbasic_oarchive@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::basic_oarchive `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbasic_oarchive@detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12004
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12004 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	00H
	DD	04H
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVarchive_exception@archive@boost@@@8??0archive_exception@archive@boost@@QAE@ABV012@@Z152
xdata$x	SEGMENT
__CT??_R0?AVarchive_exception@archive@boost@@@8??0archive_exception@archive@boost@@QAE@ABV012@@Z152 DD 04H
	DD	FLAT:??_R0?AVarchive_exception@archive@boost@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	098H
	DD	FLAT:??0archive_exception@archive@boost@@QAE@ABV012@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVarchive_exception@archive@boost@@@8
data$r	SEGMENT
??_R0?AVarchive_exception@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::archive_exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVarchive_exception@archive@boost@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVarchive_exception@archive@boost@@
xdata$x	SEGMENT
__CTA2?AVarchive_exception@archive@boost@@ DD 02H
	DD	FLAT:__CT??_R0?AVarchive_exception@archive@boost@@@8??0archive_exception@archive@boost@@QAE@ABV012@@Z152
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12004
xdata$x	ENDS
;	COMDAT __TI2?AVarchive_exception@archive@boost@@
xdata$x	SEGMENT
__TI2?AVarchive_exception@archive@boost@@ DD 00H
	DD	FLAT:??_Darchive_exception@archive@boost@@QAEXXZ
	DD	00H
	DD	FLAT:__CTA2?AVarchive_exception@archive@boost@@
xdata$x	ENDS
;	COMDAT ??_7?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@
CONST	SEGMENT
??_7?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@ DD FLAT:??_R4?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`vftable'
	DD	FLAT:??_E?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z
	DD	FLAT:?load_object_data@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBEXAAVbasic_iarchive@234@PAXI@Z
	DD	FLAT:?class_info@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ
	DD	FLAT:?tracking@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NI@Z
	DD	FLAT:?version@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE?AVversion_type@34@XZ
	DD	FLAT:?is_polymorphic@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ
	DD	FLAT:?destroy@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@EBEXPAX@Z
CONST	ENDS
;	COMDAT ??_C@_1IO@PLLJMNBK@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
CONST	SEGMENT
??_C@_1IO@PLLJMNBK@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ DB 's'
	DB	00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'p', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i'
	DB	00H, 'c', 00H, '\', 00H, 'd', 00H, 'o', 00H, 'c', 00H, 'u', 00H
	DB	'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '_', 00H, '1', 00H
	DB	'_', 00H, '6', 00H, '3', 00H, '_', 00H, '0', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '\', 00H, 's', 00H
	DB	'e', 00H, 'r', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '\', 00H
	DB	'f', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 'y'
	DB	00H, '.', 00H, 'h', 00H, 'p', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@
CONST	SEGMENT
??_7?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@ DD FLAT:??_R4?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`vftable'
	DD	FLAT:??_E?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAEPAXI@Z
	DD	FLAT:?load_object_data@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBEXAAVbasic_iarchive@234@PAXI@Z
	DD	FLAT:?class_info@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ
	DD	FLAT:?tracking@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NI@Z
	DD	FLAT:?version@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE?AVversion_type@34@XZ
	DD	FLAT:?is_polymorphic@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ
	DD	FLAT:?destroy@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@EBEXPAX@Z
CONST	ENDS
;	COMDAT ??_R0?AVCContact@@@8
data$r	SEGMENT
??_R0?AVCContact@@@8 DD FLAT:??_7type_info@@6B@		; CContact `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCContact@@', 00H
data$r	ENDS
;	COMDAT ??_7?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@6B@
CONST	SEGMENT
??_7?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@6B@ DD FLAT:??_R4?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`vftable'
	DD	FLAT:?is_less_than@extended_type_info_typeid_0@typeid_system@serialization@boost@@UBE_NABVextended_type_info@34@@Z
	DD	FLAT:?is_equal@extended_type_info_typeid_0@typeid_system@serialization@boost@@UBE_NABVextended_type_info@34@@Z
	DD	FLAT:??_E?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@UAEPAXI@Z
	DD	FLAT:?get_debug_info@extended_type_info_typeid_0@typeid_system@serialization@boost@@EBEPBDXZ
	DD	FLAT:?construct@?$extended_type_info_typeid@VCContact@@@serialization@boost@@UBAPAXIZZ
	DD	FLAT:?destroy@?$extended_type_info_typeid@VCContact@@@serialization@boost@@UBEXQBX@Z
CONST	ENDS
;	COMDAT ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@ DB 'f', 00H, 'a', 00H
	DB	'l', 00H, 's', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1LC@ILBAKICL@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
CONST	SEGMENT
??_C@_1LC@ILBAKICL@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ DB 's'
	DB	00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'p', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i'
	DB	00H, 'c', 00H, '\', 00H, 'd', 00H, 'o', 00H, 'c', 00H, 'u', 00H
	DB	'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '_', 00H, '1', 00H
	DB	'_', 00H, '6', 00H, '3', 00H, '_', 00H, '0', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '\', 00H, 's', 00H
	DB	'e', 00H, 'r', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '\', 00H
	DB	'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e'
	DB	00H, 'd', 00H, '_', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H
	DB	'_', 00H, 'i', 00H, 'n', 00H, 'f', 00H, 'o', 00H, '_', 00H, 't'
	DB	00H, 'y', 00H, 'p', 00H, 'e', 00H, 'i', 00H, 'd', 00H, '.', 00H
	DB	'h', 00H, 'p', 00H, 'p', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_7?$extended_type_info_typeid@VCContact@@@serialization@boost@@6B@
CONST	SEGMENT
??_7?$extended_type_info_typeid@VCContact@@@serialization@boost@@6B@ DD FLAT:??_R4?$extended_type_info_typeid@VCContact@@@serialization@boost@@6B@ ; boost::serialization::extended_type_info_typeid<CContact>::`vftable'
	DD	FLAT:?is_less_than@extended_type_info_typeid_0@typeid_system@serialization@boost@@UBE_NABVextended_type_info@34@@Z
	DD	FLAT:?is_equal@extended_type_info_typeid_0@typeid_system@serialization@boost@@UBE_NABVextended_type_info@34@@Z
	DD	FLAT:??_E?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAEPAXI@Z
	DD	FLAT:?get_debug_info@extended_type_info_typeid_0@typeid_system@serialization@boost@@EBEPBDXZ
	DD	FLAT:?construct@?$extended_type_info_typeid@VCContact@@@serialization@boost@@UBAPAXIZZ
	DD	FLAT:?destroy@?$extended_type_info_typeid@VCContact@@@serialization@boost@@UBEXQBX@Z
CONST	ENDS
;	COMDAT ??_C@_1GC@KKEDEOBO@?$AA?$CB?$AA?5?$AAd?$AAe?$AAt?$AAa?$AAi?$AAl?$AA?3?$AA?3?$AAs?$AAi?$AAn?$AAg?$AAl?$AAe?$AAt?$AAo?$AAn?$AA_?$AAw?$AAr?$AAa?$AAp?$AAp?$AAe?$AAr?$AA?$DM?$AA?5?$AAT?$AA?5?$AA?$DO@
CONST	SEGMENT
??_C@_1GC@KKEDEOBO@?$AA?$CB?$AA?5?$AAd?$AAe?$AAt?$AAa?$AAi?$AAl?$AA?3?$AA?3?$AAs?$AAi?$AAn?$AAg?$AAl?$AAe?$AAt?$AAo?$AAn?$AA_?$AAw?$AAr?$AAa?$AAp?$AAp?$AAe?$AAr?$AA?$DM?$AA?5?$AAT?$AA?5?$AA?$DO@ DB '!'
	DB	00H, ' ', 00H, 'd', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'i', 00H
	DB	'l', 00H, ':', 00H, ':', 00H, 's', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 'l', 00H, 'e', 00H, 't', 00H, 'o', 00H, 'n', 00H, '_', 00H
	DB	'w', 00H, 'r', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, '<', 00H, ' ', 00H, 'T', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, 'm', 00H, '_', 00H, 'i', 00H, 's', 00H, '_', 00H, 'd'
	DB	00H, 'e', 00H, 's', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'y', 00H
	DB	'e', 00H, 'd', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1JC@GIHFICPP@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
CONST	SEGMENT
??_C@_1JC@GIHFICPP@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ DB 's'
	DB	00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'p', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i'
	DB	00H, 'c', 00H, '\', 00H, 'd', 00H, 'o', 00H, 'c', 00H, 'u', 00H
	DB	'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '_', 00H, '1', 00H
	DB	'_', 00H, '6', 00H, '3', 00H, '_', 00H, '0', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '\', 00H, 's', 00H
	DB	'e', 00H, 'r', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '\', 00H
	DB	's', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'l', 00H, 'e', 00H, 't'
	DB	00H, 'o', 00H, 'n', 00H, '.', 00H, 'h', 00H, 'p', 00H, 'p', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_7?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@
CONST	SEGMENT
??_7?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@ DD FLAT:??_R4?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`vftable'
	DD	FLAT:??_E?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z
	DD	FLAT:?save_object_data@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBEXAAVbasic_oarchive@234@PBX@Z
	DD	FLAT:?class_info@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ
	DD	FLAT:?tracking@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NI@Z
	DD	FLAT:?version@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE?AVversion_type@34@XZ
	DD	FLAT:?is_polymorphic@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ
CONST	ENDS
;	COMDAT ??_7?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@
CONST	SEGMENT
??_7?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@ DD FLAT:??_R4?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`vftable'
	DD	FLAT:??_E?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAEPAXI@Z
	DD	FLAT:?save_object_data@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBEXAAVbasic_oarchive@234@PBX@Z
	DD	FLAT:?class_info@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ
	DD	FLAT:?tracking@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NI@Z
	DD	FLAT:?version@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE?AVversion_type@34@XZ
	DD	FLAT:?is_polymorphic@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ
CONST	ENDS
;	COMDAT ??_7?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@6B@
CONST	SEGMENT
??_7?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@6B@ DD FLAT:??_R4?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@6B@ ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`vftable'
	DD	FLAT:?_Go@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@UAEXXZ
CONST	ENDS
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_7?$_Ref_count_obj@VCPerson@@@std@@6B@
CONST	SEGMENT
??_7?$_Ref_count_obj@VCPerson@@@std@@6B@ DD FLAT:??_R4?$_Ref_count_obj@VCPerson@@@std@@6B@ ; std::_Ref_count_obj<CPerson>::`vftable'
	DD	FLAT:?_Destroy@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ
	DD	FLAT:?_Delete_this@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ
	DD	FLAT:??_E?$_Ref_count_obj@VCPerson@@@std@@UAEPAXI@Z
	DD	FLAT:?_Get_deleter@_Ref_count_base@std@@UBEPAXABVtype_info@@@Z
CONST	ENDS
;	COMDAT ??_7?$_Ref_count_obj@VCCompany@@@std@@6B@
CONST	SEGMENT
??_7?$_Ref_count_obj@VCCompany@@@std@@6B@ DD FLAT:??_R4?$_Ref_count_obj@VCCompany@@@std@@6B@ ; std::_Ref_count_obj<CCompany>::`vftable'
	DD	FLAT:?_Destroy@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ
	DD	FLAT:?_Delete_this@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ
	DD	FLAT:??_E?$_Ref_count_obj@VCCompany@@@std@@UAEPAXI@Z
	DD	FLAT:?_Get_deleter@_Ref_count_base@std@@UBEPAXABVtype_info@@@Z
CONST	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_cast@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_cast@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
data$r	SEGMENT
??_R0?AVbad_cast@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_cast `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_cast@std@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT
__CTA2?AVbad_cast@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT
__TI2?AVbad_cast@std@@ DD 00H
	DD	FLAT:??1bad_cast@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_cast@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MG@GDGHDIKC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1MG@GDGHDIKC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H
	DB	't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '*', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@CNCHLAOB@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
CONST	SEGMENT
??_C@_1EG@CNCHLAOB@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ DB 's'
	DB	00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BAM@HBINONGC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1BAM@HBINONGC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 's', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, 'd', 00H, '_', 00H, 'p', 00H, 't', 00H, 'r', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'C', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H
	DB	'c', 00H, 't', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, '+', 00H, '=', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@
CONST	SEGMENT
??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '+', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	'f', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u'
	DB	00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H
	DB	'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BAE@OFDFOOPB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1BAE@OFDFOOPB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 's', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, 'd', 00H, '_', 00H, 'p', 00H, 't', 00H, 'r', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'C', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H
	DB	'c', 00H, 't', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, '_', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'b'
	DB	00H, 'l', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@
CONST	SEGMENT
??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 's', 00H, 'e', 00H, ' ', 00H, 'i'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, 's', 00H, 'i'
	DB	00H, 'd', 00H, 'e', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BAK@LJFLLKPP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1BAK@LJFLLKPP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 's', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, 'd', 00H, '_', 00H, 'p', 00H, 't', 00H, 'r', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'C', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H
	DB	'c', 00H, 't', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, '*', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
CONST	SEGMENT
??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BAM@EPPOFCB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1BAM@EPPOFCB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 's', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, 'd', 00H, '_', 00H, 'p', 00H, 't', 00H, 'r', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'C', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H
	DB	'c', 00H, 't', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, '+', 00H, '+', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
CONST	SEGMENT
??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
CONST	SEGMENT
??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ DB 'Stand'
	DB	'ard C++ Libraries Out of Range', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
CONST	SEGMENT
??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HDBDJBNL@Goodbye?$CB?$AA@
CONST	SEGMENT
??_C@_08HDBDJBNL@Goodbye?$CB?$AA@ DB 'Goodbye!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@MIDKGGF@You?5don?8t?5have?5any?5contacts?5to?5d@
CONST	SEGMENT
??_C@_0CH@MIDKGGF@You?5don?8t?5have?5any?5contacts?5to?5d@ DB 'You don''t'
	DB	' have any contacts to display', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OHJIHAFH@None?$AA@
CONST	SEGMENT
??_C@_04OHJIHAFH@None?$AA@ DB 'None', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KBDJCHMC@Found?5contacts?3?$AA@
CONST	SEGMENT
??_C@_0BA@KBDJCHMC@Found?5contacts?3?$AA@ DB 'Found contacts:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@KOHCCCHA@Enter?5the?5first?5name?0?5last?5name?0@
CONST	SEGMENT
??_C@_0DP@KOHCCCHA@Enter?5the?5first?5name?0?5last?5name?0@ DB 'Enter the'
	DB	' first name, last name, or company name of a contact:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03LCPHGAHP@cls?$AA@
CONST	SEGMENT
??_C@_03LCPHGAHP@cls?$AA@ DB 'cls', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@GEBCPOHK@Enter?5the?5name?5of?5the?5person?5or?5@
CONST	SEGMENT
??_C@_0EB@GEBCPOHK@Enter?5the?5name?5of?5the?5person?5or?5@ DB 'Enter the'
	DB	' name of the person or company you would like to edit:', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@GGNPEDJA@You?5don?8t?5have?5any?5contacts?5to?5e@
CONST	SEGMENT
??_C@_0CE@GGNPEDJA@You?5don?8t?5have?5any?5contacts?5to?5e@ DB 'You don'''
	DB	't have any contacts to edit', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@GFNLJBBP@The?5contact?5was?5removed?5from?5you@
CONST	SEGMENT
??_C@_0CP@GFNLJBBP@The?5contact?5was?5removed?5from?5you@ DB 'The contact'
	DB	' was removed from your contact list', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@FLPABHKE@That?5contact?5was?5not?5found?5in?5yo@
CONST	SEGMENT
??_C@_0DA@FLPABHKE@That?5contact?5was?5not?5found?5in?5yo@ DB 'That conta'
	DB	'ct was not found in your contact list', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FJ@GBCKFMI@Enter?5the?5name?5of?5the?5person?5or?5@
CONST	SEGMENT
??_C@_0FJ@GBCKFMI@Enter?5the?5name?5of?5the?5person?5or?5@ DB 'Enter the '
	DB	'name of the person or company you would like to remove from t'
	DB	'he contact list:', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05PDJBBECF@pause?$AA@
CONST	SEGMENT
??_C@_05PDJBBECF@pause?$AA@ DB 'pause', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@MNNPHAFE@You?5don?8t?5have?5any?5contacts?5to?5r@
CONST	SEGMENT
??_C@_0CG@MNNPHAFE@You?5don?8t?5have?5any?5contacts?5to?5r@ DB 'You don'''
	DB	't have any contacts to remove', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IKMOJNDM@contactList?$AA@
CONST	SEGMENT
??_C@_0M@IKMOJNDM@contactList?$AA@ DB 'contactList', 00H ; `string'
CONST	ENDS
;	COMDAT ??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@
CONST	SEGMENT
??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@ DD 00H ; std::basic_ifstream<char,std::char_traits<char> >::`vbtable'
	DD	070H
CONST	ENDS
;	COMDAT ??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ifstream<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_08FGJDGFCJ@CCompany?$AA@
CONST	SEGMENT
??_C@_08FGJDGFCJ@CCompany?$AA@ DB 'CCompany', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07EEOOECP@CPerson?$AA@
CONST	SEGMENT
??_C@_07EEOOECP@CPerson?$AA@ DB 'CPerson', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GLLABICK@People?4txt?$AA@
CONST	SEGMENT
??_C@_0L@GLLABICK@People?4txt?$AA@ DB 'People.txt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MIMFNFBN@Companies?4txt?$AA@
CONST	SEGMENT
??_C@_0O@MIMFNFBN@Companies?4txt?$AA@ DB 'Companies.txt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@
CONST	SEGMENT
??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@ DD 00H ; std::basic_ofstream<char,std::char_traits<char> >::`vbtable'
	DD	068H
CONST	ENDS
;	COMDAT ??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ofstream<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
	DD	FLAT:?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	FLAT:?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ
	DD	FLAT:?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z
	DD	FLAT:?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
	DD	FLAT:?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z
	DD	FLAT:?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_7text_oarchive@archive@boost@@6B@
CONST	SEGMENT
??_7text_oarchive@archive@boost@@6B@ DD FLAT:??_R4text_oarchive@archive@boost@@6B@ ; boost::archive::text_oarchive::`vftable'
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXUtracking_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXABUclass_name_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_reference_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_optional_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_reference_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_id_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVversion_type@34@@Z
	DD	FLAT:??_Etext_oarchive@archive@boost@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@6B@
CONST	SEGMENT
??_7?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@6B@ DD FLAT:??_R4?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@6B@ ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`vftable'
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXUtracking_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXABUclass_name_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_reference_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_optional_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_reference_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_id_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVversion_type@34@@Z
	DD	FLAT:??_E?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@MAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@6B@
CONST	SEGMENT
??_7?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@6B@ DD FLAT:??_R4?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@6B@ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`vftable'
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXUtracking_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXABUclass_name_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_reference_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_optional_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_reference_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_id_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVversion_type@34@@Z
	DD	FLAT:??_E?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@MAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7text_iarchive@archive@boost@@6B@
CONST	SEGMENT
??_7text_iarchive@archive@boost@@6B@ DD FLAT:??_R4text_iarchive@archive@boost@@6B@ ; boost::archive::text_iarchive::`vftable'
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUtracking_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUclass_name_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_optional_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVobject_id_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVversion_type@34@@Z
	DD	FLAT:??_Etext_iarchive@archive@boost@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@6B@
CONST	SEGMENT
??_7?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@6B@ DD FLAT:??_R4?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@6B@ ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`vftable'
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUtracking_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUclass_name_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_optional_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVobject_id_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVversion_type@34@@Z
	DD	FLAT:??_E?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@MAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@6B@
CONST	SEGMENT
??_7?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@6B@ DD FLAT:??_R4?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@6B@ ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`vftable'
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUtracking_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUclass_name_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_optional_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVobject_id_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVversion_type@34@@Z
	DD	FLAT:??_E?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@MAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
CONST	SEGMENT
??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 'v'
	DB	00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'A', 00H
	DB	'r', 00H, 'g', 00H, 'u', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
CONST	SEGMENT
??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ DB 'Standa'
	DB	'rd C++ Libraries Invalid Argument', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GE@MNCNLAH@?$AAt?$AA_?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAb?$AAo?$AAo?$AAs?$AAt?$AA?3?$AA?3?$AAi?$AAn?$AAt?$AAe?$AAg?$AAe?$AAr?$AA_?$AAt?$AAr?$AAa?$AAi?$AAt?$AAs?$AA?$DM?$AAb?$AAa?$AAs?$AAe@
CONST	SEGMENT
??_C@_1GE@MNCNLAH@?$AAt?$AA_?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAb?$AAo?$AAo?$AAs?$AAt?$AA?3?$AA?3?$AAi?$AAn?$AAt?$AAe?$AAg?$AAe?$AAr?$AA_?$AAt?$AAr?$AAa?$AAi?$AAt?$AAs?$AA?$DM?$AAb?$AAa?$AAs?$AAe@ DB 't'
	DB	00H, '_', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'b', 00H
	DB	'o', 00H, 'o', 00H, 's', 00H, 't', 00H, ':', 00H, ':', 00H, 'i'
	DB	00H, 'n', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'e', 00H, 'r', 00H
	DB	'_', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'i', 00H, 't', 00H, 's'
	DB	00H, '<', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H
	DB	'm', 00H, 'a', 00H, 'x', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@DBEBMPEE@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
CONST	SEGMENT
??_C@_1IO@DBEBMPEE@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ DB 's'
	DB	00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'p', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i'
	DB	00H, 'c', 00H, '\', 00H, 'd', 00H, 'o', 00H, 'c', 00H, 'u', 00H
	DB	'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '_', 00H, '1', 00H
	DB	'_', 00H, '6', 00H, '3', 00H, '_', 00H, '0', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '\', 00H, 'a', 00H
	DB	'r', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'v', 00H, 'e', 00H, '\'
	DB	00H, 'b', 00H, 'a', 00H, 's', 00H, 'i', 00H, 'c', 00H, '_', 00H
	DB	'a', 00H, 'r', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'v', 00H, 'e'
	DB	00H, '.', 00H, 'h', 00H, 'p', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7_Pad@std@@6B@
CONST	SEGMENT
??_7_Pad@std@@6B@ DD FLAT:??_R4_Pad@std@@6B@		; std::_Pad::`vftable'
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7_Ref_count_base@std@@6B@
CONST	SEGMENT
??_7_Ref_count_base@std@@6B@ DD FLAT:??_R4_Ref_count_base@std@@6B@ ; std::_Ref_count_base::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:??_E_Ref_count_base@std@@UAEPAXI@Z
	DD	FLAT:?_Get_deleter@_Ref_count_base@std@@UBEPAXABVtype_info@@@Z
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT
??_C@_08EPJLHIJG@bad?5cast?$AA@ DB 'bad cast', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7bad_cast@std@@6B@
CONST	SEGMENT
??_7bad_cast@std@@6B@ DD FLAT:??_R4bad_cast@std@@6B@	; std::bad_cast::`vftable'
	DD	FLAT:??_Ebad_cast@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT
?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB DD 0ffffffffH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
CONST	ENDS
;	COMDAT ??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@
CONST	SEGMENT
??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'u', 00H
	DB	's', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '-', 00H, ' ', 00H, '_'
	DB	00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'c', 00H, 'o', 00H
	DB	'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'e', 00H, 'r'
	DB	00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '_', 00H, 'N', 00H
	DB	'O', 00H, 'N', 00H, '_', 00H, 'U', 00H, 'S', 00H, 'E', 00H, 'R'
	DB	00H, '_', 00H, 'S', 00H, 'I', 00H, 'Z', 00H, 'E', 00H, '"', 00H
	DB	' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@
CONST	SEGMENT
??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@ DB '_Ptr_u'
	DB	'ser - _Ptr_container <= _NON_USER_SIZE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@
CONST	SEGMENT
??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@ DB '"'
	DB	00H, '2', 00H, ' ', 00H, '*', 00H, ' ', 00H, 's', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, 'o', 00H, 'f', 00H, '(', 00H, 'v', 00H, 'o'
	DB	00H, 'i', 00H, 'd', 00H, ' ', 00H, '*', 00H, ')', 00H, ' ', 00H
	DB	'<', 00H, '=', 00H, ' ', 00H, '_', 00H, 'P', 00H, 't', 00H, 'r'
	DB	00H, '_', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'-', 00H, ' ', 00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_'
	DB	00H, 'c', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H
	DB	'n', 00H, 'e', 00H, 'r', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@
CONST	SEGMENT
??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@ DB '2'
	DB	' * sizeof(void *) <= _Ptr_user - _Ptr_container', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
CONST	SEGMENT
??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'e'
	DB	00H, 'r', 00H, ' ', 00H, '<', 00H, ' ', 00H, '_', 00H, 'P', 00H
	DB	't', 00H, 'r', 00H, '_', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@
CONST	SEGMENT
??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@ DB '_Ptr_containe'
	DB	'r < _Ptr_user', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@
CONST	SEGMENT
??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@ DB '"'
	DB	00H, 'r', 00H, 'e', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'p', 00H, 'r', 00H, 'e', 00H, 't', 00H, '_', 00H, 'c'
	DB	00H, 'a', 00H, 's', 00H, 't', 00H, '<', 00H, 'u', 00H, 'i', 00H
	DB	'n', 00H, 't', 00H, 'p', 00H, 't', 00H, 'r', 00H, '_', 00H, 't'
	DB	00H, ' ', 00H, '*', 00H, '>', 00H, '(', 00H, '_', 00H, 'P', 00H
	DB	't', 00H, 'r', 00H, '_', 00H, 'p', 00H, 't', 00H, 'r', 00H, ')'
	DB	00H, '[', 00H, '-', 00H, '1', 00H, ']', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, '_', 00H, 'B', 00H, 'I', 00H, 'G', 00H, '_'
	DB	00H, 'A', 00H, 'L', 00H, 'L', 00H, 'O', 00H, 'C', 00H, 'A', 00H
	DB	'T', 00H, 'I', 00H, 'O', 00H, 'N', 00H, '_', 00H, 'S', 00H, 'E'
	DB	00H, 'N', 00H, 'T', 00H, 'I', 00H, 'N', 00H, 'E', 00H, 'L', 00H
	DB	'"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@
CONST	SEGMENT
??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@ DB 'rei'
	DB	'nterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] == _BIG_ALLOCATION_S'
	DB	'ENTINEL', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@
CONST	SEGMENT
??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@ DB '"'
	DB	00H, '(', 00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H
	DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '&', 00H, ' '
	DB	00H, '(', 00H, '_', 00H, 'B', 00H, 'I', 00H, 'G', 00H, '_', 00H
	DB	'A', 00H, 'L', 00H, 'L', 00H, 'O', 00H, 'C', 00H, 'A', 00H, 'T'
	DB	00H, 'I', 00H, 'O', 00H, 'N', 00H, '_', 00H, 'A', 00H, 'L', 00H
	DB	'I', 00H, 'G', 00H, 'N', 00H, 'M', 00H, 'E', 00H, 'N', 00H, 'T'
	DB	00H, ' ', 00H, '-', 00H, ' ', 00H, '1', 00H, ')', 00H, ')', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, '"', 00H, ' '
	DB	00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@
CONST	SEGMENT
??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@ DB '(_Ptr'
	DB	'_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'D', 00H
	DB	'e', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@MLOBABC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AA_?$AAS?$AAz?$AA?$CC?$AA?5?$AA?$CG@
CONST	SEGMENT
??_C@_1EI@MLOBABC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AA_?$AAS?$AAz?$AA?$CC?$AA?5?$AA?$CG@ DB '"'
	DB	00H, '_', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H
	DB	' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '(', 00H, 's', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, '_', 00H, 't', 00H, ')', 00H, '(', 00H
	DB	'-', 00H, '1', 00H, ')', 00H, ' ', 00H, '/', 00H, ' ', 00H, '_'
	DB	00H, 'S', 00H, 'z', 00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H
	DB	' ', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@HMCJOMKN@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5_Sz?$AA@
CONST	SEGMENT
??_C@_0BN@HMCJOMKN@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5_Sz?$AA@ DB '_'
	DB	'Count <= (size_t)(-1) / _Sz', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA DD 05cH ; `std::_Deallocate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CC@GKJLLHIM@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@GKJLLHIM@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09GLJCAGLP@_Ptr?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_09GLJCAGLP@_Ptr?5?$CB?$DN?50?$AA@ DB '_Ptr != 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H, 'e'
	DB	00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@ DB '%', 00H, 'l', 00H, 's', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'e'
	DB	00H, 'r', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H
	DB	'"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@ DB '_Ptr_container !='
	DB	' 0', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA DD 030H	; `std::_Allocate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ DB 'I'
	DB	00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H, 'O', 00H
	DB	'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T', 00H, ' '
	DB	00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H, 'P', 00H
	DB	'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@MHADJNIL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@MHADJNIL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H, 't'
	DB	00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception?$AA@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception?$AA@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z$0
__ehfuncinfo$??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z$0
__ehfuncinfo$??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z$0
__ehfuncinfo$??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z$0
__ehfuncinfo$??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z$0
__ehfuncinfo$??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z$0
__ehfuncinfo$??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z$0
__ehfuncinfo$??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z$0
__ehfuncinfo$??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z$0
__ehfuncinfo$??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z$1
__ehfuncinfo$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z$0
__ehfuncinfo$??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z$1
__ehfuncinfo$??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z$1
__ehfuncinfo$??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z$1
__ehfuncinfo$??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z$1
__ehfuncinfo$??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z$1
__ehfuncinfo$??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ$0
__ehfuncinfo$?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ$0
__ehfuncinfo$??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ$0
__ehfuncinfo$?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ$0
__ehfuncinfo$?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z$0
__unwindtable$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z$2
__ehfuncinfo$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0
__ehfuncinfo$??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z$0
__ehfuncinfo$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXPAV12@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z$0
__ehfuncinfo$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$0
__tryblocktable$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$3
__unwindtable$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0
__ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ$1
__ehfuncinfo$??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ$1
__ehfuncinfo$??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z$0
__ehfuncinfo$??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z$0
__ehfuncinfo$??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z$1
__ehfuncinfo$??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Destroy@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z$1
__ehfuncinfo$??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Destroy@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z$0
__ehfuncinfo$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z$0
__ehfuncinfo$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0
__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3
__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ$1
__ehfuncinfo$??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ$1
__ehfuncinfo$??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z$0
__ehfuncinfo$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$_main DD 019930522H
	DD	01dH
	DD	FLAT:__unwindtable$_main
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$_main DD 0ffffffffH
	DD	FLAT:__unwindfunclet$_main$0
	DD	00H
	DD	FLAT:__unwindfunclet$_main$1
	DD	01H
	DD	FLAT:__unwindfunclet$_main$2
	DD	02H
	DD	FLAT:__unwindfunclet$_main$3
	DD	03H
	DD	FLAT:__unwindfunclet$_main$4
	DD	04H
	DD	FLAT:__unwindfunclet$_main$5
	DD	03H
	DD	FLAT:__unwindfunclet$_main$6
	DD	06H
	DD	FLAT:__unwindfunclet$_main$7
	DD	03H
	DD	FLAT:__unwindfunclet$_main$8
	DD	08H
	DD	FLAT:__unwindfunclet$_main$9
	DD	03H
	DD	FLAT:__unwindfunclet$_main$11
	DD	0aH
	DD	FLAT:__unwindfunclet$_main$12
	DD	0bH
	DD	FLAT:__unwindfunclet$_main$13
	DD	0cH
	DD	FLAT:__unwindfunclet$_main$14
	DD	0bH
	DD	FLAT:__unwindfunclet$_main$16
	DD	03H
	DD	FLAT:__unwindfunclet$_main$19
	DD	0fH
	DD	FLAT:__unwindfunclet$_main$20
	DD	03H
	DD	FLAT:__unwindfunclet$_main$22
	DD	011H
	DD	FLAT:__unwindfunclet$_main$23
	DD	012H
	DD	FLAT:__unwindfunclet$_main$24
	DD	013H
	DD	FLAT:__unwindfunclet$_main$25
	DD	012H
	DD	FLAT:__unwindfunclet$_main$27
	DD	03H
	DD	FLAT:__unwindfunclet$_main$28
	DD	016H
	DD	FLAT:__unwindfunclet$_main$29
	DD	017H
	DD	FLAT:__unwindfunclet$_main$30
	DD	016H
	DD	FLAT:__unwindfunclet$_main$30
	DD	019H
	DD	FLAT:__unwindfunclet$_main$31
	DD	03H
	DD	FLAT:__unwindfunclet$_main$32
	DD	01bH
	DD	FLAT:__unwindfunclet$_main$33
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$?0VCPerson@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCPerson@@@1@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$shared_ptr@VCPerson@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$shared_ptr@VCPerson@@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z$1
__ehfuncinfo$??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$?0VCCompany@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCCompany@@@1@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$shared_ptr@VCCompany@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$shared_ptr@VCCompany@@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z$1
__ehfuncinfo$??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z$2
__ehfuncinfo$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$21 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$6
__catchsym$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$20 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$4
__catchsym$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$19 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$2
__catchsym$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$18 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$0
__ehfuncinfo$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 019930522H
	DD	012H
	DD	FLAT:__unwindtable$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	DD	04H
	DD	FLAT:__tryblocktable$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 05H
	DD	06H
	DD	07H
	DD	01H
	DD	FLAT:__catchsym$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$18
	DD	00H
	DD	07H
	DD	08H
	DD	01H
	DD	FLAT:__catchsym$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$19
	DD	0eH
	DD	0fH
	DD	010H
	DD	01H
	DD	FLAT:__catchsym$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$20
	DD	09H
	DD	010H
	DD	011H
	DD	01H
	DD	FLAT:__catchsym$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$21
__unwindtable$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$8
	DD	01H
	DD	FLAT:__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$9
	DD	00H
	DD	FLAT:__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$9
	DD	03H
	DD	FLAT:__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$10
	DD	04H
	DD	00H
	DD	05H
	DD	FLAT:__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$12
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	09H
	DD	FLAT:__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$13
	DD	0aH
	DD	FLAT:__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$14
	DD	09H
	DD	FLAT:__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$14
	DD	0cH
	DD	FLAT:__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$15
	DD	0dH
	DD	00H
	DD	0eH
	DD	FLAT:__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$17
	DD	0dH
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$3
	DD	00H
	DD	FLAT:__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$3
	DD	00H
	DD	FLAT:__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$4
	DD	00H
	DD	FLAT:__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z$0
__ehfuncinfo$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z$0
__ehfuncinfo$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z$2
__ehfuncinfo$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z$0
__ehfuncinfo$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 019930522H
	DD	0cH
	DD	FLAT:__unwindtable$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$3
	DD	05H
	DD	FLAT:__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$4
	DD	06H
	DD	FLAT:__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$5
	DD	07H
	DD	FLAT:__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$6
	DD	08H
	DD	FLAT:__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$7
	DD	08H
	DD	FLAT:__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$9
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$shared_ptr@VCContact@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$shared_ptr@VCContact@@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$shared_ptr@VCContact@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z$0
__ehfuncinfo$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z$0
__ehfuncinfo$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z$0
__ehfuncinfo$?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z$0
__ehfuncinfo$?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$5
	DD	04H
	DD	FLAT:__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$6
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z$0
__ehfuncinfo$?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1ios_precision_saver@io@boost@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1ios_flags_saver@io@boost@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?get_id@this_thread@std@@YA?AVid@thread@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?get_id@thread@std@@QBE?AVid@12@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Pad@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_Pad@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_Pad@std@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0_Pad@std@@QAE@XZ$1
__ehfuncinfo$??0_Pad@std@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0_Pad@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1locale@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1
__ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0
__ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Container_base12@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??instance$initializer$@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@0P6AXXZA@@3P6AXXZA DD FLAT:??__E?instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@VCContact@@@23@A@@YAXXZ ; ??instance$initializer$@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@0P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??instance$initializer$@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0P6AXXZA@@3P6AXXZA DD FLAT:??__E?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@A@@YAXXZ ; ??instance$initializer$@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Odsp /RTCsu /ZI
;	COMDAT ??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z
_TEXT	SEGMENT
??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z PROC ; std::basic_ofstream<char,std::char_traits<char> >::`vector deleting destructor', COMDAT
	sub	ecx, DWORD PTR [ecx-4]
	jmp	??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z ENDP ; std::basic_ofstream<char,std::char_traits<char> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu /ZI
;	COMDAT ??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z
_TEXT	SEGMENT
??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z PROC ; std::basic_ifstream<char,std::char_traits<char> >::`vector deleting destructor', COMDAT
	sub	ecx, DWORD PTR [ecx-4]
	jmp	??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z ENDP ; std::basic_ifstream<char,std::char_traits<char> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\access.hpp
;	COMDAT ??$member_load@Vtext_iarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAVCContact@@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$member_load@Vtext_iarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAVCContact@@I@Z PROC ; boost::serialization::access::member_load<boost::archive::text_iarchive,CContact>, COMDAT

; 98   :     ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 99   :         t.load(ar, file_version);

	mov	esi, esp
	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	mov	edx, DWORD PTR _t$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [eax+44]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 100  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$member_load@Vtext_iarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAVCContact@@I@Z ENDP ; boost::serialization::access::member_load<boost::archive::text_iarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\split_member.hpp
;	COMDAT ?invoke@?$member_loader@Vtext_iarchive@archive@boost@@VCContact@@@detail@serialization@boost@@SAXAAVtext_iarchive@archive@4@AAVCContact@@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
?invoke@?$member_loader@Vtext_iarchive@archive@boost@@VCContact@@@detail@serialization@boost@@SAXAAVtext_iarchive@archive@4@AAVCContact@@I@Z PROC ; boost::serialization::detail::member_loader<boost::archive::text_iarchive,CContact>::invoke, COMDAT

; 53   :         ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 54   :             access::member_load(ar, t, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$member_load@Vtext_iarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAVCContact@@I@Z ; boost::serialization::access::member_load<boost::archive::text_iarchive,CContact>
	add	esp, 12					; 0000000cH

; 55   :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?invoke@?$member_loader@Vtext_iarchive@archive@boost@@VCContact@@@detail@serialization@boost@@SAXAAVtext_iarchive@archive@4@AAVCContact@@I@Z ENDP ; boost::serialization::detail::member_loader<boost::archive::text_iarchive,CContact>::invoke
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\access.hpp
;	COMDAT ??$member_save@Vtext_oarchive@archive@boost@@$$CBVCContact@@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@ABVCContact@@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$member_save@Vtext_oarchive@archive@boost@@$$CBVCContact@@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@ABVCContact@@I@Z PROC ; boost::serialization::access::member_save<boost::archive::text_oarchive,CContact const >, COMDAT

; 90   :     ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 91   :         t.save(ar, file_version);

	mov	esi, esp
	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	mov	edx, DWORD PTR _t$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [eax+40]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 92   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$member_save@Vtext_oarchive@archive@boost@@$$CBVCContact@@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@ABVCContact@@I@Z ENDP ; boost::serialization::access::member_save<boost::archive::text_oarchive,CContact const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\split_member.hpp
;	COMDAT ??$split_member@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$split_member@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z PROC ; boost::serialization::split_member<boost::archive::text_iarchive,CContact>, COMDAT

; 63   : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 64   :     typedef typename mpl::eval_if<
; 65   :         typename Archive::is_saving,
; 66   :         mpl::identity<detail::member_saver<Archive, T> >, 
; 67   :         mpl::identity<detail::member_loader<Archive, T> >
; 68   :     >::type typex;
; 69   :     typex::invoke(ar, t, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	?invoke@?$member_loader@Vtext_iarchive@archive@boost@@VCContact@@@detail@serialization@boost@@SAXAAVtext_iarchive@archive@4@AAVCContact@@I@Z ; boost::serialization::detail::member_loader<boost::archive::text_iarchive,CContact>::invoke
	add	esp, 12					; 0000000cH

; 70   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$split_member@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z ENDP ; boost::serialization::split_member<boost::archive::text_iarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\split_member.hpp
;	COMDAT ?invoke@?$member_saver@Vtext_oarchive@archive@boost@@VCContact@@@detail@serialization@boost@@SAXAAVtext_oarchive@archive@4@ABVCContact@@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
?invoke@?$member_saver@Vtext_oarchive@archive@boost@@VCContact@@@detail@serialization@boost@@SAXAAVtext_oarchive@archive@4@ABVCContact@@I@Z PROC ; boost::serialization::detail::member_saver<boost::archive::text_oarchive,CContact>::invoke, COMDAT

; 42   :         ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 43   :             access::member_save(ar, t, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$member_save@Vtext_oarchive@archive@boost@@$$CBVCContact@@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@ABVCContact@@I@Z ; boost::serialization::access::member_save<boost::archive::text_oarchive,CContact const >
	add	esp, 12					; 0000000cH

; 44   :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?invoke@?$member_saver@Vtext_oarchive@archive@boost@@VCContact@@@detail@serialization@boost@@SAXAAVtext_oarchive@archive@4@ABVCContact@@I@Z ENDP ; boost::serialization::detail::member_saver<boost::archive::text_oarchive,CContact>::invoke
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\contact.h
;	COMDAT ??$serialize@Vtext_iarchive@archive@boost@@@CContact@@IAEXAAVtext_iarchive@archive@boost@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ar$ = 8						; size = 4
_file_version$ = 12					; size = 4
??$serialize@Vtext_iarchive@archive@boost@@@CContact@@IAEXAAVtext_iarchive@archive@boost@@I@Z PROC ; CContact::serialize<boost::archive::text_iarchive>, COMDAT
; _this$ = ecx

; 45   : 	BOOST_SERIALIZATION_SPLIT_MEMBER()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$split_member@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z ; boost::serialization::split_member<boost::archive::text_iarchive,CContact>
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$serialize@Vtext_iarchive@archive@boost@@@CContact@@IAEXAAVtext_iarchive@archive@boost@@I@Z ENDP ; CContact::serialize<boost::archive::text_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\smart_cast.hpp
;	COMDAT ??$cast@Vbasic_iarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@5@AAVbasic_iarchive@detail@75@@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??$cast@Vbasic_iarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@5@AAVbasic_iarchive@detail@75@@Z PROC ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::polymorphic::cross::cast<boost::archive::detail::basic_iarchive>, COMDAT

; 79   :                 static T cast(U & u){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 80   :                     return dynamic_cast< T >(u);

	push	1
	push	OFFSET ??_R0?AVtext_iarchive@archive@boost@@@8
	push	OFFSET ??_R0?AVbasic_iarchive@detail@archive@boost@@@8
	push	0
	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H

; 81   :                 }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$cast@Vbasic_iarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@5@AAVbasic_iarchive@detail@75@@Z ENDP ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::polymorphic::cross::cast<boost::archive::detail::basic_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\split_member.hpp
;	COMDAT ??$split_member@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$split_member@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z PROC ; boost::serialization::split_member<boost::archive::text_oarchive,CContact>, COMDAT

; 63   : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 64   :     typedef typename mpl::eval_if<
; 65   :         typename Archive::is_saving,
; 66   :         mpl::identity<detail::member_saver<Archive, T> >, 
; 67   :         mpl::identity<detail::member_loader<Archive, T> >
; 68   :     >::type typex;
; 69   :     typex::invoke(ar, t, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	?invoke@?$member_saver@Vtext_oarchive@archive@boost@@VCContact@@@detail@serialization@boost@@SAXAAVtext_oarchive@archive@4@ABVCContact@@I@Z ; boost::serialization::detail::member_saver<boost::archive::text_oarchive,CContact>::invoke
	add	esp, 12					; 0000000cH

; 70   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$split_member@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z ENDP ; boost::serialization::split_member<boost::archive::text_oarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\access.hpp
;	COMDAT ??$serialize@Vtext_iarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAVCContact@@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize@Vtext_iarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAVCContact@@I@Z PROC ; boost::serialization::access::serialize<boost::archive::text_iarchive,CContact>, COMDAT

; 106  :     ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 107  :         // note: if you get a compile time error here with a
; 108  :         // message something like:
; 109  :         // cannot convert parameter 1 from <file type 1> to <file type 2 &>
; 110  :         // a likely possible cause is that the class T contains a 
; 111  :         // serialize function - but that serialize function isn't 
; 112  :         // a template and corresponds to a file type different than
; 113  :         // the class Archive.  To resolve this, don't include an
; 114  :         // archive type other than that for which the serialization
; 115  :         // function is defined!!!
; 116  :         t.serialize(ar, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _t$[ebp]
	call	??$serialize@Vtext_iarchive@archive@boost@@@CContact@@IAEXAAVtext_iarchive@archive@boost@@I@Z ; CContact::serialize<boost::archive::text_iarchive>

; 117  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$serialize@Vtext_iarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAVCContact@@I@Z ENDP ; boost::serialization::access::serialize<boost::archive::text_iarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\smart_cast.hpp
;	COMDAT ??$cast@Vbasic_iarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@4@AAVbasic_iarchive@detail@64@@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??$cast@Vbasic_iarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@4@AAVbasic_iarchive@detail@64@@Z PROC ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::polymorphic::cast<boost::archive::detail::basic_iarchive>, COMDAT

; 85   :             static T cast(U & u){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 86   :                 // if we're in debug mode
; 87   :                 #if ! defined(NDEBUG)                               \
; 88   :                 || defined(__MWERKS__)
; 89   :                     // do a checked dynamic cast
; 90   :                     return cross::cast(u);

	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	call	??$cast@Vbasic_iarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@5@AAVbasic_iarchive@detail@75@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::polymorphic::cross::cast<boost::archive::detail::basic_iarchive>
	add	esp, 4

; 91   :                 #else
; 92   :                     // borland 5.51 chokes here so we can't use it
; 93   :                     // note: if remove_reference isn't function for these types
; 94   :                     // cross casting will be selected this will work but will
; 95   :                     // not be the most efficient method. This will conflict with
; 96   :                     // the original smart_cast motivation.
; 97   :                     typedef typename mpl::eval_if<
; 98   :                             typename mpl::and_<
; 99   :                                 mpl::not_<is_base_and_derived<
; 100  :                                     typename remove_reference< T >::type,
; 101  :                                     U
; 102  :                                 > >,
; 103  :                                 mpl::not_<is_base_and_derived<
; 104  :                                     U,
; 105  :                                     typename remove_reference< T >::type
; 106  :                                 > >
; 107  :                             >,
; 108  :                             // borland chokes w/o full qualification here
; 109  :                             mpl::identity<cross>,
; 110  :                             mpl::identity<linear>
; 111  :                     >::type typex;
; 112  :                     // typex works around gcc 2.95 issue
; 113  :                     return typex::cast(u);
; 114  :                 #endif
; 115  :             }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$cast@Vbasic_iarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@4@AAVbasic_iarchive@detail@64@@Z ENDP ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::polymorphic::cast<boost::archive::detail::basic_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\contact.h
;	COMDAT ??$serialize@Vtext_oarchive@archive@boost@@@CContact@@IAEXAAVtext_oarchive@archive@boost@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ar$ = 8						; size = 4
_file_version$ = 12					; size = 4
??$serialize@Vtext_oarchive@archive@boost@@@CContact@@IAEXAAVtext_oarchive@archive@boost@@I@Z PROC ; CContact::serialize<boost::archive::text_oarchive>, COMDAT
; _this$ = ecx

; 45   : 	BOOST_SERIALIZATION_SPLIT_MEMBER()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$split_member@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z ; boost::serialization::split_member<boost::archive::text_oarchive,CContact>
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$serialize@Vtext_oarchive@archive@boost@@@CContact@@IAEXAAVtext_oarchive@archive@boost@@I@Z ENDP ; CContact::serialize<boost::archive::text_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\smart_cast.hpp
;	COMDAT ??$cast@Vbasic_oarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@5@AAVbasic_oarchive@detail@75@@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??$cast@Vbasic_oarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@5@AAVbasic_oarchive@detail@75@@Z PROC ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::polymorphic::cross::cast<boost::archive::detail::basic_oarchive>, COMDAT

; 79   :                 static T cast(U & u){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 80   :                     return dynamic_cast< T >(u);

	push	1
	push	OFFSET ??_R0?AVtext_oarchive@archive@boost@@@8
	push	OFFSET ??_R0?AVbasic_oarchive@detail@archive@boost@@@8
	push	0
	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H

; 81   :                 }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$cast@Vbasic_oarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@5@AAVbasic_oarchive@detail@75@@Z ENDP ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::polymorphic::cross::cast<boost::archive::detail::basic_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iprimitive.hpp
;	COMDAT ??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z
_TEXT	SEGMENT
tv91 = -400						; size = 4
tv92 = -396						; size = 4
$T2 = -388						; size = 152
$T3 = -228						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z PROC ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<unsigned int>, COMDAT
; _this$ = ecx

; 88   :     {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 388				; 00000184H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-400]
	mov	ecx, 97					; 00000061H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 89   :         if(is >> t)

	mov	esi, esp
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAI@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T3[ebp], eax
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T3[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_??Bios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@load

; 90   :             return;

	jmp	SHORT $LN1@load
$LN2@load:

; 91   :         boost::serialization::throw_exception(

	push	1
	push	0
	push	0
	push	8
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z ; boost::archive::archive_exception::archive_exception
	mov	DWORD PTR tv92[ebp], eax
	mov	eax, DWORD PTR tv92[ebp]
	mov	DWORD PTR tv91[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv91[ebp]
	push	ecx
	call	??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??_Darchive_exception@archive@boost@@QAEXXZ
$LN1@load:

; 92   :             archive_exception(archive_exception::input_stream_error)
; 93   :         );
; 94   :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 400				; 00000190H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??_Darchive_exception@archive@boost@@QAEXXZ
__ehhandler$??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-404]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z ENDP ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<unsigned int>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z
_TEXT	SEGMENT
tv92 = -388						; size = 4
tv93 = -384						; size = 4
tv72 = -384						; size = 4
$T2 = -376						; size = 152
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
___formal$ = 12						; size = 4
??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<unsigned int>, COMDAT
; _this$ = ecx

; 125  :     void save_impl(const T &t, boost::mpl::bool_<false> &){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 376				; 00000178H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-388]
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 126  :         if(os.fail())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv72[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?fail@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@save_impl

; 127  :             boost::serialization::throw_exception(

	push	1
	push	0
	push	0
	push	13					; 0000000dH
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z ; boost::archive::archive_exception::archive_exception
	mov	DWORD PTR tv93[ebp], eax
	mov	eax, DWORD PTR tv93[ebp]
	mov	DWORD PTR tv92[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv92[ebp]
	push	ecx
	call	??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??_Darchive_exception@archive@boost@@QAEXXZ
$LN2@save_impl:

; 128  :                 archive_exception(archive_exception::output_stream_error)
; 129  :             );
; 130  :         os << t;

	mov	esi, esp
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 131  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 388				; 00000184H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??_Darchive_exception@archive@boost@@QAEXXZ
__ehhandler$??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-392]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<unsigned int>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\throw_exception.hpp
;	COMDAT ??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z
_TEXT	SEGMENT
$T1 = -352						; size = 152
__$ArrayPad$ = -4					; size = 4
_e$ = 8							; size = 4
??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z PROC ; boost::serialization::throw_exception<boost::archive::archive_exception>, COMDAT

; 35   : template<class E> inline void throw_exception(E const & e){

	push	ebp
	mov	ebp, esp
	sub	esp, 356				; 00000164H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-356]
	mov	ecx, 89					; 00000059H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 36   :     throw e;

	push	1
	mov	eax, DWORD PTR _e$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0archive_exception@archive@boost@@QAE@ABV012@@Z ; boost::archive::archive_exception::archive_exception
	push	OFFSET __TI2?AVarchive_exception@archive@boost@@
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@throw_exce:

; 37   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 356				; 00000164H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ENDP ; boost::serialization::throw_exception<boost::archive::archive_exception>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iprimitive.hpp
;	COMDAT ??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z
_TEXT	SEGMENT
tv93 = -400						; size = 4
tv94 = -396						; size = 4
$T2 = -388						; size = 152
$T3 = -228						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z PROC ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::archive::object_id_type>, COMDAT
; _this$ = ecx

; 88   :     {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 388				; 00000184H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-400]
	mov	ecx, 97					; 00000061H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 89   :         if(is >> t)

	mov	ecx, DWORD PTR _t$[ebp]
	call	??Bobject_id_type@archive@boost@@QAEAAIXZ ; boost::archive::object_id_type::operator unsigned int &
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAI@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T3[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	call	DWORD PTR __imp_??Bios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@load

; 90   :             return;

	jmp	SHORT $LN1@load
$LN2@load:

; 91   :         boost::serialization::throw_exception(

	push	1
	push	0
	push	0
	push	8
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z ; boost::archive::archive_exception::archive_exception
	mov	DWORD PTR tv94[ebp], eax
	mov	eax, DWORD PTR tv94[ebp]
	mov	DWORD PTR tv93[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv93[ebp]
	push	ecx
	call	??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??_Darchive_exception@archive@boost@@QAEXXZ
$LN1@load:

; 92   :             archive_exception(archive_exception::input_stream_error)
; 93   :         );
; 94   :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 400				; 00000190H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??_Darchive_exception@archive@boost@@QAEXXZ
__ehhandler$??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-404]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z ENDP ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::archive::object_id_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iprimitive.hpp
;	COMDAT ??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z
_TEXT	SEGMENT
tv93 = -400						; size = 4
tv94 = -396						; size = 4
$T2 = -388						; size = 152
$T3 = -228						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z PROC ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::archive::class_id_type>, COMDAT
; _this$ = ecx

; 88   :     {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 388				; 00000184H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-400]
	mov	ecx, 97					; 00000061H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 89   :         if(is >> t)

	mov	ecx, DWORD PTR _t$[ebp]
	call	??Bclass_id_type@archive@boost@@QAEAAFXZ ; boost::archive::class_id_type::operator short &
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAF@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T3[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	call	DWORD PTR __imp_??Bios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@load

; 90   :             return;

	jmp	SHORT $LN1@load
$LN2@load:

; 91   :         boost::serialization::throw_exception(

	push	1
	push	0
	push	0
	push	8
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z ; boost::archive::archive_exception::archive_exception
	mov	DWORD PTR tv94[ebp], eax
	mov	eax, DWORD PTR tv94[ebp]
	mov	DWORD PTR tv93[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv93[ebp]
	push	ecx
	call	??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??_Darchive_exception@archive@boost@@QAEXXZ
$LN1@load:

; 92   :             archive_exception(archive_exception::input_stream_error)
; 93   :         );
; 94   :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 400				; 00000190H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??_Darchive_exception@archive@boost@@QAEXXZ
__ehhandler$??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-404]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z ENDP ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::archive::class_id_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iprimitive.hpp
;	COMDAT ??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z
_TEXT	SEGMENT
tv93 = -400						; size = 4
tv94 = -396						; size = 4
$T2 = -388						; size = 152
$T3 = -228						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z PROC ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::archive::tracking_type>, COMDAT
; _this$ = ecx

; 88   :     {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 388				; 00000184H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-400]
	mov	ecx, 97					; 00000061H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 89   :         if(is >> t)

	mov	ecx, DWORD PTR _t$[ebp]
	call	??Btracking_type@archive@boost@@QAEAA_NXZ ; boost::archive::tracking_type::operator bool &
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T3[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	call	DWORD PTR __imp_??Bios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@load

; 90   :             return;

	jmp	SHORT $LN1@load
$LN2@load:

; 91   :         boost::serialization::throw_exception(

	push	1
	push	0
	push	0
	push	8
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z ; boost::archive::archive_exception::archive_exception
	mov	DWORD PTR tv94[ebp], eax
	mov	eax, DWORD PTR tv94[ebp]
	mov	DWORD PTR tv93[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv93[ebp]
	push	ecx
	call	??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??_Darchive_exception@archive@boost@@QAEXXZ
$LN1@load:

; 92   :             archive_exception(archive_exception::input_stream_error)
; 93   :         );
; 94   :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 400				; 00000190H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??_Darchive_exception@archive@boost@@QAEXXZ
__ehhandler$??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-404]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z ENDP ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::archive::tracking_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z
_TEXT	SEGMENT
tv130 = -388						; size = 4
tv131 = -384						; size = 4
tv72 = -384						; size = 4
$T2 = -376						; size = 152
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
___formal$ = 12						; size = 4
??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::object_reference_type>, COMDAT
; _this$ = ecx

; 125  :     void save_impl(const T &t, boost::mpl::bool_<false> &){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 376				; 00000178H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-388]
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 126  :         if(os.fail())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv72[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?fail@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@save_impl

; 127  :             boost::serialization::throw_exception(

	push	1
	push	0
	push	0
	push	13					; 0000000dH
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z ; boost::archive::archive_exception::archive_exception
	mov	DWORD PTR tv131[ebp], eax
	mov	eax, DWORD PTR tv131[ebp]
	mov	DWORD PTR tv130[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv130[ebp]
	push	ecx
	call	??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??_Darchive_exception@archive@boost@@QAEXXZ
$LN2@save_impl:

; 128  :                 archive_exception(archive_exception::output_stream_error)
; 129  :             );
; 130  :         os << t;

	mov	ecx, DWORD PTR _t$[ebp]
	call	??Bobject_id_type@archive@boost@@QBEIXZ	; boost::archive::object_id_type::operator unsigned int
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 131  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 388				; 00000184H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??_Darchive_exception@archive@boost@@QAEXXZ
__ehhandler$??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-392]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::object_reference_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z
_TEXT	SEGMENT
tv94 = -388						; size = 4
tv95 = -384						; size = 4
tv72 = -384						; size = 4
$T2 = -376						; size = 152
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
___formal$ = 12						; size = 4
??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::class_id_type>, COMDAT
; _this$ = ecx

; 125  :     void save_impl(const T &t, boost::mpl::bool_<false> &){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 376				; 00000178H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-388]
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 126  :         if(os.fail())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv72[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?fail@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@save_impl

; 127  :             boost::serialization::throw_exception(

	push	1
	push	0
	push	0
	push	13					; 0000000dH
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z ; boost::archive::archive_exception::archive_exception
	mov	DWORD PTR tv95[ebp], eax
	mov	eax, DWORD PTR tv95[ebp]
	mov	DWORD PTR tv94[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv94[ebp]
	push	ecx
	call	??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??_Darchive_exception@archive@boost@@QAEXXZ
$LN2@save_impl:

; 128  :                 archive_exception(archive_exception::output_stream_error)
; 129  :             );
; 130  :         os << t;

	mov	ecx, DWORD PTR _t$[ebp]
	call	??Bclass_id_type@archive@boost@@QBEHXZ	; boost::archive::class_id_type::operator int
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 131  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 388				; 00000184H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??_Darchive_exception@archive@boost@@QAEXXZ
__ehhandler$??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-392]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::class_id_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z
_TEXT	SEGMENT
tv130 = -388						; size = 4
tv131 = -384						; size = 4
tv72 = -384						; size = 4
$T2 = -376						; size = 152
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
___formal$ = 12						; size = 4
??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::class_id_reference_type>, COMDAT
; _this$ = ecx

; 125  :     void save_impl(const T &t, boost::mpl::bool_<false> &){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 376				; 00000178H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-388]
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 126  :         if(os.fail())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv72[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?fail@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@save_impl

; 127  :             boost::serialization::throw_exception(

	push	1
	push	0
	push	0
	push	13					; 0000000dH
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z ; boost::archive::archive_exception::archive_exception
	mov	DWORD PTR tv131[ebp], eax
	mov	eax, DWORD PTR tv131[ebp]
	mov	DWORD PTR tv130[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv130[ebp]
	push	ecx
	call	??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??_Darchive_exception@archive@boost@@QAEXXZ
$LN2@save_impl:

; 128  :                 archive_exception(archive_exception::output_stream_error)
; 129  :             );
; 130  :         os << t;

	mov	ecx, DWORD PTR _t$[ebp]
	call	??Bclass_id_type@archive@boost@@QBEHXZ	; boost::archive::class_id_type::operator int
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 131  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 388				; 00000184H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??_Darchive_exception@archive@boost@@QAEXXZ
__ehhandler$??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-392]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::class_id_reference_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z
_TEXT	SEGMENT
tv94 = -388						; size = 4
tv95 = -384						; size = 4
tv72 = -384						; size = 4
$T2 = -376						; size = 152
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
___formal$ = 12						; size = 4
??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::tracking_type>, COMDAT
; _this$ = ecx

; 125  :     void save_impl(const T &t, boost::mpl::bool_<false> &){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 376				; 00000178H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-388]
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 126  :         if(os.fail())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv72[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?fail@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@save_impl

; 127  :             boost::serialization::throw_exception(

	push	1
	push	0
	push	0
	push	13					; 0000000dH
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z ; boost::archive::archive_exception::archive_exception
	mov	DWORD PTR tv95[ebp], eax
	mov	eax, DWORD PTR tv95[ebp]
	mov	DWORD PTR tv94[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv94[ebp]
	push	ecx
	call	??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??_Darchive_exception@archive@boost@@QAEXXZ
$LN2@save_impl:

; 128  :                 archive_exception(archive_exception::output_stream_error)
; 129  :             );
; 130  :         os << t;

	mov	ecx, DWORD PTR _t$[ebp]
	call	??Btracking_type@archive@boost@@QBE_NXZ	; boost::archive::tracking_type::operator bool
	mov	esi, esp
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 131  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 388				; 00000184H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??_Darchive_exception@archive@boost@@QAEXXZ
__ehhandler$??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-392]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::tracking_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??$serialize@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z PROC ; boost::serialization::serialize<boost::archive::text_iarchive,CContact>, COMDAT

; 67   : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 68   :     access::serialize(ar, t, static_cast<unsigned int>(file_version));

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$serialize@Vtext_iarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAVCContact@@I@Z ; boost::serialization::access::serialize<boost::archive::text_iarchive,CContact>
	add	esp, 12					; 0000000cH

; 69   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$serialize@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z ENDP ; boost::serialization::serialize<boost::archive::text_iarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\smart_cast.hpp
;	COMDAT ??$cast@Vbasic_iarchive@detail@archive@boost@@@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@3@AAVbasic_iarchive@detail@53@@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??$cast@Vbasic_iarchive@detail@archive@boost@@@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@3@AAVbasic_iarchive@detail@53@@Z PROC ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::cast<boost::archive::detail::basic_iarchive>, COMDAT

; 125  :         static T cast(U & u){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 126  :             typedef typename mpl::eval_if<
; 127  :                 boost::is_polymorphic<U>,
; 128  :                 mpl::identity<polymorphic>,
; 129  :                 mpl::identity<non_polymorphic>
; 130  :             >::type typex;
; 131  :             return typex::cast(u);

	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	call	??$cast@Vbasic_iarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@4@AAVbasic_iarchive@detail@64@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::polymorphic::cast<boost::archive::detail::basic_iarchive>
	add	esp, 4

; 132  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$cast@Vbasic_iarchive@detail@archive@boost@@@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@3@AAVbasic_iarchive@detail@53@@Z ENDP ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::cast<boost::archive::detail::basic_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\access.hpp
;	COMDAT ??$serialize@Vtext_oarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@AAVCContact@@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize@Vtext_oarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@AAVCContact@@I@Z PROC ; boost::serialization::access::serialize<boost::archive::text_oarchive,CContact>, COMDAT

; 106  :     ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 107  :         // note: if you get a compile time error here with a
; 108  :         // message something like:
; 109  :         // cannot convert parameter 1 from <file type 1> to <file type 2 &>
; 110  :         // a likely possible cause is that the class T contains a 
; 111  :         // serialize function - but that serialize function isn't 
; 112  :         // a template and corresponds to a file type different than
; 113  :         // the class Archive.  To resolve this, don't include an
; 114  :         // archive type other than that for which the serialization
; 115  :         // function is defined!!!
; 116  :         t.serialize(ar, file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _t$[ebp]
	call	??$serialize@Vtext_oarchive@archive@boost@@@CContact@@IAEXAAVtext_oarchive@archive@boost@@I@Z ; CContact::serialize<boost::archive::text_oarchive>

; 117  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$serialize@Vtext_oarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@AAVCContact@@I@Z ENDP ; boost::serialization::access::serialize<boost::archive::text_oarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\smart_cast.hpp
;	COMDAT ??$cast@Vbasic_oarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@4@AAVbasic_oarchive@detail@64@@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??$cast@Vbasic_oarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@4@AAVbasic_oarchive@detail@64@@Z PROC ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::polymorphic::cast<boost::archive::detail::basic_oarchive>, COMDAT

; 85   :             static T cast(U & u){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 86   :                 // if we're in debug mode
; 87   :                 #if ! defined(NDEBUG)                               \
; 88   :                 || defined(__MWERKS__)
; 89   :                     // do a checked dynamic cast
; 90   :                     return cross::cast(u);

	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	call	??$cast@Vbasic_oarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@5@AAVbasic_oarchive@detail@75@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::polymorphic::cross::cast<boost::archive::detail::basic_oarchive>
	add	esp, 4

; 91   :                 #else
; 92   :                     // borland 5.51 chokes here so we can't use it
; 93   :                     // note: if remove_reference isn't function for these types
; 94   :                     // cross casting will be selected this will work but will
; 95   :                     // not be the most efficient method. This will conflict with
; 96   :                     // the original smart_cast motivation.
; 97   :                     typedef typename mpl::eval_if<
; 98   :                             typename mpl::and_<
; 99   :                                 mpl::not_<is_base_and_derived<
; 100  :                                     typename remove_reference< T >::type,
; 101  :                                     U
; 102  :                                 > >,
; 103  :                                 mpl::not_<is_base_and_derived<
; 104  :                                     U,
; 105  :                                     typename remove_reference< T >::type
; 106  :                                 > >
; 107  :                             >,
; 108  :                             // borland chokes w/o full qualification here
; 109  :                             mpl::identity<cross>,
; 110  :                             mpl::identity<linear>
; 111  :                     >::type typex;
; 112  :                     // typex works around gcc 2.95 issue
; 113  :                     return typex::cast(u);
; 114  :                 #endif
; 115  :             }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$cast@Vbasic_oarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@4@AAVbasic_oarchive@detail@64@@Z ENDP ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::polymorphic::cast<boost::archive::detail::basic_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load@I@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load@I@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAI@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<unsigned int>, COMDAT
; _this$ = ecx

; 55   :     void load(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   :         basic_text_iprimitive<std::istream>::load(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<unsigned int>

; 57   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load@I@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAI@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z
_TEXT	SEGMENT
tv94 = -276						; size = 4
tv76 = -276						; size = 4
tv129 = -272						; size = 4
tv79 = -272						; size = 4
_tf$ = -69						; size = 1
_ps$ = -60						; size = 16
_fs$ = -36						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<unsigned int>, COMDAT
; _this$ = ecx

; 177  :     void save(const T & t){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 178  :         boost::io::ios_flags_saver fs(os);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@save
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN4@save
$LN3@save:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv76[ebp], edx
	mov	eax, DWORD PTR tv76[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR tv76[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv79[ebp], edx
$LN4@save:
	mov	eax, DWORD PTR tv79[ebp]
	push	eax
	lea	ecx, DWORD PTR _fs$[ebp]
	call	??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_flags_saver::ios_flags_saver
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 179  :         boost::io::ios_precision_saver ps(os);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN5@save
	mov	DWORD PTR tv129[ebp], 0
	jmp	SHORT $LN6@save
$LN5@save:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv94[ebp], edx
	mov	eax, DWORD PTR tv94[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR tv94[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv129[ebp], edx
$LN6@save:
	mov	eax, DWORD PTR tv129[ebp]
	push	eax
	lea	ecx, DWORD PTR _ps$[ebp]
	call	??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_precision_saver::ios_precision_saver
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 180  :         typename is_float<T>::type tf;
; 181  :         save_impl(t, tf);

	lea	eax, DWORD PTR _tf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<unsigned int>

; 182  :     }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _ps$[ebp]
	call	??1ios_precision_saver@io@boost@@QAE@XZ	; boost::io::ios_precision_saver::~ios_precision_saver
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fs$[ebp]
	call	??1ios_flags_saver@io@boost@@QAE@XZ	; boost::io::ios_flags_saver::~ios_flags_saver
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@save
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN14@save:
	DD	3
	DD	$LN13@save
$LN13@save:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN9@save
	DD	-60					; ffffffc4H
	DD	16					; 00000010H
	DD	$LN10@save
	DD	-69					; ffffffbbH
	DD	1
	DD	$LN11@save
$LN11@save:
	DB	116					; 00000074H
	DB	102					; 00000066H
	DB	0
$LN10@save:
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$LN9@save:
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z$0:
	lea	ecx, DWORD PTR _fs$[ebp]
	jmp	??1ios_flags_saver@io@boost@@QAE@XZ	; boost::io::ios_flags_saver::~ios_flags_saver
__unwindfunclet$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z$1:
	lea	ecx, DWORD PTR _ps$[ebp]
	jmp	??1ios_precision_saver@io@boost@@QAE@XZ	; boost::io::ios_precision_saver::~ios_precision_saver
__ehhandler$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-280]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<unsigned int>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z
_TEXT	SEGMENT
tv94 = -388						; size = 4
tv95 = -384						; size = 4
tv72 = -384						; size = 4
$T2 = -376						; size = 152
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
___formal$ = 12						; size = 4
??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::object_id_type>, COMDAT
; _this$ = ecx

; 125  :     void save_impl(const T &t, boost::mpl::bool_<false> &){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 376				; 00000178H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-388]
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 126  :         if(os.fail())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv72[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?fail@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@save_impl

; 127  :             boost::serialization::throw_exception(

	push	1
	push	0
	push	0
	push	13					; 0000000dH
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z ; boost::archive::archive_exception::archive_exception
	mov	DWORD PTR tv95[ebp], eax
	mov	eax, DWORD PTR tv95[ebp]
	mov	DWORD PTR tv94[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv94[ebp]
	push	ecx
	call	??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??_Darchive_exception@archive@boost@@QAEXXZ
$LN2@save_impl:

; 128  :                 archive_exception(archive_exception::output_stream_error)
; 129  :             );
; 130  :         os << t;

	mov	ecx, DWORD PTR _t$[ebp]
	call	??Bobject_id_type@archive@boost@@QBEIXZ	; boost::archive::object_id_type::operator unsigned int
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 131  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 388				; 00000184H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??_Darchive_exception@archive@boost@@QAEXXZ
__ehhandler$??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-392]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::object_id_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load@Vobject_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load@Vobject_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::archive::object_id_type>, COMDAT
; _this$ = ecx

; 55   :     void load(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   :         basic_text_iprimitive<std::istream>::load(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::archive::object_id_type>

; 57   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load@Vobject_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load@Vclass_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load@Vclass_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::archive::class_id_type>, COMDAT
; _this$ = ecx

; 55   :     void load(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   :         basic_text_iprimitive<std::istream>::load(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::archive::class_id_type>

; 57   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load@Vclass_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load@Utracking_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load@Utracking_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::archive::tracking_type>, COMDAT
; _this$ = ecx

; 55   :     void load(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   :         basic_text_iprimitive<std::istream>::load(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::archive::tracking_type>

; 57   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load@Utracking_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z
_TEXT	SEGMENT
tv94 = -276						; size = 4
tv76 = -276						; size = 4
tv129 = -272						; size = 4
tv79 = -272						; size = 4
_tf$ = -69						; size = 1
_ps$ = -60						; size = 16
_fs$ = -36						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::object_reference_type>, COMDAT
; _this$ = ecx

; 177  :     void save(const T & t){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 178  :         boost::io::ios_flags_saver fs(os);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@save
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN4@save
$LN3@save:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv76[ebp], edx
	mov	eax, DWORD PTR tv76[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR tv76[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv79[ebp], edx
$LN4@save:
	mov	eax, DWORD PTR tv79[ebp]
	push	eax
	lea	ecx, DWORD PTR _fs$[ebp]
	call	??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_flags_saver::ios_flags_saver
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 179  :         boost::io::ios_precision_saver ps(os);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN5@save
	mov	DWORD PTR tv129[ebp], 0
	jmp	SHORT $LN6@save
$LN5@save:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv94[ebp], edx
	mov	eax, DWORD PTR tv94[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR tv94[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv129[ebp], edx
$LN6@save:
	mov	eax, DWORD PTR tv129[ebp]
	push	eax
	lea	ecx, DWORD PTR _ps$[ebp]
	call	??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_precision_saver::ios_precision_saver
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 180  :         typename is_float<T>::type tf;
; 181  :         save_impl(t, tf);

	lea	eax, DWORD PTR _tf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::object_reference_type>

; 182  :     }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _ps$[ebp]
	call	??1ios_precision_saver@io@boost@@QAE@XZ	; boost::io::ios_precision_saver::~ios_precision_saver
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fs$[ebp]
	call	??1ios_flags_saver@io@boost@@QAE@XZ	; boost::io::ios_flags_saver::~ios_flags_saver
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@save
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN14@save:
	DD	3
	DD	$LN13@save
$LN13@save:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN9@save
	DD	-60					; ffffffc4H
	DD	16					; 00000010H
	DD	$LN10@save
	DD	-69					; ffffffbbH
	DD	1
	DD	$LN11@save
$LN11@save:
	DB	116					; 00000074H
	DB	102					; 00000066H
	DB	0
$LN10@save:
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$LN9@save:
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z$0:
	lea	ecx, DWORD PTR _fs$[ebp]
	jmp	??1ios_flags_saver@io@boost@@QAE@XZ	; boost::io::ios_flags_saver::~ios_flags_saver
__unwindfunclet$??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z$1:
	lea	ecx, DWORD PTR _ps$[ebp]
	jmp	??1ios_precision_saver@io@boost@@QAE@XZ	; boost::io::ios_precision_saver::~ios_precision_saver
__ehhandler$??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-280]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::object_reference_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z
_TEXT	SEGMENT
tv94 = -276						; size = 4
tv76 = -276						; size = 4
tv129 = -272						; size = 4
tv79 = -272						; size = 4
_tf$ = -69						; size = 1
_ps$ = -60						; size = 16
_fs$ = -36						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::class_id_type>, COMDAT
; _this$ = ecx

; 177  :     void save(const T & t){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 178  :         boost::io::ios_flags_saver fs(os);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@save
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN4@save
$LN3@save:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv76[ebp], edx
	mov	eax, DWORD PTR tv76[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR tv76[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv79[ebp], edx
$LN4@save:
	mov	eax, DWORD PTR tv79[ebp]
	push	eax
	lea	ecx, DWORD PTR _fs$[ebp]
	call	??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_flags_saver::ios_flags_saver
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 179  :         boost::io::ios_precision_saver ps(os);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN5@save
	mov	DWORD PTR tv129[ebp], 0
	jmp	SHORT $LN6@save
$LN5@save:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv94[ebp], edx
	mov	eax, DWORD PTR tv94[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR tv94[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv129[ebp], edx
$LN6@save:
	mov	eax, DWORD PTR tv129[ebp]
	push	eax
	lea	ecx, DWORD PTR _ps$[ebp]
	call	??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_precision_saver::ios_precision_saver
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 180  :         typename is_float<T>::type tf;
; 181  :         save_impl(t, tf);

	lea	eax, DWORD PTR _tf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::class_id_type>

; 182  :     }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _ps$[ebp]
	call	??1ios_precision_saver@io@boost@@QAE@XZ	; boost::io::ios_precision_saver::~ios_precision_saver
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fs$[ebp]
	call	??1ios_flags_saver@io@boost@@QAE@XZ	; boost::io::ios_flags_saver::~ios_flags_saver
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@save
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN14@save:
	DD	3
	DD	$LN13@save
$LN13@save:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN9@save
	DD	-60					; ffffffc4H
	DD	16					; 00000010H
	DD	$LN10@save
	DD	-69					; ffffffbbH
	DD	1
	DD	$LN11@save
$LN11@save:
	DB	116					; 00000074H
	DB	102					; 00000066H
	DB	0
$LN10@save:
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$LN9@save:
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z$0:
	lea	ecx, DWORD PTR _fs$[ebp]
	jmp	??1ios_flags_saver@io@boost@@QAE@XZ	; boost::io::ios_flags_saver::~ios_flags_saver
__unwindfunclet$??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z$1:
	lea	ecx, DWORD PTR _ps$[ebp]
	jmp	??1ios_precision_saver@io@boost@@QAE@XZ	; boost::io::ios_precision_saver::~ios_precision_saver
__ehhandler$??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-280]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::class_id_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z
_TEXT	SEGMENT
tv94 = -276						; size = 4
tv76 = -276						; size = 4
tv129 = -272						; size = 4
tv79 = -272						; size = 4
_tf$ = -69						; size = 1
_ps$ = -60						; size = 16
_fs$ = -36						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::class_id_reference_type>, COMDAT
; _this$ = ecx

; 177  :     void save(const T & t){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 178  :         boost::io::ios_flags_saver fs(os);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@save
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN4@save
$LN3@save:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv76[ebp], edx
	mov	eax, DWORD PTR tv76[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR tv76[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv79[ebp], edx
$LN4@save:
	mov	eax, DWORD PTR tv79[ebp]
	push	eax
	lea	ecx, DWORD PTR _fs$[ebp]
	call	??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_flags_saver::ios_flags_saver
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 179  :         boost::io::ios_precision_saver ps(os);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN5@save
	mov	DWORD PTR tv129[ebp], 0
	jmp	SHORT $LN6@save
$LN5@save:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv94[ebp], edx
	mov	eax, DWORD PTR tv94[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR tv94[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv129[ebp], edx
$LN6@save:
	mov	eax, DWORD PTR tv129[ebp]
	push	eax
	lea	ecx, DWORD PTR _ps$[ebp]
	call	??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_precision_saver::ios_precision_saver
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 180  :         typename is_float<T>::type tf;
; 181  :         save_impl(t, tf);

	lea	eax, DWORD PTR _tf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::class_id_reference_type>

; 182  :     }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _ps$[ebp]
	call	??1ios_precision_saver@io@boost@@QAE@XZ	; boost::io::ios_precision_saver::~ios_precision_saver
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fs$[ebp]
	call	??1ios_flags_saver@io@boost@@QAE@XZ	; boost::io::ios_flags_saver::~ios_flags_saver
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@save
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN14@save:
	DD	3
	DD	$LN13@save
$LN13@save:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN9@save
	DD	-60					; ffffffc4H
	DD	16					; 00000010H
	DD	$LN10@save
	DD	-69					; ffffffbbH
	DD	1
	DD	$LN11@save
$LN11@save:
	DB	116					; 00000074H
	DB	102					; 00000066H
	DB	0
$LN10@save:
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$LN9@save:
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z$0:
	lea	ecx, DWORD PTR _fs$[ebp]
	jmp	??1ios_flags_saver@io@boost@@QAE@XZ	; boost::io::ios_flags_saver::~ios_flags_saver
__unwindfunclet$??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z$1:
	lea	ecx, DWORD PTR _ps$[ebp]
	jmp	??1ios_precision_saver@io@boost@@QAE@XZ	; boost::io::ios_precision_saver::~ios_precision_saver
__ehhandler$??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-280]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::class_id_reference_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z
_TEXT	SEGMENT
tv94 = -276						; size = 4
tv76 = -276						; size = 4
tv129 = -272						; size = 4
tv79 = -272						; size = 4
_tf$ = -69						; size = 1
_ps$ = -60						; size = 16
_fs$ = -36						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::tracking_type>, COMDAT
; _this$ = ecx

; 177  :     void save(const T & t){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 178  :         boost::io::ios_flags_saver fs(os);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@save
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN4@save
$LN3@save:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv76[ebp], edx
	mov	eax, DWORD PTR tv76[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR tv76[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv79[ebp], edx
$LN4@save:
	mov	eax, DWORD PTR tv79[ebp]
	push	eax
	lea	ecx, DWORD PTR _fs$[ebp]
	call	??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_flags_saver::ios_flags_saver
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 179  :         boost::io::ios_precision_saver ps(os);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN5@save
	mov	DWORD PTR tv129[ebp], 0
	jmp	SHORT $LN6@save
$LN5@save:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv94[ebp], edx
	mov	eax, DWORD PTR tv94[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR tv94[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv129[ebp], edx
$LN6@save:
	mov	eax, DWORD PTR tv129[ebp]
	push	eax
	lea	ecx, DWORD PTR _ps$[ebp]
	call	??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_precision_saver::ios_precision_saver
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 180  :         typename is_float<T>::type tf;
; 181  :         save_impl(t, tf);

	lea	eax, DWORD PTR _tf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::tracking_type>

; 182  :     }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _ps$[ebp]
	call	??1ios_precision_saver@io@boost@@QAE@XZ	; boost::io::ios_precision_saver::~ios_precision_saver
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fs$[ebp]
	call	??1ios_flags_saver@io@boost@@QAE@XZ	; boost::io::ios_flags_saver::~ios_flags_saver
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@save
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN14@save:
	DD	3
	DD	$LN13@save
$LN13@save:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN9@save
	DD	-60					; ffffffc4H
	DD	16					; 00000010H
	DD	$LN10@save
	DD	-69					; ffffffbbH
	DD	1
	DD	$LN11@save
$LN11@save:
	DB	116					; 00000074H
	DB	102					; 00000066H
	DB	0
$LN10@save:
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$LN9@save:
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z$0:
	lea	ecx, DWORD PTR _fs$[ebp]
	jmp	??1ios_flags_saver@io@boost@@QAE@XZ	; boost::io::ios_flags_saver::~ios_flags_saver
__unwindfunclet$??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z$1:
	lea	ecx, DWORD PTR _ps$[ebp]
	jmp	??1ios_precision_saver@io@boost@@QAE@XZ	; boost::io::ios_precision_saver::~ios_precision_saver
__ehhandler$??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-280]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::tracking_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ??__E?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@A@@YAXXZ
text$di	SEGMENT
??__E?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@A@@YAXXZ PROC ; `dynamic initializer for 'boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::instance'', COMDAT

; 143  : BOOST_DLLEXPORT T & singleton< T >::instance = singleton< T >::get_instance();

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	call	?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance
	mov	DWORD PTR ?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@A, eax ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::instance
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__E?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@A@@YAXXZ ENDP ; `dynamic initializer for 'boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::instance''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??$serialize_adl@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z
_TEXT	SEGMENT
_v$ = -8						; size = 4
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize_adl@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z PROC ; boost::serialization::serialize_adl<boost::archive::text_iarchive,CContact>, COMDAT

; 116  : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 117  :     // note usage of function overloading to delay final resolution
; 118  :     // until the point of instantiation.  This works around the two-phase
; 119  :     // lookup "feature" which inhibits redefintion of a default function
; 120  :     // template implementation. Due to Robert Ramey
; 121  :     //
; 122  :     // Note that this trick generates problems for compiles which don't support
; 123  :     // PFTO, suppress it here.  As far as we know, there are no compilers
; 124  :     // which fail to support PFTO while supporting two-phase lookup.
; 125  :     const version_type v(file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	lea	ecx, DWORD PTR _v$[ebp]
	call	??0version_type@serialization@boost@@QAE@I@Z ; boost::serialization::version_type::version_type

; 126  :     serialize(ar, t, v);

	lea	ecx, DWORD PTR _v$[ebp]
	call	??Bversion_type@serialization@boost@@QBEABIXZ ; boost::serialization::version_type::operator unsigned int const &
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$serialize@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z ; boost::serialization::serialize<boost::archive::text_iarchive,CContact>
	add	esp, 12					; 0000000cH

; 127  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@serialize_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@serialize_:
	DD	1
	DD	$LN4@serialize_
$LN4@serialize_:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@serialize_
$LN3@serialize_:
	DB	118					; 00000076H
	DB	0
??$serialize_adl@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z ENDP ; boost::serialization::serialize_adl<boost::archive::text_iarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\smart_cast.hpp
;	COMDAT ??$smart_cast_reference@AAVtext_iarchive@archive@boost@@Vbasic_iarchive@detail@23@@serialization@boost@@YAAAVtext_iarchive@archive@1@AAVbasic_iarchive@detail@31@@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??$smart_cast_reference@AAVtext_iarchive@archive@boost@@Vbasic_iarchive@detail@23@@serialization@boost@@YAAAVtext_iarchive@archive@1@AAVbasic_iarchive@detail@31@@Z PROC ; boost::serialization::smart_cast_reference<boost::archive::text_iarchive &,boost::archive::detail::basic_iarchive>, COMDAT

; 268  : T smart_cast_reference(U & u) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 269  :     return smart_cast_impl::reference< T >::cast(u);

	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	call	??$cast@Vbasic_iarchive@detail@archive@boost@@@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@3@AAVbasic_iarchive@detail@53@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::cast<boost::archive::detail::basic_iarchive>
	add	esp, 4

; 270  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$smart_cast_reference@AAVtext_iarchive@archive@boost@@Vbasic_iarchive@detail@23@@serialization@boost@@YAAAVtext_iarchive@archive@1@AAVbasic_iarchive@detail@31@@Z ENDP ; boost::serialization::smart_cast_reference<boost::archive::text_iarchive &,boost::archive::detail::basic_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??$serialize@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z PROC ; boost::serialization::serialize<boost::archive::text_oarchive,CContact>, COMDAT

; 67   : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 68   :     access::serialize(ar, t, static_cast<unsigned int>(file_version));

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$serialize@Vtext_oarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@AAVCContact@@I@Z ; boost::serialization::access::serialize<boost::archive::text_oarchive,CContact>
	add	esp, 12					; 0000000cH

; 69   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$serialize@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z ENDP ; boost::serialization::serialize<boost::archive::text_oarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\smart_cast.hpp
;	COMDAT ??$cast@Vbasic_oarchive@detail@archive@boost@@@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@3@AAVbasic_oarchive@detail@53@@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??$cast@Vbasic_oarchive@detail@archive@boost@@@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@3@AAVbasic_oarchive@detail@53@@Z PROC ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::cast<boost::archive::detail::basic_oarchive>, COMDAT

; 125  :         static T cast(U & u){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 126  :             typedef typename mpl::eval_if<
; 127  :                 boost::is_polymorphic<U>,
; 128  :                 mpl::identity<polymorphic>,
; 129  :                 mpl::identity<non_polymorphic>
; 130  :             >::type typex;
; 131  :             return typex::cast(u);

	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	call	??$cast@Vbasic_oarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@4@AAVbasic_oarchive@detail@64@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::polymorphic::cast<boost::archive::detail::basic_oarchive>
	add	esp, 4

; 132  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$cast@Vbasic_oarchive@detail@archive@boost@@@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@3@AAVbasic_oarchive@detail@53@@Z ENDP ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::cast<boost::archive::detail::basic_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__Ft@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ@YAXXZ
text$yd	SEGMENT
??__Ft@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ@YAXXZ PROC ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance'::`2'::`dynamic atexit destructor for 't'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?t@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@634@A ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance'::`2'::t
	call	??1?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::~singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__Ft@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ@YAXXZ ENDP ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance'::`2'::`dynamic atexit destructor for 't''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z PROC ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::~singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z ENDP ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ PROC ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@IAE@XZ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::iserializer<boost::archive::text_iarchive,CContact>
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ ENDP ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ??1?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ PROC ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::~singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >, COMDAT
; _this$ = ecx

; 104  :     ~singleton_wrapper(){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@

; 105  :         m_is_destroyed = true;

	mov	BYTE PTR ?m_is_destroyed@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@2_NA, 1 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::m_is_destroyed

; 106  :     }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAE@XZ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::~iserializer<boost::archive::text_iarchive,CContact>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ ENDP ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::~singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_oarchive.hpp
;	COMDAT ??$save@I@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save@I@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABI@Z PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<unsigned int>, COMDAT
; _this$ = ecx

; 63   :     void save(const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 64   :         this->newtoken();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?newtoken@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::newtoken

; 65   :         basic_text_oprimitive<std::ostream>::save(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<unsigned int>

; 66   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save@I@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABI@Z ENDP ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\extended_type_info.hpp
;	COMDAT ?call@?$guid_impl@VCContact@@@ext@serialization@boost@@SAPBDXZ
_TEXT	SEGMENT
?call@?$guid_impl@VCContact@@@ext@serialization@boost@@SAPBDXZ PROC ; boost::serialization::ext::guid_impl<CContact>::call, COMDAT

; 96   :         {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 97   :             return NULL;

	xor	eax, eax

; 98   :         }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?call@?$guid_impl@VCContact@@@ext@serialization@boost@@SAPBDXZ ENDP ; boost::serialization::ext::guid_impl<CContact>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ??__E?instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@VCContact@@@23@A@@YAXXZ
text$di	SEGMENT
??__E?instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@VCContact@@@23@A@@YAXXZ PROC ; `dynamic initializer for 'boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::instance'', COMDAT

; 143  : BOOST_DLLEXPORT T & singleton< T >::instance = singleton< T >::get_instance();

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	call	?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance
	mov	DWORD PTR ?instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@VCContact@@@23@A, eax ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::instance
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__E?instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@VCContact@@@23@A@@YAXXZ ENDP ; `dynamic initializer for 'boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::instance''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z
_TEXT	SEGMENT
tv94 = -276						; size = 4
tv76 = -276						; size = 4
tv129 = -272						; size = 4
tv79 = -272						; size = 4
_tf$ = -69						; size = 1
_ps$ = -60						; size = 16
_fs$ = -36						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::object_id_type>, COMDAT
; _this$ = ecx

; 177  :     void save(const T & t){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 178  :         boost::io::ios_flags_saver fs(os);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@save
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN4@save
$LN3@save:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv76[ebp], edx
	mov	eax, DWORD PTR tv76[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR tv76[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv79[ebp], edx
$LN4@save:
	mov	eax, DWORD PTR tv79[ebp]
	push	eax
	lea	ecx, DWORD PTR _fs$[ebp]
	call	??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_flags_saver::ios_flags_saver
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 179  :         boost::io::ios_precision_saver ps(os);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN5@save
	mov	DWORD PTR tv129[ebp], 0
	jmp	SHORT $LN6@save
$LN5@save:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv94[ebp], edx
	mov	eax, DWORD PTR tv94[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR tv94[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv129[ebp], edx
$LN6@save:
	mov	eax, DWORD PTR tv129[ebp]
	push	eax
	lea	ecx, DWORD PTR _ps$[ebp]
	call	??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_precision_saver::ios_precision_saver
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 180  :         typename is_float<T>::type tf;
; 181  :         save_impl(t, tf);

	lea	eax, DWORD PTR _tf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::object_id_type>

; 182  :     }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _ps$[ebp]
	call	??1ios_precision_saver@io@boost@@QAE@XZ	; boost::io::ios_precision_saver::~ios_precision_saver
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fs$[ebp]
	call	??1ios_flags_saver@io@boost@@QAE@XZ	; boost::io::ios_flags_saver::~ios_flags_saver
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@save
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN14@save:
	DD	3
	DD	$LN13@save
$LN13@save:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN9@save
	DD	-60					; ffffffc4H
	DD	16					; 00000010H
	DD	$LN10@save
	DD	-69					; ffffffbbH
	DD	1
	DD	$LN11@save
$LN11@save:
	DB	116					; 00000074H
	DB	102					; 00000066H
	DB	0
$LN10@save:
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$LN9@save:
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z$0:
	lea	ecx, DWORD PTR _fs$[ebp]
	jmp	??1ios_flags_saver@io@boost@@QAE@XZ	; boost::io::ios_flags_saver::~ios_flags_saver
__unwindfunclet$??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z$1:
	lea	ecx, DWORD PTR _ps$[ebp]
	jmp	??1ios_precision_saver@io@boost@@QAE@XZ	; boost::io::ios_precision_saver::~ios_precision_saver
__ehhandler$??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-280]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::object_id_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save_primitive@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save_primitive@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 87   :     static void save_primitive(Archive & ar, const  T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 88   :         ar.end_preamble();

	mov	ecx, DWORD PTR _ar$[ebp]
	call	?end_preamble@basic_oarchive@detail@archive@boost@@QAEXXZ ; boost::archive::detail::basic_oarchive::end_preamble

; 89   :         ar.save(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	call	?save@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save

; 90   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save_primitive@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load_primitive@Vtext_iarchive@archive@boost@@Vversion_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVversion_type@12@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load_primitive@Vtext_iarchive@archive@boost@@Vversion_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVversion_type@12@@Z PROC ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::version_type>, COMDAT

; 106  :     static void load_primitive(Archive &ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 107  :         ar.load(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	call	?load@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@23@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load

; 108  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$load_primitive@Vtext_iarchive@archive@boost@@Vversion_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVversion_type@12@@Z ENDP ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load_primitive@Vtext_iarchive@archive@boost@@Vobject_id_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVobject_id_type@12@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load_primitive@Vtext_iarchive@archive@boost@@Vobject_id_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVobject_id_type@12@@Z PROC ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::object_id_type>, COMDAT

; 106  :     static void load_primitive(Archive &ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 107  :         ar.load(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	call	??$load@Vobject_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::archive::object_id_type>

; 108  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$load_primitive@Vtext_iarchive@archive@boost@@Vobject_id_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVobject_id_type@12@@Z ENDP ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load_primitive@Vtext_iarchive@archive@boost@@Vclass_id_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVclass_id_type@12@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load_primitive@Vtext_iarchive@archive@boost@@Vclass_id_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVclass_id_type@12@@Z PROC ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::class_id_type>, COMDAT

; 106  :     static void load_primitive(Archive &ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 107  :         ar.load(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	call	??$load@Vclass_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::archive::class_id_type>

; 108  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$load_primitive@Vtext_iarchive@archive@boost@@Vclass_id_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVclass_id_type@12@@Z ENDP ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load_primitive@Vtext_iarchive@archive@boost@@Utracking_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAUtracking_type@12@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load_primitive@Vtext_iarchive@archive@boost@@Utracking_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAUtracking_type@12@@Z PROC ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::tracking_type>, COMDAT

; 106  :     static void load_primitive(Archive &ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 107  :         ar.load(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	call	??$load@Utracking_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::archive::tracking_type>

; 108  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$load_primitive@Vtext_iarchive@archive@boost@@Utracking_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAUtracking_type@12@@Z ENDP ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_oarchive.hpp
;	COMDAT ??$save@Vobject_reference_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_reference_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save@Vobject_reference_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_reference_type@12@@Z PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::object_reference_type>, COMDAT
; _this$ = ecx

; 63   :     void save(const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 64   :         this->newtoken();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?newtoken@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::newtoken

; 65   :         basic_text_oprimitive<std::ostream>::save(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::object_reference_type>

; 66   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save@Vobject_reference_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_reference_type@12@@Z ENDP ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::object_reference_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_oarchive.hpp
;	COMDAT ??$save@Vclass_id_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save@Vclass_id_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_type@12@@Z PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::class_id_type>, COMDAT
; _this$ = ecx

; 63   :     void save(const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 64   :         this->newtoken();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?newtoken@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::newtoken

; 65   :         basic_text_oprimitive<std::ostream>::save(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::class_id_type>

; 66   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save@Vclass_id_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_type@12@@Z ENDP ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_oarchive.hpp
;	COMDAT ??$save@Vclass_id_reference_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save@Vclass_id_reference_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::class_id_reference_type>, COMDAT
; _this$ = ecx

; 63   :     void save(const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 64   :         this->newtoken();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?newtoken@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::newtoken

; 65   :         basic_text_oprimitive<std::ostream>::save(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::class_id_reference_type>

; 66   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save@Vclass_id_reference_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z ENDP ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::class_id_reference_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_oarchive.hpp
;	COMDAT ??$save@Utracking_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUtracking_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save@Utracking_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUtracking_type@12@@Z PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::tracking_type>, COMDAT
; _this$ = ecx

; 63   :     void save(const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 64   :         this->newtoken();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?newtoken@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::newtoken

; 65   :         basic_text_oprimitive<std::ostream>::save(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::tracking_type>

; 66   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save@Utracking_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUtracking_type@12@@Z ENDP ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAEPAXI@Z PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAE@XZ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::~iserializer<boost::archive::text_iarchive,CContact>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAEPAXI@Z ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??1?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAE@XZ PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::~iserializer<boost::archive::text_iarchive,CContact>, COMDAT
; _this$ = ecx

; 158  :     virtual ~iserializer(){};

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1basic_iserializer@detail@archive@boost@@MAE@XZ ; boost::archive::detail::basic_iserializer::~basic_iserializer
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAE@XZ ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::~iserializer<boost::archive::text_iarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ?is_polymorphic@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?is_polymorphic@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::is_polymorphic, COMDAT
; _this$ = ecx

; 155  :     virtual bool is_polymorphic() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 156  :         return boost::is_polymorphic< T >::value;

	mov	al, 1

; 157  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?is_polymorphic@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::is_polymorphic
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ?version@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE?AVversion_type@34@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?version@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE?AVversion_type@34@XZ PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::version, COMDAT
; _this$ = ecx

; 152  :     virtual version_type version() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 153  :         return version_type(::boost::serialization::version< T >::value);

	mov	DWORD PTR $T1[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0version_type@archive@boost@@QAE@ABI@Z ; boost::archive::version_type::version_type
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 154  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?version@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE?AVversion_type@34@XZ ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::version
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ?tracking@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NI@Z
_TEXT	SEGMENT
tv74 = -208						; size = 4
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?tracking@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NI@Z PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::tracking, COMDAT
; _this$ = ecx

; 145  :     virtual bool tracking(const unsigned int /* flags */) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 146  :         return boost::serialization::tracking_level< T >::value 

	xor	eax, eax
	jne	SHORT $LN4@tracking
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN3@tracking
	mov	ecx, DWORD PTR _this$[ebp]
	call	?serialized_as_pointer@basic_iserializer@detail@archive@boost@@QBE_NXZ ; boost::archive::detail::basic_iserializer::serialized_as_pointer
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@tracking
$LN3@tracking:
	mov	DWORD PTR tv74[ebp], 0
	jmp	SHORT $LN5@tracking
$LN4@tracking:
	mov	DWORD PTR tv74[ebp], 1
$LN5@tracking:
	mov	al, BYTE PTR tv74[ebp]

; 147  :                 == boost::serialization::track_always
; 148  :             || ( boost::serialization::tracking_level< T >::value 
; 149  :                 == boost::serialization::track_selectively
; 150  :                 && serialized_as_pointer());
; 151  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?tracking@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NI@Z ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::tracking
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ?class_info@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?class_info@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::class_info, COMDAT
; _this$ = ecx

; 141  :     virtual bool class_info() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 142  :         return boost::serialization::implementation_level< T >::value 

	mov	al, 1

; 143  :             >= boost::serialization::object_class_info;
; 144  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?class_info@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::class_info
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ?load_object_data@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBEXAAVbasic_iarchive@234@PAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ar$ = 8						; size = 4
_x$ = 12						; size = 4
_file_version$ = 16					; size = 4
?load_object_data@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBEXAAVbasic_iarchive@234@PAXI@Z PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::load_object_data, COMDAT
; _this$ = ecx

; 170  : ) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 171  :     // note: we now comment this out. Before we permited archive
; 172  :     // version # to be very large.  Now we don't.  To permit
; 173  :     // readers of these old archives, we have to suppress this 
; 174  :     // code.  Perhaps in the future we might re-enable it but
; 175  :     // permit its suppression with a runtime switch.
; 176  :     #if 0
; 177  :     // trap case where the program cannot handle the current version
; 178  :     if(file_version > static_cast<const unsigned int>(version()))
; 179  :         boost::serialization::throw_exception(
; 180  :             archive::archive_exception(
; 181  :                 boost::archive::archive_exception::unsupported_class_version,
; 182  :                 get_debug_info()
; 183  :             )
; 184  :         );
; 185  :     #endif
; 186  :     // make sure call is routed through the higest interface that might
; 187  :     // be specialized by the user.
; 188  :     boost::serialization::serialize_adl(

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$smart_cast_reference@AAVtext_iarchive@archive@boost@@Vbasic_iarchive@detail@23@@serialization@boost@@YAAAVtext_iarchive@archive@1@AAVbasic_iarchive@detail@31@@Z ; boost::serialization::smart_cast_reference<boost::archive::text_iarchive &,boost::archive::detail::basic_iarchive>
	add	esp, 4
	push	eax
	call	??$serialize_adl@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z ; boost::serialization::serialize_adl<boost::archive::text_iarchive,CContact>
	add	esp, 12					; 0000000cH

; 189  :         boost::serialization::smart_cast_reference<Archive &>(ar),
; 190  :         * static_cast<T *>(x), 
; 191  :         file_version
; 192  :     );
; 193  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?load_object_data@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBEXAAVbasic_iarchive@234@PAXI@Z ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::load_object_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??0?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@IAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@IAE@XZ PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::iserializer<boost::archive::text_iarchive,CContact>, COMDAT
; _this$ = ecx

; 134  :     {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 128  :         basic_iserializer(

	call	?get_const_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@SAABV?$extended_type_info_typeid@VCContact@@@23@XZ ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_const_instance
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0basic_iserializer@detail@archive@boost@@IAE@ABVextended_type_info@serialization@3@@Z ; boost::archive::detail::basic_iserializer::basic_iserializer

; 134  :     {}

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@IAE@XZ ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::iserializer<boost::archive::text_iarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ?destroy@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@EBEXPAX@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_address$ = 8						; size = 4
?destroy@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@EBEXPAX@Z PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::destroy, COMDAT
; _this$ = ecx

; 122  :     virtual void destroy(/*const*/ void *address) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 123  :         boost::serialization::access::destroy(static_cast<T *>(address));

	mov	eax, DWORD PTR _address$[ebp]
	push	eax
	call	??$destroy@VCContact@@@access@serialization@boost@@SAXPBVCContact@@@Z ; boost::serialization::access::destroy<CContact>
	add	esp, 4

; 124  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@EBEXPAX@Z ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?get_const_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@SAABV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ
_TEXT	SEGMENT
?get_const_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@SAABV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ PROC ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_const_instance, COMDAT

; 134  :     BOOST_DLLEXPORT static const T & get_const_instance(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 135  :         return get_instance();

	call	?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance

; 136  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?get_const_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@SAABV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ENDP ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_const_instance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ PROC ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance, COMDAT

; 121  :     BOOST_DLLEXPORT static T & get_instance() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 122  :         static detail::singleton_wrapper< T > t;

	mov	eax, DWORD PTR __tls_index
	mov	ecx, DWORD PTR fs:__tls_array
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR ?$TSS0@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_iarchive::erializer,CContact>
	cmp	eax, DWORD PTR __Init_thread_epoch[edx]
	jle	SHORT $LN2@get_instan
	push	OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_iarchive::erializer,CContact>
	call	__Init_thread_header
	add	esp, 4
	cmp	DWORD PTR ?$TSS0@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA, -1 ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_iarchive::erializer,CContact>
	jne	SHORT $LN2@get_instan
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, OFFSET ?t@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@634@A ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance'::`2'::t
	call	??0?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ
	push	OFFSET ??__Ft@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ@YAXXZ ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance'::`2'::`dynamic atexit destructor for 't''
	call	_atexit
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_iarchive::erializer,CContact>
	call	__Init_thread_footer
	add	esp, 4
$LN2@get_instan:

; 123  :         // refer to instance, causing it to be instantiated (and
; 124  :         // initialized at startup on working compilers)
; 125  :         BOOST_ASSERT(! detail::singleton_wrapper< T >::m_is_destroyed);

	movzx	eax, BYTE PTR ?m_is_destroyed@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@2_NA ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::m_is_destroyed
	test	eax, eax
	je	SHORT $LN4@get_instan
	mov	esi, esp
	push	125					; 0000007dH
	push	OFFSET ??_C@_1JC@GIHFICPP@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
	push	OFFSET ??_C@_1GC@KKEDEOBO@?$AA?$CB?$AA?5?$AAd?$AAe?$AAt?$AAa?$AAi?$AAl?$AA?3?$AA?3?$AAs?$AAi?$AAn?$AAg?$AAl?$AAe?$AAt?$AAo?$AAn?$AA_?$AAw?$AAr?$AAa?$AAp?$AAp?$AAe?$AAr?$AA?$DM?$AA?5?$AAT?$AA?5?$AA?$DO@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@get_instan:

; 126  :         use(& instance);

	mov	eax, DWORD PTR ?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@A ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::instance
	push	eax
	call	?use@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@@Z ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::use
	add	esp, 4

; 127  :         return static_cast<T &>(t);

	mov	eax, OFFSET ?t@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@634@A ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance'::`2'::t

; 128  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ$0:
	push	OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_iarchive::erializer,CContact>
	call	__Init_thread_abort
	pop	ecx
	ret	0
__ehhandler$?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ENDP ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?use@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?use@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@@Z PROC ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::use, COMDAT

; 120  :     static void use(T const *) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?use@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@@Z ENDP ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::use
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ??__E?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@A@@YAXXZ
text$di	SEGMENT
??__E?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@A@@YAXXZ PROC ; `dynamic initializer for 'boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::instance'', COMDAT

; 143  : BOOST_DLLEXPORT T & singleton< T >::instance = singleton< T >::get_instance();

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	call	?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance
	mov	DWORD PTR ?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@A, eax ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::instance
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__E?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@A@@YAXXZ ENDP ; `dynamic initializer for 'boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::instance''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??$serialize_adl@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z
_TEXT	SEGMENT
_v$ = -8						; size = 4
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize_adl@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z PROC ; boost::serialization::serialize_adl<boost::archive::text_oarchive,CContact>, COMDAT

; 116  : ){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 117  :     // note usage of function overloading to delay final resolution
; 118  :     // until the point of instantiation.  This works around the two-phase
; 119  :     // lookup "feature" which inhibits redefintion of a default function
; 120  :     // template implementation. Due to Robert Ramey
; 121  :     //
; 122  :     // Note that this trick generates problems for compiles which don't support
; 123  :     // PFTO, suppress it here.  As far as we know, there are no compilers
; 124  :     // which fail to support PFTO while supporting two-phase lookup.
; 125  :     const version_type v(file_version);

	mov	eax, DWORD PTR _file_version$[ebp]
	push	eax
	lea	ecx, DWORD PTR _v$[ebp]
	call	??0version_type@serialization@boost@@QAE@I@Z ; boost::serialization::version_type::version_type

; 126  :     serialize(ar, t, v);

	lea	ecx, DWORD PTR _v$[ebp]
	call	??Bversion_type@serialization@boost@@QBEABIXZ ; boost::serialization::version_type::operator unsigned int const &
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ar$[ebp]
	push	edx
	call	??$serialize@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z ; boost::serialization::serialize<boost::archive::text_oarchive,CContact>
	add	esp, 12					; 0000000cH

; 127  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@serialize_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@serialize_:
	DD	1
	DD	$LN4@serialize_
$LN4@serialize_:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@serialize_
$LN3@serialize_:
	DB	118					; 00000076H
	DB	0
??$serialize_adl@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z ENDP ; boost::serialization::serialize_adl<boost::archive::text_oarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\smart_cast.hpp
;	COMDAT ??$smart_cast_reference@AAVtext_oarchive@archive@boost@@Vbasic_oarchive@detail@23@@serialization@boost@@YAAAVtext_oarchive@archive@1@AAVbasic_oarchive@detail@31@@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??$smart_cast_reference@AAVtext_oarchive@archive@boost@@Vbasic_oarchive@detail@23@@serialization@boost@@YAAAVtext_oarchive@archive@1@AAVbasic_oarchive@detail@31@@Z PROC ; boost::serialization::smart_cast_reference<boost::archive::text_oarchive &,boost::archive::detail::basic_oarchive>, COMDAT

; 268  : T smart_cast_reference(U & u) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 269  :     return smart_cast_impl::reference< T >::cast(u);

	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	call	??$cast@Vbasic_oarchive@detail@archive@boost@@@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@3@AAVbasic_oarchive@detail@53@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::cast<boost::archive::detail::basic_oarchive>
	add	esp, 4

; 270  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$smart_cast_reference@AAVtext_oarchive@archive@boost@@Vbasic_oarchive@detail@23@@serialization@boost@@YAAAVtext_oarchive@archive@1@AAVbasic_oarchive@detail@31@@Z ENDP ; boost::serialization::smart_cast_reference<boost::archive::text_oarchive &,boost::archive::detail::basic_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\extended_type_info.hpp
;	COMDAT ??$guid@VCContact@@@serialization@boost@@YAPBDXZ
_TEXT	SEGMENT
??$guid@VCContact@@@serialization@boost@@YAPBDXZ PROC	; boost::serialization::guid<CContact>, COMDAT

; 103  : inline const char * guid(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 104  :     return ext::guid_impl<T>::call();

	call	?call@?$guid_impl@VCContact@@@ext@serialization@boost@@SAPBDXZ ; boost::serialization::ext::guid_impl<CContact>::call

; 105  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$guid@VCContact@@@serialization@boost@@YAPBDXZ ENDP	; boost::serialization::guid<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__Ft@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ@YAXXZ
text$yd	SEGMENT
??__Ft@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ@YAXXZ PROC ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance'::`2'::`dynamic atexit destructor for 't'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?t@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4V?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@34@A ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance'::`2'::t
	call	??1?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::~singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__Ft@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ@YAXXZ ENDP ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance'::`2'::`dynamic atexit destructor for 't''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@UAEPAXI@Z PROC ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::~singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	20					; 00000014H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@UAEPAXI@Z ENDP ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@QAE@XZ PROC ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ ; boost::serialization::extended_type_info_typeid<CContact>::extended_type_info_typeid<CContact>
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@QAE@XZ ENDP ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ??1?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@UAE@XZ PROC ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::~singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >, COMDAT
; _this$ = ecx

; 104  :     ~singleton_wrapper(){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@6B@

; 105  :         m_is_destroyed = true;

	mov	BYTE PTR ?m_is_destroyed@?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@2_NA, 1 ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::m_is_destroyed

; 106  :     }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAE@XZ ; boost::serialization::extended_type_info_typeid<CContact>::~extended_type_info_typeid<CContact>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@UAE@XZ ENDP ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::~singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\factory.hpp
;	COMDAT ??$factory@VCContact@@$03@serialization@boost@@YAPAVCContact@@PAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$factory@VCContact@@$03@serialization@boost@@YAPAVCContact@@PAD@Z PROC ; boost::serialization::factory<CContact,4>, COMDAT

; 36   : T * factory(std::va_list){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 37   :     BOOST_ASSERT(false);

	xor	eax, eax
	jne	SHORT $LN3@factory
	mov	esi, esp
	push	37					; 00000025H
	push	OFFSET ??_C@_1IO@PLLJMNBK@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@factory:

; 38   :     // throw exception here?
; 39   :     return NULL;

	xor	eax, eax

; 40   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$factory@VCContact@@$03@serialization@boost@@YAPAVCContact@@PAD@Z ENDP ; boost::serialization::factory<CContact,4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\factory.hpp
;	COMDAT ??$factory@VCContact@@$02@serialization@boost@@YAPAVCContact@@PAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$factory@VCContact@@$02@serialization@boost@@YAPAVCContact@@PAD@Z PROC ; boost::serialization::factory<CContact,3>, COMDAT

; 36   : T * factory(std::va_list){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 37   :     BOOST_ASSERT(false);

	xor	eax, eax
	jne	SHORT $LN3@factory
	mov	esi, esp
	push	37					; 00000025H
	push	OFFSET ??_C@_1IO@PLLJMNBK@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@factory:

; 38   :     // throw exception here?
; 39   :     return NULL;

	xor	eax, eax

; 40   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$factory@VCContact@@$02@serialization@boost@@YAPAVCContact@@PAD@Z ENDP ; boost::serialization::factory<CContact,3>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\factory.hpp
;	COMDAT ??$factory@VCContact@@$01@serialization@boost@@YAPAVCContact@@PAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$factory@VCContact@@$01@serialization@boost@@YAPAVCContact@@PAD@Z PROC ; boost::serialization::factory<CContact,2>, COMDAT

; 36   : T * factory(std::va_list){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 37   :     BOOST_ASSERT(false);

	xor	eax, eax
	jne	SHORT $LN3@factory
	mov	esi, esp
	push	37					; 00000025H
	push	OFFSET ??_C@_1IO@PLLJMNBK@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@factory:

; 38   :     // throw exception here?
; 39   :     return NULL;

	xor	eax, eax

; 40   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$factory@VCContact@@$01@serialization@boost@@YAPAVCContact@@PAD@Z ENDP ; boost::serialization::factory<CContact,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\factory.hpp
;	COMDAT ??$factory@VCContact@@$00@serialization@boost@@YAPAVCContact@@PAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$factory@VCContact@@$00@serialization@boost@@YAPAVCContact@@PAD@Z PROC ; boost::serialization::factory<CContact,1>, COMDAT

; 36   : T * factory(std::va_list){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 37   :     BOOST_ASSERT(false);

	xor	eax, eax
	jne	SHORT $LN3@factory
	mov	esi, esp
	push	37					; 00000025H
	push	OFFSET ??_C@_1IO@PLLJMNBK@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@factory:

; 38   :     // throw exception here?
; 39   :     return NULL;

	xor	eax, eax

; 40   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$factory@VCContact@@$00@serialization@boost@@YAPAVCContact@@PAD@Z ENDP ; boost::serialization::factory<CContact,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\factory.hpp
;	COMDAT ??$factory@VCContact@@$0A@@serialization@boost@@YAPAVCContact@@PAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$factory@VCContact@@$0A@@serialization@boost@@YAPAVCContact@@PAD@Z PROC ; boost::serialization::factory<CContact,0>, COMDAT

; 36   : T * factory(std::va_list){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 37   :     BOOST_ASSERT(false);

	xor	eax, eax
	jne	SHORT $LN3@factory
	mov	esi, esp
	push	37					; 00000025H
	push	OFFSET ??_C@_1IO@PLLJMNBK@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@factory:

; 38   :     // throw exception here?
; 39   :     return NULL;

	xor	eax, eax

; 40   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$factory@VCContact@@$0A@@serialization@boost@@YAPAVCContact@@PAD@Z ENDP ; boost::serialization::factory<CContact,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vadefs.h
;	COMDAT ??$__vcrt_va_start_verify_argument_type@I@@YAXXZ
_TEXT	SEGMENT
??$__vcrt_va_start_verify_argument_type@I@@YAXXZ PROC	; __vcrt_va_start_verify_argument_type<unsigned int>, COMDAT

; 144  :         {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 145  :             static_assert(!__vcrt_va_list_is_reference<_Ty>::__the_value, "va_start argument must not have reference type and must not be parenthesized");
; 146  :         }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$__vcrt_va_start_verify_argument_type@I@@YAXXZ ENDP	; __vcrt_va_start_verify_argument_type<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\access.hpp
;	COMDAT ??$destroy@VCContact@@@access@serialization@boost@@SAXPBVCContact@@@Z
_TEXT	SEGMENT
tv70 = -220						; size = 4
$T1 = -212						; size = 4
$T2 = -200						; size = 4
_t$ = 8							; size = 4
??$destroy@VCContact@@@access@serialization@boost@@SAXPBVCContact@@@Z PROC ; boost::serialization::access::destroy<CContact>, COMDAT

; 120  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 121  :         // the const business is an MSVC 6.0 hack that should be
; 122  :         // benign on everything else
; 123  :         delete const_cast<T *>(t);

	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@destroy
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv70[ebp], eax
	jmp	SHORT $LN1@destroy
$LN3@destroy:
	mov	DWORD PTR tv70[ebp], 0
$LN1@destroy:

; 124  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$destroy@VCContact@@@access@serialization@boost@@SAXPBVCContact@@@Z ENDP ; boost::serialization::access::destroy<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAEPAXI@Z PROC ; boost::serialization::extended_type_info_typeid<CContact>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAE@XZ ; boost::serialization::extended_type_info_typeid<CContact>::~extended_type_info_typeid<CContact>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	20					; 00000014H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAEPAXI@Z ENDP ; boost::serialization::extended_type_info_typeid<CContact>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\extended_type_info_typeid.hpp
;	COMDAT ?destroy@?$extended_type_info_typeid@VCContact@@@serialization@boost@@UBEXQBX@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
?destroy@?$extended_type_info_typeid@VCContact@@@serialization@boost@@UBEXQBX@Z PROC ; boost::serialization::extended_type_info_typeid<CContact>::destroy, COMDAT
; _this$ = ecx

; 134  :     virtual void destroy(void const * const p) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 135  :         boost::serialization::access::destroy(

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	??$destroy@VCContact@@@access@serialization@boost@@SAXPBVCContact@@@Z ; boost::serialization::access::destroy<CContact>
	add	esp, 4

; 136  :             static_cast<T const *>(p)
; 137  :         );
; 138  :         //delete static_cast<T const * const>(p);
; 139  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$extended_type_info_typeid@VCContact@@@serialization@boost@@UBEXQBX@Z ENDP ; boost::serialization::extended_type_info_typeid<CContact>::destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\extended_type_info_typeid.hpp
;	COMDAT ?construct@?$extended_type_info_typeid@VCContact@@@serialization@boost@@UBAPAXIZZ
_TEXT	SEGMENT
tv65 = -208						; size = 4
_ap$ = -8						; size = 4
_this$ = 8						; size = 4
_count$ = 12						; size = 4
?construct@?$extended_type_info_typeid@VCContact@@@serialization@boost@@UBAPAXIZZ PROC ; boost::serialization::extended_type_info_typeid<CContact>::construct, COMDAT

; 113  :     virtual void * construct(unsigned int count, ...) const{

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 114  :         // count up the arguments
; 115  :         std::va_list ap;
; 116  :         va_start(ap, count);

	call	??$__vcrt_va_start_verify_argument_type@I@@YAXXZ ; __vcrt_va_start_verify_argument_type<unsigned int>
	lea	eax, DWORD PTR _count$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax

; 117  :         switch(count){

	mov	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	cmp	DWORD PTR tv65[ebp], 4
	ja	SHORT $LN9@construct
	mov	ecx, DWORD PTR tv65[ebp]
	jmp	DWORD PTR $LN12@construct[ecx*4]
$LN4@construct:

; 118  :         case 0:
; 119  :             return factory<typename boost::remove_const< T >::type, 0>(ap);

	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	call	??$factory@VCContact@@$0A@@serialization@boost@@YAPAVCContact@@PAD@Z ; boost::serialization::factory<CContact,0>
	add	esp, 4
	jmp	SHORT $LN1@construct
$LN5@construct:

; 120  :         case 1:
; 121  :             return factory<typename boost::remove_const< T >::type, 1>(ap);

	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	call	??$factory@VCContact@@$00@serialization@boost@@YAPAVCContact@@PAD@Z ; boost::serialization::factory<CContact,1>
	add	esp, 4
	jmp	SHORT $LN1@construct
$LN6@construct:

; 122  :         case 2:
; 123  :             return factory<typename boost::remove_const< T >::type, 2>(ap);

	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	call	??$factory@VCContact@@$01@serialization@boost@@YAPAVCContact@@PAD@Z ; boost::serialization::factory<CContact,2>
	add	esp, 4
	jmp	SHORT $LN1@construct
$LN7@construct:

; 124  :         case 3:
; 125  :             return factory<typename boost::remove_const< T >::type, 3>(ap);

	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	call	??$factory@VCContact@@$02@serialization@boost@@YAPAVCContact@@PAD@Z ; boost::serialization::factory<CContact,3>
	add	esp, 4
	jmp	SHORT $LN1@construct
$LN8@construct:

; 126  :         case 4:
; 127  :             return factory<typename boost::remove_const< T >::type, 4>(ap);

	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	call	??$factory@VCContact@@$03@serialization@boost@@YAPAVCContact@@PAD@Z ; boost::serialization::factory<CContact,4>
	add	esp, 4
	jmp	SHORT $LN1@construct
$LN9@construct:

; 128  :         default:
; 129  :             BOOST_ASSERT(false); // too many arguments

	xor	eax, eax
	jne	SHORT $LN11@construct
	mov	esi, esp
	push	129					; 00000081H
	push	OFFSET ??_C@_1LC@ILBAKICL@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@construct:

; 130  :             // throw exception here?
; 131  :             return NULL;

	xor	eax, eax
$LN1@construct:

; 132  :         }
; 133  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN12@construct:
	DD	$LN4@construct
	DD	$LN5@construct
	DD	$LN6@construct
	DD	$LN7@construct
	DD	$LN8@construct
?construct@?$extended_type_info_typeid@VCContact@@@serialization@boost@@UBAPAXIZZ ENDP ; boost::serialization::extended_type_info_typeid<CContact>::construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\extended_type_info_typeid.hpp
;	COMDAT ??1?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAE@XZ PROC ; boost::serialization::extended_type_info_typeid<CContact>::~extended_type_info_typeid<CContact>, COMDAT
; _this$ = ecx

; 94   :     ~extended_type_info_typeid(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$extended_type_info_typeid@VCContact@@@serialization@boost@@6B@

; 95   :         key_unregister();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?key_unregister@extended_type_info@serialization@boost@@IBEXXZ ; boost::serialization::extended_type_info::key_unregister

; 96   :         type_unregister();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?type_unregister@extended_type_info_typeid_0@typeid_system@serialization@boost@@IAEXXZ ; boost::serialization::typeid_system::extended_type_info_typeid_0::type_unregister

; 97   :     }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1extended_type_info_typeid_0@typeid_system@serialization@boost@@MAE@XZ ; boost::serialization::typeid_system::extended_type_info_typeid_0::~extended_type_info_typeid_0
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAE@XZ ENDP ; boost::serialization::extended_type_info_typeid<CContact>::~extended_type_info_typeid<CContact>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\extended_type_info_typeid.hpp
;	COMDAT ??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ PROC ; boost::serialization::extended_type_info_typeid<CContact>::extended_type_info_typeid<CContact>, COMDAT
; _this$ = ecx

; 90   :     {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 87   :         typeid_system::extended_type_info_typeid_0(

	call	??$guid@VCContact@@@serialization@boost@@YAPBDXZ ; boost::serialization::guid<CContact>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0extended_type_info_typeid_0@typeid_system@serialization@boost@@IAE@PBD@Z ; boost::serialization::typeid_system::extended_type_info_typeid_0::extended_type_info_typeid_0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 90   :     {

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$extended_type_info_typeid@VCContact@@@serialization@boost@@6B@

; 91   :         type_register(typeid(T));

	push	OFFSET ??_R0?AVCContact@@@8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?type_register@extended_type_info_typeid_0@typeid_system@serialization@boost@@IAEXABVtype_info@@@Z ; boost::serialization::typeid_system::extended_type_info_typeid_0::type_register

; 92   :         key_register();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?key_register@extended_type_info@serialization@boost@@IBEXXZ ; boost::serialization::extended_type_info::key_register

; 93   :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1extended_type_info_typeid_0@typeid_system@serialization@boost@@MAE@XZ ; boost::serialization::typeid_system::extended_type_info_typeid_0::~extended_type_info_typeid_0
__ehhandler$??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ ENDP ; boost::serialization::extended_type_info_typeid<CContact>::extended_type_info_typeid<CContact>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?get_const_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@SAABV?$extended_type_info_typeid@VCContact@@@23@XZ
_TEXT	SEGMENT
?get_const_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@SAABV?$extended_type_info_typeid@VCContact@@@23@XZ PROC ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_const_instance, COMDAT

; 134  :     BOOST_DLLEXPORT static const T & get_const_instance(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 135  :         return get_instance();

	call	?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance

; 136  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?get_const_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@SAABV?$extended_type_info_typeid@VCContact@@@23@XZ ENDP ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_const_instance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ PROC ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance, COMDAT

; 121  :     BOOST_DLLEXPORT static T & get_instance() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 122  :         static detail::singleton_wrapper< T > t;

	mov	eax, DWORD PTR __tls_index
	mov	ecx, DWORD PTR fs:__tls_array
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR ?$TSS0@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::et_instance,signed char,VCContact::tended_type_info_typeid>
	cmp	eax, DWORD PTR __Init_thread_epoch[edx]
	jle	SHORT $LN2@get_instan
	push	OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::et_instance,signed char,VCContact::tended_type_info_typeid>
	call	__Init_thread_header
	add	esp, 4
	cmp	DWORD PTR ?$TSS0@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4HA, -1 ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::et_instance,signed char,VCContact::tended_type_info_typeid>
	jne	SHORT $LN2@get_instan
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, OFFSET ?t@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4V?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@34@A ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance'::`2'::t
	call	??0?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@QAE@XZ
	push	OFFSET ??__Ft@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ@YAXXZ ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance'::`2'::`dynamic atexit destructor for 't''
	call	_atexit
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::et_instance,signed char,VCContact::tended_type_info_typeid>
	call	__Init_thread_footer
	add	esp, 4
$LN2@get_instan:

; 123  :         // refer to instance, causing it to be instantiated (and
; 124  :         // initialized at startup on working compilers)
; 125  :         BOOST_ASSERT(! detail::singleton_wrapper< T >::m_is_destroyed);

	movzx	eax, BYTE PTR ?m_is_destroyed@?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@2_NA ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::m_is_destroyed
	test	eax, eax
	je	SHORT $LN4@get_instan
	mov	esi, esp
	push	125					; 0000007dH
	push	OFFSET ??_C@_1JC@GIHFICPP@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
	push	OFFSET ??_C@_1GC@KKEDEOBO@?$AA?$CB?$AA?5?$AAd?$AAe?$AAt?$AAa?$AAi?$AAl?$AA?3?$AA?3?$AAs?$AAi?$AAn?$AAg?$AAl?$AAe?$AAt?$AAo?$AAn?$AA_?$AAw?$AAr?$AAa?$AAp?$AAp?$AAe?$AAr?$AA?$DM?$AA?5?$AAT?$AA?5?$AA?$DO@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@get_instan:

; 126  :         use(& instance);

	mov	eax, DWORD PTR ?instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@VCContact@@@23@A ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::instance
	push	eax
	call	?use@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAXPBV?$extended_type_info_typeid@VCContact@@@23@@Z ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::use
	add	esp, 4

; 127  :         return static_cast<T &>(t);

	mov	eax, OFFSET ?t@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4V?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@34@A ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance'::`2'::t

; 128  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ$0:
	push	OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::et_instance,signed char,VCContact::tended_type_info_typeid>
	call	__Init_thread_abort
	pop	ecx
	ret	0
__ehhandler$?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ ENDP ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?use@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAXPBV?$extended_type_info_typeid@VCContact@@@23@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?use@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAXPBV?$extended_type_info_typeid@VCContact@@@23@@Z PROC ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::use, COMDAT

; 120  :     static void use(T const *) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?use@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAXPBV?$extended_type_info_typeid@VCContact@@@23@@Z ENDP ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::use
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__Ft@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ@YAXXZ
text$yd	SEGMENT
??__Ft@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ@YAXXZ PROC ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance'::`2'::`dynamic atexit destructor for 't'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?t@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@634@A ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance'::`2'::t
	call	??1?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::~singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__Ft@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ@YAXXZ ENDP ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance'::`2'::`dynamic atexit destructor for 't''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z PROC ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::~singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z ENDP ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ PROC ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@QAE@XZ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::oserializer<boost::archive::text_oarchive,CContact>
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ ENDP ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ??1?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ PROC ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::~singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >, COMDAT
; _this$ = ecx

; 104  :     ~singleton_wrapper(){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@

; 105  :         m_is_destroyed = true;

	mov	BYTE PTR ?m_is_destroyed@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@2_NA, 1 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::m_is_destroyed

; 106  :     }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAE@XZ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::~oserializer<boost::archive::text_oarchive,CContact>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ ENDP ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::~singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_oarchive.hpp
;	COMDAT ??$save@Vobject_id_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_id_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save@Vobject_id_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_id_type@12@@Z PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::object_id_type>, COMDAT
; _this$ = ecx

; 63   :     void save(const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 64   :         this->newtoken();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?newtoken@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::newtoken

; 65   :         basic_text_oprimitive<std::ostream>::save(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::object_id_type>

; 66   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save@Vobject_id_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_id_type@12@@Z ENDP ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 232  :         static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 233  :             save_access::save_primitive(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$save_primitive@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8

; 234  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 64   : inline void check_object_versioning(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_versioning@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@Vversion_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVversion_type@34@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vversion_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVversion_type@34@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::version_type>, COMDAT

; 384  :         static void invoke(Archive & ar, T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 385  :             load_access::load_primitive(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$load_primitive@Vtext_iarchive@archive@boost@@Vversion_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVversion_type@12@@Z ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::version_type>
	add	esp, 8

; 386  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Vversion_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVversion_type@34@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_level@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_level@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_level<boost::archive::version_type>, COMDAT

; 51   : inline void check_object_level(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 52   :     typedef 
; 53   :         typename mpl::greater_equal<
; 54   :             serialization::implementation_level< T >,
; 55   :             mpl::int_<serialization::primitive_type>
; 56   :         >::type typex;
; 57   : 
; 58   :     // trap attempts to serialize objects marked
; 59   :     // not_serializable
; 60   :     BOOST_STATIC_ASSERT(typex::value);
; 61   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_level@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_level<boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@Vobject_id_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVobject_id_type@34@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vobject_id_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVobject_id_type@34@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::object_id_type>, COMDAT

; 384  :         static void invoke(Archive & ar, T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 385  :             load_access::load_primitive(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$load_primitive@Vtext_iarchive@archive@boost@@Vobject_id_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVobject_id_type@12@@Z ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::object_id_type>
	add	esp, 8

; 386  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Vobject_id_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVobject_id_type@34@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_level@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_level@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_level<boost::archive::object_id_type>, COMDAT

; 51   : inline void check_object_level(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 52   :     typedef 
; 53   :         typename mpl::greater_equal<
; 54   :             serialization::implementation_level< T >,
; 55   :             mpl::int_<serialization::primitive_type>
; 56   :         >::type typex;
; 57   : 
; 58   :     // trap attempts to serialize objects marked
; 59   :     // not_serializable
; 60   :     BOOST_STATIC_ASSERT(typex::value);
; 61   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_level@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_level<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@Vclass_id_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVclass_id_type@34@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vclass_id_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVclass_id_type@34@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::class_id_type>, COMDAT

; 384  :         static void invoke(Archive & ar, T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 385  :             load_access::load_primitive(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$load_primitive@Vtext_iarchive@archive@boost@@Vclass_id_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVclass_id_type@12@@Z ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::class_id_type>
	add	esp, 8

; 386  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Vclass_id_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVclass_id_type@34@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_level@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_level@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_level<boost::archive::class_id_type>, COMDAT

; 51   : inline void check_object_level(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 52   :     typedef 
; 53   :         typename mpl::greater_equal<
; 54   :             serialization::implementation_level< T >,
; 55   :             mpl::int_<serialization::primitive_type>
; 56   :         >::type typex;
; 57   : 
; 58   :     // trap attempts to serialize objects marked
; 59   :     // not_serializable
; 60   :     BOOST_STATIC_ASSERT(typex::value);
; 61   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_level@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_level<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@Utracking_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAUtracking_type@34@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Utracking_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAUtracking_type@34@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::tracking_type>, COMDAT

; 384  :         static void invoke(Archive & ar, T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 385  :             load_access::load_primitive(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$load_primitive@Vtext_iarchive@archive@boost@@Utracking_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAUtracking_type@12@@Z ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::tracking_type>
	add	esp, 8

; 386  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Utracking_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAUtracking_type@34@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_level@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_level@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_level<boost::archive::tracking_type>, COMDAT

; 51   : inline void check_object_level(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 52   :     typedef 
; 53   :         typename mpl::greater_equal<
; 54   :             serialization::implementation_level< T >,
; 55   :             mpl::int_<serialization::primitive_type>
; 56   :         >::type typex;
; 57   : 
; 58   :     // trap attempts to serialize objects marked
; 59   :     // not_serializable
; 60   :     BOOST_STATIC_ASSERT(typex::value);
; 61   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_level@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_level<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save_primitive@Vtext_oarchive@archive@boost@@Vversion_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVversion_type@12@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save_primitive@Vtext_oarchive@archive@boost@@Vversion_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVversion_type@12@@Z PROC ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::version_type>, COMDAT

; 87   :     static void save_primitive(Archive & ar, const  T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 88   :         ar.end_preamble();

	mov	ecx, DWORD PTR _ar$[ebp]
	call	?end_preamble@basic_oarchive@detail@archive@boost@@QAEXXZ ; boost::archive::detail::basic_oarchive::end_preamble

; 89   :         ar.save(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	call	?save@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVversion_type@23@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save

; 90   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save_primitive@Vtext_oarchive@archive@boost@@Vversion_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVversion_type@12@@Z ENDP ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save_primitive@Vtext_oarchive@archive@boost@@Vobject_reference_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVobject_reference_type@12@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save_primitive@Vtext_oarchive@archive@boost@@Vobject_reference_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVobject_reference_type@12@@Z PROC ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::object_reference_type>, COMDAT

; 87   :     static void save_primitive(Archive & ar, const  T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 88   :         ar.end_preamble();

	mov	ecx, DWORD PTR _ar$[ebp]
	call	?end_preamble@basic_oarchive@detail@archive@boost@@QAEXXZ ; boost::archive::detail::basic_oarchive::end_preamble

; 89   :         ar.save(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	call	??$save@Vobject_reference_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_reference_type@12@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::object_reference_type>

; 90   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save_primitive@Vtext_oarchive@archive@boost@@Vobject_reference_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVobject_reference_type@12@@Z ENDP ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::object_reference_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save_primitive@Vtext_oarchive@archive@boost@@Vclass_id_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVclass_id_type@12@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save_primitive@Vtext_oarchive@archive@boost@@Vclass_id_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVclass_id_type@12@@Z PROC ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::class_id_type>, COMDAT

; 87   :     static void save_primitive(Archive & ar, const  T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 88   :         ar.end_preamble();

	mov	ecx, DWORD PTR _ar$[ebp]
	call	?end_preamble@basic_oarchive@detail@archive@boost@@QAEXXZ ; boost::archive::detail::basic_oarchive::end_preamble

; 89   :         ar.save(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	call	??$save@Vclass_id_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_type@12@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::class_id_type>

; 90   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save_primitive@Vtext_oarchive@archive@boost@@Vclass_id_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVclass_id_type@12@@Z ENDP ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save_primitive@Vtext_oarchive@archive@boost@@Vclass_id_reference_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVclass_id_reference_type@12@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save_primitive@Vtext_oarchive@archive@boost@@Vclass_id_reference_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVclass_id_reference_type@12@@Z PROC ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::class_id_reference_type>, COMDAT

; 87   :     static void save_primitive(Archive & ar, const  T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 88   :         ar.end_preamble();

	mov	ecx, DWORD PTR _ar$[ebp]
	call	?end_preamble@basic_oarchive@detail@archive@boost@@QAEXXZ ; boost::archive::detail::basic_oarchive::end_preamble

; 89   :         ar.save(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	call	??$save@Vclass_id_reference_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::class_id_reference_type>

; 90   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save_primitive@Vtext_oarchive@archive@boost@@Vclass_id_reference_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVclass_id_reference_type@12@@Z ENDP ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::class_id_reference_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save_primitive@Vtext_oarchive@archive@boost@@Utracking_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABUtracking_type@12@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save_primitive@Vtext_oarchive@archive@boost@@Utracking_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABUtracking_type@12@@Z PROC ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::tracking_type>, COMDAT

; 87   :     static void save_primitive(Archive & ar, const  T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 88   :         ar.end_preamble();

	mov	ecx, DWORD PTR _ar$[ebp]
	call	?end_preamble@basic_oarchive@detail@archive@boost@@QAEXXZ ; boost::archive::detail::basic_oarchive::end_preamble

; 89   :         ar.save(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	call	??$save@Utracking_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUtracking_type@12@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::tracking_type>

; 90   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save_primitive@Vtext_oarchive@archive@boost@@Utracking_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABUtracking_type@12@@Z ENDP ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@VCContact@@@load_standard@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABVCContact@@@Z
_TEXT	SEGMENT
_x$ = -8						; size = 4
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@VCContact@@@load_standard@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABVCContact@@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_standard::invoke<CContact>, COMDAT

; 408  :         static void invoke(Archive &ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 409  :             void * x = & const_cast<T &>(t);

	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR _x$[ebp], eax

; 410  :             ar.load_object(

	call	?get_const_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@SAABV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_const_instance
	push	eax
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	call	?load_object@basic_iarchive@detail@archive@boost@@QAEXPAXABVbasic_iserializer@234@@Z ; boost::archive::detail::basic_iarchive::load_object

; 411  :                 x, 
; 412  :                 boost::serialization::singleton<
; 413  :                     iserializer<Archive, T>
; 414  :                 >::get_const_instance()
; 415  :             );
; 416  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@VCContact@@@load_standard@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABVCContact@@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_standard::invoke<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_level@VCContact@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_level@VCContact@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_level<CContact>, COMDAT

; 51   : inline void check_object_level(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 52   :     typedef 
; 53   :         typename mpl::greater_equal<
; 54   :             serialization::implementation_level< T >,
; 55   :             mpl::int_<serialization::primitive_type>
; 56   :         >::type typex;
; 57   : 
; 58   :     // trap attempts to serialize objects marked
; 59   :     // not_serializable
; 60   :     BOOST_STATIC_ASSERT(typex::value);
; 61   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_level@VCContact@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_level<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAEPAXI@Z PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAE@XZ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::~oserializer<boost::archive::text_oarchive,CContact>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAEPAXI@Z ENDP ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??1?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAE@XZ PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::~oserializer<boost::archive::text_oarchive,CContact>, COMDAT
; _this$ = ecx

; 134  :     virtual ~oserializer(){}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1basic_oserializer@detail@archive@boost@@MAE@XZ ; boost::archive::detail::basic_oserializer::~basic_oserializer
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAE@XZ ENDP ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::~oserializer<boost::archive::text_oarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ?is_polymorphic@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?is_polymorphic@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::is_polymorphic, COMDAT
; _this$ = ecx

; 131  :     virtual bool is_polymorphic() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 132  :         return boost::is_polymorphic< T >::value;

	mov	al, 1

; 133  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?is_polymorphic@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ ENDP ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::is_polymorphic
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ?version@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE?AVversion_type@34@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?version@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE?AVversion_type@34@XZ PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::version, COMDAT
; _this$ = ecx

; 128  :     virtual version_type version() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 129  :         return version_type(::boost::serialization::version< T >::value);

	mov	DWORD PTR $T1[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0version_type@archive@boost@@QAE@ABI@Z ; boost::archive::version_type::version_type
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 130  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?version@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE?AVversion_type@34@XZ ENDP ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::version
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ?tracking@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NI@Z
_TEXT	SEGMENT
tv74 = -208						; size = 4
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?tracking@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NI@Z PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::tracking, COMDAT
; _this$ = ecx

; 123  :     virtual bool tracking(const unsigned int /* flags */) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 124  :         return boost::serialization::tracking_level< T >::value == boost::serialization::track_always

	xor	eax, eax
	jne	SHORT $LN4@tracking
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN3@tracking
	mov	ecx, DWORD PTR _this$[ebp]
	call	?serialized_as_pointer@basic_oserializer@detail@archive@boost@@QBE_NXZ ; boost::archive::detail::basic_oserializer::serialized_as_pointer
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@tracking
$LN3@tracking:
	mov	DWORD PTR tv74[ebp], 0
	jmp	SHORT $LN5@tracking
$LN4@tracking:
	mov	DWORD PTR tv74[ebp], 1
$LN5@tracking:
	mov	al, BYTE PTR tv74[ebp]

; 125  :             || (boost::serialization::tracking_level< T >::value == boost::serialization::track_selectively
; 126  :                 && serialized_as_pointer());
; 127  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?tracking@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NI@Z ENDP ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::tracking
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ?class_info@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?class_info@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::class_info, COMDAT
; _this$ = ecx

; 119  :     virtual bool class_info() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 120  :         return boost::serialization::implementation_level< T >::value 

	mov	al, 1

; 121  :             >= boost::serialization::object_class_info;
; 122  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?class_info@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ ENDP ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::class_info
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ?save_object_data@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBEXAAVbasic_oarchive@234@PBX@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
_ar$ = 8						; size = 4
_x$ = 12						; size = 4
?save_object_data@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBEXAAVbasic_oarchive@234@PBX@Z PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::save_object_data, COMDAT
; _this$ = ecx

; 145  : ) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 146  :     // make sure call is routed through the highest interface that might
; 147  :     // be specialized by the user.
; 148  :     BOOST_STATIC_ASSERT(boost::is_const< T >::value == false);
; 149  :     boost::serialization::serialize_adl(

	mov	esi, esp
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	??Bversion_type@archive@boost@@QAEAAIXZ	; boost::archive::version_type::operator unsigned int &
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _ar$[ebp]
	push	eax
	call	??$smart_cast_reference@AAVtext_oarchive@archive@boost@@Vbasic_oarchive@detail@23@@serialization@boost@@YAAAVtext_oarchive@archive@1@AAVbasic_oarchive@detail@31@@Z ; boost::serialization::smart_cast_reference<boost::archive::text_oarchive &,boost::archive::detail::basic_oarchive>
	add	esp, 4
	push	eax
	call	??$serialize_adl@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z ; boost::serialization::serialize_adl<boost::archive::text_oarchive,CContact>
	add	esp, 12					; 0000000cH

; 150  :         boost::serialization::smart_cast_reference<Archive &>(ar),
; 151  :         * static_cast<T *>(const_cast<void *>(x)),
; 152  :         version()
; 153  :     );
; 154  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?save_object_data@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBEXAAVbasic_oarchive@234@PBX@Z ENDP ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::save_object_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??0?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@QAE@XZ PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::oserializer<boost::archive::text_oarchive,CContact>, COMDAT
; _this$ = ecx

; 114  :     {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 108  :         basic_oserializer(

	call	?get_const_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@SAABV?$extended_type_info_typeid@VCContact@@@23@XZ ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_const_instance
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0basic_oserializer@detail@archive@boost@@IAE@ABVextended_type_info@serialization@3@@Z ; boost::archive::detail::basic_oserializer::basic_oserializer

; 114  :     {}

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@QAE@XZ ENDP ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::oserializer<boost::archive::text_oarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?get_const_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@SAABV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ
_TEXT	SEGMENT
?get_const_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@SAABV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ PROC ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_const_instance, COMDAT

; 134  :     BOOST_DLLEXPORT static const T & get_const_instance(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 135  :         return get_instance();

	call	?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance

; 136  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?get_const_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@SAABV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ENDP ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_const_instance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ PROC ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance, COMDAT

; 121  :     BOOST_DLLEXPORT static T & get_instance() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 122  :         static detail::singleton_wrapper< T > t;

	mov	eax, DWORD PTR __tls_index
	mov	ecx, DWORD PTR fs:__tls_array
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR ?$TSS0@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_oarchive::erializer,CContact>
	cmp	eax, DWORD PTR __Init_thread_epoch[edx]
	jle	SHORT $LN2@get_instan
	push	OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_oarchive::erializer,CContact>
	call	__Init_thread_header
	add	esp, 4
	cmp	DWORD PTR ?$TSS0@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA, -1 ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_oarchive::erializer,CContact>
	jne	SHORT $LN2@get_instan
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, OFFSET ?t@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@634@A ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance'::`2'::t
	call	??0?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ
	push	OFFSET ??__Ft@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ@YAXXZ ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance'::`2'::`dynamic atexit destructor for 't''
	call	_atexit
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_oarchive::erializer,CContact>
	call	__Init_thread_footer
	add	esp, 4
$LN2@get_instan:

; 123  :         // refer to instance, causing it to be instantiated (and
; 124  :         // initialized at startup on working compilers)
; 125  :         BOOST_ASSERT(! detail::singleton_wrapper< T >::m_is_destroyed);

	movzx	eax, BYTE PTR ?m_is_destroyed@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@2_NA ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::m_is_destroyed
	test	eax, eax
	je	SHORT $LN4@get_instan
	mov	esi, esp
	push	125					; 0000007dH
	push	OFFSET ??_C@_1JC@GIHFICPP@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
	push	OFFSET ??_C@_1GC@KKEDEOBO@?$AA?$CB?$AA?5?$AAd?$AAe?$AAt?$AAa?$AAi?$AAl?$AA?3?$AA?3?$AAs?$AAi?$AAn?$AAg?$AAl?$AAe?$AAt?$AAo?$AAn?$AA_?$AAw?$AAr?$AAa?$AAp?$AAp?$AAe?$AAr?$AA?$DM?$AA?5?$AAT?$AA?5?$AA?$DO@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@get_instan:

; 126  :         use(& instance);

	mov	eax, DWORD PTR ?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@A ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::instance
	push	eax
	call	?use@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@@Z ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::use
	add	esp, 4

; 127  :         return static_cast<T &>(t);

	mov	eax, OFFSET ?t@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@634@A ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance'::`2'::t

; 128  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ$0:
	push	OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_oarchive::erializer,CContact>
	call	__Init_thread_abort
	pop	ecx
	ret	0
__ehhandler$?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ENDP ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?use@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?use@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@@Z PROC ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::use, COMDAT

; 120  :     static void use(T const *) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?use@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@@Z ENDP ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::use
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save_primitive@Vtext_oarchive@archive@boost@@Vobject_id_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVobject_id_type@12@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save_primitive@Vtext_oarchive@archive@boost@@Vobject_id_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVobject_id_type@12@@Z PROC ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::object_id_type>, COMDAT

; 87   :     static void save_primitive(Archive & ar, const  T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 88   :         ar.end_preamble();

	mov	ecx, DWORD PTR _ar$[ebp]
	call	?end_preamble@basic_oarchive@detail@archive@boost@@QAEXXZ ; boost::archive::detail::basic_oarchive::end_preamble

; 89   :         ar.save(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	call	??$save@Vobject_id_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_id_type@12@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::object_id_type>

; 90   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save_primitive@Vtext_oarchive@archive@boost@@Vobject_id_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVobject_id_type@12@@Z ENDP ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 277  :     static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 278  :         typedef 
; 279  :             typename mpl::eval_if<
; 280  :             // if its primitive
; 281  :                 mpl::equal_to<
; 282  :                     boost::serialization::implementation_level< T >,
; 283  :                     mpl::int_<boost::serialization::primitive_type>
; 284  :                 >,
; 285  :                 mpl::identity<save_primitive>,
; 286  :             // else
; 287  :             typename mpl::eval_if<
; 288  :                 // class info / version
; 289  :                 mpl::greater_equal<
; 290  :                     boost::serialization::implementation_level< T >,
; 291  :                     mpl::int_<boost::serialization::object_class_info>
; 292  :                 >,
; 293  :                 // do standard save
; 294  :                 mpl::identity<save_standard>,
; 295  :             // else
; 296  :             typename mpl::eval_if<
; 297  :                     // no tracking
; 298  :                 mpl::equal_to<
; 299  :                     boost::serialization::tracking_level< T >,
; 300  :                     mpl::int_<boost::serialization::track_never>
; 301  :                 >,
; 302  :                 // do a fast save
; 303  :                 mpl::identity<save_only>,
; 304  :             // else
; 305  :                 // do a fast save only tracking is turned off
; 306  :                 mpl::identity<save_conditional>
; 307  :             > > >::type typex; 
; 308  :         check_object_versioning< T >();

	call	??$check_object_versioning@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 309  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8

; 310  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@Vversion_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVversion_type@23@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vversion_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVversion_type@23@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::version_type>, COMDAT

; 430  :     static void invoke(Archive & ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 431  :         typedef typename mpl::eval_if<
; 432  :                 // if its primitive
; 433  :                 mpl::equal_to<
; 434  :                     boost::serialization::implementation_level< T >,
; 435  :                     mpl::int_<boost::serialization::primitive_type>
; 436  :                 >,
; 437  :                 mpl::identity<load_primitive>,
; 438  :             // else
; 439  :             typename mpl::eval_if<
; 440  :             // class info / version
; 441  :             mpl::greater_equal<
; 442  :                         boost::serialization::implementation_level< T >,
; 443  :                         mpl::int_<boost::serialization::object_class_info>
; 444  :                     >,
; 445  :             // do standard load
; 446  :             mpl::identity<load_standard>,
; 447  :         // else
; 448  :         typename mpl::eval_if<
; 449  :             // no tracking
; 450  :                     mpl::equal_to<
; 451  :                         boost::serialization::tracking_level< T >,
; 452  :                         mpl::int_<boost::serialization::track_never>
; 453  :                 >,
; 454  :                 // do a fast load
; 455  :                 mpl::identity<load_only>,
; 456  :             // else
; 457  :             // do a fast load only tracking is turned off
; 458  :             mpl::identity<load_conditional>
; 459  :         > > >::type typex;
; 460  :         check_object_versioning< T >();

	call	??$check_object_versioning@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::version_type>

; 461  :         check_object_level< T >();

	call	??$check_object_level@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::archive::version_type>

; 462  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Vversion_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVversion_type@34@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::version_type>
	add	esp, 8

; 463  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Vversion_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVversion_type@23@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_const_loading@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_const_loading@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_const_loading<boost::archive::version_type>, COMDAT

; 152  : inline void check_const_loading(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 153  :     typedef
; 154  :         typename mpl::or_<
; 155  :             typename boost::serialization::is_wrapper< T >,
; 156  :             typename mpl::not_<
; 157  :                 typename boost::is_const< T >
; 158  :             >
; 159  :         >::type typex;
; 160  :     // cannot load data into a "const" object unless it's a
; 161  :     // wrapper around some other non-const object.
; 162  :     BOOST_STATIC_ASSERT(typex::value);
; 163  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_const_loading@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_const_loading<boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@Vobject_id_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVobject_id_type@23@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vobject_id_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVobject_id_type@23@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::object_id_type>, COMDAT

; 430  :     static void invoke(Archive & ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 431  :         typedef typename mpl::eval_if<
; 432  :                 // if its primitive
; 433  :                 mpl::equal_to<
; 434  :                     boost::serialization::implementation_level< T >,
; 435  :                     mpl::int_<boost::serialization::primitive_type>
; 436  :                 >,
; 437  :                 mpl::identity<load_primitive>,
; 438  :             // else
; 439  :             typename mpl::eval_if<
; 440  :             // class info / version
; 441  :             mpl::greater_equal<
; 442  :                         boost::serialization::implementation_level< T >,
; 443  :                         mpl::int_<boost::serialization::object_class_info>
; 444  :                     >,
; 445  :             // do standard load
; 446  :             mpl::identity<load_standard>,
; 447  :         // else
; 448  :         typename mpl::eval_if<
; 449  :             // no tracking
; 450  :                     mpl::equal_to<
; 451  :                         boost::serialization::tracking_level< T >,
; 452  :                         mpl::int_<boost::serialization::track_never>
; 453  :                 >,
; 454  :                 // do a fast load
; 455  :                 mpl::identity<load_only>,
; 456  :             // else
; 457  :             // do a fast load only tracking is turned off
; 458  :             mpl::identity<load_conditional>
; 459  :         > > >::type typex;
; 460  :         check_object_versioning< T >();

	call	??$check_object_versioning@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::object_id_type>

; 461  :         check_object_level< T >();

	call	??$check_object_level@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::archive::object_id_type>

; 462  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Vobject_id_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVobject_id_type@34@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::object_id_type>
	add	esp, 8

; 463  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Vobject_id_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVobject_id_type@23@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_const_loading@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_const_loading@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_const_loading<boost::archive::object_id_type>, COMDAT

; 152  : inline void check_const_loading(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 153  :     typedef
; 154  :         typename mpl::or_<
; 155  :             typename boost::serialization::is_wrapper< T >,
; 156  :             typename mpl::not_<
; 157  :                 typename boost::is_const< T >
; 158  :             >
; 159  :         >::type typex;
; 160  :     // cannot load data into a "const" object unless it's a
; 161  :     // wrapper around some other non-const object.
; 162  :     BOOST_STATIC_ASSERT(typex::value);
; 163  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_const_loading@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_const_loading<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@Vclass_id_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVclass_id_type@23@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vclass_id_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVclass_id_type@23@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::class_id_type>, COMDAT

; 430  :     static void invoke(Archive & ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 431  :         typedef typename mpl::eval_if<
; 432  :                 // if its primitive
; 433  :                 mpl::equal_to<
; 434  :                     boost::serialization::implementation_level< T >,
; 435  :                     mpl::int_<boost::serialization::primitive_type>
; 436  :                 >,
; 437  :                 mpl::identity<load_primitive>,
; 438  :             // else
; 439  :             typename mpl::eval_if<
; 440  :             // class info / version
; 441  :             mpl::greater_equal<
; 442  :                         boost::serialization::implementation_level< T >,
; 443  :                         mpl::int_<boost::serialization::object_class_info>
; 444  :                     >,
; 445  :             // do standard load
; 446  :             mpl::identity<load_standard>,
; 447  :         // else
; 448  :         typename mpl::eval_if<
; 449  :             // no tracking
; 450  :                     mpl::equal_to<
; 451  :                         boost::serialization::tracking_level< T >,
; 452  :                         mpl::int_<boost::serialization::track_never>
; 453  :                 >,
; 454  :                 // do a fast load
; 455  :                 mpl::identity<load_only>,
; 456  :             // else
; 457  :             // do a fast load only tracking is turned off
; 458  :             mpl::identity<load_conditional>
; 459  :         > > >::type typex;
; 460  :         check_object_versioning< T >();

	call	??$check_object_versioning@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::class_id_type>

; 461  :         check_object_level< T >();

	call	??$check_object_level@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::archive::class_id_type>

; 462  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Vclass_id_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVclass_id_type@34@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::class_id_type>
	add	esp, 8

; 463  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Vclass_id_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVclass_id_type@23@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_const_loading@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_const_loading@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_const_loading<boost::archive::class_id_type>, COMDAT

; 152  : inline void check_const_loading(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 153  :     typedef
; 154  :         typename mpl::or_<
; 155  :             typename boost::serialization::is_wrapper< T >,
; 156  :             typename mpl::not_<
; 157  :                 typename boost::is_const< T >
; 158  :             >
; 159  :         >::type typex;
; 160  :     // cannot load data into a "const" object unless it's a
; 161  :     // wrapper around some other non-const object.
; 162  :     BOOST_STATIC_ASSERT(typex::value);
; 163  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_const_loading@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_const_loading<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@Utracking_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAUtracking_type@23@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Utracking_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAUtracking_type@23@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::tracking_type>, COMDAT

; 430  :     static void invoke(Archive & ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 431  :         typedef typename mpl::eval_if<
; 432  :                 // if its primitive
; 433  :                 mpl::equal_to<
; 434  :                     boost::serialization::implementation_level< T >,
; 435  :                     mpl::int_<boost::serialization::primitive_type>
; 436  :                 >,
; 437  :                 mpl::identity<load_primitive>,
; 438  :             // else
; 439  :             typename mpl::eval_if<
; 440  :             // class info / version
; 441  :             mpl::greater_equal<
; 442  :                         boost::serialization::implementation_level< T >,
; 443  :                         mpl::int_<boost::serialization::object_class_info>
; 444  :                     >,
; 445  :             // do standard load
; 446  :             mpl::identity<load_standard>,
; 447  :         // else
; 448  :         typename mpl::eval_if<
; 449  :             // no tracking
; 450  :                     mpl::equal_to<
; 451  :                         boost::serialization::tracking_level< T >,
; 452  :                         mpl::int_<boost::serialization::track_never>
; 453  :                 >,
; 454  :                 // do a fast load
; 455  :                 mpl::identity<load_only>,
; 456  :             // else
; 457  :             // do a fast load only tracking is turned off
; 458  :             mpl::identity<load_conditional>
; 459  :         > > >::type typex;
; 460  :         check_object_versioning< T >();

	call	??$check_object_versioning@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::tracking_type>

; 461  :         check_object_level< T >();

	call	??$check_object_level@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::archive::tracking_type>

; 462  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Utracking_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAUtracking_type@34@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::tracking_type>
	add	esp, 8

; 463  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Utracking_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAUtracking_type@23@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_const_loading@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_const_loading@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_const_loading<boost::archive::tracking_type>, COMDAT

; 152  : inline void check_const_loading(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 153  :     typedef
; 154  :         typename mpl::or_<
; 155  :             typename boost::serialization::is_wrapper< T >,
; 156  :             typename mpl::not_<
; 157  :                 typename boost::is_const< T >
; 158  :             >
; 159  :         >::type typex;
; 160  :     // cannot load data into a "const" object unless it's a
; 161  :     // wrapper around some other non-const object.
; 162  :     BOOST_STATIC_ASSERT(typex::value);
; 163  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_const_loading@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_const_loading<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Vversion_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVversion_type@34@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vversion_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVversion_type@34@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::version_type>, COMDAT

; 232  :         static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 233  :             save_access::save_primitive(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$save_primitive@Vtext_oarchive@archive@boost@@Vversion_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVversion_type@12@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::version_type>
	add	esp, 8

; 234  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Vversion_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVversion_type@34@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<boost::archive::version_type>, COMDAT

; 64   : inline void check_object_versioning(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_versioning@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Vobject_reference_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVobject_reference_type@34@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vobject_reference_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVobject_reference_type@34@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::object_reference_type>, COMDAT

; 232  :         static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 233  :             save_access::save_primitive(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$save_primitive@Vtext_oarchive@archive@boost@@Vobject_reference_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVobject_reference_type@12@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::object_reference_type>
	add	esp, 8

; 234  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Vobject_reference_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVobject_reference_type@34@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::object_reference_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@Vobject_reference_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@Vobject_reference_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<boost::archive::object_reference_type>, COMDAT

; 64   : inline void check_object_versioning(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_versioning@Vobject_reference_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<boost::archive::object_reference_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Vclass_id_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVclass_id_type@34@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vclass_id_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVclass_id_type@34@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::class_id_type>, COMDAT

; 232  :         static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 233  :             save_access::save_primitive(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$save_primitive@Vtext_oarchive@archive@boost@@Vclass_id_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVclass_id_type@12@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::class_id_type>
	add	esp, 8

; 234  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Vclass_id_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVclass_id_type@34@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<boost::archive::class_id_type>, COMDAT

; 64   : inline void check_object_versioning(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_versioning@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Vclass_id_reference_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVclass_id_reference_type@34@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vclass_id_reference_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVclass_id_reference_type@34@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::class_id_reference_type>, COMDAT

; 232  :         static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 233  :             save_access::save_primitive(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$save_primitive@Vtext_oarchive@archive@boost@@Vclass_id_reference_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVclass_id_reference_type@12@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::class_id_reference_type>
	add	esp, 8

; 234  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Vclass_id_reference_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVclass_id_reference_type@34@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::class_id_reference_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@Vclass_id_reference_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@Vclass_id_reference_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<boost::archive::class_id_reference_type>, COMDAT

; 64   : inline void check_object_versioning(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_versioning@Vclass_id_reference_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<boost::archive::class_id_reference_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Utracking_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABUtracking_type@34@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Utracking_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABUtracking_type@34@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::tracking_type>, COMDAT

; 232  :         static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 233  :             save_access::save_primitive(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$save_primitive@Vtext_oarchive@archive@boost@@Utracking_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABUtracking_type@12@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::tracking_type>
	add	esp, 8

; 234  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Utracking_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABUtracking_type@34@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<boost::archive::tracking_type>, COMDAT

; 64   : inline void check_object_versioning(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_versioning@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Arg$ = 8						; size = 4
??$?0AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT
; _this$ = ecx

; 164  : 		{	// construct with argument

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 163  : 		: _Val(_STD forward<_Other>(_Arg))

	mov	eax, DWORD PTR __Arg$[ebp]
	push	eax
	call	??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 165  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z PROC ; std::tuple<>::tuple<><std::_Exact_args_t,0>, COMDAT
; _this$ = ecx

; 255  : 		{	// construct from one arg per element

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 256  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z ENDP ; std::tuple<>::tuple<><std::_Exact_args_t,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@VCContact@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVCContact@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@VCContact@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVCContact@@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<CContact>, COMDAT

; 430  :     static void invoke(Archive & ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 431  :         typedef typename mpl::eval_if<
; 432  :                 // if its primitive
; 433  :                 mpl::equal_to<
; 434  :                     boost::serialization::implementation_level< T >,
; 435  :                     mpl::int_<boost::serialization::primitive_type>
; 436  :                 >,
; 437  :                 mpl::identity<load_primitive>,
; 438  :             // else
; 439  :             typename mpl::eval_if<
; 440  :             // class info / version
; 441  :             mpl::greater_equal<
; 442  :                         boost::serialization::implementation_level< T >,
; 443  :                         mpl::int_<boost::serialization::object_class_info>
; 444  :                     >,
; 445  :             // do standard load
; 446  :             mpl::identity<load_standard>,
; 447  :         // else
; 448  :         typename mpl::eval_if<
; 449  :             // no tracking
; 450  :                     mpl::equal_to<
; 451  :                         boost::serialization::tracking_level< T >,
; 452  :                         mpl::int_<boost::serialization::track_never>
; 453  :                 >,
; 454  :                 // do a fast load
; 455  :                 mpl::identity<load_only>,
; 456  :             // else
; 457  :             // do a fast load only tracking is turned off
; 458  :             mpl::identity<load_conditional>
; 459  :         > > >::type typex;
; 460  :         check_object_versioning< T >();

	call	??$check_object_versioning@VCContact@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<CContact>

; 461  :         check_object_level< T >();

	call	??$check_object_level@VCContact@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<CContact>

; 462  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@VCContact@@@load_standard@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABVCContact@@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_standard::invoke<CContact>
	add	esp, 8

; 463  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@VCContact@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVCContact@@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_const_loading@VCContact@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_const_loading@VCContact@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_const_loading<CContact>, COMDAT

; 152  : inline void check_const_loading(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 153  :     typedef
; 154  :         typename mpl::or_<
; 155  :             typename boost::serialization::is_wrapper< T >,
; 156  :             typename mpl::not_<
; 157  :                 typename boost::is_const< T >
; 158  :             >
; 159  :         >::type typex;
; 160  :     // cannot load data into a "const" object unless it's a
; 161  :     // wrapper around some other non-const object.
; 162  :     BOOST_STATIC_ASSERT(typex::value);
; 163  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_const_loading@VCContact@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_const_loading<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@VCContact@@@save_standard@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVCContact@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@VCContact@@@save_standard@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVCContact@@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_standard::invoke<CContact>, COMDAT

; 253  :         static void invoke(Archive &ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 254  :             ar.save_object(

	call	?get_const_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@SAABV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_const_instance
	push	eax
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	call	?save_object@basic_oarchive@detail@archive@boost@@QAEXPBXABVbasic_oserializer@234@@Z ; boost::archive::detail::basic_oarchive::save_object

; 255  :                 & t, 
; 256  :                 boost::serialization::singleton<
; 257  :                     oserializer<Archive, T>
; 258  :                 >::get_const_instance()
; 259  :             );
; 260  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@VCContact@@@save_standard@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVCContact@@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_standard::invoke<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@VCContact@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@VCContact@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<CContact>, COMDAT

; 64   : inline void check_object_versioning(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_versioning@VCContact@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@YAAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@AAPAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@YAAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@AAPAV10@@Z PROC ; std::forward<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@YAAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@AAPAV10@@Z ENDP ; std::forward<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Vobject_id_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVobject_id_type@34@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vobject_id_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVobject_id_type@34@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::object_id_type>, COMDAT

; 232  :         static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 233  :             save_access::save_primitive(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$save_primitive@Vtext_oarchive@archive@boost@@Vobject_id_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVobject_id_type@12@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::object_id_type>
	add	esp, 8

; 234  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Vobject_id_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVobject_id_type@34@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<boost::archive::object_id_type>, COMDAT

; 64   : inline void check_object_versioning(){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$check_object_versioning@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@archive@boost@@YAXAAVtext_oarchive@01@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@archive@boost@@YAXAAVtext_oarchive@01@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::save<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >, COMDAT

; 511  : inline void save(Archive & ar, /*const*/ T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 512  :     typedef 
; 513  :         typename mpl::eval_if<is_pointer< T >,
; 514  :             mpl::identity<detail::save_pointer_type<Archive> >,
; 515  :         //else
; 516  :         typename mpl::eval_if<is_enum< T >,
; 517  :             mpl::identity<detail::save_enum_type<Archive> >,
; 518  :         //else
; 519  :         typename mpl::eval_if<is_array< T >,
; 520  :             mpl::identity<detail::save_array_type<Archive> >,
; 521  :         //else
; 522  :             mpl::identity<detail::save_non_pointer_type<Archive> >
; 523  :         >
; 524  :         >
; 525  :         >::type typex;
; 526  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8

; 527  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save@Vtext_oarchive@archive@boost@@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@archive@boost@@YAXAAVtext_oarchive@01@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::save<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@V?$shared_ptr@VCContact@@@std@@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$shared_ptr@VCContact@@@std@@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@@Z PROC ; std::allocator<std::shared_ptr<CContact> >::destroy<std::shared_ptr<CContact> >, COMDAT
; _this$ = ecx

; 743  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 744  : 		_Ptr->~_Uty();

	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G?$shared_ptr@VCContact@@@std@@QAEPAXI@Z

; 745  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$shared_ptr@VCContact@@@std@@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@@Z ENDP ; std::allocator<std::shared_ptr<CContact> >::destroy<std::shared_ptr<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load@Vtext_iarchive@archive@boost@@Vversion_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVversion_type@01@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load@Vtext_iarchive@archive@boost@@Vversion_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVversion_type@01@@Z PROC ; boost::archive::load<boost::archive::text_iarchive,boost::archive::version_type>, COMDAT

; 598  : inline void load(Archive & ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 599  :     // if this assertion trips. It means we're trying to load a
; 600  :     // const object with a compiler that doesn't have correct
; 601  :     // funtion template ordering.  On other compilers, this is
; 602  :     // handled below.
; 603  :     detail::check_const_loading< T >();

	call	??$check_const_loading@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::archive::version_type>

; 604  :     typedef
; 605  :         typename mpl::eval_if<is_pointer< T >,
; 606  :             mpl::identity<detail::load_pointer_type<Archive> >
; 607  :         ,//else
; 608  :         typename mpl::eval_if<is_array< T >,
; 609  :             mpl::identity<detail::load_array_type<Archive> >
; 610  :         ,//else
; 611  :         typename mpl::eval_if<is_enum< T >,
; 612  :             mpl::identity<detail::load_enum_type<Archive> >
; 613  :         ,//else
; 614  :             mpl::identity<detail::load_non_pointer_type<Archive> >
; 615  :         >
; 616  :         >
; 617  :         >::type typex;
; 618  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Vversion_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVversion_type@23@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::version_type>
	add	esp, 8

; 619  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$load@Vtext_iarchive@archive@boost@@Vversion_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVversion_type@01@@Z ENDP ; boost::archive::load<boost::archive::text_iarchive,boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load@Vtext_iarchive@archive@boost@@Vobject_id_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVobject_id_type@01@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load@Vtext_iarchive@archive@boost@@Vobject_id_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVobject_id_type@01@@Z PROC ; boost::archive::load<boost::archive::text_iarchive,boost::archive::object_id_type>, COMDAT

; 598  : inline void load(Archive & ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 599  :     // if this assertion trips. It means we're trying to load a
; 600  :     // const object with a compiler that doesn't have correct
; 601  :     // funtion template ordering.  On other compilers, this is
; 602  :     // handled below.
; 603  :     detail::check_const_loading< T >();

	call	??$check_const_loading@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::archive::object_id_type>

; 604  :     typedef
; 605  :         typename mpl::eval_if<is_pointer< T >,
; 606  :             mpl::identity<detail::load_pointer_type<Archive> >
; 607  :         ,//else
; 608  :         typename mpl::eval_if<is_array< T >,
; 609  :             mpl::identity<detail::load_array_type<Archive> >
; 610  :         ,//else
; 611  :         typename mpl::eval_if<is_enum< T >,
; 612  :             mpl::identity<detail::load_enum_type<Archive> >
; 613  :         ,//else
; 614  :             mpl::identity<detail::load_non_pointer_type<Archive> >
; 615  :         >
; 616  :         >
; 617  :         >::type typex;
; 618  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Vobject_id_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVobject_id_type@23@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::object_id_type>
	add	esp, 8

; 619  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$load@Vtext_iarchive@archive@boost@@Vobject_id_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVobject_id_type@01@@Z ENDP ; boost::archive::load<boost::archive::text_iarchive,boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load@Vtext_iarchive@archive@boost@@Vclass_id_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVclass_id_type@01@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load@Vtext_iarchive@archive@boost@@Vclass_id_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVclass_id_type@01@@Z PROC ; boost::archive::load<boost::archive::text_iarchive,boost::archive::class_id_type>, COMDAT

; 598  : inline void load(Archive & ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 599  :     // if this assertion trips. It means we're trying to load a
; 600  :     // const object with a compiler that doesn't have correct
; 601  :     // funtion template ordering.  On other compilers, this is
; 602  :     // handled below.
; 603  :     detail::check_const_loading< T >();

	call	??$check_const_loading@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::archive::class_id_type>

; 604  :     typedef
; 605  :         typename mpl::eval_if<is_pointer< T >,
; 606  :             mpl::identity<detail::load_pointer_type<Archive> >
; 607  :         ,//else
; 608  :         typename mpl::eval_if<is_array< T >,
; 609  :             mpl::identity<detail::load_array_type<Archive> >
; 610  :         ,//else
; 611  :         typename mpl::eval_if<is_enum< T >,
; 612  :             mpl::identity<detail::load_enum_type<Archive> >
; 613  :         ,//else
; 614  :             mpl::identity<detail::load_non_pointer_type<Archive> >
; 615  :         >
; 616  :         >
; 617  :         >::type typex;
; 618  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Vclass_id_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVclass_id_type@23@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::class_id_type>
	add	esp, 8

; 619  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$load@Vtext_iarchive@archive@boost@@Vclass_id_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVclass_id_type@01@@Z ENDP ; boost::archive::load<boost::archive::text_iarchive,boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load@Vtext_iarchive@archive@boost@@Utracking_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAUtracking_type@01@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load@Vtext_iarchive@archive@boost@@Utracking_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAUtracking_type@01@@Z PROC ; boost::archive::load<boost::archive::text_iarchive,boost::archive::tracking_type>, COMDAT

; 598  : inline void load(Archive & ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 599  :     // if this assertion trips. It means we're trying to load a
; 600  :     // const object with a compiler that doesn't have correct
; 601  :     // funtion template ordering.  On other compilers, this is
; 602  :     // handled below.
; 603  :     detail::check_const_loading< T >();

	call	??$check_const_loading@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::archive::tracking_type>

; 604  :     typedef
; 605  :         typename mpl::eval_if<is_pointer< T >,
; 606  :             mpl::identity<detail::load_pointer_type<Archive> >
; 607  :         ,//else
; 608  :         typename mpl::eval_if<is_array< T >,
; 609  :             mpl::identity<detail::load_array_type<Archive> >
; 610  :         ,//else
; 611  :         typename mpl::eval_if<is_enum< T >,
; 612  :             mpl::identity<detail::load_enum_type<Archive> >
; 613  :         ,//else
; 614  :             mpl::identity<detail::load_non_pointer_type<Archive> >
; 615  :         >
; 616  :         >
; 617  :         >::type typex;
; 618  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Utracking_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAUtracking_type@23@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::tracking_type>
	add	esp, 8

; 619  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$load@Vtext_iarchive@archive@boost@@Utracking_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAUtracking_type@01@@Z ENDP ; boost::archive::load<boost::archive::text_iarchive,boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Vversion_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVversion_type@23@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vversion_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVversion_type@23@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::version_type>, COMDAT

; 277  :     static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 278  :         typedef 
; 279  :             typename mpl::eval_if<
; 280  :             // if its primitive
; 281  :                 mpl::equal_to<
; 282  :                     boost::serialization::implementation_level< T >,
; 283  :                     mpl::int_<boost::serialization::primitive_type>
; 284  :                 >,
; 285  :                 mpl::identity<save_primitive>,
; 286  :             // else
; 287  :             typename mpl::eval_if<
; 288  :                 // class info / version
; 289  :                 mpl::greater_equal<
; 290  :                     boost::serialization::implementation_level< T >,
; 291  :                     mpl::int_<boost::serialization::object_class_info>
; 292  :                 >,
; 293  :                 // do standard save
; 294  :                 mpl::identity<save_standard>,
; 295  :             // else
; 296  :             typename mpl::eval_if<
; 297  :                     // no tracking
; 298  :                 mpl::equal_to<
; 299  :                     boost::serialization::tracking_level< T >,
; 300  :                     mpl::int_<boost::serialization::track_never>
; 301  :                 >,
; 302  :                 // do a fast save
; 303  :                 mpl::identity<save_only>,
; 304  :             // else
; 305  :                 // do a fast save only tracking is turned off
; 306  :                 mpl::identity<save_conditional>
; 307  :             > > >::type typex; 
; 308  :         check_object_versioning< T >();

	call	??$check_object_versioning@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::version_type>

; 309  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Vversion_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVversion_type@34@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::version_type>
	add	esp, 8

; 310  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Vversion_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVversion_type@23@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Vobject_reference_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVobject_reference_type@23@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vobject_reference_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVobject_reference_type@23@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::object_reference_type>, COMDAT

; 277  :     static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 278  :         typedef 
; 279  :             typename mpl::eval_if<
; 280  :             // if its primitive
; 281  :                 mpl::equal_to<
; 282  :                     boost::serialization::implementation_level< T >,
; 283  :                     mpl::int_<boost::serialization::primitive_type>
; 284  :                 >,
; 285  :                 mpl::identity<save_primitive>,
; 286  :             // else
; 287  :             typename mpl::eval_if<
; 288  :                 // class info / version
; 289  :                 mpl::greater_equal<
; 290  :                     boost::serialization::implementation_level< T >,
; 291  :                     mpl::int_<boost::serialization::object_class_info>
; 292  :                 >,
; 293  :                 // do standard save
; 294  :                 mpl::identity<save_standard>,
; 295  :             // else
; 296  :             typename mpl::eval_if<
; 297  :                     // no tracking
; 298  :                 mpl::equal_to<
; 299  :                     boost::serialization::tracking_level< T >,
; 300  :                     mpl::int_<boost::serialization::track_never>
; 301  :                 >,
; 302  :                 // do a fast save
; 303  :                 mpl::identity<save_only>,
; 304  :             // else
; 305  :                 // do a fast save only tracking is turned off
; 306  :                 mpl::identity<save_conditional>
; 307  :             > > >::type typex; 
; 308  :         check_object_versioning< T >();

	call	??$check_object_versioning@Vobject_reference_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::object_reference_type>

; 309  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Vobject_reference_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVobject_reference_type@34@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::object_reference_type>
	add	esp, 8

; 310  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Vobject_reference_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVobject_reference_type@23@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::object_reference_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Vclass_id_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVclass_id_type@23@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vclass_id_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVclass_id_type@23@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::class_id_type>, COMDAT

; 277  :     static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 278  :         typedef 
; 279  :             typename mpl::eval_if<
; 280  :             // if its primitive
; 281  :                 mpl::equal_to<
; 282  :                     boost::serialization::implementation_level< T >,
; 283  :                     mpl::int_<boost::serialization::primitive_type>
; 284  :                 >,
; 285  :                 mpl::identity<save_primitive>,
; 286  :             // else
; 287  :             typename mpl::eval_if<
; 288  :                 // class info / version
; 289  :                 mpl::greater_equal<
; 290  :                     boost::serialization::implementation_level< T >,
; 291  :                     mpl::int_<boost::serialization::object_class_info>
; 292  :                 >,
; 293  :                 // do standard save
; 294  :                 mpl::identity<save_standard>,
; 295  :             // else
; 296  :             typename mpl::eval_if<
; 297  :                     // no tracking
; 298  :                 mpl::equal_to<
; 299  :                     boost::serialization::tracking_level< T >,
; 300  :                     mpl::int_<boost::serialization::track_never>
; 301  :                 >,
; 302  :                 // do a fast save
; 303  :                 mpl::identity<save_only>,
; 304  :             // else
; 305  :                 // do a fast save only tracking is turned off
; 306  :                 mpl::identity<save_conditional>
; 307  :             > > >::type typex; 
; 308  :         check_object_versioning< T >();

	call	??$check_object_versioning@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::class_id_type>

; 309  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Vclass_id_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVclass_id_type@34@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::class_id_type>
	add	esp, 8

; 310  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Vclass_id_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVclass_id_type@23@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Vclass_id_reference_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVclass_id_reference_type@23@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vclass_id_reference_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVclass_id_reference_type@23@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::class_id_reference_type>, COMDAT

; 277  :     static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 278  :         typedef 
; 279  :             typename mpl::eval_if<
; 280  :             // if its primitive
; 281  :                 mpl::equal_to<
; 282  :                     boost::serialization::implementation_level< T >,
; 283  :                     mpl::int_<boost::serialization::primitive_type>
; 284  :                 >,
; 285  :                 mpl::identity<save_primitive>,
; 286  :             // else
; 287  :             typename mpl::eval_if<
; 288  :                 // class info / version
; 289  :                 mpl::greater_equal<
; 290  :                     boost::serialization::implementation_level< T >,
; 291  :                     mpl::int_<boost::serialization::object_class_info>
; 292  :                 >,
; 293  :                 // do standard save
; 294  :                 mpl::identity<save_standard>,
; 295  :             // else
; 296  :             typename mpl::eval_if<
; 297  :                     // no tracking
; 298  :                 mpl::equal_to<
; 299  :                     boost::serialization::tracking_level< T >,
; 300  :                     mpl::int_<boost::serialization::track_never>
; 301  :                 >,
; 302  :                 // do a fast save
; 303  :                 mpl::identity<save_only>,
; 304  :             // else
; 305  :                 // do a fast save only tracking is turned off
; 306  :                 mpl::identity<save_conditional>
; 307  :             > > >::type typex; 
; 308  :         check_object_versioning< T >();

	call	??$check_object_versioning@Vclass_id_reference_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::class_id_reference_type>

; 309  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Vclass_id_reference_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVclass_id_reference_type@34@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::class_id_reference_type>
	add	esp, 8

; 310  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Vclass_id_reference_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVclass_id_reference_type@23@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::class_id_reference_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Utracking_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABUtracking_type@23@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Utracking_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABUtracking_type@23@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::tracking_type>, COMDAT

; 277  :     static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 278  :         typedef 
; 279  :             typename mpl::eval_if<
; 280  :             // if its primitive
; 281  :                 mpl::equal_to<
; 282  :                     boost::serialization::implementation_level< T >,
; 283  :                     mpl::int_<boost::serialization::primitive_type>
; 284  :                 >,
; 285  :                 mpl::identity<save_primitive>,
; 286  :             // else
; 287  :             typename mpl::eval_if<
; 288  :                 // class info / version
; 289  :                 mpl::greater_equal<
; 290  :                     boost::serialization::implementation_level< T >,
; 291  :                     mpl::int_<boost::serialization::object_class_info>
; 292  :                 >,
; 293  :                 // do standard save
; 294  :                 mpl::identity<save_standard>,
; 295  :             // else
; 296  :             typename mpl::eval_if<
; 297  :                     // no tracking
; 298  :                 mpl::equal_to<
; 299  :                     boost::serialization::tracking_level< T >,
; 300  :                     mpl::int_<boost::serialization::track_never>
; 301  :                 >,
; 302  :                 // do a fast save
; 303  :                 mpl::identity<save_only>,
; 304  :             // else
; 305  :                 // do a fast save only tracking is turned off
; 306  :                 mpl::identity<save_conditional>
; 307  :             > > >::type typex; 
; 308  :         check_object_versioning< T >();

	call	??$check_object_versioning@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::tracking_type>

; 309  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Utracking_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABUtracking_type@34@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::tracking_type>
	add	esp, 8

; 310  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Utracking_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABUtracking_type@23@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@?$_Tuple_val@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Arg$ = 8						; size = 4
??$?0PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@?$_Tuple_val@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@@Z PROC ; std::_Tuple_val<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>::_Tuple_val<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *><std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>, COMDAT
; _this$ = ecx

; 164  : 		{	// construct with argument

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 163  : 		: _Val(_STD forward<_Other>(_Arg))

	mov	eax, DWORD PTR __Arg$[ebp]
	push	eax
	call	??$forward@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z ; std::forward<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 165  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@?$_Tuple_val@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@@Z ENDP ; std::_Tuple_val<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>::_Tuple_val<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *><std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$V$0A@@?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@U_Exact_args_t@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__This_arg$ = 12					; size = 4
??$?0U_Exact_args_t@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$V$0A@@?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@U_Exact_args_t@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::_Exact_args_t,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>, COMDAT
; _this$ = ecx

; 304  : 		{	// construct from one arg per element

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 302  : 		: _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	movzx	ecx, BYTE PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>

; 303  : 			_Myfirst(_STD forward<_This2>(_This_arg))

	mov	eax, DWORD PTR __This_arg$[ebp]
	push	eax
	call	??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>

; 305  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0U_Exact_args_t@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$V$0A@@?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@U_Exact_args_t@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::_Exact_args_t,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load@Vtext_iarchive@archive@boost@@VCContact@@@archive@boost@@YAXAAVtext_iarchive@01@AAVCContact@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load@Vtext_iarchive@archive@boost@@VCContact@@@archive@boost@@YAXAAVtext_iarchive@01@AAVCContact@@@Z PROC ; boost::archive::load<boost::archive::text_iarchive,CContact>, COMDAT

; 598  : inline void load(Archive & ar, T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 599  :     // if this assertion trips. It means we're trying to load a
; 600  :     // const object with a compiler that doesn't have correct
; 601  :     // funtion template ordering.  On other compilers, this is
; 602  :     // handled below.
; 603  :     detail::check_const_loading< T >();

	call	??$check_const_loading@VCContact@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<CContact>

; 604  :     typedef
; 605  :         typename mpl::eval_if<is_pointer< T >,
; 606  :             mpl::identity<detail::load_pointer_type<Archive> >
; 607  :         ,//else
; 608  :         typename mpl::eval_if<is_array< T >,
; 609  :             mpl::identity<detail::load_array_type<Archive> >
; 610  :         ,//else
; 611  :         typename mpl::eval_if<is_enum< T >,
; 612  :             mpl::identity<detail::load_enum_type<Archive> >
; 613  :         ,//else
; 614  :             mpl::identity<detail::load_non_pointer_type<Archive> >
; 615  :         >
; 616  :         >
; 617  :         >::type typex;
; 618  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@VCContact@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVCContact@@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<CContact>
	add	esp, 8

; 619  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$load@Vtext_iarchive@archive@boost@@VCContact@@@archive@boost@@YAXAAVtext_iarchive@01@AAVCContact@@@Z ENDP ; boost::archive::load<boost::archive::text_iarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@VCContact@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVCContact@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@VCContact@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVCContact@@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<CContact>, COMDAT

; 277  :     static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 278  :         typedef 
; 279  :             typename mpl::eval_if<
; 280  :             // if its primitive
; 281  :                 mpl::equal_to<
; 282  :                     boost::serialization::implementation_level< T >,
; 283  :                     mpl::int_<boost::serialization::primitive_type>
; 284  :                 >,
; 285  :                 mpl::identity<save_primitive>,
; 286  :             // else
; 287  :             typename mpl::eval_if<
; 288  :                 // class info / version
; 289  :                 mpl::greater_equal<
; 290  :                     boost::serialization::implementation_level< T >,
; 291  :                     mpl::int_<boost::serialization::object_class_info>
; 292  :                 >,
; 293  :                 // do standard save
; 294  :                 mpl::identity<save_standard>,
; 295  :             // else
; 296  :             typename mpl::eval_if<
; 297  :                     // no tracking
; 298  :                 mpl::equal_to<
; 299  :                     boost::serialization::tracking_level< T >,
; 300  :                     mpl::int_<boost::serialization::track_never>
; 301  :                 >,
; 302  :                 // do a fast save
; 303  :                 mpl::identity<save_only>,
; 304  :             // else
; 305  :                 // do a fast save only tracking is turned off
; 306  :                 mpl::identity<save_conditional>
; 307  :             > > >::type typex; 
; 308  :         check_object_versioning< T >();

	call	??$check_object_versioning@VCContact@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<CContact>

; 309  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@VCContact@@@save_standard@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVCContact@@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_standard::invoke<CContact>
	add	esp, 8

; 310  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@VCContact@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVCContact@@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
_<_Val2_0>$ = 16					; size = 4
??$?0U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1><std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>, COMDAT
; _this$ = ecx

; 289  : 		{	// construct from forwarded values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 287  : 		: _Ty1(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@0@AAU10@@Z ; std::forward<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 4

; 288  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	eax, DWORD PTR _<_Val2_0>$[ebp]
	push	eax
	call	??$forward@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@YAAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@AAPAV10@@Z ; std::forward<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 290  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$?0U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1><std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$invoke@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAX$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV10@$$QAV20@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
??$invoke@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAX$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV10@$$QAV20@@Z PROC ; std::invoke<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 1442 : 	{	// INVOKE a callable object

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1443 : 	return (_Invoker<_Callable, _Types...>::_Call(

	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	push	eax
	call	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z ; std::forward<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Obj$[ebp]
	push	edx
	call	??$forward@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YA$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAP6AX01@Z@Z ; std::forward<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
	add	esp, 4
	push	eax
	call	??$_Call@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@_Invoker_functor@std@@SAX$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@$$QAV31@@Z ; std::_Invoker_functor::_Call<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 12					; 0000000cH

; 1444 : 		_STD forward<_Callable>(_Obj), _STD forward<_Types>(_Args)...));
; 1445 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAX$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV10@$$QAV20@@Z ENDP ; std::invoke<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$_Call@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@_Invoker_functor@std@@SAX$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@$$QAV31@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
??$_Call@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@_Invoker_functor@std@@SAX$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@$$QAV31@@Z PROC ; std::_Invoker_functor::_Call<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 1374 : 		{	// INVOKE a function object

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1375 : 		return (_STD forward<_Callable>(_Obj)(

	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	push	eax
	call	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z ; std::forward<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$forward@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YA$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAP6AX01@Z@Z ; std::forward<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1376 : 			_STD forward<_Types>(_Args)...));
; 1377 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Call@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@_Invoker_functor@std@@SAX$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@$$QAV31@@Z ENDP ; std::_Invoker_functor::_Call<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YA$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAP6AX01@Z@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YA$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAP6AX01@Z@Z PROC ; std::forward<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YA$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAP6AX01@Z@Z ENDP ; std::forward<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$get@$01P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z
_TEXT	SEGMENT
__Tuple$ = 8						; size = 4
??$get@$01P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z PROC ; std::get<2,void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 883  : 	{	// get reference to _Index element of tuple

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 884  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::_Ttype
; 885  : 		_Ttype;
; 886  : 	return (((_Ttype&)_Tuple)._Myfirst._Val);

	mov	eax, DWORD PTR __Tuple$[ebp]

; 887  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$get@$01P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z ENDP ; std::get<2,void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z PROC ; std::move<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > * &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z ENDP ; std::move<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$get@$00P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z
_TEXT	SEGMENT
__Tuple$ = 8						; size = 4
??$get@$00P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z PROC ; std::get<1,void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 883  : 	{	// get reference to _Index element of tuple

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 884  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::_Ttype
; 885  : 		_Ttype;
; 886  : 	return (((_Ttype&)_Tuple)._Myfirst._Val);

	mov	eax, DWORD PTR __Tuple$[ebp]
	add	eax, 28					; 0000001cH

; 887  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$get@$00P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z ENDP ; std::get<1,void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YA$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAP6AX01@Z@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YA$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAP6AX01@Z@Z PROC ; std::move<void (__cdecl*&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>, COMDAT

; 1291 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YA$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAP6AX01@Z@Z ENDP ; std::move<void (__cdecl*&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$get@$0A@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z
_TEXT	SEGMENT
__Tuple$ = 8						; size = 4
??$get@$0A@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z PROC ; std::get<0,void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 883  : 	{	// get reference to _Index element of tuple

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 884  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::_Ttype
; 885  : 		_Ttype;
; 886  : 	return (((_Ttype&)_Tuple)._Myfirst._Val);

	mov	eax, DWORD PTR __Tuple$[ebp]
	add	eax, 32					; 00000020H

; 887  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$get@$0A@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z ENDP ; std::get<0,void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
_<_Val2_0>$ = 12					; size = 4
??$?0AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1><std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>, COMDAT
; _this$ = ecx

; 280  : 		{	// construct from forwarded values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 279  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	eax, DWORD PTR _<_Val2_0>$[ebp]
	push	eax
	call	??$forward@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@YAAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@AAPAV10@@Z ; std::forward<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 281  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1><std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Vobject_id_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVobject_id_type@23@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vobject_id_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVobject_id_type@23@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::object_id_type>, COMDAT

; 277  :     static void invoke(Archive & ar, const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 278  :         typedef 
; 279  :             typename mpl::eval_if<
; 280  :             // if its primitive
; 281  :                 mpl::equal_to<
; 282  :                     boost::serialization::implementation_level< T >,
; 283  :                     mpl::int_<boost::serialization::primitive_type>
; 284  :                 >,
; 285  :                 mpl::identity<save_primitive>,
; 286  :             // else
; 287  :             typename mpl::eval_if<
; 288  :                 // class info / version
; 289  :                 mpl::greater_equal<
; 290  :                     boost::serialization::implementation_level< T >,
; 291  :                     mpl::int_<boost::serialization::object_class_info>
; 292  :                 >,
; 293  :                 // do standard save
; 294  :                 mpl::identity<save_standard>,
; 295  :             // else
; 296  :             typename mpl::eval_if<
; 297  :                     // no tracking
; 298  :                 mpl::equal_to<
; 299  :                     boost::serialization::tracking_level< T >,
; 300  :                     mpl::int_<boost::serialization::track_never>
; 301  :                 >,
; 302  :                 // do a fast save
; 303  :                 mpl::identity<save_only>,
; 304  :             // else
; 305  :                 // do a fast save only tracking is turned off
; 306  :                 mpl::identity<save_conditional>
; 307  :             > > >::type typex; 
; 308  :         check_object_versioning< T >();

	call	??$check_object_versioning@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::object_id_type>

; 309  :         typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Vobject_id_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVobject_id_type@34@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::object_id_type>
	add	esp, 8

; 310  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@Vobject_id_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVobject_id_type@23@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >, COMDAT
; _this$ = ecx

; 69   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         archive::save(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	push	eax
	call	??$save@Vtext_oarchive@archive@boost@@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@archive@boost@@YAXAAVtext_oarchive@01@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::save<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
	add	esp, 8

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0U?$integral_constant@_N$00@std@@@_Any_tag@std@@QAE@$$QAU?$integral_constant@_N$00@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0U?$integral_constant@_N$00@std@@@_Any_tag@std@@QAE@$$QAU?$integral_constant@_N$00@1@@Z PROC ; std::_Any_tag::_Any_tag<std::integral_constant<bool,1> >, COMDAT
; _this$ = ecx

; 554  : 		constexpr _Any_tag(_Ty&&) _NOEXCEPT {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$integral_constant@_N$00@std@@@_Any_tag@std@@QAE@$$QAU?$integral_constant@_N$00@1@@Z ENDP ; std::_Any_tag::_Any_tag<std::integral_constant<bool,1> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
_TEXT	SEGMENT
tv80 = -224						; size = 4
__Next$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z PROC ; std::_Uninitialized_move_al_unchecked1<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *,std::allocator<std::shared_ptr<CContact> > >, COMDAT

; 273  : 	{	// move [_First, _Last) to raw _Dest, using _Al, no special optimization

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 274  : 	_FwdIt _Next = _Dest;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 275  : 
; 276  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 277  : 	for (; _First != _Last; ++_Dest, (void)++_First)

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	eax, DWORD PTR __Dest$[ebp]
	add	eax, 8
	mov	DWORD PTR __Dest$[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	add	ecx, 8
	mov	DWORD PTR __First$[ebp], ecx
$LN4@Uninitiali:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Uninitiali

; 278  : 		_Al.construct(_Unfancy(_Dest), _STD move(*_First));

	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unfancy<std::shared_ptr<CContact> >
	add	esp, 4
	mov	DWORD PTR tv80[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$move@AAV?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::move<std::shared_ptr<CContact> &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv80[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >
	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:
	jmp	SHORT $LN7@Uninitiali
__catch$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z$0:

; 279  : 	_CATCH_ALL
; 280  : 	_Destroy_range(_Next, _Dest, _Al);

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@PAV?$shared_ptr@VCContact@@@2@@std@@YAXPAV?$shared_ptr@VCContact@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::shared_ptr<CContact> >,std::shared_ptr<CContact> *>
	add	esp, 12					; 0000000cH

; 281  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 282  : 	_CATCH_END

	mov	eax, $LN10@Uninitiali
	ret	0
$LN7@Uninitiali:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z$1
$LN10@Uninitiali:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z$1:

; 283  : 
; 284  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]
$LN6@Uninitiali:

; 285  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-228]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked1<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *,std::allocator<std::shared_ptr<CContact> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@V?$shared_ptr@VCContact@@@std@@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@V?$shared_ptr@VCContact@@@std@@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::destroy<std::shared_ptr<CContact> >, COMDAT

; 863  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 864  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$shared_ptr@VCContact@@@std@@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@@Z ; std::allocator<std::shared_ptr<CContact> >::destroy<std::shared_ptr<CContact> >

; 865  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$destroy@V?$shared_ptr@VCContact@@@std@@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::destroy<std::shared_ptr<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ??$load_override@Vversion_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVversion_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vversion_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVversion_type@23@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::version_type>, COMDAT
; _this$ = ecx

; 65   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   :         archive::load(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	push	eax
	call	??$load@Vtext_iarchive@archive@boost@@Vversion_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVversion_type@01@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::archive::version_type>
	add	esp, 8

; 67   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@Vversion_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVversion_type@23@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ??$load_override@Vobject_id_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVobject_id_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vobject_id_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVobject_id_type@23@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::object_id_type>, COMDAT
; _this$ = ecx

; 65   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   :         archive::load(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	push	eax
	call	??$load@Vtext_iarchive@archive@boost@@Vobject_id_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVobject_id_type@01@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::archive::object_id_type>
	add	esp, 8

; 67   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@Vobject_id_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVobject_id_type@23@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ??$load_override@Vclass_id_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVclass_id_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vclass_id_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVclass_id_type@23@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::class_id_type>, COMDAT
; _this$ = ecx

; 65   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   :         archive::load(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	push	eax
	call	??$load@Vtext_iarchive@archive@boost@@Vclass_id_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVclass_id_type@01@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::archive::class_id_type>
	add	esp, 8

; 67   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@Vclass_id_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVclass_id_type@23@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ??$load_override@Utracking_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAUtracking_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Utracking_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAUtracking_type@23@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::tracking_type>, COMDAT
; _this$ = ecx

; 65   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   :         archive::load(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	push	eax
	call	??$load@Vtext_iarchive@archive@boost@@Utracking_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAUtracking_type@01@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::archive::tracking_type>
	add	esp, 8

; 67   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@Utracking_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAUtracking_type@23@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@$$CBVversion_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVversion_type@01@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@$$CBVversion_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVversion_type@01@@Z PROC ; boost::archive::save<boost::archive::text_oarchive,boost::archive::version_type const >, COMDAT

; 511  : inline void save(Archive & ar, /*const*/ T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 512  :     typedef 
; 513  :         typename mpl::eval_if<is_pointer< T >,
; 514  :             mpl::identity<detail::save_pointer_type<Archive> >,
; 515  :         //else
; 516  :         typename mpl::eval_if<is_enum< T >,
; 517  :             mpl::identity<detail::save_enum_type<Archive> >,
; 518  :         //else
; 519  :         typename mpl::eval_if<is_array< T >,
; 520  :             mpl::identity<detail::save_array_type<Archive> >,
; 521  :         //else
; 522  :             mpl::identity<detail::save_non_pointer_type<Archive> >
; 523  :         >
; 524  :         >
; 525  :         >::type typex;
; 526  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Vversion_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVversion_type@23@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::version_type>
	add	esp, 8

; 527  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save@Vtext_oarchive@archive@boost@@$$CBVversion_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVversion_type@01@@Z ENDP ; boost::archive::save<boost::archive::text_oarchive,boost::archive::version_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@$$CBVobject_reference_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVobject_reference_type@01@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@$$CBVobject_reference_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVobject_reference_type@01@@Z PROC ; boost::archive::save<boost::archive::text_oarchive,boost::archive::object_reference_type const >, COMDAT

; 511  : inline void save(Archive & ar, /*const*/ T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 512  :     typedef 
; 513  :         typename mpl::eval_if<is_pointer< T >,
; 514  :             mpl::identity<detail::save_pointer_type<Archive> >,
; 515  :         //else
; 516  :         typename mpl::eval_if<is_enum< T >,
; 517  :             mpl::identity<detail::save_enum_type<Archive> >,
; 518  :         //else
; 519  :         typename mpl::eval_if<is_array< T >,
; 520  :             mpl::identity<detail::save_array_type<Archive> >,
; 521  :         //else
; 522  :             mpl::identity<detail::save_non_pointer_type<Archive> >
; 523  :         >
; 524  :         >
; 525  :         >::type typex;
; 526  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Vobject_reference_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVobject_reference_type@23@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::object_reference_type>
	add	esp, 8

; 527  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save@Vtext_oarchive@archive@boost@@$$CBVobject_reference_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVobject_reference_type@01@@Z ENDP ; boost::archive::save<boost::archive::text_oarchive,boost::archive::object_reference_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@$$CBVclass_id_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVclass_id_type@01@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@$$CBVclass_id_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVclass_id_type@01@@Z PROC ; boost::archive::save<boost::archive::text_oarchive,boost::archive::class_id_type const >, COMDAT

; 511  : inline void save(Archive & ar, /*const*/ T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 512  :     typedef 
; 513  :         typename mpl::eval_if<is_pointer< T >,
; 514  :             mpl::identity<detail::save_pointer_type<Archive> >,
; 515  :         //else
; 516  :         typename mpl::eval_if<is_enum< T >,
; 517  :             mpl::identity<detail::save_enum_type<Archive> >,
; 518  :         //else
; 519  :         typename mpl::eval_if<is_array< T >,
; 520  :             mpl::identity<detail::save_array_type<Archive> >,
; 521  :         //else
; 522  :             mpl::identity<detail::save_non_pointer_type<Archive> >
; 523  :         >
; 524  :         >
; 525  :         >::type typex;
; 526  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Vclass_id_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVclass_id_type@23@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::class_id_type>
	add	esp, 8

; 527  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save@Vtext_oarchive@archive@boost@@$$CBVclass_id_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVclass_id_type@01@@Z ENDP ; boost::archive::save<boost::archive::text_oarchive,boost::archive::class_id_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@$$CBVclass_id_reference_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVclass_id_reference_type@01@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@$$CBVclass_id_reference_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVclass_id_reference_type@01@@Z PROC ; boost::archive::save<boost::archive::text_oarchive,boost::archive::class_id_reference_type const >, COMDAT

; 511  : inline void save(Archive & ar, /*const*/ T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 512  :     typedef 
; 513  :         typename mpl::eval_if<is_pointer< T >,
; 514  :             mpl::identity<detail::save_pointer_type<Archive> >,
; 515  :         //else
; 516  :         typename mpl::eval_if<is_enum< T >,
; 517  :             mpl::identity<detail::save_enum_type<Archive> >,
; 518  :         //else
; 519  :         typename mpl::eval_if<is_array< T >,
; 520  :             mpl::identity<detail::save_array_type<Archive> >,
; 521  :         //else
; 522  :             mpl::identity<detail::save_non_pointer_type<Archive> >
; 523  :         >
; 524  :         >
; 525  :         >::type typex;
; 526  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Vclass_id_reference_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVclass_id_reference_type@23@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::class_id_reference_type>
	add	esp, 8

; 527  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save@Vtext_oarchive@archive@boost@@$$CBVclass_id_reference_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVclass_id_reference_type@01@@Z ENDP ; boost::archive::save<boost::archive::text_oarchive,boost::archive::class_id_reference_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@$$CBUtracking_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABUtracking_type@01@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@$$CBUtracking_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABUtracking_type@01@@Z PROC ; boost::archive::save<boost::archive::text_oarchive,boost::archive::tracking_type const >, COMDAT

; 511  : inline void save(Archive & ar, /*const*/ T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 512  :     typedef 
; 513  :         typename mpl::eval_if<is_pointer< T >,
; 514  :             mpl::identity<detail::save_pointer_type<Archive> >,
; 515  :         //else
; 516  :         typename mpl::eval_if<is_enum< T >,
; 517  :             mpl::identity<detail::save_enum_type<Archive> >,
; 518  :         //else
; 519  :         typename mpl::eval_if<is_array< T >,
; 520  :             mpl::identity<detail::save_array_type<Archive> >,
; 521  :         //else
; 522  :             mpl::identity<detail::save_non_pointer_type<Archive> >
; 523  :         >
; 524  :         >
; 525  :         >::type typex;
; 526  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Utracking_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABUtracking_type@23@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::tracking_type>
	add	esp, 8

; 527  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save@Vtext_oarchive@archive@boost@@$$CBUtracking_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABUtracking_type@01@@Z ENDP ; boost::archive::save<boost::archive::text_oarchive,boost::archive::tracking_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@?$_Tuple_val@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Arg$ = 8						; size = 4
??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@?$_Tuple_val@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@Z PROC ; std::_Tuple_val<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>::_Tuple_val<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)><void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>, COMDAT
; _this$ = ecx

; 164  : 		{	// construct with argument

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 163  : 		: _Val(_STD forward<_Other>(_Arg))

	mov	eax, DWORD PTR __Arg$[ebp]
	push	eax
	call	??$forward@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YAA6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZA6AX01@Z@Z ; std::forward<void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 165  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@?$_Tuple_val@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@Z ENDP ; std::_Tuple_val<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>::_Tuple_val<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)><void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 1
__This_arg$ = 12					; size = 4
_<_Rest_arg_0>$ = 16					; size = 4
??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::_Exact_args_t,std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>, COMDAT
; _this$ = ecx

; 304  : 		{	// construct from one arg per element

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 302  : 		: _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

	xor	eax, eax
	mov	BYTE PTR $T2[ebp], al
	mov	ecx, DWORD PTR _<_Rest_arg_0>$[ebp]
	push	ecx
	call	??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	add	esp, 4
	push	eax
	movzx	edx, BYTE PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U_Exact_args_t@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$V$0A@@?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@U_Exact_args_t@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::_Exact_args_t,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 303  : 			_Myfirst(_STD forward<_This2>(_This_arg))

	mov	eax, DWORD PTR __This_arg$[ebp]
	push	eax
	call	??$forward@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z ; std::forward<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??$?0PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@?$_Tuple_val@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@@Z ; std::_Tuple_val<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>::_Tuple_val<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *><std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>

; 305  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ
__ehhandler$??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::_Exact_args_t,std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ??$load_override@VCContact@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVCContact@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@VCContact@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVCContact@@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<CContact>, COMDAT
; _this$ = ecx

; 65   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   :         archive::load(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	push	eax
	call	??$load@Vtext_iarchive@archive@boost@@VCContact@@@archive@boost@@YAXAAVtext_iarchive@01@AAVCContact@@@Z ; boost::archive::load<boost::archive::text_iarchive,CContact>
	add	esp, 8

; 67   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@VCContact@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVCContact@@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@$$CBVCContact@@@archive@boost@@YAXAAVtext_oarchive@01@ABVCContact@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@$$CBVCContact@@@archive@boost@@YAXAAVtext_oarchive@01@ABVCContact@@@Z PROC ; boost::archive::save<boost::archive::text_oarchive,CContact const >, COMDAT

; 511  : inline void save(Archive & ar, /*const*/ T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 512  :     typedef 
; 513  :         typename mpl::eval_if<is_pointer< T >,
; 514  :             mpl::identity<detail::save_pointer_type<Archive> >,
; 515  :         //else
; 516  :         typename mpl::eval_if<is_enum< T >,
; 517  :             mpl::identity<detail::save_enum_type<Archive> >,
; 518  :         //else
; 519  :         typename mpl::eval_if<is_array< T >,
; 520  :             mpl::identity<detail::save_array_type<Archive> >,
; 521  :         //else
; 522  :             mpl::identity<detail::save_non_pointer_type<Archive> >
; 523  :         >
; 524  :         >
; 525  :         >::type typex;
; 526  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@VCContact@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVCContact@@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<CContact>
	add	esp, 8

; 527  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save@Vtext_oarchive@archive@boost@@$$CBVCContact@@@archive@boost@@YAXAAVtext_oarchive@01@ABVCContact@@@Z ENDP ; boost::archive::save<boost::archive::text_oarchive,CContact const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$?0PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Dt$ = 12						; size = 4
??$?0PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@@Z PROC ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 1242 : 		{	// construct with compatible pointer and deleter

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1241 : 		: _Mypair(_One_then_variadic_args_t(), _STD forward<_Dx2>(_Dt), _Ptr)

	lea	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dt$[ebp]
	push	ecx
	call	??$forward@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@0@AAU10@@Z ; std::forward<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 4
	push	eax
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1><std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>

; 1243 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@@Z ENDP ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@0@AAU10@@Z PROC ; std::forward<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@0@AAU10@@Z ENDP ; std::forward<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??$_Execute@$0A@$00$01@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@U?$integer_sequence@I$0A@$00$01@1@@Z
_TEXT	SEGMENT
__Tup$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Execute@$0A@$00$01@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@U?$integer_sequence@I$0A@$00$01@1@@Z PROC ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Execute<0,1,2>, COMDAT

; 239  : 		{	// invoke function object packed in tuple

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 240  : 		_STD invoke(_STD move(_STD get<_Idxs>(_Tup))...);

	mov	eax, DWORD PTR __Tup$[ebp]
	push	eax
	call	??$get@$01P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z ; std::get<2,void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	call	??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Tup$[ebp]
	push	ecx
	call	??$get@$00P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z ; std::get<1,void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	call	??$move@AAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z ; std::move<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > * &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Tup$[ebp]
	push	edx
	call	??$get@$0A@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z ; std::get<0,void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	call	??$move@AAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YA$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAP6AX01@Z@Z ; std::move<void (__cdecl*&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
	add	esp, 4
	push	eax
	call	??$invoke@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAX$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV10@$$QAV20@@Z ; std::invoke<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 12					; 0000000cH

; 241  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Execute@$0A@$00$01@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@U?$integer_sequence@I$0A@$00$01@1@@Z ENDP ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Execute<0,1,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$?0PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$?0PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z PROC ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *>, COMDAT
; _this$ = ecx

; 1248 : 		{	// construct with compatible pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1247 : 		: _Mypair(_Zero_then_variadic_args_t(), _Ptr)

	lea	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1><std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>

; 1249 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ENDP ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@$$CBVobject_id_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVobject_id_type@01@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@$$CBVobject_id_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVobject_id_type@01@@Z PROC ; boost::archive::save<boost::archive::text_oarchive,boost::archive::object_id_type const >, COMDAT

; 511  : inline void save(Archive & ar, /*const*/ T &t){

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 512  :     typedef 
; 513  :         typename mpl::eval_if<is_pointer< T >,
; 514  :             mpl::identity<detail::save_pointer_type<Archive> >,
; 515  :         //else
; 516  :         typename mpl::eval_if<is_enum< T >,
; 517  :             mpl::identity<detail::save_enum_type<Archive> >,
; 518  :         //else
; 519  :         typename mpl::eval_if<is_array< T >,
; 520  :             mpl::identity<detail::save_array_type<Archive> >,
; 521  :         //else
; 522  :             mpl::identity<detail::save_non_pointer_type<Archive> >
; 523  :         >
; 524  :         >
; 525  :         >::type typex;
; 526  :     typex::invoke(ar, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$[ebp]
	push	ecx
	call	??$invoke@Vobject_id_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVobject_id_type@23@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::object_id_type>
	add	esp, 8

; 527  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$save@Vtext_oarchive@archive@boost@@$$CBVobject_id_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVobject_id_type@01@@Z ENDP ; boost::archive::save<boost::archive::text_oarchive,boost::archive::object_id_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >, COMDAT
; _this$ = ecx

; 82   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 83   :         this->detail_common_oarchive::save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >

; 84   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Rechecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAAAPAV?$shared_ptr@VCContact@@@0@AAPAV10@PAV10@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAAAPAV?$shared_ptr@VCContact@@@0@AAPAV10@PAV10@@Z PROC ; std::_Rechecked<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *>, COMDAT

; 457  : 	{	// reset checked from unchecked, generic

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 458  : 	_Dest = _Src;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx

; 459  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]

; 460  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Rechecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAAAPAV?$shared_ptr@VCContact@@@0@AAPAV10@PAV10@@Z ENDP ; std::_Rechecked<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -221						; size = 1
$T2 = -209						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move_al_unchecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move_al_unchecked<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *,std::allocator<std::shared_ptr<CContact> > >, COMDAT

; 301  : 	{	// move [_First, _Last) to raw _Dest, using _Al, choose optimization

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 302  : 	typedef decltype(_STD move(*_First)) _Src_type; // TRANSITION MODULES VSO#222794
; 303  : 	return (_Uninitialized_move_al_unchecked1(_First, _Last, _Dest, _Al,

	lea	eax, DWORD PTR __Dest$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_move_cat@V?$shared_ptr@VCContact@@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAV?$shared_ptr@VCContact@@@0@0@Z ; std::_Ptr_move_cat<std::shared_ptr<CContact>,std::shared_ptr<CContact> >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	push	ecx
	mov	ecx, esp
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??$?0U?$integral_constant@_N$00@std@@@_Any_tag@std@@QAE@$$QAU?$integral_constant@_N$00@1@@Z ; std::_Any_tag::_Any_tag<std::integral_constant<bool,1> >
	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked1<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *,std::allocator<std::shared_ptr<CContact> > >
	add	esp, 24					; 00000018H

; 304  : 		_Ptr_move_cat(_First, _Dest),
; 305  : 		_Uses_default_construct_t<_Alloc, decltype(_Unfancy(_Dest)), _Src_type>()));
; 306  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move_al_unchecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *,std::allocator<std::shared_ptr<CContact> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Unchecked@PAV?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAV?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z PROC ; std::_Unchecked<std::shared_ptr<CContact> *>, COMDAT

; 427  : 	{	// construct unchecked from checked, generic

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 428  : 	return (_Src);

	mov	eax, DWORD PTR __Src$[ebp]

; 429  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unchecked@PAV?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ENDP ; std::_Unchecked<std::shared_ptr<CContact> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
tv74 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN1@construct:

; 738  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx

; 743  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 744  : 		_Ptr->~_Uty();
; 745  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN1@construct:

; 738  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 743  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 744  : 		_Ptr->~_Uty();
; 745  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@V?$shared_ptr@VCContact@@@std@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$shared_ptr@VCContact@@@std@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::destroy<std::shared_ptr<CContact> >, COMDAT
; _this$ = ecx

; 1002 : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1003 : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@V?$shared_ptr@VCContact@@@std@@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::destroy<std::shared_ptr<CContact> >
	add	esp, 8

; 1004 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$shared_ptr@VCContact@@@std@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::destroy<std::shared_ptr<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iarchive.hpp
;	COMDAT ??$load_override@Vversion_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vversion_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@12@@Z PROC ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::version_type>, COMDAT
; _this$ = ecx

; 69   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->detail_common_iarchive::load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load_override@Vversion_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVversion_type@23@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::version_type>

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@Vversion_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@12@@Z ENDP ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iarchive.hpp
;	COMDAT ??$load_override@Vobject_id_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vobject_id_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z PROC ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::object_id_type>, COMDAT
; _this$ = ecx

; 69   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->detail_common_iarchive::load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load_override@Vobject_id_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVobject_id_type@23@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::object_id_type>

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@Vobject_id_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z ENDP ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iarchive.hpp
;	COMDAT ??$load_override@Vclass_id_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vclass_id_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z PROC ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::class_id_type>, COMDAT
; _this$ = ecx

; 69   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->detail_common_iarchive::load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load_override@Vclass_id_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVclass_id_type@23@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::class_id_type>

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@Vclass_id_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z ENDP ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iarchive.hpp
;	COMDAT ??$load_override@Utracking_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Utracking_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z PROC ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::tracking_type>, COMDAT
; _this$ = ecx

; 69   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->detail_common_iarchive::load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load_override@Utracking_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAUtracking_type@23@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::tracking_type>

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@Utracking_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z ENDP ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ??$save_override@$$CBVversion_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVversion_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVversion_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVversion_type@23@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::version_type const >, COMDAT
; _this$ = ecx

; 69   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         archive::save(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	push	eax
	call	??$save@Vtext_oarchive@archive@boost@@$$CBVversion_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVversion_type@01@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::archive::version_type const >
	add	esp, 8

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBVversion_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVversion_type@23@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::version_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ??$save_override@$$CBVobject_reference_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVobject_reference_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVobject_reference_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVobject_reference_type@23@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::object_reference_type const >, COMDAT
; _this$ = ecx

; 69   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         archive::save(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	push	eax
	call	??$save@Vtext_oarchive@archive@boost@@$$CBVobject_reference_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVobject_reference_type@01@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::archive::object_reference_type const >
	add	esp, 8

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBVobject_reference_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVobject_reference_type@23@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::object_reference_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ??$save_override@$$CBVclass_id_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVclass_id_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVclass_id_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVclass_id_type@23@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_type const >, COMDAT
; _this$ = ecx

; 69   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         archive::save(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	push	eax
	call	??$save@Vtext_oarchive@archive@boost@@$$CBVclass_id_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVclass_id_type@01@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::archive::class_id_type const >
	add	esp, 8

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBVclass_id_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVclass_id_type@23@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ??$save_override@$$CBVclass_id_reference_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVclass_id_reference_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVclass_id_reference_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVclass_id_reference_type@23@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_reference_type const >, COMDAT
; _this$ = ecx

; 69   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         archive::save(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	push	eax
	call	??$save@Vtext_oarchive@archive@boost@@$$CBVclass_id_reference_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVclass_id_reference_type@01@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::archive::class_id_reference_type const >
	add	esp, 8

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBVclass_id_reference_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVclass_id_reference_type@23@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_reference_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ??$save_override@$$CBUtracking_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABUtracking_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBUtracking_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABUtracking_type@23@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::tracking_type const >, COMDAT
; _this$ = ecx

; 69   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         archive::save(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	push	eax
	call	??$save@Vtext_oarchive@archive@boost@@$$CBUtracking_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABUtracking_type@01@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::archive::tracking_type const >
	add	esp, 8

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBUtracking_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABUtracking_type@23@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::tracking_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@$$QAV21@@Z
_TEXT	SEGMENT
tv76 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@$$QAV21@@Z PROC ; std::allocator<std::shared_ptr<CContact> >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >, COMDAT
; _this$ = ecx

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@V?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::forward<std::shared_ptr<CContact> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$shared_ptr@VCContact@@@std@@QAE@$$QAV01@@Z ; std::shared_ptr<CContact>::shared_ptr<CContact>
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv76[ebp], 0
$LN1@construct:

; 738  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@$$QAV21@@Z ENDP ; std::allocator<std::shared_ptr<CContact> >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@ABV21@@Z
_TEXT	SEGMENT
tv76 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@ABV21@@Z PROC ; std::allocator<std::shared_ptr<CContact> >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> const &>, COMDAT
; _this$ = ecx

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@ABV?$shared_ptr@VCContact@@@std@@@std@@YAABV?$shared_ptr@VCContact@@@0@ABV10@@Z ; std::forward<std::shared_ptr<CContact> const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$shared_ptr@VCContact@@@std@@QAE@ABV01@@Z ; std::shared_ptr<CContact>::shared_ptr<CContact>
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv76[ebp], 0
$LN1@construct:

; 738  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@ABV21@@Z ENDP ; std::allocator<std::shared_ptr<CContact> >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@AAV21@@Z
_TEXT	SEGMENT
tv76 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@AAV21@@Z PROC ; std::allocator<std::shared_ptr<CContact> >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> &>, COMDAT
; _this$ = ecx

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAV?$shared_ptr@VCContact@@@std@@@std@@YAAAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::forward<std::shared_ptr<CContact> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$shared_ptr@VCContact@@@std@@QAE@ABV01@@Z ; std::shared_ptr<CContact>::shared_ptr<CContact>
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv76[ebp], 0
$LN1@construct:

; 738  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@AAV21@@Z ENDP ; std::allocator<std::shared_ptr<CContact> >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAV?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z PROC ; std::move<std::shared_ptr<CContact> &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAV?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ENDP ; std::move<std::shared_ptr<CContact> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_istream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_istream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\istream
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ PROC ; std::basic_istream<char,std::char_traits<char> >::sentry::operator bool, COMDAT
; _this$ = ecx

; 122  : 			{	// test if _Ipfx succeeded

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 123  : 			return (_Ok);

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+4]

; 124  : 			}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ ENDP ; std::basic_istream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\istream
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Istr$ = 8						; size = 4
__Noskip$ = 12						; size = 1
??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z PROC ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; _this$ = ecx

; 117  : 			{	// construct locking and calling _Ipfx

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 116  : 			: _Sentry_base(_Istr)

	mov	eax, DWORD PTR __Istr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 118  : 			_Ok = this->_Myistr._Ipfx(_Noskip);

	mov	esi, esp
	movzx	eax, BYTE PTR __Noskip$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+4], al

; 119  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\istream
;	COMDAT ??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv92 = -224						; size = 4
tv86 = -220						; size = 4
tv72 = -220						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = ecx

; 100  : 			{	// destroy after unlocking

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 101  : 			if (_Myistr.rdbuf() != 0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv72[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN3@Sentry_bas

; 102  : 				_Myistr.rdbuf()->_Unlock();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv86[ebp], ecx
	mov	edx, DWORD PTR tv86[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv86[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv92[ebp], eax
	mov	ecx, DWORD PTR tv92[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv92[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Sentry_bas:

; 103  : 			}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-228]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\istream
;	COMDAT ??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
tv93 = -212						; size = 4
tv87 = -208						; size = 4
tv73 = -208						; size = 4
_this$ = -8						; size = 4
__Istr$ = 8						; size = 4
??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = ecx

; 94   : 			{	// lock the stream buffer, if there

	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 93   : 			: _Myistr(_Istr)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Istr$[ebp]
	mov	DWORD PTR [eax], ecx

; 95   : 			if (_Myistr.rdbuf() != 0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv73[ebp], ecx
	mov	edx, DWORD PTR tv73[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv73[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN1@Sentry_bas

; 96   : 				_Myistr.rdbuf()->_Lock();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv87[ebp], ecx
	mov	edx, DWORD PTR tv87[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv87[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv93[ebp], eax
	mov	ecx, DWORD PTR tv93[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv93[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Sentry_bas:

; 97   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??$?0V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@QAE@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Tgt$ = 8						; size = 4
??$?0V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@QAE@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@1@@Z PROC ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > ><std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT
; _this$ = ecx

; 227  : 		{	// construct from target

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Pad@std@@QAE@XZ			; std::_Pad::_Pad
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@6B@

; 226  : 		: _MyTarget(_STD forward<_Other>(_Tgt))

	mov	eax, DWORD PTR __Tgt$[ebp]
	push	eax
	call	??$forward@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YA$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@AAV10@@Z ; std::forward<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@$$QAV01@@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >

; 228  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@QAE@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@1@@Z ENDP ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > ><std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@QAE@XZ PROC ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Pad@std@@QAE@XZ			; std::_Pad::~_Pad
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXPAV12@@Z
_TEXT	SEGMENT
$T2 = -221						; size = 1
__Local$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ln$ = 8						; size = 4
?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXPAV12@@Z PROC ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Run, COMDAT

; 244  : 		{	// construct local unique_ptr and call function object within

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXPAV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 245  : 		_Target _Local(_STD forward<_Target>(_Ln->_MyTarget));

	mov	eax, DWORD PTR __Ln$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	??$forward@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YA$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@AAV10@@Z ; std::forward<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Local$[ebp]
	call	??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@$$QAV01@@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >

; 246  : 		_Ln->_Release();

	mov	ecx, DWORD PTR __Ln$[ebp]
	call	?_Release@_Pad@std@@QAEXXZ		; std::_Pad::_Release

; 247  : 		_Execute(*_Local,

	movzx	eax, BYTE PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR __Local$[ebp]
	call	??D?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
	push	eax
	call	??$_Execute@$0A@$00$01@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@U?$integer_sequence@I$0A@$00$01@1@@Z ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Execute<0,1,2>
	add	esp, 8

; 248  : 			make_integer_sequence<size_t,
; 249  : 				tuple_size<typename _Target::element_type>::value>());
; 250  : 		}

	lea	ecx, DWORD PTR __Local$[ebp]
	call	??1?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@Run
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@Run:
	DD	1
	DD	$LN5@Run
$LN5@Run:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@Run
$LN3@Run:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXPAV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXPAV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXPAV12@@Z ENDP ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Run
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Go@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Go@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@UAEXXZ PROC ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Go, COMDAT
; _this$ = ecx

; 231  : 		{	// run the thread function object

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 232  : 		_Run(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXPAV12@@Z ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Run
	add	esp, 4

; 233  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Go@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@UAEXXZ ENDP ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Go
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YA$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YA$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@AAV10@@Z PROC ; std::forward<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YA$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@AAV10@@Z ENDP ; std::forward<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__This_arg$ = 8						; size = 4
_<_Rest_arg_0>$ = 12					; size = 4
_<_Rest_arg_1>$ = 16					; size = 4
??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z PROC ; std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>, COMDAT
; _this$ = ecx

; 469  : 		{	// construct from one or more moved elements

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 467  : 		: _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

	xor	eax, eax
	mov	BYTE PTR $T2[ebp], al
	mov	ecx, DWORD PTR _<_Rest_arg_1>$[ebp]
	push	ecx
	call	??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Rest_arg_0>$[ebp]
	push	edx
	call	??$forward@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z ; std::forward<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>
	add	esp, 4
	push	eax
	movzx	eax, BYTE PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::_Exact_args_t,std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 468  : 			_Myfirst(_STD forward<_This2>(_This_arg))

	mov	eax, DWORD PTR __This_arg$[ebp]
	push	eax
	call	??$forward@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YAA6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZA6AX01@Z@Z ; std::forward<void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@?$_Tuple_val@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@Z ; std::_Tuple_val<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>::_Tuple_val<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)><void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>

; 470  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ
__ehhandler$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z ENDP ; std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iarchive.hpp
;	COMDAT ??$load_override@VCContact@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVCContact@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@VCContact@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVCContact@@@Z PROC ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<CContact>, COMDAT
; _this$ = ecx

; 69   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->detail_common_iarchive::load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load_override@VCContact@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVCContact@@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<CContact>

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@VCContact@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVCContact@@@Z ENDP ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ??$save_override@$$CBVCContact@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVCContact@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVCContact@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVCContact@@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<CContact const >, COMDAT
; _this$ = ecx

; 69   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         archive::save(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	push	eax
	call	??$save@Vtext_oarchive@archive@boost@@$$CBVCContact@@@archive@boost@@YAXAAVtext_oarchive@01@ABVCContact@@@Z ; boost::archive::save<boost::archive::text_oarchive,CContact const >
	add	esp, 8

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBVCContact@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVCContact@@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<CContact const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ??$save_override@$$CBVobject_id_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVobject_id_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVobject_id_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVobject_id_type@23@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::object_id_type const >, COMDAT
; _this$ = ecx

; 69   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         archive::save(* this->This(), t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	push	eax
	call	??$save@Vtext_oarchive@archive@boost@@$$CBVobject_id_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVobject_id_type@01@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::archive::object_id_type const >
	add	esp, 8

; 71   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBVobject_id_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVobject_id_type@23@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::object_id_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	mov	ecx, eax
	call	??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >

; 71   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?6V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT
; _this$ = ecx

; 709  : 		{	// construct from a related allocator (do nothing)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 710  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<char> > &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *,std::allocator<std::shared_ptr<CContact> > >, COMDAT

; 313  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 314  : 		// note: only called internally from elsewhere in the STL, debug checks
; 315  : 		// and deprecation warnings omitted
; 316  : 	return (_Rechecked(_Dest,

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAV?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unchecked<std::shared_ptr<CContact> *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAV?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unchecked<std::shared_ptr<CContact> *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAV?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unchecked<std::shared_ptr<CContact> *>
	add	esp, 4
	push	eax
	call	??$_Uninitialized_move_al_unchecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z ; std::_Uninitialized_move_al_unchecked<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *,std::allocator<std::shared_ptr<CContact> > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAAAPAV?$shared_ptr@VCContact@@@0@AAPAV10@PAV10@@Z ; std::_Rechecked<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 317  : 		_Uninitialized_move_al_unchecked(_Unchecked(_First), _Unchecked(_Last),
; 318  : 			_Unchecked(_Dest), _Al)));
; 319  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *,std::allocator<std::shared_ptr<CContact> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>

; 858  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT

; 863  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 864  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>

; 865  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0V?$shared_ptr@VCContact@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0V?$shared_ptr@VCContact@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::shared_ptr<CContact> >, COMDAT
; _this$ = ecx

; 709  : 		{	// construct from a related allocator (do nothing)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 710  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$shared_ptr@VCContact@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::shared_ptr<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@AAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > > &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@AAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAPAVCContact@@@std@@YA$$QAPAVCContact@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAPAVCContact@@@std@@YA$$QAPAVCContact@@AAPAV1@@Z PROC ; std::move<CContact * &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAPAVCContact@@@std@@YA$$QAPAVCContact@@AAPAV1@@Z ENDP ; std::move<CContact * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAPAV_Ref_count_base@std@@@std@@YA$$QAPAV_Ref_count_base@0@AAPAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAPAV_Ref_count_base@std@@@std@@YA$$QAPAV_Ref_count_base@0@AAPAV10@@Z PROC ; std::move<std::_Ref_count_base * &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAPAV_Ref_count_base@std@@@std@@YA$$QAPAV_Ref_count_base@0@AAPAV10@@Z ENDP ; std::move<std::_Ref_count_base * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>

; 858  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 863  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 864  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 865  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ENDP ; std::forward<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@PAV?$shared_ptr@VCContact@@@2@@std@@YAXPAV?$shared_ptr@VCContact@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range1@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@PAV?$shared_ptr@VCContact@@@2@@std@@YAXPAV?$shared_ptr@VCContact@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Destroy_range1<std::allocator<std::shared_ptr<CContact> >,std::shared_ptr<CContact> *>, COMDAT

; 1099 : 	{	// destroy [_First, _Last), no special optimization

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1100 : 	for (; _First != _Last; ++_First)

	jmp	SHORT $LN4@Destroy_ra
$LN2@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 8
	mov	DWORD PTR __First$[ebp], eax
$LN4@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN1@Destroy_ra

; 1101 : 		_Al.destroy(_Unfancy(_First));

	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unfancy<std::shared_ptr<CContact> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$shared_ptr@VCContact@@@std@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::destroy<std::shared_ptr<CContact> >
	jmp	SHORT $LN2@Destroy_ra
$LN1@Destroy_ra:

; 1102 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range1@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@PAV?$shared_ptr@VCContact@@@2@@std@@YAXPAV?$shared_ptr@VCContact@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Destroy_range1<std::allocator<std::shared_ptr<CContact> >,std::shared_ptr<CContact> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >, COMDAT
; _this$ = ecx

; 289  : 		{	// construct from forwarded values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 287  : 		: _Ty1(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAU01@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >

; 288  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 290  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<char> > >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load_override@Vversion_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vversion_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@12@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::version_type>, COMDAT
; _this$ = ecx

; 81   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 82   :         basic_text_iarchive<Archive>::load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load_override@Vversion_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@12@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::version_type>

; 83   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@Vversion_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@12@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load_override@Vobject_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vobject_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::object_id_type>, COMDAT
; _this$ = ecx

; 81   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 82   :         basic_text_iarchive<Archive>::load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load_override@Vobject_id_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::object_id_type>

; 83   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@Vobject_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load_override@Vclass_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vclass_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::class_id_type>, COMDAT
; _this$ = ecx

; 81   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 82   :         basic_text_iarchive<Archive>::load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load_override@Vclass_id_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::class_id_type>

; 83   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@Vclass_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load_override@Vclass_id_optional_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_optional_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vclass_id_optional_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_optional_type@12@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::class_id_optional_type>, COMDAT
; _this$ = ecx

; 81   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 82   :         basic_text_iarchive<Archive>::load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?load_override@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_optional_type@23@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override

; 83   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@Vclass_id_optional_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_optional_type@12@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::class_id_optional_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load_override@Utracking_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Utracking_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::tracking_type>, COMDAT
; _this$ = ecx

; 81   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 82   :         basic_text_iarchive<Archive>::load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load_override@Utracking_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::tracking_type>

; 83   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@Utracking_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ??$save_override@$$CBVversion_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVversion_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVversion_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVversion_type@12@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::version_type const >, COMDAT
; _this$ = ecx

; 82   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 83   :         this->detail_common_oarchive::save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$save_override@$$CBVversion_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVversion_type@23@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::version_type const >

; 84   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBVversion_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVversion_type@12@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::version_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ??$save_override@$$CBVobject_reference_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_reference_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVobject_reference_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_reference_type@12@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::object_reference_type const >, COMDAT
; _this$ = ecx

; 82   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 83   :         this->detail_common_oarchive::save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$save_override@$$CBVobject_reference_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVobject_reference_type@23@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::object_reference_type const >

; 84   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBVobject_reference_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_reference_type@12@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::object_reference_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ??$save_override@$$CBVclass_id_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVclass_id_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_type@12@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_type const >, COMDAT
; _this$ = ecx

; 82   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 83   :         this->detail_common_oarchive::save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$save_override@$$CBVclass_id_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVclass_id_type@23@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_type const >

; 84   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBVclass_id_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_type@12@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ??$save_override@$$CBVclass_id_reference_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVclass_id_reference_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_reference_type const >, COMDAT
; _this$ = ecx

; 82   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 83   :         this->detail_common_oarchive::save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$save_override@$$CBVclass_id_reference_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVclass_id_reference_type@23@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_reference_type const >

; 84   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBVclass_id_reference_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_reference_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ??$save_override@$$CBUtracking_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUtracking_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBUtracking_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUtracking_type@12@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::tracking_type const >, COMDAT
; _this$ = ecx

; 82   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 83   :         this->detail_common_oarchive::save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$save_override@$$CBUtracking_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABUtracking_type@23@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::tracking_type const >

; 84   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBUtracking_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUtracking_type@12@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::tracking_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@$$QAV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@$$QAV31@@Z PROC ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::forward<std::shared_ptr<CContact> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@$$QAV21@@Z ; std::allocator<std::shared_ptr<CContact> >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >

; 858  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@$$QAV31@@Z ENDP ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@ABV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@ABV31@@Z PROC ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> const &>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABV?$shared_ptr@VCContact@@@std@@@std@@YAABV?$shared_ptr@VCContact@@@0@ABV10@@Z ; std::forward<std::shared_ptr<CContact> const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@ABV21@@Z ; std::allocator<std::shared_ptr<CContact> >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> const &>

; 858  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@ABV31@@Z ENDP ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@ABV?$shared_ptr@VCContact@@@std@@@std@@YAABV?$shared_ptr@VCContact@@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$shared_ptr@VCContact@@@std@@@std@@YAABV?$shared_ptr@VCContact@@@0@ABV10@@Z PROC ; std::forward<std::shared_ptr<CContact> const &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABV?$shared_ptr@VCContact@@@std@@@std@@YAABV?$shared_ptr@VCContact@@@0@ABV10@@Z ENDP ; std::forward<std::shared_ptr<CContact> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@AAV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@AAV31@@Z PROC ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> &>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAV?$shared_ptr@VCContact@@@std@@@std@@YAAAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::forward<std::shared_ptr<CContact> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@AAV21@@Z ; std::allocator<std::shared_ptr<CContact> >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> &>

; 858  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@AAV31@@Z ENDP ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAV?$shared_ptr@VCContact@@@std@@@std@@YAAAV?$shared_ptr@VCContact@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$shared_ptr@VCContact@@@std@@@std@@YAAAV?$shared_ptr@VCContact@@@0@AAV10@@Z PROC ; std::forward<std::shared_ptr<CContact> &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAV?$shared_ptr@VCContact@@@std@@@std@@YAAAV?$shared_ptr@VCContact@@@0@AAV10@@Z ENDP ; std::forward<std::shared_ptr<CContact> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Move_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00U_General_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00U_General_ptr_iterator_tag@0@@Z PROC ; std::_Move_unchecked1<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *>, COMDAT

; 2579 : 	{	// move [_First, _Last) to [_Dest, ...), no special optimization

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 2580 : 	for (; _First != _Last; ++_Dest, (void)++_First)

	jmp	SHORT $LN4@Move_unche
$LN2@Move_unche:
	mov	eax, DWORD PTR __Dest$[ebp]
	add	eax, 8
	mov	DWORD PTR __Dest$[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	add	ecx, 8
	mov	DWORD PTR __First$[ebp], ecx
$LN4@Move_unche:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Move_unche

; 2581 : 		*_Dest = _STD move(*_First);

	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$move@AAV?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::move<std::shared_ptr<CContact> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	call	??4?$shared_ptr@VCContact@@@std@@QAEAAV01@$$QAV01@@Z ; std::shared_ptr<CContact>::operator=
	jmp	SHORT $LN2@Move_unche
$LN3@Move_unche:

; 2582 : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]

; 2583 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00U_General_ptr_iterator_tag@0@@Z ENDP ; std::_Move_unchecked1<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Ptr_move_cat@V?$shared_ptr@VCContact@@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAV?$shared_ptr@VCContact@@@0@0@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_move_cat@V?$shared_ptr@VCContact@@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAV?$shared_ptr@VCContact@@@0@0@Z PROC ; std::_Ptr_move_cat<std::shared_ptr<CContact>,std::shared_ptr<CContact> >, COMDAT

; 809  : 	{	// return pointer move optimization category for pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 810  : 	return {};

	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	al, BYTE PTR $T1[ebp]

; 811  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_move_cat@V?$shared_ptr@VCContact@@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAV?$shared_ptr@VCContact@@@0@0@Z ENDP ; std::_Ptr_move_cat<std::shared_ptr<CContact>,std::shared_ptr<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string
;	COMDAT ??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
_TEXT	SEGMENT
tv201 = -304						; size = 4
tv199 = -304						; size = 4
tv202 = -300						; size = 4
tv200 = -300						; size = 4
tv65 = -300						; size = 4
$T2 = -292						; size = 4
$T3 = -280						; size = 4
__Meta$4 = -76						; size = 4
__Metadelim$5 = -64					; size = 4
__Ok$ = -52						; size = 8
__Changed$ = -33					; size = 1
__State$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Istr$ = 8						; size = 4
__Str$ = 12						; size = 4
__Delim$ = 16						; size = 1
??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z PROC ; std::getline<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 77   : 	{	// get characters into string, discard delimiter

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 78   : 	typedef basic_istream<_Elem, _Traits> _Myis;
; 79   : 
; 80   : 	ios_base::iostate _State = ios_base::goodbit;

	mov	DWORD PTR __State$[ebp], 0

; 81   : 	bool _Changed = false;

	mov	BYTE PTR __Changed$[ebp], 0

; 82   : 	const typename _Myis::sentry _Ok(_Istr, true);

	push	1
	mov	eax, DWORD PTR __Istr$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 83   : 
; 84   : 	if (_Ok)

	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_istream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN5@getline

; 85   : 		{	// state okay, extract characters
; 86   : 		_TRY_IO_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 1

; 87   : 		_Str.erase();

	push	0
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase

; 88   : 		const typename _Traits::int_type _Metadelim =
; 89   : 			_Traits::to_int_type(_Delim);

	lea	eax, DWORD PTR __Delim$[ebp]
	push	eax
	call	?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
	add	esp, 4
	mov	DWORD PTR __Metadelim$5[ebp], eax

; 90   : 		typename _Traits::int_type _Meta = _Istr.rdbuf()->sgetc();

	mov	eax, DWORD PTR __Istr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Istr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv65[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv65[ebp]
	call	DWORD PTR __imp_?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv199[ebp], eax
	mov	eax, DWORD PTR tv199[ebp]
	mov	DWORD PTR __Meta$4[ebp], eax
	jmp	SHORT $LN4@getline
$LN2@getline:

; 91   : 
; 92   : 		for (; ; _Meta = _Istr.rdbuf()->snextc())

	mov	eax, DWORD PTR __Istr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Istr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv200[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv200[ebp]
	call	DWORD PTR __imp_?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv201[ebp], eax
	mov	eax, DWORD PTR tv201[ebp]
	mov	DWORD PTR __Meta$4[ebp], eax
$LN4@getline:

; 93   : 			if (_Traits::eq_int_type(_Traits::eof(), _Meta))

	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T3[ebp], eax
	lea	eax, DWORD PTR __Meta$4[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN7@getline

; 94   : 				{	// end of file, quit
; 95   : 				_State |= ios_base::eofbit;

	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 1
	mov	DWORD PTR __State$[ebp], eax

; 96   : 				break;

	jmp	$LN3@getline
	jmp	$LN8@getline
$LN7@getline:

; 97   : 				}
; 98   : 			else if (_Traits::eq_int_type(_Meta, _Metadelim))

	lea	eax, DWORD PTR __Metadelim$5[ebp]
	push	eax
	lea	ecx, DWORD PTR __Meta$4[ebp]
	push	ecx
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN9@getline

; 99   : 				{	// got a delimiter, discard it and quit
; 100  : 				_Changed = true;

	mov	BYTE PTR __Changed$[ebp], 1

; 101  : 				_Istr.rdbuf()->sbumpc();

	mov	eax, DWORD PTR __Istr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Istr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv202[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv202[ebp]
	call	DWORD PTR __imp_?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp

; 102  : 				break;

	jmp	SHORT $LN3@getline
	jmp	SHORT $LN8@getline
$LN9@getline:

; 103  : 				}
; 104  : 			else if (_Str.max_size() <= _Str.size())

	mov	ecx, DWORD PTR __Str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	esi, eax
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, esi
	ja	SHORT $LN11@getline

; 105  : 				{	// string too large, quit
; 106  : 				_State |= ios_base::failbit;

	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 2
	mov	DWORD PTR __State$[ebp], eax

; 107  : 				break;

	jmp	SHORT $LN3@getline

; 108  : 				}
; 109  : 			else

	jmp	SHORT $LN8@getline
$LN11@getline:

; 110  : 				{	// got a character, add it to string
; 111  : 				_Str += _Traits::to_char_type(_Meta);

	lea	eax, DWORD PTR __Meta$4[ebp]
	push	eax
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	movzx	ecx, al
	push	ecx
	mov	ecx, DWORD PTR __Str$[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 112  : 				_Changed = true;

	mov	BYTE PTR __Changed$[ebp], 1
$LN8@getline:

; 113  : 				}

	jmp	$LN2@getline
$LN3@getline:
	jmp	SHORT $LN15@getline
__catch$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$0:

; 114  : 		_CATCH_IO_(_Istr)

	mov	esi, esp
	push	1
	push	4
	mov	eax, DWORD PTR __Istr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Istr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, $LN19@getline
	ret	0
$LN15@getline:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN5@getline
$LN19@getline:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN5@getline:

; 115  : 		}
; 116  : 
; 117  : 	if (!_Changed)

	movzx	eax, BYTE PTR __Changed$[ebp]
	test	eax, eax
	jne	SHORT $LN13@getline

; 118  : 		_State |= ios_base::failbit;

	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 2
	mov	DWORD PTR __State$[ebp], eax
$LN13@getline:

; 119  : 	_Istr.setstate(_State);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR __State$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Istr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Istr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 120  : 	return (_Istr);

	mov	eax, DWORD PTR __Istr$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T2[ebp]

; 121  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN25@getline
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN25@getline:
	DD	3
	DD	$LN24@getline
$LN24@getline:
	DD	-52					; ffffffccH
	DD	8
	DD	$LN20@getline
	DD	-64					; ffffffc0H
	DD	4
	DD	$LN21@getline
	DD	-76					; ffffffb4H
	DD	4
	DD	$LN22@getline
$LN22@getline:
	DB	95					; 0000005fH
	DB	77					; 0000004dH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN21@getline:
	DB	95					; 0000005fH
	DB	77					; 0000004dH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	0
$LN20@getline:
	DB	95					; 0000005fH
	DB	79					; 0000004fH
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
__ehhandler$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-308]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z ENDP ; std::getline<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@@Z PROC ; std::move<std::basic_istream<char,std::char_traits<char> > &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@@Z ENDP ; std::move<std::basic_istream<char,std::char_traits<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT
; _this$ = ecx

; 141  : 			{	// test if stream state okay

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 142  : 			return (_Ok);

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+4]

; 143  : 			}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; _this$ = ecx

; 130  : 			{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 131  :  #if _HAS_EXCEPTIONS
; 132  : 			if (!_XSTD uncaught_exception())

	mov	esi, esp
	call	DWORD PTR __imp_?uncaught_exception@std@@YA_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@sentry

; 133  : 				this->_Myostr._Osfx();

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@sentry:

; 134  : 
; 135  :  #else /* _HAS_EXCEPTIONS */
; 136  : 			this->_Myostr._Osfx();
; 137  :  #endif /* _HAS_EXCEPTIONS */
; 138  : 			}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ostr$ = 8						; size = 4
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; _this$ = ecx

; 123  : 			{	// construct locking and testing stream

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 122  : 			: _Sentry_base(_Ostr)

	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@sentry
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@sentry
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR __Ostr$[ebp]
	je	SHORT $LN2@sentry

; 125  : 				_Ostr.tie()->flush();

	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	ecx, eax
	call	DWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@sentry:

; 126  : 			_Ok = _Ostr.good();	// store test only after flushing tie

	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+4], al

; 127  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv92 = -224						; size = 4
tv86 = -220						; size = 4
tv72 = -220						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = ecx

; 106  : 			{	// destroy after unlocking

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 107  : 			if (_Myostr.rdbuf() != 0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv72[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN3@Sentry_bas

; 108  : 				_Myostr.rdbuf()->_Unlock();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv86[ebp], ecx
	mov	edx, DWORD PTR tv86[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv86[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv92[ebp], eax
	mov	ecx, DWORD PTR tv92[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv92[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Sentry_bas:

; 109  : 			}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-228]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
tv93 = -212						; size = 4
tv87 = -208						; size = 4
tv73 = -208						; size = 4
_this$ = -8						; size = 4
__Ostr$ = 8						; size = 4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = ecx

; 100  : 			{	// lock the stream buffer, if there

	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 99   : 			: _Myostr(_Ostr)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR [eax], ecx

; 101  : 			if (_Myostr.rdbuf() != 0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv73[ebp], ecx
	mov	edx, DWORD PTR tv73[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv73[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN1@Sentry_bas

; 102  : 				_Myostr.rdbuf()->_Lock();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv87[ebp], ecx
	mov	edx, DWORD PTR tv87[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv87[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv93[ebp], eax
	mov	ecx, DWORD PTR tv93[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv93[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Sentry_bas:

; 103  : 			}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ
_TEXT	SEGMENT
tv94 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ PROC	; std::_Ref_count_obj<CCompany>::_Ref_count_obj<CCompany><>, COMDAT
; _this$ = ecx

; 900  : 		{	// construct from argument list

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 899  : 		: _Ref_count_base()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Ref_count_base@std@@IAE@XZ		; std::_Ref_count_base::_Ref_count_base
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 900  : 		{	// construct from argument list

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Ref_count_obj@VCCompany@@@std@@6B@

; 901  : 		::new ((void *)&_Storage) _Ty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	push	228					; 000000e4H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@Ref_count_
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0CCompany@@QAE@XZ			; CCompany::CCompany
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN4@Ref_count_
$LN3@Ref_count_:
	mov	DWORD PTR tv94[ebp], 0
$LN4@Ref_count_:
	mov	ecx, DWORD PTR tv94[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0

; 902  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Ref_count_base@std@@UAE@XZ		; std::_Ref_count_base::~_Ref_count_base
__unwindfunclet$??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ$1:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ ENDP	; std::_Ref_count_obj<CCompany>::_Ref_count_obj<CCompany><>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ
_TEXT	SEGMENT
tv94 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ PROC	; std::_Ref_count_obj<CPerson>::_Ref_count_obj<CPerson><>, COMDAT
; _this$ = ecx

; 900  : 		{	// construct from argument list

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 899  : 		: _Ref_count_base()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Ref_count_base@std@@IAE@XZ		; std::_Ref_count_base::_Ref_count_base
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 900  : 		{	// construct from argument list

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Ref_count_obj@VCPerson@@@std@@6B@

; 901  : 		::new ((void *)&_Storage) _Ty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	push	288					; 00000120H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@Ref_count_
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0CPerson@@QAE@XZ			; CPerson::CPerson
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN4@Ref_count_
$LN3@Ref_count_:
	mov	DWORD PTR tv94[ebp], 0
$LN4@Ref_count_:
	mov	ecx, DWORD PTR tv94[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0

; 902  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Ref_count_base@std@@UAE@XZ		; std::_Ref_count_base::~_Ref_count_base
__unwindfunclet$??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ$1:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ ENDP	; std::_Ref_count_obj<CPerson>::_Ref_count_obj<CPerson><>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z
_TEXT	SEGMENT
__Launcher$ = -36					; size = 20
__$EHRec$ = -12						; size = 12
__Thr$ = 8						; size = 4
__Tg$ = 12						; size = 4
??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z PROC ; std::_Launch<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT

; 258  : 	{	// launch a new thread

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 259  : 	_LaunchPad<_Target> _Launcher(_STD forward<_Target>(_Tg));

	mov	eax, DWORD PTR __Tg$[ebp]
	push	eax
	call	??$forward@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YA$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@AAV10@@Z ; std::forward<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Launcher$[ebp]
	call	??$?0V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@QAE@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@1@@Z ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > ><std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 260  : 	_Launcher._Launch(_Thr);

	mov	eax, DWORD PTR __Thr$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Launcher$[ebp]
	call	?_Launch@_Pad@std@@QAEXPAU_Thrd_imp_t@@@Z ; std::_Pad::_Launch

; 261  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Launcher$[ebp]
	call	??1?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Launch
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Launch:
	DD	1
	DD	$LN6@Launch
$LN6@Launch:
	DD	-36					; ffffffdcH
	DD	20					; 00000014H
	DD	$LN4@Launch
$LN4@Launch:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	97					; 00000061H
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z$0:
	lea	ecx, DWORD PTR __Launcher$[ebp]
	jmp	??1?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@QAE@XZ
__ehhandler$??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-236]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z ENDP ; std::_Launch<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAEPAXI@Z PROC ; std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	36					; 00000024H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAEPAXI@Z ENDP ; std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@XZ PROC ; std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@XZ ENDP ; std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ PROC ; std::tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ ENDP ; std::tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ PROC ; std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ENDP ; std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ PROC ; std::_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ENDP ; std::_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?release@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ
_TEXT	SEGMENT
__Ans$ = -20						; size = 4
_this$ = -8						; size = 4
?release@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::release, COMDAT
; _this$ = ecx

; 1421 : 		{	// yield ownership of pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1422 : 		pointer _Ans = get();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::get
	mov	DWORD PTR __Ans$[ebp], eax

; 1423 : 		this->_Myptr() = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myptr
	mov	DWORD PTR [eax], 0

; 1424 : 		return (_Ans);

	mov	eax, DWORD PTR __Ans$[ebp]

; 1425 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?release@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?get@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::get, COMDAT
; _this$ = ecx

; 1411 : 		{	// return pointer to object

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1412 : 		return (this->_Myptr());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEABQAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myptr
	mov	eax, DWORD PTR [eax]

; 1413 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??D?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*, COMDAT
; _this$ = ecx

; 1401 : 		{	// return reference to object

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1402 : 		return (*get());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::get

; 1403 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??1?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 1395 : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1396 : 		if (get() != pointer())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::get
	test	eax, eax
	je	SHORT $LN3@unique_ptr

; 1397 : 			this->get_deleter()(get());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::get
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_deleter@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEAAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@XZ ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::get_deleter
	mov	ecx, eax
	call	??R?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@QBEXPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ; std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator()
$LN3@unique_ptr:

; 1398 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@$$QAV01@@Z PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 1334 : 		{	// construct by moving _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1332 : 		: _Mybase(_Right.release(),

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?get_deleter@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEAAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@XZ ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::get_deleter
	push	eax
	call	??$forward@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@0@AAU10@@Z ; std::forward<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?release@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::release
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@@Z ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >

; 1335 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@$$QAV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@$$QAV01@@Z ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 1311 : 		{	// construct with pointer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		: _Mybase(_Ptr)

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *>

; 1312 : 		static_assert(!is_pointer<_Dx>::value,
; 1313 : 			"unique_ptr constructed with null deleter pointer");
; 1314 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QBEABQAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QBEABQAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Get_second, COMDAT
; _this$ = ecx

; 319  : 		{	// return const reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 320  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 321  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QBEABQAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAEAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAEAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Get_second, COMDAT
; _this$ = ecx

; 314  : 		{	// return reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 315  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 316  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAEAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAEAAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAEAAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Get_first, COMDAT
; _this$ = ecx

; 294  : 		{	// return reference to first

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 295  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 296  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAEAAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Myptr@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEABQAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myptr@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEABQAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ PROC ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myptr, COMDAT
; _this$ = ecx

; 1267 : 		{	// return const reference to pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1268 : 		return (_Mypair._Get_second());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QBEABQAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Get_second

; 1269 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEABQAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ENDP ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Myptr@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myptr@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ PROC ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myptr, COMDAT
; _this$ = ecx

; 1262 : 		{	// return reference to pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1263 : 		return (_Mypair._Get_second());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAEAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Get_second

; 1264 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ENDP ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?get_deleter@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEAAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get_deleter@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEAAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@XZ PROC ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::get_deleter, COMDAT
; _this$ = ecx

; 1252 : 		{	// return reference to deleter

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1253 : 		return (_Mypair._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAEAAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Get_first

; 1254 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?get_deleter@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEAAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@XZ ENDP ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??R?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@QBEXPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z
_TEXT	SEGMENT
tv68 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??R?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@QBEXPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z PROC ; std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator(), COMDAT
; _this$ = ecx

; 1192 : 		{	// delete a pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1193 : 		static_assert(0 < sizeof (_Ty),
; 1194 : 			"can't delete an incomplete type");
; 1195 : 		delete _Ptr;

	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@operator
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_G?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAEPAXI@Z
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN2@operator
$LN3@operator:
	mov	DWORD PTR tv68[ebp], 0
$LN2@operator:

; 1196 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??R?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@QBEXPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ENDP ; std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z
_TEXT	SEGMENT
tv86 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
$T4 = -212						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
_<_Args_2>$ = 20					; size = 4
??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z PROC ; std::make_unique<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT

; 1629 : 	{	// make a unique_ptr

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T2[ebp], 0

; 1630 : 	return (unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...)));

	push	36					; 00000024H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@make_uniqu
	mov	eax, DWORD PTR _<_Args_2>$[ebp]
	push	eax
	call	??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_1>$[ebp]
	push	ecx
	call	??$forward@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z ; std::forward<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Args_0>$[ebp]
	push	edx
	call	??$forward@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YAA6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZA6AX01@Z@Z ; std::forward<void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z ; std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN4@make_uniqu
$LN3@make_uniqu:
	mov	DWORD PTR tv86[ebp], 0
$LN4@make_uniqu:
	mov	eax, DWORD PTR tv86[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1631 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z$0:
	push	36					; 00000024H
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z ENDP ; std::make_unique<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z PROC ; std::forward<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z ENDP ; std::forward<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YAA6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZA6AX01@Z@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YAA6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZA6AX01@Z@Z PROC ; std::forward<void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YAA6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZA6AX01@Z@Z ENDP ; std::forward<void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$?0VCPerson@@@?$_Ptr_base@VCContact@@@std@@QAE@$$QAV?$_Ptr_base@VCPerson@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??$?0VCPerson@@@?$_Ptr_base@VCContact@@@std@@QAE@$$QAV?$_Ptr_base@VCPerson@@@1@@Z PROC ; std::_Ptr_base<CContact>::_Ptr_base<CContact><CPerson>, COMDAT
; _this$ = ecx

; 287  : 		{	// construct _Ptr_base object that takes resource from _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 286  : 		: _Ptr(_Right._Ptr), _Rep(_Right._Rep)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 288  : 		_Right._Ptr = 0;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax], 0

; 289  : 		_Right._Rep = 0;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax+4], 0

; 290  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0VCPerson@@@?$_Ptr_base@VCContact@@@std@@QAE@$$QAV?$_Ptr_base@VCPerson@@@1@@Z ENDP ; std::_Ptr_base<CContact>::_Ptr_base<CContact><CPerson>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAV?$shared_ptr@VCPerson@@@std@@@std@@YA$$QAV?$shared_ptr@VCPerson@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$shared_ptr@VCPerson@@@std@@@std@@YA$$QAV?$shared_ptr@VCPerson@@@0@AAV10@@Z PROC ; std::move<std::shared_ptr<CPerson> &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAV?$shared_ptr@VCPerson@@@std@@@std@@YA$$QAV?$shared_ptr@VCPerson@@@0@AAV10@@Z ENDP ; std::move<std::shared_ptr<CPerson> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$_Resetp0@VCPerson@@@?$shared_ptr@VCPerson@@@std@@QAEXPAVCPerson@@PAV_Ref_count_base@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Px$ = 8						; size = 4
__Rx$ = 12						; size = 4
??$_Resetp0@VCPerson@@@?$shared_ptr@VCPerson@@@std@@QAEXPAVCPerson@@PAV_Ref_count_base@1@@Z PROC ; std::shared_ptr<CPerson>::_Resetp0<CPerson>, COMDAT
; _this$ = ecx

; 694  : 		{	// release resource and take ownership of _Px

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 695  : 		this->_Reset0(_Px, _Rx);

	mov	eax, DWORD PTR __Rx$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Px$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset0@?$_Ptr_base@VCPerson@@@std@@QAEXPAVCPerson@@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<CPerson>::_Reset0

; 696  : 		_Enable_shared(_Px, _Rx);

	mov	eax, DWORD PTR __Rx$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Px$[ebp]
	push	ecx
	call	?_Enable_shared@std@@YAXPDX0@Z		; std::_Enable_shared
	add	esp, 8

; 697  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$_Resetp0@VCPerson@@@?$shared_ptr@VCPerson@@@std@@QAEXPAVCPerson@@PAV_Ref_count_base@1@@Z ENDP ; std::shared_ptr<CPerson>::_Resetp0<CPerson>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z
_TEXT	SEGMENT
tv129 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_<_Args_0>$ = 8						; size = 4
??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z PROC ; std::_Ref_count_obj<CPerson>::_Ref_count_obj<CPerson><bool>, COMDAT
; _this$ = ecx

; 900  : 		{	// construct from argument list

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 899  : 		: _Ref_count_base()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Ref_count_base@std@@IAE@XZ		; std::_Ref_count_base::_Ref_count_base
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 900  : 		{	// construct from argument list

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Ref_count_obj@VCPerson@@@std@@6B@

; 901  : 		::new ((void *)&_Storage) _Ty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	push	288					; 00000120H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@Ref_count_
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0CPerson@@QAE@_N@Z			; CPerson::CPerson
	mov	DWORD PTR tv129[ebp], eax
	jmp	SHORT $LN4@Ref_count_
$LN3@Ref_count_:
	mov	DWORD PTR tv129[ebp], 0
$LN4@Ref_count_:
	mov	ecx, DWORD PTR tv129[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0

; 902  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Ref_count_base@std@@UAE@XZ		; std::_Ref_count_base::~_Ref_count_base
__unwindfunclet$??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z$1:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z ENDP ; std::_Ref_count_obj<CPerson>::_Ref_count_obj<CPerson><bool>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$_Ref_count_obj@VCPerson@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$_Ref_count_obj@VCPerson@@@std@@UAEPAXI@Z PROC	; std::_Ref_count_obj<CPerson>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Ref_count_obj@VCPerson@@@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	300					; 0000012cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$_Ref_count_obj@VCPerson@@@std@@UAEPAXI@Z ENDP	; std::_Ref_count_obj<CPerson>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Ref_count_obj@VCPerson@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Ref_count_obj@VCPerson@@@std@@UAE@XZ PROC		; std::_Ref_count_obj<CPerson>::~_Ref_count_obj<CPerson>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Ref_count_base@std@@UAE@XZ		; std::_Ref_count_base::~_Ref_count_base
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Ref_count_obj@VCPerson@@@std@@UAE@XZ ENDP		; std::_Ref_count_obj<CPerson>::~_Ref_count_obj<CPerson>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Delete_this@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ
_TEXT	SEGMENT
tv74 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
?_Delete_this@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ PROC ; std::_Ref_count_obj<CPerson>::_Delete_this, COMDAT
; _this$ = ecx

; 917  : 		{	// destroy self

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 918  : 		delete this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@Delete_thi
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN2@Delete_thi
$LN3@Delete_thi:
	mov	DWORD PTR tv74[ebp], 0
$LN2@Delete_thi:

; 919  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Delete_this@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ ENDP ; std::_Ref_count_obj<CPerson>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Destroy@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ
_TEXT	SEGMENT
tv71 = -220						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Destroy@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ PROC	; std::_Ref_count_obj<CPerson>::_Destroy, COMDAT
; _this$ = ecx

; 912  : 		{	// destroy managed resource

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Destroy@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 913  : 		_Getptr()->~_Ty();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getptr@?$_Ref_count_obj@VCPerson@@@std@@QBEPAVCPerson@@XZ ; std::_Ref_count_obj<CPerson>::_Getptr
	mov	DWORD PTR tv71[ebp], eax
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR tv71[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv71[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 914  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Destroy@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-224]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Destroy@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Destroy@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ ENDP	; std::_Ref_count_obj<CPerson>::_Destroy
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Getptr@?$_Ref_count_obj@VCPerson@@@std@@QBEPAVCPerson@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getptr@?$_Ref_count_obj@VCPerson@@@std@@QBEPAVCPerson@@XZ PROC ; std::_Ref_count_obj<CPerson>::_Getptr, COMDAT
; _this$ = ecx

; 906  : 		{	// get pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 907  : 		return ((_Ty *)&_Storage);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH

; 908  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getptr@?$_Ref_count_obj@VCPerson@@@std@@QBEPAVCPerson@@XZ ENDP ; std::_Ref_count_obj<CPerson>::_Getptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load_override@VCContact@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVCContact@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@VCContact@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVCContact@@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<CContact>, COMDAT
; _this$ = ecx

; 81   :     void load_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 82   :         basic_text_iarchive<Archive>::load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load_override@VCContact@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVCContact@@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<CContact>

; 83   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$load_override@VCContact@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVCContact@@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$?0VCCompany@@@?$_Ptr_base@VCContact@@@std@@QAE@$$QAV?$_Ptr_base@VCCompany@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??$?0VCCompany@@@?$_Ptr_base@VCContact@@@std@@QAE@$$QAV?$_Ptr_base@VCCompany@@@1@@Z PROC ; std::_Ptr_base<CContact>::_Ptr_base<CContact><CCompany>, COMDAT
; _this$ = ecx

; 287  : 		{	// construct _Ptr_base object that takes resource from _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 286  : 		: _Ptr(_Right._Ptr), _Rep(_Right._Rep)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 288  : 		_Right._Ptr = 0;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax], 0

; 289  : 		_Right._Rep = 0;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax+4], 0

; 290  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0VCCompany@@@?$_Ptr_base@VCContact@@@std@@QAE@$$QAV?$_Ptr_base@VCCompany@@@1@@Z ENDP ; std::_Ptr_base<CContact>::_Ptr_base<CContact><CCompany>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAV?$shared_ptr@VCCompany@@@std@@@std@@YA$$QAV?$shared_ptr@VCCompany@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$shared_ptr@VCCompany@@@std@@@std@@YA$$QAV?$shared_ptr@VCCompany@@@0@AAV10@@Z PROC ; std::move<std::shared_ptr<CCompany> &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAV?$shared_ptr@VCCompany@@@std@@@std@@YA$$QAV?$shared_ptr@VCCompany@@@0@AAV10@@Z ENDP ; std::move<std::shared_ptr<CCompany> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$_Resetp0@VCCompany@@@?$shared_ptr@VCCompany@@@std@@QAEXPAVCCompany@@PAV_Ref_count_base@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Px$ = 8						; size = 4
__Rx$ = 12						; size = 4
??$_Resetp0@VCCompany@@@?$shared_ptr@VCCompany@@@std@@QAEXPAVCCompany@@PAV_Ref_count_base@1@@Z PROC ; std::shared_ptr<CCompany>::_Resetp0<CCompany>, COMDAT
; _this$ = ecx

; 694  : 		{	// release resource and take ownership of _Px

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 695  : 		this->_Reset0(_Px, _Rx);

	mov	eax, DWORD PTR __Rx$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Px$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset0@?$_Ptr_base@VCCompany@@@std@@QAEXPAVCCompany@@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<CCompany>::_Reset0

; 696  : 		_Enable_shared(_Px, _Rx);

	mov	eax, DWORD PTR __Rx$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Px$[ebp]
	push	ecx
	call	?_Enable_shared@std@@YAXPDX0@Z		; std::_Enable_shared
	add	esp, 8

; 697  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$_Resetp0@VCCompany@@@?$shared_ptr@VCCompany@@@std@@QAEXPAVCCompany@@PAV_Ref_count_base@1@@Z ENDP ; std::shared_ptr<CCompany>::_Resetp0<CCompany>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z
_TEXT	SEGMENT
tv129 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_<_Args_0>$ = 8						; size = 4
??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z PROC ; std::_Ref_count_obj<CCompany>::_Ref_count_obj<CCompany><bool>, COMDAT
; _this$ = ecx

; 900  : 		{	// construct from argument list

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 899  : 		: _Ref_count_base()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Ref_count_base@std@@IAE@XZ		; std::_Ref_count_base::_Ref_count_base
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 900  : 		{	// construct from argument list

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Ref_count_obj@VCCompany@@@std@@6B@

; 901  : 		::new ((void *)&_Storage) _Ty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	push	228					; 000000e4H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@Ref_count_
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0CCompany@@QAE@_N@Z			; CCompany::CCompany
	mov	DWORD PTR tv129[ebp], eax
	jmp	SHORT $LN4@Ref_count_
$LN3@Ref_count_:
	mov	DWORD PTR tv129[ebp], 0
$LN4@Ref_count_:
	mov	ecx, DWORD PTR tv129[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0

; 902  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Ref_count_base@std@@UAE@XZ		; std::_Ref_count_base::~_Ref_count_base
__unwindfunclet$??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z$1:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z ENDP ; std::_Ref_count_obj<CCompany>::_Ref_count_obj<CCompany><bool>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$_Ref_count_obj@VCCompany@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$_Ref_count_obj@VCCompany@@@std@@UAEPAXI@Z PROC	; std::_Ref_count_obj<CCompany>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Ref_count_obj@VCCompany@@@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	240					; 000000f0H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$_Ref_count_obj@VCCompany@@@std@@UAEPAXI@Z ENDP	; std::_Ref_count_obj<CCompany>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Ref_count_obj@VCCompany@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Ref_count_obj@VCCompany@@@std@@UAE@XZ PROC	; std::_Ref_count_obj<CCompany>::~_Ref_count_obj<CCompany>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Ref_count_base@std@@UAE@XZ		; std::_Ref_count_base::~_Ref_count_base
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Ref_count_obj@VCCompany@@@std@@UAE@XZ ENDP	; std::_Ref_count_obj<CCompany>::~_Ref_count_obj<CCompany>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Delete_this@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ
_TEXT	SEGMENT
tv74 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
?_Delete_this@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ PROC ; std::_Ref_count_obj<CCompany>::_Delete_this, COMDAT
; _this$ = ecx

; 917  : 		{	// destroy self

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 918  : 		delete this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@Delete_thi
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN2@Delete_thi
$LN3@Delete_thi:
	mov	DWORD PTR tv74[ebp], 0
$LN2@Delete_thi:

; 919  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Delete_this@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ ENDP ; std::_Ref_count_obj<CCompany>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Destroy@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ
_TEXT	SEGMENT
tv71 = -220						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Destroy@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ PROC	; std::_Ref_count_obj<CCompany>::_Destroy, COMDAT
; _this$ = ecx

; 912  : 		{	// destroy managed resource

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Destroy@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 913  : 		_Getptr()->~_Ty();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getptr@?$_Ref_count_obj@VCCompany@@@std@@QBEPAVCCompany@@XZ ; std::_Ref_count_obj<CCompany>::_Getptr
	mov	DWORD PTR tv71[ebp], eax
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR tv71[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv71[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 914  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Destroy@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-224]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Destroy@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Destroy@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ ENDP	; std::_Ref_count_obj<CCompany>::_Destroy
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Getptr@?$_Ref_count_obj@VCCompany@@@std@@QBEPAVCCompany@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getptr@?$_Ref_count_obj@VCCompany@@@std@@QBEPAVCCompany@@XZ PROC ; std::_Ref_count_obj<CCompany>::_Getptr, COMDAT
; _this$ = ecx

; 906  : 		{	// get pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 907  : 		return ((_Ty *)&_Storage);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH

; 908  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getptr@?$_Ref_count_obj@VCCompany@@@std@@QBEPAVCCompany@@XZ ENDP ; std::_Ref_count_obj<CCompany>::_Getptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ??$save_override@$$CBVCContact@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVCContact@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVCContact@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVCContact@@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<CContact const >, COMDAT
; _this$ = ecx

; 82   :     void save_override(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 83   :         this->detail_common_oarchive::save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$save_override@$$CBVCContact@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVCContact@@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<CContact const >

; 84   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$save_override@$$CBVCContact@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVCContact@@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<CContact const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 724  : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 725  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 726  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z PROC ; std::pointer_traits<std::_Container_proxy *>::pointer_to, COMDAT

; 279  : 		{	// convert raw reference to pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 280  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ; std::addressof<std::_Container_proxy>
	add	esp, 4

; 281  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z ENDP ; std::pointer_traits<std::_Container_proxy *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 724  : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 725  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 726  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??$?0AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<char> > &>, COMDAT
; _this$ = ecx

; 952  : 		{	// construct from a related allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<char> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>

; 953  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z PROC	; std::pointer_traits<char *>::pointer_to, COMDAT

; 279  : 		{	// convert raw reference to pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 280  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4

; 281  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z ENDP	; std::pointer_traits<char *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Unfancy@$$CBD@std@@YAPBDPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@$$CBD@std@@YAPBDPBD@Z PROC			; std::_Unfancy<char const >, COMDAT

; 739  : 	{	// do nothing for plain pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 740  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 741  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unfancy@$$CBD@std@@YAPBDPBD@Z ENDP			; std::_Unfancy<char const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Umove@PAV?$shared_ptr@VCContact@@@std@@@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEPAV?$shared_ptr@VCContact@@@1@PAV21@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAV?$shared_ptr@VCContact@@@std@@@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEPAV?$shared_ptr@VCContact@@@1@PAV21@00@Z PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Umove<std::shared_ptr<CContact> *>, COMDAT
; _this$ = ecx

; 1658 : 		{	// move initializing [_First, _Last), using allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1659 : 		return (_Uninitialized_move(_First, _Last,

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Uninitialized_move@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *,std::allocator<std::shared_ptr<CContact> > >
	add	esp, 16					; 00000010H

; 1660 : 			_Ptr, this->_Getal()));
; 1661 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAV?$shared_ptr@VCContact@@@std@@@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEPAV?$shared_ptr@VCContact@@@1@PAV21@00@Z ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Umove<std::shared_ptr<CContact> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
	add	esp, 12					; 0000000cH

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 739  : 	{	// do nothing for plain pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 740  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 741  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx

; 1002 : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1003 : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
	add	esp, 8

; 1004 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??$?0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > > &>, COMDAT
; _this$ = ecx

; 952  : 		{	// construct from a related allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0V?$shared_ptr@VCContact@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::shared_ptr<CContact> >

; 953  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate, COMDAT
; _this$ = ecx

; 986  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 987  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate

; 988  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate, COMDAT
; _this$ = ecx

; 975  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 976  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate

; 977  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address, COMDAT
; _this$ = ecx

; 925  : 		{	// return address of mutable _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 926  : 		return (pointer_traits<pointer>::pointer_to(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z ; std::pointer_traits<std::_Container_proxy *>::pointer_to
	add	esp, 4

; 927  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx

; 724  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 725  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

	push	1
	push	8
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	?_Allocate@std@@YAPAXII_N@Z		; std::_Allocate
	add	esp, 12					; 0000000cH

; 726  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx

; 719  : 		{	// deallocate object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 720  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	8
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 721  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$swap@PAVCContact@@X@std@@YAXAAPAVCContact@@0@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@PAVCContact@@X@std@@YAXAAPAVCContact@@0@Z PROC	; std::swap<CContact *,void>, COMDAT

; 48   : 	{	// exchange values stored at _Left and _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 49   : 	_Ty _Tmp = _STD move(_Left);

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$move@AAPAVCContact@@@std@@YA$$QAPAVCContact@@AAPAV1@@Z ; std::move<CContact * &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 50   : 	_Left = _STD move(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$move@AAPAVCContact@@@std@@YA$$QAPAVCContact@@AAPAV1@@Z ; std::move<CContact * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 51   : 	_Right = _STD move(_Tmp);

	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$move@AAPAVCContact@@@std@@YA$$QAPAVCContact@@AAPAV1@@Z ; std::move<CContact * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 52   : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@swap
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@swap:
	DD	1
	DD	$LN4@swap
$LN4@swap:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@swap
$LN3@swap:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
??$swap@PAVCContact@@X@std@@YAXAAPAVCContact@@0@Z ENDP	; std::swap<CContact *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$swap@PAV_Ref_count_base@std@@X@std@@YAXAAPAV_Ref_count_base@0@0@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@PAV_Ref_count_base@std@@X@std@@YAXAAPAV_Ref_count_base@0@0@Z PROC ; std::swap<std::_Ref_count_base *,void>, COMDAT

; 48   : 	{	// exchange values stored at _Left and _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 49   : 	_Ty _Tmp = _STD move(_Left);

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$move@AAPAV_Ref_count_base@std@@@std@@YA$$QAPAV_Ref_count_base@0@AAPAV10@@Z ; std::move<std::_Ref_count_base * &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 50   : 	_Left = _STD move(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$move@AAPAV_Ref_count_base@std@@@std@@YA$$QAPAV_Ref_count_base@0@AAPAV10@@Z ; std::move<std::_Ref_count_base * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 51   : 	_Right = _STD move(_Tmp);

	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$move@AAPAV_Ref_count_base@std@@@std@@YA$$QAPAV_Ref_count_base@0@AAPAV10@@Z ; std::move<std::_Ref_count_base * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 52   : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@swap
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@swap:
	DD	1
	DD	$LN4@swap
$LN4@swap:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@swap
$LN3@swap:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
??$swap@PAV_Ref_count_base@std@@X@std@@YAXAAPAV_Ref_count_base@0@0@Z ENDP ; std::swap<std::_Ref_count_base *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_pointer_if@$$CBD@std@@YAX_NPBDPB_WI@Z
_TEXT	SEGMENT
__Test$ = 8						; size = 1
__Ptr$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_pointer_if@$$CBD@std@@YAX_NPBDPB_WI@Z PROC	; std::_Debug_pointer_if<char const >, COMDAT

; 937  : 	{	// conditionally test pointer for non-singularity, pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 938  : 	if (_Test && _Ptr == 0)

	movzx	eax, BYTE PTR __Test$[ebp]
	test	eax, eax
	je	SHORT $LN1@Debug_poin
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN1@Debug_poin

; 939  : 		_DEBUG_ERROR2("invalid null pointer", _File, _Line);

	mov	esi, esp
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Debug_poin:

; 940  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_pointer_if@$$CBD@std@@YAX_NPBDPB_WI@Z ENDP	; std::_Debug_pointer_if<char const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPADPAD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@D@std@@YAPADPAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 739  : 	{	// do nothing for plain pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 740  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 741  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unfancy@D@std@@YAPADPAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 1002 : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1003 : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 1004 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@PAD@std@@YAPAPADAAPAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAD@std@@YAPAPADAAPAD@Z PROC		; std::addressof<char *>, COMDAT

; 724  : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 725  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 726  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@PAD@std@@YAPAPADAAPAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT
; _this$ = ecx

; 280  : 		{	// construct from forwarded values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 279  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 281  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAV?$allocator@D@1@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> >, COMDAT
; _this$ = ecx

; 952  : 		{	// construct from a related allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>

; 953  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAV?$allocator@D@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@PAV?$shared_ptr@VCContact@@@2@@std@@YAXPAV?$shared_ptr@VCContact@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@PAV?$shared_ptr@VCContact@@@2@@std@@YAXPAV?$shared_ptr@VCContact@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::shared_ptr<CContact> >,std::shared_ptr<CContact> *>, COMDAT

; 1114 : 	{	// destroy [_First, _Last), choose optimization

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1115 : 		// note that this is an optimization for debug mode codegen;
; 1116 : 		// in release mode the BE removes all of this
; 1117 : 	typedef typename _Alloc::value_type _Val;
; 1118 : 	_Destroy_range1(_First, _Last, _Al, typename conjunction<

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range1@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@PAV?$shared_ptr@VCContact@@@2@@std@@YAXPAV?$shared_ptr@VCContact@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Destroy_range1<std::allocator<std::shared_ptr<CContact> >,std::shared_ptr<CContact> *>
	add	esp, 16					; 00000010H

; 1119 : 		is_trivially_destructible<_Val>,
; 1120 : 		_Uses_default_destroy<_Alloc, _Val *>>::type());
; 1121 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@PAV?$shared_ptr@VCContact@@@2@@std@@YAXPAV?$shared_ptr@VCContact@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::shared_ptr<CContact> >,std::shared_ptr<CContact> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1><>, COMDAT
; _this$ = ecx

; 280  : 		{	// construct from forwarded values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 279  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >

; 281  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z
_TEXT	SEGMENT
$T2 = -292						; size = 4
$T3 = -280						; size = 12
__Pfmod$4 = -68						; size = 4
__Pf$5 = -56						; size = 4
__Id$6 = -44						; size = 4
__Psave$7 = -32						; size = 4
__Lock$8 = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Loc$ = 8						; size = 4
??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z PROC ; std::use_facet<std::codecvt<char,char,_Mbstatet> >, COMDAT

; 553  : 	{	// get facet reference from locale

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 284				; 0000011cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-296]
	mov	ecx, 71					; 00000047H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 554  :  #if _NO_LOCALES
; 555  : 	static _Wrap_facet<_Facet> _Wfac;
; 556  : 	return (*(_Facet *)&_Wfac);
; 557  : 
; 558  :  #else /* _NO_LOCALES */
; 559  : 	_BEGIN_LOCK(_LOCK_LOCALE)	// the thread lock, make get atomic

	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR __Lock$8[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 560  : 		const locale::facet *_Psave =
; 561  : 			_Facetptr<_Facet>::_Psave;	// static pointer to lazy facet

	mov	eax, DWORD PTR ?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::codecvt<char,char,_Mbstatet> >::_Psave
	mov	DWORD PTR __Psave$7[ebp], eax

; 562  : 
; 563  : 		size_t _Id = _Facet::id;

	mov	esi, esp
	mov	ecx, DWORD PTR __imp_?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A
	call	DWORD PTR __imp_??Bid@locale@std@@QAEIXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Id$6[ebp], eax

; 564  : 		const locale::facet *_Pf = _Loc._Getfacet(_Id);

	mov	eax, DWORD PTR __Id$6[ebp]
	push	eax
	mov	ecx, DWORD PTR __Loc$[ebp]
	call	?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z ; std::locale::_Getfacet
	mov	DWORD PTR __Pf$5[ebp], eax

; 565  : 
; 566  : 		if (_Pf != 0)

	cmp	DWORD PTR __Pf$5[ebp], 0
	je	SHORT $LN2@use_facet
	jmp	$LN3@use_facet
$LN2@use_facet:

; 567  : 			;	// got facet from locale
; 568  : 		else if (_Psave != 0)

	cmp	DWORD PTR __Psave$7[ebp], 0
	je	SHORT $LN4@use_facet

; 569  : 			_Pf = _Psave;	// lazy facet already allocated

	mov	eax, DWORD PTR __Psave$7[ebp]
	mov	DWORD PTR __Pf$5[ebp], eax
	jmp	SHORT $LN3@use_facet
$LN4@use_facet:

; 570  : 		else if (_Facet::_Getcat(&_Psave, &_Loc) == (size_t)(-1))

	mov	esi, esp
	mov	eax, DWORD PTR __Loc$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Psave$7[ebp]
	push	ecx
	call	DWORD PTR __imp_?_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	jne	SHORT $LN6@use_facet

; 571  : 
; 572  :  #if _HAS_EXCEPTIONS
; 573  : 
; 574  : 			_THROW_NCEE(_XSTD bad_cast, _EMPTY_ARGUMENT);	// lazy disallowed

	lea	ecx, DWORD PTR $T3[ebp]
	call	??0bad_cast@std@@QAE@XZ			; std::bad_cast::bad_cast
	push	OFFSET __TI2?AVbad_cast@std@@
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	__CxxThrowException@8

; 575  : 
; 576  :  #else /* _HAS_EXCEPTIONS */
; 577  : 			abort();	// lazy disallowed
; 578  :  #endif /* _HAS_EXCEPTIONS */
; 579  : 
; 580  : 		else

	jmp	SHORT $LN3@use_facet
$LN6@use_facet:

; 581  : 			{	// queue up lazy facet for destruction
; 582  : 			_Pf = _Psave;

	mov	eax, DWORD PTR __Psave$7[ebp]
	mov	DWORD PTR __Pf$5[ebp], eax

; 583  : 			_Facetptr<_Facet>::_Psave = _Psave;

	mov	eax, DWORD PTR __Psave$7[ebp]
	mov	DWORD PTR ?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PBVfacet@locale@2@B, eax ; std::_Facetptr<std::codecvt<char,char,_Mbstatet> >::_Psave

; 584  : 
; 585  : 			locale::facet *_Pfmod = (_Facet *)_Psave;

	mov	eax, DWORD PTR __Psave$7[ebp]
	mov	DWORD PTR __Pfmod$4[ebp], eax

; 586  : 			_Pfmod->_Incref();

	mov	eax, DWORD PTR __Pfmod$4[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR __Pfmod$4[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 587  : 
; 588  :  #if defined(_M_CEE)
; 589  : 			_Facet_Register_m(_Pfmod);
; 590  : 
; 591  :  #else /* defined(_M_CEE) */
; 592  : 			_Facet_Register(_Pfmod);

	mov	eax, DWORD PTR __Pfmod$4[ebp]
	push	eax
	call	?_Facet_Register@std@@YAXPAV_Facet_base@1@@Z ; std::_Facet_Register
	add	esp, 4
$LN3@use_facet:

; 593  :  #endif /* defined(_M_CEE) */
; 594  : 			}
; 595  : 
; 596  : 		return ((const _Facet&)(*_Pf));	// should be dynamic_cast

	mov	eax, DWORD PTR __Pf$5[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$8[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T2[ebp]
$LN8@use_facet:

; 597  : 	_END_LOCK()
; 598  :  #endif /* _NO_LOCALES */
; 599  : 	}	// end of use_facet body

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@use_facet
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 296				; 00000128H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN14@use_facet:
	DD	2
	DD	$LN13@use_facet
$LN13@use_facet:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN10@use_facet
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN11@use_facet
$LN11@use_facet:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	0
$LN10@use_facet:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$8[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-300]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z ENDP ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ PROC		; std::fpos<_Mbstatet>::operator __int64, COMDAT
; _this$ = ecx

; 67   : 		{	// return offset

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 68   : 		return ((streamoff)(_Myoff + _FPOSOFF(_Fpos)));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	add	edx, DWORD PTR [ecx+8]
	mov	esi, DWORD PTR [eax+4]
	adc	esi, DWORD PTR [ecx+12]
	mov	eax, edx
	mov	edx, esi

; 69   : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ ENDP		; std::fpos<_Mbstatet>::operator __int64
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?seekpos@?$fpos@U_Mbstatet@@@std@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?seekpos@?$fpos@U_Mbstatet@@@std@@QBE_JXZ PROC		; std::fpos<_Mbstatet>::seekpos, COMDAT
; _this$ = ecx

; 62   : 		{	// return C file position

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 63   : 		return (_Fpos);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+12]

; 64   : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?seekpos@?$fpos@U_Mbstatet@@@std@@QBE_JXZ ENDP		; std::fpos<_Mbstatet>::seekpos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?state@?$fpos@U_Mbstatet@@@std@@QBE?AU_Mbstatet@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?state@?$fpos@U_Mbstatet@@@std@@QBE?AU_Mbstatet@@XZ PROC ; std::fpos<_Mbstatet>::state, COMDAT
; _this$ = ecx

; 52   : 		{	// return conversion state

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 53   : 		return (_Mystate);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 54   : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?state@?$fpos@U_Mbstatet@@@std@@QBE?AU_Mbstatet@@XZ ENDP ; std::fpos<_Mbstatet>::state
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ??0?$fpos@U_Mbstatet@@@std@@QAE@U_Mbstatet@@_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__State$ = 8						; size = 8
__Fileposition$ = 16					; size = 8
??0?$fpos@U_Mbstatet@@@std@@QAE@U_Mbstatet@@_J@Z PROC	; std::fpos<_Mbstatet>::fpos<_Mbstatet>, COMDAT
; _this$ = ecx

; 48   : 		{	// construct with conversion state and C file position

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 47   : 		: _Myoff(0), _Fpos(_Fileposition), _Mystate(_State)

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Fileposition$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR __Fileposition$[ebp+4]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __State$[ebp]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR __State$[ebp+4]
	mov	DWORD PTR [eax+20], edx

; 49   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0?$fpos@U_Mbstatet@@@std@@QAE@U_Mbstatet@@_J@Z ENDP	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 8
??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z PROC		; std::fpos<_Mbstatet>::fpos<_Mbstatet>, COMDAT
; _this$ = ecx

; 43   : 		{	// construct with stream offset

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 42   : 		: _Myoff(_Off), _Fpos(_Fpz), _Mystate()

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	DWORD PTR [eax+12], 0
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax

; 44   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z ENDP		; std::fpos<_Mbstatet>::fpos<_Mbstatet>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>, COMDAT
; _this$ = ecx

; 622  : 		{	// construct allocator from _Al

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 620  : 		: _Mypair(_One_then_variadic_args_t(),

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
	add	esp, 4
	push	eax
	movzx	ecx, BYTE PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 623  : 		_Alloc_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy

; 624  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
__ehhandler$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z PROC ; std::move<std::_Wrap_alloc<std::allocator<char> > &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ENDP ; std::move<std::_Wrap_alloc<std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_pointer@$$CBD@std@@YAXPBDPB_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@$$CBD@std@@YAXPBDPB_WI@Z PROC		; std::_Debug_pointer<char const >, COMDAT

; 923  : 	{	// test pointer for non-singularity, pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 924  : 	if (_Ptr == 0)

	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN1@Debug_poin

; 925  : 		_DEBUG_ERROR2("invalid null pointer", _File, _Line);

	mov	esi, esp
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Debug_poin:

; 926  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_pointer@$$CBD@std@@YAXPBDPB_WI@Z ENDP		; std::_Debug_pointer<char const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_iterator<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*, COMDAT
; _this$ = ecx

; 339  : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 340  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEABDXZ ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator*

; 341  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Parg$ = 8						; size = 4
__Pstring$ = 12						; size = 4
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
; _this$ = ecx

; 322  : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 321  : 		: _Mybase(_Parg, _Pstring)

	mov	eax, DWORD PTR __Pstring$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >

; 323  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_const_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEABDXZ
_TEXT	SEGMENT
tv77 = -232						; size = 4
__Contptr$ = -32					; size = 4
__Mycont$ = -20						; size = 4
_this$ = -8						; size = 4
??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEABDXZ PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator*, COMDAT
; _this$ = ecx

; 67   : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 68   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 69   : 		const auto _Mycont = static_cast<const _Mystr *>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax

; 70   : 		const auto _Contptr = _Mycont ? _Mycont->_Myptr() : 0;

	cmp	DWORD PTR __Mycont$[ebp], 0
	je	SHORT $LN5@operator
	mov	ecx, DWORD PTR __Mycont$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	DWORD PTR tv77[ebp], 0
$LN6@operator:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR __Contptr$[ebp], eax

; 71   : 		if (_Mycont == 0
; 72   : 			|| _Ptr == nullptr_t{}
; 73   : 			|| _Unfancy(_Ptr) < _Contptr
; 74   : 			|| _Contptr + _Mycont->_Mysize <= _Unfancy(_Ptr))

	cmp	DWORD PTR __Mycont$[ebp], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	??$_Unfancy@$$CBD@std@@YAPBDPBD@Z	; std::_Unfancy<char const >
	add	esp, 4
	cmp	eax, DWORD PTR __Contptr$[ebp]
	jb	SHORT $LN3@operator
	mov	eax, DWORD PTR __Mycont$[ebp]
	mov	esi, DWORD PTR __Contptr$[ebp]
	add	esi, DWORD PTR [eax+20]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	??$_Unfancy@$$CBD@std@@YAPBDPBD@Z	; std::_Unfancy<char const >
	add	esp, 4
	cmp	esi, eax
	ja	SHORT $LN2@operator
$LN3@operator:

; 75   : 			{	// report error
; 76   : 			_DEBUG_ERROR("string iterator not dereferencable");

	mov	esi, esp
	push	76					; 0000004cH
	push	OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@CNCHLAOB@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 77   : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN7@operator
	xor	ecx, ecx
	jne	SHORT $LN8@operator
$LN7@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	77					; 0000004dH
	push	OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN8@operator
	int	3
$LN8@operator:
	mov	esi, esp
	push	0
	push	77					; 0000004dH
	push	OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1MG@GDGHDIKC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:

; 78   : 			}
; 79   : 
; 80   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 81   : 		_SCL_SECURE_VALIDATE(_Ptr != nullptr_t{});
; 82   : 		const auto _Mycont = static_cast<const _Mystr *>(this->_Getcont());
; 83   : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 84   : 		const auto _Contptr = _Mycont->_Myptr();
; 85   : 		_SCL_SECURE_VALIDATE_RANGE(_Contptr <= _Unfancy(_Ptr) && _Unfancy(_Ptr) < _Contptr + _Mycont->_Mysize);
; 86   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 87   : 
; 88   : 		_Analysis_assume_(_Ptr != nullptr_t{});
; 89   : 
; 90   : 		return (*_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 91   : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEABDXZ ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pstring$ = 12						; size = 4
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
; _this$ = ecx

; 49   : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 48   : 		: _Ptr(_Parg)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 50   : 		this->_Adopt(_Pstring);

	mov	eax, DWORD PTR __Pstring$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 51   : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_iarchive.hpp
;	COMDAT ??$?5Vversion_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVversion_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?5Vversion_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVversion_type@23@@Z PROC ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::version_type>, COMDAT
; _this$ = ecx

; 67   :     Archive & operator>>(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 68   :         this->This()->load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	mov	ecx, eax
	call	??$load_override@Vversion_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::version_type>

; 69   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This

; 70   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?5Vversion_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVversion_type@23@@Z ENDP ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_iarchive.hpp
;	COMDAT ??$?5Vobject_id_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVobject_id_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?5Vobject_id_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVobject_id_type@23@@Z PROC ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::object_id_type>, COMDAT
; _this$ = ecx

; 67   :     Archive & operator>>(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 68   :         this->This()->load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	mov	ecx, eax
	call	??$load_override@Vobject_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::object_id_type>

; 69   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This

; 70   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?5Vobject_id_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVobject_id_type@23@@Z ENDP ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_iarchive.hpp
;	COMDAT ??$?5Vclass_id_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVclass_id_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?5Vclass_id_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVclass_id_type@23@@Z PROC ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::class_id_type>, COMDAT
; _this$ = ecx

; 67   :     Archive & operator>>(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 68   :         this->This()->load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	mov	ecx, eax
	call	??$load_override@Vclass_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::class_id_type>

; 69   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This

; 70   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?5Vclass_id_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVclass_id_type@23@@Z ENDP ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_iarchive.hpp
;	COMDAT ??$?5Vclass_id_optional_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVclass_id_optional_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?5Vclass_id_optional_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVclass_id_optional_type@23@@Z PROC ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::class_id_optional_type>, COMDAT
; _this$ = ecx

; 67   :     Archive & operator>>(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 68   :         this->This()->load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	mov	ecx, eax
	call	??$load_override@Vclass_id_optional_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_optional_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::class_id_optional_type>

; 69   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This

; 70   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?5Vclass_id_optional_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVclass_id_optional_type@23@@Z ENDP ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::class_id_optional_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_iarchive.hpp
;	COMDAT ??$?5Utracking_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAUtracking_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?5Utracking_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAUtracking_type@23@@Z PROC ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::tracking_type>, COMDAT
; _this$ = ecx

; 67   :     Archive & operator>>(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 68   :         this->This()->load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	mov	ecx, eax
	call	??$load_override@Utracking_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::tracking_type>

; 69   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This

; 70   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?5Utracking_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAUtracking_type@23@@Z ENDP ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_iarchive.hpp
;	COMDAT ??$?5Uclass_name_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAUclass_name_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?5Uclass_name_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAUclass_name_type@23@@Z PROC ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::class_name_type>, COMDAT
; _this$ = ecx

; 67   :     Archive & operator>>(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 68   :         this->This()->load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	mov	ecx, eax
	call	?load_override@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUclass_name_type@23@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override

; 69   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This

; 70   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?5Uclass_name_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAUclass_name_type@23@@Z ENDP ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::class_name_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6Vversion_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVversion_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6Vversion_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVversion_type@23@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::version_type>, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	mov	ecx, eax
	call	??$save_override@$$CBVversion_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVversion_type@12@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::version_type const >

; 71   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?6Vversion_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVversion_type@23@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6Vobject_id_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVobject_id_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6Vobject_id_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVobject_id_type@23@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::object_id_type>, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	mov	ecx, eax
	call	?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_id_type@23@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override

; 71   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?6Vobject_id_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVobject_id_type@23@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6Vobject_reference_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVobject_reference_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6Vobject_reference_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVobject_reference_type@23@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::object_reference_type>, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	mov	ecx, eax
	call	??$save_override@$$CBVobject_reference_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_reference_type@12@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::object_reference_type const >

; 71   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?6Vobject_reference_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVobject_reference_type@23@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::object_reference_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6Vclass_id_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6Vclass_id_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_type@23@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_id_type>, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	mov	ecx, eax
	call	??$save_override@$$CBVclass_id_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_type@12@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_type const >

; 71   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?6Vclass_id_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_type@23@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6Vclass_id_reference_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_reference_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6Vclass_id_reference_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_reference_type@23@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_id_reference_type>, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	mov	ecx, eax
	call	??$save_override@$$CBVclass_id_reference_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_reference_type const >

; 71   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?6Vclass_id_reference_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_reference_type@23@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_id_reference_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6Vclass_id_optional_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_optional_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6Vclass_id_optional_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_optional_type@23@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_id_optional_type>, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	mov	ecx, eax
	call	?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_optional_type@23@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override

; 71   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?6Vclass_id_optional_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_optional_type@23@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_id_optional_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6Uclass_name_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABUclass_name_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6Uclass_name_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABUclass_name_type@23@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_name_type>, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	mov	ecx, eax
	call	?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override

; 71   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?6Uclass_name_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABUclass_name_type@23@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_name_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6Utracking_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABUtracking_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6Utracking_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABUtracking_type@23@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::tracking_type>, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	mov	ecx, eax
	call	??$save_override@$$CBUtracking_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUtracking_type@12@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::tracking_type const >

; 71   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?6Utracking_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABUtracking_type@23@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$_Reset@VCContact@@@?$_Ptr_base@VCContact@@@std@@QAEXABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other$ = 8						; size = 4
??$_Reset@VCContact@@@?$_Ptr_base@VCContact@@@std@@QAEXABV01@@Z PROC ; std::_Ptr_base<CContact>::_Reset<CContact>, COMDAT
; _this$ = ecx

; 348  : 		{	// release resource and take ownership of _Other._Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 349  : 		_Reset(_Other._Ptr, _Other._Rep);

	mov	eax, DWORD PTR __Other$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR __Other$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset@?$_Ptr_base@VCContact@@@std@@QAEXPAVCContact@@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<CContact>::_Reset

; 350  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Reset@VCContact@@@?$_Ptr_base@VCContact@@@std@@QAEXABV01@@Z ENDP ; std::_Ptr_base<CContact>::_Reset<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@$$QAV21@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@$$QAV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >, COMDAT
; _this$ = ecx

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::forward<std::shared_ptr<CContact> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@$$QAV31@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >
	add	esp, 12					; 0000000cH

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@$$QAV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z PROC ; std::forward<std::shared_ptr<CContact> >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ENDP ; std::forward<std::shared_ptr<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@AAV10@@Z PROC ; std::addressof<std::shared_ptr<CContact> >, COMDAT

; 724  : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 725  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 726  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@AAV10@@Z ENDP ; std::addressof<std::shared_ptr<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@ABV21@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@ABV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> const &>, COMDAT
; _this$ = ecx

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABV?$shared_ptr@VCContact@@@std@@@std@@YAABV?$shared_ptr@VCContact@@@0@ABV10@@Z ; std::forward<std::shared_ptr<CContact> const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@ABV31@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> const &>
	add	esp, 12					; 0000000cH

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@ABV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@AAV21@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@AAV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> &>, COMDAT
; _this$ = ecx

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAV?$shared_ptr@VCContact@@@std@@@std@@YAAAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::forward<std::shared_ptr<CContact> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@AAV31@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> &>
	add	esp, 12					; 0000000cH

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@AAV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z PROC ; std::_Unfancy<std::shared_ptr<CContact> >, COMDAT

; 739  : 	{	// do nothing for plain pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 740  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 741  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ENDP ; std::_Unfancy<std::shared_ptr<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@$$CBV?$shared_ptr@VCContact@@@std@@@std@@YAPBV?$shared_ptr@VCContact@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$shared_ptr@VCContact@@@std@@@std@@YAPBV?$shared_ptr@VCContact@@@0@ABV10@@Z PROC ; std::addressof<std::shared_ptr<CContact> const >, COMDAT

; 724  : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 725  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 726  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@$$CBV?$shared_ptr@VCContact@@@std@@@std@@YAPBV?$shared_ptr@VCContact@@@0@ABV10@@Z ENDP ; std::addressof<std::shared_ptr<CContact> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Move_unchecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move_unchecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00@Z PROC ; std::_Move_unchecked<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *>, COMDAT

; 2597 : 	{	// move [_First, _Last) to [_Dest, ...), choose optimization

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 2598 : 	return (_Move_unchecked1(_First, _Last,

	lea	eax, DWORD PTR __Dest$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_move_cat@V?$shared_ptr@VCContact@@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAV?$shared_ptr@VCContact@@@0@0@Z ; std::_Ptr_move_cat<std::shared_ptr<CContact>,std::shared_ptr<CContact> >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Move_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00U_General_ptr_iterator_tag@0@@Z ; std::_Move_unchecked1<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *>
	add	esp, 16					; 00000010H

; 2599 : 		_Dest, _Ptr_move_cat(_First, _Dest)));
; 2600 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move_unchecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00@Z ENDP ; std::_Move_unchecked<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string
;	COMDAT ??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Istr$ = 8						; size = 4
__Str$ = 12						; size = 4
??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::getline<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 160  : 	{	// get characters into string, discard newline

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 161  : 	return (getline(_STD move(_Istr), _Str, _Istr.widen('\n')));

	mov	esi, esp
	push	10					; 0000000aH
	mov	eax, DWORD PTR __Istr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Istr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Istr$[ebp]
	push	edx
	call	??$move@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::move<std::basic_istream<char,std::char_traits<char> > &>
	add	esp, 4
	push	eax
	call	??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z ; std::getline<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH

; 162  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::getline<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Ostr$ = 8						; size = 4
??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z PROC ; std::endl<char,std::char_traits<char> >, COMDAT

; 991  : 	{	// insert newline and flush stream

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 992  : 	_Ostr.put(_Ostr.widen('\n'));

	mov	esi, esp
	push	10					; 0000000aH
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	call	DWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 993  : 	_Ostr.flush();

	mov	esi, esp
	mov	ecx, DWORD PTR __Ostr$[ebp]
	call	DWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp

; 994  : 	return (_Ostr);

	mov	eax, DWORD PTR __Ostr$[ebp]

; 995  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ENDP ; std::endl<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
_TEXT	SEGMENT
tv135 = -352						; size = 8
tv342 = -344						; size = 8
tv290 = -340						; size = 4
tv287 = -340						; size = 8
tv285 = -340						; size = 4
tv328 = -336						; size = 8
tv289 = -336						; size = 4
tv284 = -336						; size = 4
tv286 = -332						; size = 4
tv137 = -332						; size = 4
tv288 = -329						; size = 1
tv283 = -329						; size = 1
$T2 = -324						; size = 4
$T3 = -312						; size = 4
$T4 = -300						; size = 4
$T5 = -288						; size = 4
$T6 = -276						; size = 4
__Ok$ = -72						; size = 8
__Pad$ = -56						; size = 8
__Count$ = -40						; size = 8
__State$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT

; 780  : 	{	// insert NTBS into char stream

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 336				; 00000150H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 781  : 	typedef char _Elem;
; 782  : 	typedef basic_ostream<_Elem, _Traits> _Myos;
; 783  : 	ios_base::iostate _State = ios_base::goodbit;

	mov	DWORD PTR __State$[ebp], 0

; 784  : 	streamsize _Count = (streamsize)_Traits::length(_Val);	// may overflow

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	xor	ecx, ecx
	mov	DWORD PTR __Count$[ebp], eax
	mov	DWORD PTR __Count$[ebp+4], ecx

; 785  : 	streamsize _Pad = _Ostr.width() <= 0 || _Ostr.width() <= _Count

	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv328[ebp], eax
	mov	DWORD PTR tv328[ebp+4], edx
	cmp	DWORD PTR tv328[ebp+4], 0
	jl	SHORT $LN17@operator
	jg	SHORT $LN24@operator
	cmp	DWORD PTR tv328[ebp], 0
	jbe	SHORT $LN17@operator
$LN24@operator:
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv342[ebp], eax
	mov	DWORD PTR tv342[ebp+4], edx
	mov	eax, DWORD PTR tv342[ebp+4]
	cmp	eax, DWORD PTR __Count$[ebp+4]
	jl	SHORT $LN17@operator
	jg	SHORT $LN25@operator
	mov	ecx, DWORD PTR tv342[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jbe	SHORT $LN17@operator
$LN25@operator:
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Count$[ebp]
	sbb	edx, DWORD PTR __Count$[ebp+4]
	mov	DWORD PTR tv135[ebp], eax
	mov	DWORD PTR tv135[ebp+4], edx
	jmp	SHORT $LN18@operator
$LN17@operator:
	xorps	xmm0, xmm0
	movlpd	QWORD PTR tv135[ebp], xmm0
$LN18@operator:
	mov	ecx, DWORD PTR tv135[ebp]
	mov	DWORD PTR __Pad$[ebp], ecx
	mov	edx, DWORD PTR tv135[ebp+4]
	mov	DWORD PTR __Pad$[ebp+4], edx

; 786  : 		? 0 : _Ostr.width() - _Count;
; 787  : 	const typename _Myos::sentry _Ok(_Ostr);

	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 788  : 
; 789  : 	if (!_Ok)

	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN8@operator

; 790  : 		_State |= ios_base::badbit;

	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax

; 791  : 	else

	jmp	$LN9@operator
$LN8@operator:

; 792  : 		{	// state okay, insert
; 793  : 		_TRY_IO_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 1

; 794  : 		if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left)

	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv137[ebp], eax
	mov	eax, DWORD PTR tv137[ebp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN11@operator

; 795  : 			for (; 0 < _Pad; --_Pad)	// pad on left

	jmp	SHORT $LN4@operator
$LN2@operator:
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR __Pad$[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR __Pad$[ebp], eax
	mov	DWORD PTR __Pad$[ebp+4], ecx
$LN4@operator:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	$LN11@operator
	jg	SHORT $LN26@operator
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN11@operator
$LN26@operator:

; 796  : 				if (_Traits::eq_int_type(_Traits::eof(),

	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR tv283[ebp], al
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv284[ebp], eax
	mov	esi, esp
	movzx	eax, BYTE PTR tv283[ebp]
	push	eax
	mov	ecx, DWORD PTR tv284[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv285[ebp], eax
	mov	ecx, DWORD PTR tv285[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T5[ebp], eax
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@operator

; 797  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 798  : 					{	// insertion failed, quit
; 799  : 					_State |= ios_base::badbit;

	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax

; 800  : 					break;

	jmp	SHORT $LN11@operator
$LN12@operator:

; 801  : 					}
; 802  : 
; 803  : 		if (_State == ios_base::goodbit

	jmp	$LN2@operator
$LN11@operator:

; 804  : 			&& _Ostr.rdbuf()->sputn(_Val, _Count) != _Count)

	cmp	DWORD PTR __State$[ebp], 0
	jne	SHORT $LN13@operator
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv286[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR __Count$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR tv286[ebp]
	call	DWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv287[ebp], eax
	mov	DWORD PTR tv287[ebp+4], edx
	mov	eax, DWORD PTR tv287[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jne	SHORT $LN27@operator
	mov	ecx, DWORD PTR tv287[ebp+4]
	cmp	ecx, DWORD PTR __Count$[ebp+4]
	je	SHORT $LN13@operator
$LN27@operator:

; 805  : 			_State |= ios_base::badbit;

	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
$LN13@operator:

; 806  : 
; 807  : 		if (_State == ios_base::goodbit)

	cmp	DWORD PTR __State$[ebp], 0
	jne	$LN14@operator

; 808  : 			for (; 0 < _Pad; --_Pad)	// pad on right

	jmp	SHORT $LN7@operator
$LN5@operator:
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR __Pad$[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR __Pad$[ebp], eax
	mov	DWORD PTR __Pad$[ebp+4], ecx
$LN7@operator:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	$LN14@operator
	jg	SHORT $LN28@operator
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN14@operator
$LN28@operator:

; 809  : 				if (_Traits::eq_int_type(_Traits::eof(),

	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR tv288[ebp], al
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv289[ebp], eax
	mov	esi, esp
	movzx	eax, BYTE PTR tv288[ebp]
	push	eax
	mov	ecx, DWORD PTR tv289[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv290[ebp], eax
	mov	ecx, DWORD PTR tv290[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T3[ebp], eax
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN15@operator

; 810  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 811  : 					{	// insertion failed, quit
; 812  : 					_State |= ios_base::badbit;

	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax

; 813  : 					break;

	jmp	SHORT $LN14@operator
$LN15@operator:

; 814  : 					}

	jmp	$LN5@operator
$LN14@operator:

; 815  : 		_Ostr.width(0);

	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN19@operator
__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0:

; 816  : 		_CATCH_IO_(_Ostr)

	mov	esi, esp
	push	1
	push	4
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, $LN23@operator
	ret	0
$LN19@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN9@operator
$LN23@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN9@operator:

; 817  : 		}
; 818  : 
; 819  : 	_Ostr.setstate(_State);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR __State$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 820  : 	return (_Ostr);

	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	eax, DWORD PTR $T2[ebp]

; 821  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN32@operator:
	DD	1
	DD	$LN31@operator
$LN31@operator:
	DD	-72					; ffffffb8H
	DD	8
	DD	$LN29@operator
$LN29@operator:
	DB	95					; 0000005fH
	DB	79					; 0000004fH
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-356]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ENDP ; std::operator<<<std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ
_TEXT	SEGMENT
tv75 = -272						; size = 4
$T2 = -264						; size = 4
$T3 = -252						; size = 4
$T4 = -240						; size = 4
__Ret$ = -36						; size = 8
__Rx$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ PROC ; std::make_shared<CCompany>, COMDAT

; 969  : 	{	// make a shared_ptr

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T2[ebp], 0

; 970  : 	_Ref_count_obj<_Ty> *_Rx =
; 971  : 		new _Ref_count_obj<_Ty>(_STD forward<_Types>(_Args)...);

	push	240					; 000000f0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@make_share
	mov	ecx, DWORD PTR $T3[ebp]
	call	??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ ; std::_Ref_count_obj<CCompany>::_Ref_count_obj<CCompany><>
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@make_share
$LN3@make_share:
	mov	DWORD PTR tv75[ebp], 0
$LN4@make_share:
	mov	eax, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T4[ebp]
	mov	DWORD PTR __Rx$[ebp], ecx

; 972  : 
; 973  : 	shared_ptr<_Ty> _Ret;

	lea	ecx, DWORD PTR __Ret$[ebp]
	call	??0?$shared_ptr@VCCompany@@@std@@QAE@XZ	; std::shared_ptr<CCompany>::shared_ptr<CCompany>
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 974  : 	_Ret._Resetp0(_Rx->_Getptr(), _Rx);

	mov	eax, DWORD PTR __Rx$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Rx$[ebp]
	call	?_Getptr@?$_Ref_count_obj@VCCompany@@@std@@QBEPAVCCompany@@XZ ; std::_Ref_count_obj<CCompany>::_Getptr
	push	eax
	lea	ecx, DWORD PTR __Ret$[ebp]
	call	??$_Resetp0@VCCompany@@@?$shared_ptr@VCCompany@@@std@@QAEXPAVCCompany@@PAV_Ref_count_base@1@@Z ; std::shared_ptr<CCompany>::_Resetp0<CCompany>

; 975  : 	return (_Ret);

	lea	eax, DWORD PTR __Ret$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$shared_ptr@VCCompany@@@std@@QAE@$$QAV01@@Z ; std::shared_ptr<CCompany>::shared_ptr<CCompany>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Ret$[ebp]
	call	??1?$shared_ptr@VCCompany@@@std@@QAE@XZ	; std::shared_ptr<CCompany>::~shared_ptr<CCompany>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 976  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@make_share
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN12@make_share:
	DD	1
	DD	$LN11@make_share
$LN11@make_share:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN9@make_share
$LN9@make_share:
	DB	95					; 0000005fH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ$0:
	push	240					; 000000f0H
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ$1:
	lea	ecx, DWORD PTR __Ret$[ebp]
	jmp	??1?$shared_ptr@VCCompany@@@std@@QAE@XZ	; std::shared_ptr<CCompany>::~shared_ptr<CCompany>
__ehhandler$??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-276]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ ENDP ; std::make_shared<CCompany>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ
_TEXT	SEGMENT
tv75 = -272						; size = 4
$T2 = -264						; size = 4
$T3 = -252						; size = 4
$T4 = -240						; size = 4
__Ret$ = -36						; size = 8
__Rx$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ PROC ; std::make_shared<CPerson>, COMDAT

; 969  : 	{	// make a shared_ptr

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T2[ebp], 0

; 970  : 	_Ref_count_obj<_Ty> *_Rx =
; 971  : 		new _Ref_count_obj<_Ty>(_STD forward<_Types>(_Args)...);

	push	300					; 0000012cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@make_share
	mov	ecx, DWORD PTR $T3[ebp]
	call	??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ ; std::_Ref_count_obj<CPerson>::_Ref_count_obj<CPerson><>
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@make_share
$LN3@make_share:
	mov	DWORD PTR tv75[ebp], 0
$LN4@make_share:
	mov	eax, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T4[ebp]
	mov	DWORD PTR __Rx$[ebp], ecx

; 972  : 
; 973  : 	shared_ptr<_Ty> _Ret;

	lea	ecx, DWORD PTR __Ret$[ebp]
	call	??0?$shared_ptr@VCPerson@@@std@@QAE@XZ	; std::shared_ptr<CPerson>::shared_ptr<CPerson>
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 974  : 	_Ret._Resetp0(_Rx->_Getptr(), _Rx);

	mov	eax, DWORD PTR __Rx$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Rx$[ebp]
	call	?_Getptr@?$_Ref_count_obj@VCPerson@@@std@@QBEPAVCPerson@@XZ ; std::_Ref_count_obj<CPerson>::_Getptr
	push	eax
	lea	ecx, DWORD PTR __Ret$[ebp]
	call	??$_Resetp0@VCPerson@@@?$shared_ptr@VCPerson@@@std@@QAEXPAVCPerson@@PAV_Ref_count_base@1@@Z ; std::shared_ptr<CPerson>::_Resetp0<CPerson>

; 975  : 	return (_Ret);

	lea	eax, DWORD PTR __Ret$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$shared_ptr@VCPerson@@@std@@QAE@$$QAV01@@Z ; std::shared_ptr<CPerson>::shared_ptr<CPerson>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Ret$[ebp]
	call	??1?$shared_ptr@VCPerson@@@std@@QAE@XZ	; std::shared_ptr<CPerson>::~shared_ptr<CPerson>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 976  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@make_share
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN12@make_share:
	DD	1
	DD	$LN11@make_share
$LN11@make_share:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN9@make_share
$LN9@make_share:
	DB	95					; 0000005fH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ$0:
	push	300					; 0000012cH
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ$1:
	lea	ecx, DWORD PTR __Ret$[ebp]
	jmp	??1?$shared_ptr@VCPerson@@@std@@QAE@XZ	; std::shared_ptr<CPerson>::~shared_ptr<CPerson>
__ehhandler$??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-276]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ ENDP ; std::make_shared<CPerson>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z
_TEXT	SEGMENT
tv81 = -236						; size = 4
tv82 = -232						; size = 4
$T2 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Fx$ = 8						; size = 4
_<_Ax_0>$ = 12						; size = 4
_<_Ax_1>$ = 16						; size = 4
??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z PROC ; std::thread::thread<void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,void>, COMDAT
; _this$ = ecx

; 47   : 		{	// construct with _Fx(_Ax...)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 48   : 		_Launch(&_Thr,

	mov	eax, DWORD PTR _<_Ax_1>$[ebp]
	push	eax
	call	??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Ax_0>$[ebp]
	push	ecx
	call	??$forward@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z ; std::forward<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Fx$[ebp]
	push	edx
	call	??$forward@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YAA6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZA6AX01@Z@Z ; std::forward<void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z ; std::make_unique<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	add	esp, 16					; 00000010H
	mov	DWORD PTR tv82[ebp], eax
	mov	ecx, DWORD PTR tv82[ebp]
	mov	DWORD PTR tv81[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR tv81[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z ; std::_Launch<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >

; 49   : 			_STD make_unique<tuple<decay_t<_Fn>, decay_t<_Args>...> >(
; 50   : 				_STD forward<_Fn>(_Fx), _STD forward<_Args>(_Ax)...));
; 51   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
__ehhandler$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-240]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z ENDP ; std::thread::thread<void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,void>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\main.cpp
;	COMDAT _main
_TEXT	SEGMENT
tv695 = -1285						; size = 1
tv670 = -1285						; size = 1
tv711 = -1284						; size = 4
tv707 = -1284						; size = 4
tv704 = -1284						; size = 4
tv697 = -1284						; size = 4
tv694 = -1284						; size = 4
tv691 = -1284						; size = 4
tv686 = -1284						; size = 4
tv683 = -1284						; size = 4
tv677 = -1284						; size = 4
tv672 = -1284						; size = 4
tv669 = -1284						; size = 4
tv666 = -1284						; size = 4
tv661 = -1284						; size = 4
tv658 = -1284						; size = 4
tv654 = -1284						; size = 4
tv651 = -1284						; size = 4
tv685 = -1280						; size = 4
tv676 = -1280						; size = 4
tv660 = -1280						; size = 4
tv631 = -1280						; size = 4
tv604 = -1280						; size = 4
tv575 = -1280						; size = 4
tv563 = -1280						; size = 4
tv531 = -1280						; size = 4
tv518 = -1280						; size = 4
tv506 = -1280						; size = 4
tv452 = -1280						; size = 4
tv393 = -1280						; size = 4
tv389 = -1280						; size = 4
tv366 = -1280						; size = 4
tv339 = -1280						; size = 4
tv245 = -1280						; size = 4
tv218 = -1280						; size = 4
tv214 = -1280						; size = 4
tv191 = -1280						; size = 4
tv164 = -1280						; size = 4
tv94 = -1280						; size = 4
tv91 = -1280						; size = 4
tv87 = -1280						; size = 4
tv75 = -1280						; size = 4
$T2 = -1272						; size = 4
$T3 = -1260						; size = 12
$T4 = -1237						; size = 1
$T5 = -1228						; size = 12
$T6 = -1205						; size = 1
$T7 = -1196						; size = 12
$T8 = -1176						; size = 12
$T9 = -1153						; size = 1
$T10 = -1144						; size = 4
$T11 = -1132						; size = 12
$T12 = -1109						; size = 1
$T13 = -1100						; size = 4
$T14 = -1088						; size = 12
$T15 = -1065						; size = 1
$T16 = -1056						; size = 12
$T17 = -1036						; size = 4
$T18 = -1024						; size = 12
$T19 = -1001						; size = 1
$T20 = -992						; size = 4
$T21 = -980						; size = 12
$T22 = -957						; size = 1
$T23 = -948						; size = 4
$T24 = -936						; size = 12
$T25 = -913						; size = 1
$T26 = -904						; size = 8
$T27 = -888						; size = 8
$T28 = -872						; size = 8
$T29 = -856						; size = 8
$T30 = -840						; size = 4
_it$31 = -444						; size = 12
_it$32 = -424						; size = 12
_found$33 = -401					; size = 1
_contactName$34 = -392					; size = 28
_it$35 = -356						; size = 12
_foundContact$36 = -336					; size = 12
_contactName$37 = -316					; size = 28
_it$38 = -280						; size = 12
_it$39 = -260						; size = 12
_foundContact$40 = -240					; size = 12
_contactName$41 = -220					; size = 28
_it$42 = -184						; size = 12
_subMenuChoice$43 = -161				; size = 1
_menuChoice$44 = -149					; size = 1
_exit$ = -137						; size = 1
_contactListFromFile$ = -128				; size = 8
_contactFileName$ = -112				; size = 28
_contactList$ = -76					; size = 16
_UI$ = -52						; size = 32
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_main	PROC						; COMDAT

; 20   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$_main
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1276				; 000004fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1288]
	mov	ecx, 319				; 0000013fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 21   : 	// User interface for the main menu and splash screen
; 22   : 	CUserInterface UI;

	lea	ecx, DWORD PTR _UI$[ebp]
	call	??0CUserInterface@@QAE@XZ		; CUserInterface::CUserInterface
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 23   : 	// Uses a pointer to a contact so that it can store both CPerson and CCompany contacts
; 24   : 	vector<shared_ptr<CContact>> contactList;

	lea	ecx, DWORD PTR _contactList$[ebp]
	call	??0?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 25   : 	// Prefix for person and company contact files
; 26   : 	string contactFileName = "contactList";

	push	OFFSET ??_C@_0M@IKMOJNDM@contactList?$AA@
	lea	ecx, DWORD PTR _contactFileName$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 27   : 
; 28   : 	// Get the contact list from the files
; 29   : 	// Run this in a thread while the splash screen shows
; 30   : 	thread contactListFromFile(getContactList, &contactList, contactFileName);

	lea	eax, DWORD PTR _contactList$[ebp]
	mov	DWORD PTR $T30[ebp], eax
	lea	ecx, DWORD PTR _contactFileName$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T30[ebp]
	push	edx
	push	OFFSET ?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; getContactList
	lea	ecx, DWORD PTR _contactListFromFile$[ebp]
	call	??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z ; std::thread::thread<void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,void>
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 31   : 
; 32   : 	// Display the splash screen
; 33   : 	UI.displayStartScreen();

	lea	ecx, DWORD PTR _UI$[ebp]
	call	?displayStartScreen@CUserInterface@@QAEXXZ ; CUserInterface::displayStartScreen

; 34   : 
; 35   : 	// Join the thread so once the file finishes loading the menu gets displayed
; 36   : 	contactListFromFile.join();

	lea	ecx, DWORD PTR _contactListFromFile$[ebp]
	call	?join@thread@std@@QAEXXZ		; std::thread::join

; 37   : 
; 38   : 	bool exit = false;

	mov	BYTE PTR _exit$[ebp], 0
$LN2@main:

; 39   : 	while (!exit)

	movzx	eax, BYTE PTR _exit$[ebp]
	test	eax, eax
	jne	$LN3@main

; 40   : 	{
; 41   : 		// Get the menu choice from the user
; 42   : 		char menuChoice = UI.displayMainMenu();

	lea	ecx, DWORD PTR _UI$[ebp]
	call	?displayMainMenu@CUserInterface@@QAEDXZ	; CUserInterface::displayMainMenu
	mov	BYTE PTR _menuChoice$44[ebp], al

; 43   : 
; 44   : 		switch (menuChoice) {

	movsx	eax, BYTE PTR _menuChoice$44[ebp]
	mov	DWORD PTR tv87[ebp], eax
	mov	ecx, DWORD PTR tv87[ebp]
	sub	ecx, 65					; 00000041H
	mov	DWORD PTR tv87[ebp], ecx
	cmp	DWORD PTR tv87[ebp], 5
	ja	$LN4@main
	mov	edx, DWORD PTR tv87[ebp]
	jmp	DWORD PTR $LN97@main[edx*4]
$LN26@main:

; 45   : 		// Add a contact
; 46   : 		case 'A':
; 47   : 		{
; 48   : 			// Prompt the user for the submenu choice (person or company)
; 49   : 			char subMenuChoice = UI.displayContactChoiceMenu();

	lea	ecx, DWORD PTR _UI$[ebp]
	call	?displayContactChoiceMenu@CUserInterface@@QAEDXZ ; CUserInterface::displayContactChoiceMenu
	mov	BYTE PTR _subMenuChoice$43[ebp], al

; 50   : 
; 51   : 			switch (subMenuChoice)

	mov	al, BYTE PTR _subMenuChoice$43[ebp]
	mov	BYTE PTR tv91[ebp], al
	cmp	BYTE PTR tv91[ebp], 65			; 00000041H
	je	SHORT $LN27@main
	cmp	BYTE PTR tv91[ebp], 66			; 00000042H
	je	SHORT $LN28@main
	jmp	$LN6@main
$LN27@main:

; 52   : 			{
; 53   : 				// Add a person
; 54   : 			case 'A':
; 55   : 				contactList.push_back(make_shared<CPerson>());

	lea	eax, DWORD PTR $T28[ebp]
	push	eax
	call	??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ ; std::make_shared<CPerson>
	add	esp, 4
	mov	DWORD PTR tv75[ebp], eax
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR tv651[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR tv651[ebp]
	push	edx
	lea	ecx, DWORD PTR $T29[ebp]
	call	??$?0VCPerson@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCPerson@@@1@@Z ; std::shared_ptr<CContact>::shared_ptr<CContact><CPerson,void>
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	eax, DWORD PTR $T29[ebp]
	push	eax
	lea	ecx, DWORD PTR _contactList$[ebp]
	call	?push_back@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAEX$$QAV?$shared_ptr@VCContact@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T29[ebp]
	call	??1?$shared_ptr@VCContact@@@std@@QAE@XZ	; std::shared_ptr<CContact>::~shared_ptr<CContact>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T28[ebp]
	call	??1?$shared_ptr@VCPerson@@@std@@QAE@XZ	; std::shared_ptr<CPerson>::~shared_ptr<CPerson>

; 56   : 				updateContactLists(contactList, contactFileName);

	lea	eax, DWORD PTR _contactFileName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _contactList$[ebp]
	push	ecx
	call	?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; updateContactLists
	add	esp, 8

; 57   : 				break;

	jmp	SHORT $LN6@main
$LN28@main:

; 58   : 				// Add a company
; 59   : 			case 'B':
; 60   : 				contactList.push_back(make_shared<CCompany>());

	lea	eax, DWORD PTR $T26[ebp]
	push	eax
	call	??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ ; std::make_shared<CCompany>
	add	esp, 4
	mov	DWORD PTR tv94[ebp], eax
	mov	ecx, DWORD PTR tv94[ebp]
	mov	DWORD PTR tv654[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR tv654[ebp]
	push	edx
	lea	ecx, DWORD PTR $T27[ebp]
	call	??$?0VCCompany@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCCompany@@@1@@Z ; std::shared_ptr<CContact>::shared_ptr<CContact><CCompany,void>
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	eax, DWORD PTR $T27[ebp]
	push	eax
	lea	ecx, DWORD PTR _contactList$[ebp]
	call	?push_back@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAEX$$QAV?$shared_ptr@VCContact@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T27[ebp]
	call	??1?$shared_ptr@VCContact@@@std@@QAE@XZ	; std::shared_ptr<CContact>::~shared_ptr<CContact>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T26[ebp]
	call	??1?$shared_ptr@VCCompany@@@std@@QAE@XZ	; std::shared_ptr<CCompany>::~shared_ptr<CCompany>

; 61   : 				updateContactLists(contactList, contactFileName);

	lea	eax, DWORD PTR _contactFileName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _contactList$[ebp]
	push	ecx
	call	?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; updateContactLists
	add	esp, 8
$LN6@main:

; 62   : 				break;
; 63   : 				// Go back
; 64   : 			case 'C':
; 65   : 				break;
; 66   : 			}
; 67   : 
; 68   : 			break;

	jmp	$LN4@main
$LN30@main:

; 69   : 		}
; 70   : 		// Remove a contact
; 71   : 		case 'B':
; 72   : 		{
; 73   : 			// Check if any contacts even exist
; 74   : 			if (contactList.size() == 0)

	lea	ecx, DWORD PTR _contactList$[ebp]
	call	?size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::size
	test	eax, eax
	jne	SHORT $LN31@main

; 75   : 			{
; 76   : 				cout << "You don't have any contacts to remove" << endl;

	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	OFFSET ??_C@_0CG@MNNPHAFE@You?5don?8t?5have?5any?5contacts?5to?5r@
	mov	eax, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 77   : 				system("pause");

	mov	esi, esp
	push	OFFSET ??_C@_05PDJBBECF@pause?$AA@
	call	DWORD PTR __imp__system
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 78   : 				break;

	jmp	$LN4@main
$LN31@main:

; 79   : 			}
; 80   : 
; 81   : 			cout << endl;

	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 82   : 
; 83   : 			// Display all the contacts so the user can choose from one
; 84   : 			for (vector<shared_ptr<CContact>>::iterator it = contactList.begin(); it != contactList.end(); ++it)

	lea	eax, DWORD PTR _it$42[ebp]
	push	eax
	lea	ecx, DWORD PTR _contactList$[ebp]
	call	?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::begin
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	jmp	SHORT $LN10@main
$LN8@main:
	lea	ecx, DWORD PTR _it$42[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++
$LN10@main:
	lea	eax, DWORD PTR $T24[ebp]
	push	eax
	lea	ecx, DWORD PTR _contactList$[ebp]
	call	?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
	mov	DWORD PTR tv164[ebp], eax
	mov	ecx, DWORD PTR tv164[ebp]
	mov	DWORD PTR tv658[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	edx, DWORD PTR tv658[ebp]
	push	edx
	lea	ecx, DWORD PTR _it$42[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator!=
	mov	BYTE PTR $T25[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T24[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T25[ebp]
	test	eax, eax
	je	SHORT $LN9@main

; 85   : 			{
; 86   : 				(*it)->displayName();

	lea	ecx, DWORD PTR _it$42[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
	mov	ecx, eax
	call	??C?$shared_ptr@VCContact@@@std@@QBEPAVCContact@@XZ ; std::shared_ptr<CContact>::operator->
	mov	DWORD PTR tv191[ebp], eax
	mov	eax, DWORD PTR tv191[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv191[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN8@main
$LN9@main:

; 87   : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _it$42[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ

; 88   : 
; 89   : 			cout << endl;

	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 90   : 
; 91   : 			// Prompt the user for the name of the contact they want to remove
; 92   : 			string contactName = CUserInterface::getUserInput("Enter the name of the person or company you would like to remove from the contact list:\n");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T23[ebp], esp
	push	OFFSET ??_C@_0FJ@GBCKFMI@Enter?5the?5name?5of?5the?5person?5or?5@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv660[ebp], eax
	lea	eax, DWORD PTR _contactName$41[ebp]
	push	eax
	call	?getUserInput@CUserInterface@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z ; CUserInterface::getUserInput
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv661[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH

; 93   : 
; 94   : 			// Set the "found contact" to the end of the vector
; 95   : 			vector<shared_ptr<CContact>>::iterator foundContact = contactList.end();

	lea	eax, DWORD PTR _foundContact$40[ebp]
	push	eax
	lea	ecx, DWORD PTR _contactList$[ebp]
	call	?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH

; 96   : 
; 97   : 			// Loop through the vector and try to find what the user entered
; 98   : 			for (vector<shared_ptr<CContact>>::iterator it = contactList.begin(); it != contactList.end(); ++it)

	lea	eax, DWORD PTR _it$39[ebp]
	push	eax
	lea	ecx, DWORD PTR _contactList$[ebp]
	call	?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::begin
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	jmp	SHORT $LN13@main
$LN11@main:
	lea	ecx, DWORD PTR _it$39[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++
$LN13@main:
	lea	eax, DWORD PTR $T21[ebp]
	push	eax
	lea	ecx, DWORD PTR _contactList$[ebp]
	call	?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
	mov	DWORD PTR tv218[ebp], eax
	mov	ecx, DWORD PTR tv218[ebp]
	mov	DWORD PTR tv666[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	edx, DWORD PTR tv666[ebp]
	push	edx
	lea	ecx, DWORD PTR _it$39[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator!=
	mov	BYTE PTR $T22[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	lea	ecx, DWORD PTR $T21[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T22[ebp]
	test	eax, eax
	je	SHORT $LN12@main

; 99   : 			{
; 100  : 				// If the contact was found, set the "found contact" iterator to the current iterator
; 101  : 				if (*(*it) == contactName)

	lea	ecx, DWORD PTR _it$39[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
	mov	ecx, eax
	call	??D?$shared_ptr@VCContact@@@std@@QBEAAVCContact@@XZ ; std::shared_ptr<CContact>::operator*
	mov	DWORD PTR tv245[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T20[ebp], esp
	lea	eax, DWORD PTR _contactName$41[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv669[ebp], eax
	mov	ecx, DWORD PTR tv245[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv245[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	mov	BYTE PTR tv670[ebp], al
	movzx	ecx, BYTE PTR tv670[ebp]
	test	ecx, ecx
	je	SHORT $LN32@main

; 102  : 				{
; 103  : 					foundContact = it;

	lea	eax, DWORD PTR _it$39[ebp]
	push	eax
	lea	ecx, DWORD PTR _foundContact$40[ebp]
	call	??4?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z

; 104  : 					break;

	jmp	SHORT $LN12@main
$LN32@main:

; 105  : 				}

	jmp	$LN11@main
$LN12@main:

; 106  : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR _it$39[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ

; 107  : 
; 108  : 			// The contact wasn't found because "found contact" is still set to the end of the vector
; 109  : 			if (foundContact == contactList.end())

	lea	eax, DWORD PTR $T18[ebp]
	push	eax
	lea	ecx, DWORD PTR _contactList$[ebp]
	call	?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
	mov	DWORD PTR tv214[ebp], eax
	mov	ecx, DWORD PTR tv214[ebp]
	mov	DWORD PTR tv672[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	edx, DWORD PTR tv672[ebp]
	push	edx
	lea	ecx, DWORD PTR _foundContact$40[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator==
	mov	BYTE PTR $T19[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR $T18[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T19[ebp]
	test	eax, eax
	je	SHORT $LN33@main

; 110  : 			{
; 111  : 				cout << endl << "That contact was not found in your contact list" << endl;

	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	OFFSET ??_C@_0DA@FLPABHKE@That?5contact?5was?5not?5found?5in?5yo@
	mov	edi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 112  : 				system("pause");

	mov	esi, esp
	push	OFFSET ??_C@_05PDJBBECF@pause?$AA@
	call	DWORD PTR __imp__system
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 113  : 				break;

	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	ecx, DWORD PTR _foundContact$40[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _contactName$41[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN4@main
$LN33@main:

; 114  : 			}
; 115  : 
; 116  : 			// Erase the contact if it was found
; 117  : 			contactList.erase(foundContact);

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T17[ebp], esp
	lea	eax, DWORD PTR _foundContact$40[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv676[ebp], eax
	lea	ecx, DWORD PTR $T16[ebp]
	push	ecx
	lea	ecx, DWORD PTR _contactList$[ebp]
	call	?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::erase
	mov	DWORD PTR tv677[ebp], eax
	lea	ecx, DWORD PTR $T16[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ

; 118  : 
; 119  : 			// Update the saved contact list now
; 120  : 			updateContactLists(contactList, contactFileName);

	lea	eax, DWORD PTR _contactFileName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _contactList$[ebp]
	push	ecx
	call	?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; updateContactLists
	add	esp, 8

; 121  : 
; 122  : 			cout << endl << "The contact was removed from your contact list" << endl;

	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	OFFSET ??_C@_0CP@GFNLJBBP@The?5contact?5was?5removed?5from?5you@
	mov	edi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 123  : 
; 124  : 			system("pause");

	mov	esi, esp
	push	OFFSET ??_C@_05PDJBBECF@pause?$AA@
	call	DWORD PTR __imp__system
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 125  : 			break;

	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	ecx, DWORD PTR _foundContact$40[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _contactName$41[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN4@main

; 126  : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	ecx, DWORD PTR _foundContact$40[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _contactName$41[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN34@main:

; 127  : 		// Edit a contact
; 128  : 		case 'C':
; 129  : 		{
; 130  : 			// Check if any contacts even exist
; 131  : 			if (contactList.size() == 0)

	lea	ecx, DWORD PTR _contactList$[ebp]
	call	?size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::size
	test	eax, eax
	jne	SHORT $LN35@main

; 132  : 			{
; 133  : 				cout << "You don't have any contacts to edit" << endl;

	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	OFFSET ??_C@_0CE@GGNPEDJA@You?5don?8t?5have?5any?5contacts?5to?5e@
	mov	eax, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 134  : 				system("pause");

	mov	esi, esp
	push	OFFSET ??_C@_05PDJBBECF@pause?$AA@
	call	DWORD PTR __imp__system
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 135  : 				break;

	jmp	$LN4@main
$LN35@main:

; 136  : 			}
; 137  : 
; 138  : 			cout << endl;

	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 139  : 
; 140  : 			// Display all the contacts so the user can pick from them to edit
; 141  : 			for (vector<shared_ptr<CContact>>::iterator it = contactList.begin(); it != contactList.end(); ++it)

	lea	eax, DWORD PTR _it$38[ebp]
	push	eax
	lea	ecx, DWORD PTR _contactList$[ebp]
	call	?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::begin
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	jmp	SHORT $LN16@main
$LN14@main:
	lea	ecx, DWORD PTR _it$38[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++
$LN16@main:
	lea	eax, DWORD PTR $T14[ebp]
	push	eax
	lea	ecx, DWORD PTR _contactList$[ebp]
	call	?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
	mov	DWORD PTR tv339[ebp], eax
	mov	ecx, DWORD PTR tv339[ebp]
	mov	DWORD PTR tv683[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	edx, DWORD PTR tv683[ebp]
	push	edx
	lea	ecx, DWORD PTR _it$38[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator!=
	mov	BYTE PTR $T15[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	lea	ecx, DWORD PTR $T14[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T15[ebp]
	test	eax, eax
	je	SHORT $LN15@main

; 142  : 			{
; 143  : 				(*it)->displayName();

	lea	ecx, DWORD PTR _it$38[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
	mov	ecx, eax
	call	??C?$shared_ptr@VCContact@@@std@@QBEPAVCContact@@XZ ; std::shared_ptr<CContact>::operator->
	mov	DWORD PTR tv366[ebp], eax
	mov	eax, DWORD PTR tv366[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv366[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN14@main
$LN15@main:

; 144  : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _it$38[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ

; 145  : 
; 146  : 			cout << endl;

	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 147  : 
; 148  : 			// Prompt the user for the name of the contact to edit
; 149  : 			string contactName = CUserInterface::getUserInput("Enter the name of the person or company you would like to edit:\n");

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T13[ebp], esp
	push	OFFSET ??_C@_0EB@GEBCPOHK@Enter?5the?5name?5of?5the?5person?5or?5@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv685[ebp], eax
	lea	eax, DWORD PTR _contactName$37[ebp]
	push	eax
	call	?getUserInput@CUserInterface@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z ; CUserInterface::getUserInput
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv686[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H

; 150  : 
; 151  : 			// Set the "found contact" to the end of the vector
; 152  : 			vector<shared_ptr<CContact>>::iterator foundContact = contactList.end();

	lea	eax, DWORD PTR _foundContact$36[ebp]
	push	eax
	lea	ecx, DWORD PTR _contactList$[ebp]
	call	?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H

; 153  : 
; 154  : 			// Loop through the vector and try to find what the user entered
; 155  : 			for (vector<shared_ptr<CContact>>::iterator it = contactList.begin(); it != contactList.end(); ++it)

	lea	eax, DWORD PTR _it$35[ebp]
	push	eax
	lea	ecx, DWORD PTR _contactList$[ebp]
	call	?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::begin
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	jmp	SHORT $LN19@main
$LN17@main:
	lea	ecx, DWORD PTR _it$35[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++
$LN19@main:
	lea	eax, DWORD PTR $T11[ebp]
	push	eax
	lea	ecx, DWORD PTR _contactList$[ebp]
	call	?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
	mov	DWORD PTR tv393[ebp], eax
	mov	ecx, DWORD PTR tv393[ebp]
	mov	DWORD PTR tv691[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	mov	edx, DWORD PTR tv691[ebp]
	push	edx
	lea	ecx, DWORD PTR _it$35[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator!=
	mov	BYTE PTR $T12[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	lea	ecx, DWORD PTR $T11[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T12[ebp]
	test	eax, eax
	je	SHORT $LN18@main

; 156  : 			{
; 157  : 				// If the contact was found, set the "found contact" iterator to the current iterator
; 158  : 				if (*(*it) == contactName)

	lea	ecx, DWORD PTR _it$35[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
	mov	ecx, eax
	call	??D?$shared_ptr@VCContact@@@std@@QBEAAVCContact@@XZ ; std::shared_ptr<CContact>::operator*
	mov	DWORD PTR tv452[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T10[ebp], esp
	lea	eax, DWORD PTR _contactName$37[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv694[ebp], eax
	mov	ecx, DWORD PTR tv452[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv452[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	mov	BYTE PTR tv695[ebp], al
	movzx	ecx, BYTE PTR tv695[ebp]
	test	ecx, ecx
	je	SHORT $LN36@main

; 159  : 				{
; 160  : 					foundContact = it;

	lea	eax, DWORD PTR _it$35[ebp]
	push	eax
	lea	ecx, DWORD PTR _foundContact$36[ebp]
	call	??4?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z

; 161  : 					break;

	jmp	SHORT $LN18@main
$LN36@main:

; 162  : 				}

	jmp	$LN17@main
$LN18@main:

; 163  : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	lea	ecx, DWORD PTR _it$35[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ

; 164  : 
; 165  : 			// The contact wasn't found because "found contact" is still set to the end of the vector
; 166  : 			if (foundContact == contactList.end())

	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	lea	ecx, DWORD PTR _contactList$[ebp]
	call	?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
	mov	DWORD PTR tv389[ebp], eax
	mov	ecx, DWORD PTR tv389[ebp]
	mov	DWORD PTR tv697[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	mov	edx, DWORD PTR tv697[ebp]
	push	edx
	lea	ecx, DWORD PTR _foundContact$36[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator==
	mov	BYTE PTR $T9[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T9[ebp]
	test	eax, eax
	je	SHORT $LN37@main

; 167  : 			{
; 168  : 				cout << endl << "That contact was not found in your contact list" << endl;

	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	OFFSET ??_C@_0DA@FLPABHKE@That?5contact?5was?5not?5found?5in?5yo@
	mov	edi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 169  : 				system("pause");

	mov	esi, esp
	push	OFFSET ??_C@_05PDJBBECF@pause?$AA@
	call	DWORD PTR __imp__system
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 170  : 				break;

	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	lea	ecx, DWORD PTR _foundContact$36[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _contactName$37[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN4@main
$LN37@main:

; 171  : 			}
; 172  : 
; 173  : 			// Open the menu to edit contact information
; 174  : 			(*foundContact)->getContactInformation();

	lea	ecx, DWORD PTR _foundContact$36[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
	mov	ecx, eax
	call	??C?$shared_ptr@VCContact@@@std@@QBEPAVCContact@@XZ ; std::shared_ptr<CContact>::operator->
	mov	DWORD PTR tv506[ebp], eax
	mov	eax, DWORD PTR tv506[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv506[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 175  : 
; 176  : 			// Sort the vector again in case the name changed. Also save new information to the file
; 177  : 			updateContactLists(contactList, contactFileName);

	lea	eax, DWORD PTR _contactFileName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _contactList$[ebp]
	push	ecx
	call	?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; updateContactLists
	add	esp, 8

; 178  : 			
; 179  : 			break;

	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	lea	ecx, DWORD PTR _foundContact$36[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _contactName$37[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN4@main

; 180  : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	lea	ecx, DWORD PTR _foundContact$36[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _contactName$37[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN38@main:

; 181  : 		// Search for a contact
; 182  : 		case 'D':
; 183  : 		{
; 184  : 			system("cls");

	mov	esi, esp
	push	OFFSET ??_C@_03LCPHGAHP@cls?$AA@
	call	DWORD PTR __imp__system
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 185  : 			cout << "Enter the first name, last name, or company name of a contact:" << endl;

	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	OFFSET ??_C@_0DP@KOHCCCHA@Enter?5the?5first?5name?0?5last?5name?0@
	mov	eax, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 186  : 
; 187  : 			// Get the name of the contact to find
; 188  : 			string contactName;

	lea	ecx, DWORD PTR _contactName$34[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H

; 189  : 			getline(cin, contactName);

	lea	eax, DWORD PTR _contactName$34[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A
	push	ecx
	call	??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::getline<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8

; 190  : 
; 191  : 			cout << endl << "Found contacts:" << endl;

	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	OFFSET ??_C@_0BA@KBDJCHMC@Found?5contacts?3?$AA@
	mov	edi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 192  : 
; 193  : 			bool found = false;

	mov	BYTE PTR _found$33[ebp], 0

; 194  : 
; 195  : 			// Loop through the vector and check to see if any of the contact names contain something the user entered
; 196  : 			// This could be first name, last name, first name + last name, or company name
; 197  : 			for (vector<shared_ptr<CContact>>::const_iterator it = contactList.begin(); it != contactList.end(); ++it)

	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	lea	ecx, DWORD PTR _contactList$[ebp]
	call	?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::begin
	mov	DWORD PTR tv518[ebp], eax
	mov	ecx, DWORD PTR tv518[ebp]
	mov	DWORD PTR tv704[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	mov	edx, DWORD PTR tv704[ebp]
	push	edx
	lea	ecx, DWORD PTR _it$32[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
	jmp	SHORT $LN22@main
$LN20@main:
	lea	ecx, DWORD PTR _it$32[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++
$LN22@main:
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	lea	ecx, DWORD PTR _contactList$[ebp]
	call	?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
	mov	DWORD PTR tv531[ebp], eax
	mov	ecx, DWORD PTR tv531[ebp]
	mov	DWORD PTR tv707[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	mov	edx, DWORD PTR tv707[ebp]
	push	edx
	lea	ecx, DWORD PTR _it$32[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator!=
	mov	BYTE PTR $T6[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T6[ebp]
	test	eax, eax
	je	$LN21@main

; 198  : 			{
; 199  : 				if ((*it)->contains(contactName))

	lea	ecx, DWORD PTR _it$32[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEABV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
	mov	ecx, eax
	call	??C?$shared_ptr@VCContact@@@std@@QBEPAVCContact@@XZ ; std::shared_ptr<CContact>::operator->
	mov	DWORD PTR tv563[ebp], eax
	mov	esi, esp
	lea	eax, DWORD PTR _contactName$34[ebp]
	push	eax
	mov	ecx, DWORD PTR tv563[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv563[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN39@main

; 200  : 				{
; 201  : 					(*it)->displayName();

	lea	ecx, DWORD PTR _it$32[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEABV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
	mov	ecx, eax
	call	??C?$shared_ptr@VCContact@@@std@@QBEPAVCContact@@XZ ; std::shared_ptr<CContact>::operator->
	mov	DWORD PTR tv575[ebp], eax
	mov	eax, DWORD PTR tv575[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv575[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 202  : 					found = true;

	mov	BYTE PTR _found$33[ebp], 1
$LN39@main:

; 203  : 				}

	jmp	$LN20@main
$LN21@main:

; 204  : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	lea	ecx, DWORD PTR _it$32[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ

; 205  : 
; 206  : 			// Nothing was found so display "none"
; 207  : 			if (!found)

	movzx	eax, BYTE PTR _found$33[ebp]
	test	eax, eax
	jne	SHORT $LN40@main

; 208  : 			{
; 209  : 				cout << "None" << endl << endl;

	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	edi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	OFFSET ??_C@_04OHJIHAFH@None?$AA@
	mov	eax, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN40@main:

; 210  : 			}
; 211  : 			
; 212  : 			cout << endl;

	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 213  : 
; 214  : 			system("pause");

	mov	esi, esp
	push	OFFSET ??_C@_05PDJBBECF@pause?$AA@
	call	DWORD PTR __imp__system
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 215  : 
; 216  : 			break;

	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _contactName$34[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN4@main

; 217  : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _contactName$34[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN41@main:

; 218  : 		// Display contacts
; 219  : 		case 'E':
; 220  : 		{
; 221  : 			system("cls");

	mov	esi, esp
	push	OFFSET ??_C@_03LCPHGAHP@cls?$AA@
	call	DWORD PTR __imp__system
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 222  : 
; 223  : 			// Check if any contacts even exist
; 224  : 			if (contactList.size() == 0)

	lea	ecx, DWORD PTR _contactList$[ebp]
	call	?size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::size
	test	eax, eax
	jne	SHORT $LN42@main

; 225  : 			{
; 226  : 				cout << "You don't have any contacts to display" << endl;

	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	OFFSET ??_C@_0CH@MIDKGGF@You?5don?8t?5have?5any?5contacts?5to?5d@
	mov	eax, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 227  : 				system("pause");

	mov	esi, esp
	push	OFFSET ??_C@_05PDJBBECF@pause?$AA@
	call	DWORD PTR __imp__system
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 228  : 				break;

	jmp	$LN4@main
$LN42@main:

; 229  : 			}
; 230  : 
; 231  : 			cout << endl;

	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 232  : 
; 233  : 			// Loop through the contacts and display all of them
; 234  : 			for (vector<shared_ptr<CContact>>::iterator it = contactList.begin(); it != contactList.end(); ++it)

	lea	eax, DWORD PTR _it$31[ebp]
	push	eax
	lea	ecx, DWORD PTR _contactList$[ebp]
	call	?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::begin
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	jmp	SHORT $LN25@main
$LN23@main:
	lea	ecx, DWORD PTR _it$31[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++
$LN25@main:
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR _contactList$[ebp]
	call	?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
	mov	DWORD PTR tv604[ebp], eax
	mov	ecx, DWORD PTR tv604[ebp]
	mov	DWORD PTR tv711[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH
	mov	edx, DWORD PTR tv711[ebp]
	push	edx
	lea	ecx, DWORD PTR _it$31[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator!=
	mov	BYTE PTR $T4[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T4[ebp]
	test	eax, eax
	je	SHORT $LN24@main

; 235  : 			{
; 236  : 				(*it)->display();

	lea	ecx, DWORD PTR _it$31[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
	mov	ecx, eax
	call	??C?$shared_ptr@VCContact@@@std@@QBEPAVCContact@@XZ ; std::shared_ptr<CContact>::operator->
	mov	DWORD PTR tv631[ebp], eax
	mov	eax, DWORD PTR tv631[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv631[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN23@main
$LN24@main:

; 237  : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _it$31[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ

; 238  : 
; 239  : 			system("pause");

	mov	esi, esp
	push	OFFSET ??_C@_05PDJBBECF@pause?$AA@
	call	DWORD PTR __imp__system
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 240  : 
; 241  : 			break;

	jmp	SHORT $LN4@main
$LN43@main:

; 242  : 		}
; 243  : 		case 'F':
; 244  : 			exit = true;

	mov	BYTE PTR _exit$[ebp], 1
$LN4@main:

; 245  : 			break;
; 246  : 		}
; 247  : 	}

	jmp	$LN2@main
$LN3@main:

; 248  : 
; 249  : 	cout << endl << "Goodbye!" << endl;

	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	OFFSET ??_C@_08HDBDJBNL@Goodbye?$CB?$AA@
	mov	edi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 250  : 	system("pause");

	mov	esi, esp
	push	OFFSET ??_C@_05PDJBBECF@pause?$AA@
	call	DWORD PTR __imp__system
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 251  : 	return 0;

	mov	DWORD PTR $T2[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _contactListFromFile$[ebp]
	call	??1thread@std@@QAE@XZ			; std::thread::~thread
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _contactFileName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _contactList$[ebp]
	call	??1?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::~vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _UI$[ebp]
	call	??1CUserInterface@@QAE@XZ		; CUserInterface::~CUserInterface
	mov	eax, DWORD PTR $T2[ebp]

; 252  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN96@main
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1288				; 00000508H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN96@main:
	DD	15					; 0000000fH
	DD	$LN95@main
$LN95@main:
	DD	-52					; ffffffccH
	DD	32					; 00000020H
	DD	$LN79@main
	DD	-76					; ffffffb4H
	DD	16					; 00000010H
	DD	$LN80@main
	DD	-112					; ffffff90H
	DD	28					; 0000001cH
	DD	$LN81@main
	DD	-128					; ffffff80H
	DD	8
	DD	$LN82@main
	DD	-184					; ffffff48H
	DD	12					; 0000000cH
	DD	$LN83@main
	DD	-220					; ffffff24H
	DD	28					; 0000001cH
	DD	$LN84@main
	DD	-240					; ffffff10H
	DD	12					; 0000000cH
	DD	$LN85@main
	DD	-260					; fffffefcH
	DD	12					; 0000000cH
	DD	$LN86@main
	DD	-280					; fffffee8H
	DD	12					; 0000000cH
	DD	$LN87@main
	DD	-316					; fffffec4H
	DD	28					; 0000001cH
	DD	$LN88@main
	DD	-336					; fffffeb0H
	DD	12					; 0000000cH
	DD	$LN89@main
	DD	-356					; fffffe9cH
	DD	12					; 0000000cH
	DD	$LN90@main
	DD	-392					; fffffe78H
	DD	28					; 0000001cH
	DD	$LN91@main
	DD	-424					; fffffe58H
	DD	12					; 0000000cH
	DD	$LN92@main
	DD	-444					; fffffe44H
	DD	12					; 0000000cH
	DD	$LN93@main
$LN93@main:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
$LN92@main:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
$LN91@main:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN90@main:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
$LN89@main:
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN88@main:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN87@main:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
$LN86@main:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
$LN85@main:
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN84@main:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN83@main:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
$LN82@main:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	70					; 00000046H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN81@main:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN80@main:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN79@main:
	DB	85					; 00000055H
	DB	73					; 00000049H
	DB	0
	npad	1
$LN97@main:
	DD	$LN26@main
	DD	$LN30@main
	DD	$LN34@main
	DD	$LN38@main
	DD	$LN41@main
	DD	$LN43@main
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$_main$0:
	lea	ecx, DWORD PTR _UI$[ebp]
	jmp	??1CUserInterface@@QAE@XZ		; CUserInterface::~CUserInterface
__unwindfunclet$_main$1:
	lea	ecx, DWORD PTR _contactList$[ebp]
	jmp	??1?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::~vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >
__unwindfunclet$_main$2:
	lea	ecx, DWORD PTR _contactFileName$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$_main$3:
	lea	ecx, DWORD PTR _contactListFromFile$[ebp]
	jmp	??1thread@std@@QAE@XZ			; std::thread::~thread
__unwindfunclet$_main$4:
	lea	ecx, DWORD PTR $T28[ebp]
	jmp	??1?$shared_ptr@VCPerson@@@std@@QAE@XZ	; std::shared_ptr<CPerson>::~shared_ptr<CPerson>
__unwindfunclet$_main$5:
	lea	ecx, DWORD PTR $T29[ebp]
	jmp	??1?$shared_ptr@VCContact@@@std@@QAE@XZ	; std::shared_ptr<CContact>::~shared_ptr<CContact>
__unwindfunclet$_main$6:
	lea	ecx, DWORD PTR $T26[ebp]
	jmp	??1?$shared_ptr@VCCompany@@@std@@QAE@XZ	; std::shared_ptr<CCompany>::~shared_ptr<CCompany>
__unwindfunclet$_main$7:
	lea	ecx, DWORD PTR $T27[ebp]
	jmp	??1?$shared_ptr@VCContact@@@std@@QAE@XZ	; std::shared_ptr<CContact>::~shared_ptr<CContact>
__unwindfunclet$_main$8:
	lea	ecx, DWORD PTR _it$42[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$9:
	lea	ecx, DWORD PTR $T24[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$11:
	lea	ecx, DWORD PTR _contactName$41[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$_main$12:
	lea	ecx, DWORD PTR _foundContact$40[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$13:
	lea	ecx, DWORD PTR _it$39[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$14:
	lea	ecx, DWORD PTR $T21[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$16:
	lea	ecx, DWORD PTR $T18[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$19:
	lea	ecx, DWORD PTR _it$38[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$20:
	lea	ecx, DWORD PTR $T14[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$22:
	lea	ecx, DWORD PTR _contactName$37[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$_main$23:
	lea	ecx, DWORD PTR _foundContact$36[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$24:
	lea	ecx, DWORD PTR _it$35[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$25:
	lea	ecx, DWORD PTR $T11[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$27:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$28:
	lea	ecx, DWORD PTR _contactName$34[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$_main$29:
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$30:
	lea	ecx, DWORD PTR _it$32[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$31:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$32:
	lea	ecx, DWORD PTR _it$31[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$33:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$_main:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1292]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$_main
	jmp	___CxxFrameHandler3
text$x	ENDS
_main	ENDP
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$?0VCPerson@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCPerson@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??$?0VCPerson@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCPerson@@@1@@Z PROC ; std::shared_ptr<CContact>::shared_ptr<CContact><CPerson,void>, COMDAT
; _this$ = ecx

; 530  : 		{	// construct shared_ptr object that takes resource from _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0VCPerson@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCPerson@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 529  : 		: _Mybase(_STD move(_Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$move@AAV?$shared_ptr@VCPerson@@@std@@@std@@YA$$QAV?$shared_ptr@VCPerson@@@0@AAV10@@Z ; std::move<std::shared_ptr<CPerson> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0VCPerson@@@?$_Ptr_base@VCContact@@@std@@QAE@$$QAV?$_Ptr_base@VCPerson@@@1@@Z ; std::_Ptr_base<CContact>::_Ptr_base<CContact><CPerson>

; 531  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$?0VCPerson@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCPerson@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0VCPerson@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCPerson@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0VCPerson@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCPerson@@@1@@Z ENDP ; std::shared_ptr<CContact>::shared_ptr<CContact><CPerson,void>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??1?$shared_ptr@VCPerson@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$shared_ptr@VCPerson@@@std@@QAE@XZ PROC		; std::shared_ptr<CPerson>::~shared_ptr<CPerson>, COMDAT
; _this$ = ecx

; 566  : 		{	// release resource

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$shared_ptr@VCPerson@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 567  : 		this->_Decref();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Decref@?$_Ptr_base@VCPerson@@@std@@QAEXXZ ; std::_Ptr_base<CPerson>::_Decref

; 568  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$shared_ptr@VCPerson@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$shared_ptr@VCPerson@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$shared_ptr@VCPerson@@@std@@QAE@XZ ENDP		; std::shared_ptr<CPerson>::~shared_ptr<CPerson>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$shared_ptr@VCPerson@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$shared_ptr@VCPerson@@@std@@QAE@$$QAV01@@Z PROC	; std::shared_ptr<CPerson>::shared_ptr<CPerson>, COMDAT
; _this$ = ecx

; 522  : 		{	// construct shared_ptr object that takes resource from _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$shared_ptr@VCPerson@@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 521  : 		: _Mybase(_STD move(_Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$move@AAV?$shared_ptr@VCPerson@@@std@@@std@@YA$$QAV?$shared_ptr@VCPerson@@@0@AAV10@@Z ; std::move<std::shared_ptr<CPerson> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Ptr_base@VCPerson@@@std@@QAE@$$QAV01@@Z ; std::_Ptr_base<CPerson>::_Ptr_base<CPerson>

; 523  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$shared_ptr@VCPerson@@@std@@QAE@$$QAV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$shared_ptr@VCPerson@@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$shared_ptr@VCPerson@@@std@@QAE@$$QAV01@@Z ENDP	; std::shared_ptr<CPerson>::shared_ptr<CPerson>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$shared_ptr@VCPerson@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$shared_ptr@VCPerson@@@std@@QAE@XZ PROC		; std::shared_ptr<CPerson>::shared_ptr<CPerson>, COMDAT
; _this$ = ecx

; 444  : 	constexpr shared_ptr() _NOEXCEPT

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 445  : 		{	// construct empty shared_ptr

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Ptr_base@VCPerson@@@std@@QAE@XZ	; std::_Ptr_base<CPerson>::_Ptr_base<CPerson>

; 446  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$shared_ptr@VCPerson@@@std@@QAE@XZ ENDP		; std::shared_ptr<CPerson>::shared_ptr<CPerson>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Reset0@?$_Ptr_base@VCPerson@@@std@@QAEXPAVCPerson@@PAV_Ref_count_base@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other_ptr$ = 8					; size = 4
__Other_rep$ = 12					; size = 4
?_Reset0@?$_Ptr_base@VCPerson@@@std@@QAEXPAVCPerson@@PAV_Ref_count_base@2@@Z PROC ; std::_Ptr_base<CPerson>::_Reset0, COMDAT
; _this$ = ecx

; 393  : 		{	// release resource and take new resource

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 394  : 		if (_Rep != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Reset0

; 395  : 			_Rep->_Decref();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?_Decref@_Ref_count_base@std@@QAEXXZ	; std::_Ref_count_base::_Decref
$LN2@Reset0:

; 396  : 		_Rep = _Other_rep;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Other_rep$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 397  : 		_Ptr = _Other_ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Other_ptr$[ebp]
	mov	DWORD PTR [eax], ecx

; 398  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Reset0@?$_Ptr_base@VCPerson@@@std@@QAEXPAVCPerson@@PAV_Ref_count_base@2@@Z ENDP ; std::_Ptr_base<CPerson>::_Reset0
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Decref@?$_Ptr_base@VCPerson@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Decref@?$_Ptr_base@VCPerson@@@std@@QAEXXZ PROC	; std::_Ptr_base<CPerson>::_Decref, COMDAT
; _this$ = ecx

; 336  : 		{	// decrement reference count

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 337  : 		if (_Rep != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Decref

; 338  : 			_Rep->_Decref();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?_Decref@_Ref_count_base@std@@QAEXXZ	; std::_Ref_count_base::_Decref
$LN1@Decref:

; 339  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Decref@?$_Ptr_base@VCPerson@@@std@@QAEXXZ ENDP	; std::_Ptr_base<CPerson>::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$_Ptr_base@VCPerson@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??0?$_Ptr_base@VCPerson@@@std@@QAE@$$QAV01@@Z PROC	; std::_Ptr_base<CPerson>::_Ptr_base<CPerson>, COMDAT
; _this$ = ecx

; 279  : 		{	// construct _Ptr_base object that takes resource from _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 278  : 		: _Ptr(_Right._Ptr), _Rep(_Right._Rep)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 280  : 		_Right._Ptr = 0;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax], 0

; 281  : 		_Right._Rep = 0;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax+4], 0

; 282  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Ptr_base@VCPerson@@@std@@QAE@$$QAV01@@Z ENDP	; std::_Ptr_base<CPerson>::_Ptr_base<CPerson>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$_Ptr_base@VCPerson@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Ptr_base@VCPerson@@@std@@QAE@XZ PROC		; std::_Ptr_base<CPerson>::_Ptr_base<CPerson>, COMDAT
; _this$ = ecx

; 274  : 		{	// construct

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 273  : 		: _Ptr(0), _Rep(0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 275  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Ptr_base@VCPerson@@@std@@QAE@XZ ENDP		; std::_Ptr_base<CPerson>::_Ptr_base<CPerson>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z
_TEXT	SEGMENT
tv78 = -272						; size = 4
$T2 = -264						; size = 4
$T3 = -252						; size = 4
$T4 = -240						; size = 4
__Ret$ = -36						; size = 8
__Rx$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_<_Args_0>$ = 12					; size = 4
??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z PROC ; std::make_shared<CPerson,bool>, COMDAT

; 969  : 	{	// make a shared_ptr

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T2[ebp], 0

; 970  : 	_Ref_count_obj<_Ty> *_Rx =
; 971  : 		new _Ref_count_obj<_Ty>(_STD forward<_Types>(_Args)...);

	push	300					; 0000012cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@make_share
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z ; std::_Ref_count_obj<CPerson>::_Ref_count_obj<CPerson><bool>
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN4@make_share
$LN3@make_share:
	mov	DWORD PTR tv78[ebp], 0
$LN4@make_share:
	mov	ecx, DWORD PTR tv78[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR __Rx$[ebp], edx

; 972  : 
; 973  : 	shared_ptr<_Ty> _Ret;

	lea	ecx, DWORD PTR __Ret$[ebp]
	call	??0?$shared_ptr@VCPerson@@@std@@QAE@XZ	; std::shared_ptr<CPerson>::shared_ptr<CPerson>
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 974  : 	_Ret._Resetp0(_Rx->_Getptr(), _Rx);

	mov	eax, DWORD PTR __Rx$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Rx$[ebp]
	call	?_Getptr@?$_Ref_count_obj@VCPerson@@@std@@QBEPAVCPerson@@XZ ; std::_Ref_count_obj<CPerson>::_Getptr
	push	eax
	lea	ecx, DWORD PTR __Ret$[ebp]
	call	??$_Resetp0@VCPerson@@@?$shared_ptr@VCPerson@@@std@@QAEXPAVCPerson@@PAV_Ref_count_base@1@@Z ; std::shared_ptr<CPerson>::_Resetp0<CPerson>

; 975  : 	return (_Ret);

	lea	eax, DWORD PTR __Ret$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$shared_ptr@VCPerson@@@std@@QAE@$$QAV01@@Z ; std::shared_ptr<CPerson>::shared_ptr<CPerson>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Ret$[ebp]
	call	??1?$shared_ptr@VCPerson@@@std@@QAE@XZ	; std::shared_ptr<CPerson>::~shared_ptr<CPerson>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 976  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@make_share
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN12@make_share:
	DD	1
	DD	$LN11@make_share
$LN11@make_share:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN9@make_share
$LN9@make_share:
	DB	95					; 0000005fH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z$0:
	push	300					; 0000012cH
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z$1:
	lea	ecx, DWORD PTR __Ret$[ebp]
	jmp	??1?$shared_ptr@VCPerson@@@std@@QAE@XZ	; std::shared_ptr<CPerson>::~shared_ptr<CPerson>
__ehhandler$??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-276]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z ENDP ; std::make_shared<CPerson,bool>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_iarchive.hpp
;	COMDAT ??$?5VCContact@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVCContact@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?5VCContact@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVCContact@@@Z PROC ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><CContact>, COMDAT
; _this$ = ecx

; 67   :     Archive & operator>>(T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 68   :         this->This()->load_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	mov	ecx, eax
	call	??$load_override@VCContact@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVCContact@@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<CContact>

; 69   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This

; 70   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?5VCContact@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVCContact@@@Z ENDP ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$?0VCCompany@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCCompany@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??$?0VCCompany@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCCompany@@@1@@Z PROC ; std::shared_ptr<CContact>::shared_ptr<CContact><CCompany,void>, COMDAT
; _this$ = ecx

; 530  : 		{	// construct shared_ptr object that takes resource from _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0VCCompany@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCCompany@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 529  : 		: _Mybase(_STD move(_Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$move@AAV?$shared_ptr@VCCompany@@@std@@@std@@YA$$QAV?$shared_ptr@VCCompany@@@0@AAV10@@Z ; std::move<std::shared_ptr<CCompany> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0VCCompany@@@?$_Ptr_base@VCContact@@@std@@QAE@$$QAV?$_Ptr_base@VCCompany@@@1@@Z ; std::_Ptr_base<CContact>::_Ptr_base<CContact><CCompany>

; 531  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$?0VCCompany@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCCompany@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0VCCompany@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCCompany@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0VCCompany@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCCompany@@@1@@Z ENDP ; std::shared_ptr<CContact>::shared_ptr<CContact><CCompany,void>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??1?$shared_ptr@VCCompany@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$shared_ptr@VCCompany@@@std@@QAE@XZ PROC		; std::shared_ptr<CCompany>::~shared_ptr<CCompany>, COMDAT
; _this$ = ecx

; 566  : 		{	// release resource

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$shared_ptr@VCCompany@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 567  : 		this->_Decref();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Decref@?$_Ptr_base@VCCompany@@@std@@QAEXXZ ; std::_Ptr_base<CCompany>::_Decref

; 568  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$shared_ptr@VCCompany@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$shared_ptr@VCCompany@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$shared_ptr@VCCompany@@@std@@QAE@XZ ENDP		; std::shared_ptr<CCompany>::~shared_ptr<CCompany>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$shared_ptr@VCCompany@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$shared_ptr@VCCompany@@@std@@QAE@$$QAV01@@Z PROC	; std::shared_ptr<CCompany>::shared_ptr<CCompany>, COMDAT
; _this$ = ecx

; 522  : 		{	// construct shared_ptr object that takes resource from _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$shared_ptr@VCCompany@@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 521  : 		: _Mybase(_STD move(_Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$move@AAV?$shared_ptr@VCCompany@@@std@@@std@@YA$$QAV?$shared_ptr@VCCompany@@@0@AAV10@@Z ; std::move<std::shared_ptr<CCompany> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Ptr_base@VCCompany@@@std@@QAE@$$QAV01@@Z ; std::_Ptr_base<CCompany>::_Ptr_base<CCompany>

; 523  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$shared_ptr@VCCompany@@@std@@QAE@$$QAV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$shared_ptr@VCCompany@@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$shared_ptr@VCCompany@@@std@@QAE@$$QAV01@@Z ENDP	; std::shared_ptr<CCompany>::shared_ptr<CCompany>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$shared_ptr@VCCompany@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$shared_ptr@VCCompany@@@std@@QAE@XZ PROC		; std::shared_ptr<CCompany>::shared_ptr<CCompany>, COMDAT
; _this$ = ecx

; 444  : 	constexpr shared_ptr() _NOEXCEPT

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 445  : 		{	// construct empty shared_ptr

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Ptr_base@VCCompany@@@std@@QAE@XZ	; std::_Ptr_base<CCompany>::_Ptr_base<CCompany>

; 446  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$shared_ptr@VCCompany@@@std@@QAE@XZ ENDP		; std::shared_ptr<CCompany>::shared_ptr<CCompany>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Reset0@?$_Ptr_base@VCCompany@@@std@@QAEXPAVCCompany@@PAV_Ref_count_base@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other_ptr$ = 8					; size = 4
__Other_rep$ = 12					; size = 4
?_Reset0@?$_Ptr_base@VCCompany@@@std@@QAEXPAVCCompany@@PAV_Ref_count_base@2@@Z PROC ; std::_Ptr_base<CCompany>::_Reset0, COMDAT
; _this$ = ecx

; 393  : 		{	// release resource and take new resource

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 394  : 		if (_Rep != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Reset0

; 395  : 			_Rep->_Decref();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?_Decref@_Ref_count_base@std@@QAEXXZ	; std::_Ref_count_base::_Decref
$LN2@Reset0:

; 396  : 		_Rep = _Other_rep;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Other_rep$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 397  : 		_Ptr = _Other_ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Other_ptr$[ebp]
	mov	DWORD PTR [eax], ecx

; 398  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Reset0@?$_Ptr_base@VCCompany@@@std@@QAEXPAVCCompany@@PAV_Ref_count_base@2@@Z ENDP ; std::_Ptr_base<CCompany>::_Reset0
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Decref@?$_Ptr_base@VCCompany@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Decref@?$_Ptr_base@VCCompany@@@std@@QAEXXZ PROC	; std::_Ptr_base<CCompany>::_Decref, COMDAT
; _this$ = ecx

; 336  : 		{	// decrement reference count

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 337  : 		if (_Rep != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Decref

; 338  : 			_Rep->_Decref();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?_Decref@_Ref_count_base@std@@QAEXXZ	; std::_Ref_count_base::_Decref
$LN1@Decref:

; 339  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Decref@?$_Ptr_base@VCCompany@@@std@@QAEXXZ ENDP	; std::_Ptr_base<CCompany>::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$_Ptr_base@VCCompany@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??0?$_Ptr_base@VCCompany@@@std@@QAE@$$QAV01@@Z PROC	; std::_Ptr_base<CCompany>::_Ptr_base<CCompany>, COMDAT
; _this$ = ecx

; 279  : 		{	// construct _Ptr_base object that takes resource from _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 278  : 		: _Ptr(_Right._Ptr), _Rep(_Right._Rep)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 280  : 		_Right._Ptr = 0;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax], 0

; 281  : 		_Right._Rep = 0;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax+4], 0

; 282  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Ptr_base@VCCompany@@@std@@QAE@$$QAV01@@Z ENDP	; std::_Ptr_base<CCompany>::_Ptr_base<CCompany>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$_Ptr_base@VCCompany@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Ptr_base@VCCompany@@@std@@QAE@XZ PROC		; std::_Ptr_base<CCompany>::_Ptr_base<CCompany>, COMDAT
; _this$ = ecx

; 274  : 		{	// construct

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 273  : 		: _Ptr(0), _Rep(0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 275  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Ptr_base@VCCompany@@@std@@QAE@XZ ENDP		; std::_Ptr_base<CCompany>::_Ptr_base<CCompany>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z
_TEXT	SEGMENT
tv78 = -272						; size = 4
$T2 = -264						; size = 4
$T3 = -252						; size = 4
$T4 = -240						; size = 4
__Ret$ = -36						; size = 8
__Rx$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_<_Args_0>$ = 12					; size = 4
??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z PROC ; std::make_shared<CCompany,bool>, COMDAT

; 969  : 	{	// make a shared_ptr

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T2[ebp], 0

; 970  : 	_Ref_count_obj<_Ty> *_Rx =
; 971  : 		new _Ref_count_obj<_Ty>(_STD forward<_Types>(_Args)...);

	push	240					; 000000f0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@make_share
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z ; std::_Ref_count_obj<CCompany>::_Ref_count_obj<CCompany><bool>
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN4@make_share
$LN3@make_share:
	mov	DWORD PTR tv78[ebp], 0
$LN4@make_share:
	mov	ecx, DWORD PTR tv78[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR __Rx$[ebp], edx

; 972  : 
; 973  : 	shared_ptr<_Ty> _Ret;

	lea	ecx, DWORD PTR __Ret$[ebp]
	call	??0?$shared_ptr@VCCompany@@@std@@QAE@XZ	; std::shared_ptr<CCompany>::shared_ptr<CCompany>
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 974  : 	_Ret._Resetp0(_Rx->_Getptr(), _Rx);

	mov	eax, DWORD PTR __Rx$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Rx$[ebp]
	call	?_Getptr@?$_Ref_count_obj@VCCompany@@@std@@QBEPAVCCompany@@XZ ; std::_Ref_count_obj<CCompany>::_Getptr
	push	eax
	lea	ecx, DWORD PTR __Ret$[ebp]
	call	??$_Resetp0@VCCompany@@@?$shared_ptr@VCCompany@@@std@@QAEXPAVCCompany@@PAV_Ref_count_base@1@@Z ; std::shared_ptr<CCompany>::_Resetp0<CCompany>

; 975  : 	return (_Ret);

	lea	eax, DWORD PTR __Ret$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$shared_ptr@VCCompany@@@std@@QAE@$$QAV01@@Z ; std::shared_ptr<CCompany>::shared_ptr<CCompany>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Ret$[ebp]
	call	??1?$shared_ptr@VCCompany@@@std@@QAE@XZ	; std::shared_ptr<CCompany>::~shared_ptr<CCompany>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 976  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@make_share
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN12@make_share:
	DD	1
	DD	$LN11@make_share
$LN11@make_share:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN9@make_share
$LN9@make_share:
	DB	95					; 0000005fH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z$0:
	push	240					; 000000f0H
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z$1:
	lea	ecx, DWORD PTR __Ret$[ebp]
	jmp	??1?$shared_ptr@VCCompany@@@std@@QAE@XZ	; std::shared_ptr<CCompany>::~shared_ptr<CCompany>
__ehhandler$??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-276]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z ENDP ; std::make_shared<CCompany,bool>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ PROC ; std::basic_ifstream<char,std::char_traits<char> >::`vbase destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ ENDP ; std::basic_ifstream<char,std::char_traits<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_ifstream<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 112				; 00000070H
	call	??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	184					; 000000b8H
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 112				; 00000070H
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 112				; 00000070H
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_ifstream<char,std::char_traits<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ PROC ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 879  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-112]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx-112], OFFSET ??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-112]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, 112				; 00000070H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-112]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax-116], edx

; 880  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 96					; 00000060H
	call	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 88					; 00000058H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
_TEXT	SEGMENT
$T2 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Str$ = 8						; size = 4
__Mode$ = 12						; size = 4
__Prot$ = 16						; size = 4
_$initVBases$ = 20					; size = 4
??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z PROC ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 761  : 		{	// construct with named file and specified mode

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	cmp	DWORD PTR _$initVBases$[ebp], 0
	je	SHORT $LN2@basic_ifst
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	mov	esi, esp
	call	DWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
$LN2@basic_ifst:

; 760  : 		: _Mybase(&_Filebuffer)

	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 761  : 		{	// construct with named file and specified mode

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx], OFFSET ??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, 112				; 00000070H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax-4], edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 762  : 		if (_Filebuffer.open(_Str.c_str(), _Mode | ios_base::in, _Prot) == 0)

	mov	eax, DWORD PTR __Prot$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mode$[ebp]
	or	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
	test	eax, eax
	jne	SHORT $LN1@basic_ifst

; 763  : 			_Myios::setstate(ios_base::failbit);

	mov	esi, esp
	push	0
	push	2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@basic_ifst:

; 764  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN6@basic_ifst
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN6@basic_ifst:
	ret	0
__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
__ehhandler$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z ENDP ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\contactlist.h
;	COMDAT ?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
tv202 = -1152						; size = 4
tv200 = -1152						; size = 4
tv191 = -1148						; size = 4
tv182 = -1148						; size = 4
tv203 = -1144						; size = 4
tv201 = -1144						; size = 4
tv199 = -1144						; size = 4
tv195 = -1144						; size = 4
tv186 = -1144						; size = 4
tv88 = -1144						; size = 4
$T2 = -1136						; size = 8
$T3 = -1117						; size = 1
$T4 = -1108						; size = 28
$T5 = -1072						; size = 8
$T6 = -1053						; size = 1
$T7 = -1044						; size = 28
_tempPerson$8 = -624					; size = 8
_people$9 = -608					; size = 88
_peopleFile$10 = -512					; size = 184
_tempCompany$11 = -320					; size = 8
_companies$12 = -304					; size = 88
_companiesFile$13 = -208				; size = 184
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_contactList$ = 8					; size = 4
_contactFileName$ = 12					; size = 4
?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; getContactList, COMDAT

; 46   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 1136				; 00000470H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1152]
	mov	ecx, 284				; 0000011cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 47   : 	// Try to open the file and read the archive. If it doesn't exist, it throws an exception
; 48   : 	try

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 49   : 	{
; 50   : 		ifstream companiesFile(contactFileName + "Companies.txt", ios_base::in);

	push	OFFSET ??_C@_0O@MIMFNFBN@Companies?4txt?$AA@
	mov	eax, DWORD PTR _contactFileName$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv199[ebp], eax
	mov	edx, DWORD PTR tv199[ebp]
	mov	DWORD PTR tv182[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	push	1
	push	64					; 00000040H
	push	1
	mov	eax, DWORD PTR tv182[ebp]
	push	eax
	lea	ecx, DWORD PTR _companiesFile$13[ebp]
	call	??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
	mov	DWORD PTR tv200[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 51   : 
; 52   : 		boost::archive::text_iarchive companies(companiesFile);

	push	0
	lea	eax, DWORD PTR _companiesFile$13[ebp]
	push	eax
	lea	ecx, DWORD PTR _companies$12[ebp]
	call	??0text_iarchive@archive@boost@@QAE@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@I@Z ; boost::archive::text_iarchive::text_iarchive
	mov	DWORD PTR tv201[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 4

; 53   : 
; 54   : 		try

	mov	BYTE PTR __$EHRec$[ebp+12], 5
$LN2@getContact:

; 55   : 		{
; 56   : 			// Infinitely read the archive. It throws an exception when there's nothing left to read
; 57   : 			while (true)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN3@getContact

; 58   : 			{
; 59   : 				// Make the pointer to the company, (try) get everything from the archive, then add it to the contact list
; 60   : 				shared_ptr<CContact> tempCompany = make_shared<CCompany>(true);

	mov	BYTE PTR $T6[ebp], 1
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	call	??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z ; std::make_shared<CCompany,bool>
	add	esp, 8
	mov	DWORD PTR tv186[ebp], eax
	mov	edx, DWORD PTR tv186[ebp]
	push	edx
	lea	ecx, DWORD PTR _tempCompany$11[ebp]
	call	??$?0VCCompany@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCCompany@@@1@@Z ; std::shared_ptr<CContact>::shared_ptr<CContact><CCompany,void>
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$shared_ptr@VCCompany@@@std@@QAE@XZ	; std::shared_ptr<CCompany>::~shared_ptr<CCompany>

; 61   : 				companies >> *tempCompany;

	lea	ecx, DWORD PTR _tempCompany$11[ebp]
	call	??D?$shared_ptr@VCContact@@@std@@QBEAAVCContact@@XZ ; std::shared_ptr<CContact>::operator*
	push	eax
	lea	ecx, DWORD PTR _companies$12[ebp+24]
	call	??$?5VCContact@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVCContact@@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><CContact>

; 62   : 				contactList->push_back(tempCompany);

	lea	eax, DWORD PTR _tempCompany$11[ebp]
	push	eax
	mov	ecx, DWORD PTR _contactList$[ebp]
	call	?push_back@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAEXABV?$shared_ptr@VCContact@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::push_back

; 63   : 			}

	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR _tempCompany$11[ebp]
	call	??1?$shared_ptr@VCContact@@@std@@QAE@XZ	; std::shared_ptr<CContact>::~shared_ptr<CContact>
	jmp	$LN2@getContact
$LN3@getContact:

; 64   : 		}

	jmp	SHORT $LN12@getContact
__catch$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$0:

; 65   : 		// Nothing needs to be done with the exceptions. Either the file doesn't exist
; 66   : 		// and it doesn't matter, or it reached the end of the file and it doesn't matter
; 67   : 		catch (...)
; 68   : 		{
; 69   : 		}

	mov	eax, $LN30@getContact
	ret	0
$LN12@getContact:
	mov	DWORD PTR __$EHRec$[ebp+12], 4
	jmp	SHORT __tryend$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$1
$LN30@getContact:
	mov	DWORD PTR __$EHRec$[ebp+12], 4
__tryend$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$1:

; 70   : 	}

	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _companies$12[ebp]
	call	??1text_iarchive@archive@boost@@UAE@XZ	; boost::archive::text_iarchive::~text_iarchive
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _companiesFile$13[ebp]
	call	??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
	jmp	SHORT $LN11@getContact
__catch$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$2:

; 71   : 	catch (...)
; 72   : 	{
; 73   : 	}

	mov	eax, $LN32@getContact
	ret	0
$LN11@getContact:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$3
$LN32@getContact:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$3:

; 74   : 
; 75   : 	// Try to open the file and read the archive. If it doesn't exist, it throws an exception
; 76   : 	try

	mov	DWORD PTR __$EHRec$[ebp+12], 9

; 77   : 	{
; 78   : 		ifstream peopleFile(contactFileName + "People.txt", ios_base::in);

	push	OFFSET ??_C@_0L@GLLABICK@People?4txt?$AA@
	mov	eax, DWORD PTR _contactFileName$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv88[ebp], eax
	mov	edx, DWORD PTR tv88[ebp]
	mov	DWORD PTR tv191[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	push	1
	push	64					; 00000040H
	push	1
	mov	eax, DWORD PTR tv191[ebp]
	push	eax
	lea	ecx, DWORD PTR _peopleFile$10[ebp]
	call	??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
	mov	DWORD PTR tv202[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 12		; 0000000cH
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 79   : 
; 80   : 		boost::archive::text_iarchive people(peopleFile);

	push	0
	lea	eax, DWORD PTR _peopleFile$10[ebp]
	push	eax
	lea	ecx, DWORD PTR _people$9[ebp]
	call	??0text_iarchive@archive@boost@@QAE@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@I@Z ; boost::archive::text_iarchive::text_iarchive
	mov	DWORD PTR tv203[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 13		; 0000000dH

; 81   : 
; 82   : 		try

	mov	BYTE PTR __$EHRec$[ebp+12], 14		; 0000000eH
$LN4@getContact:

; 83   : 		{
; 84   : 			// Infinitely read the archive. It throws an exception when there's nothing left to read
; 85   : 			while (true)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN5@getContact

; 86   : 			{
; 87   : 				// Make the pointer to the person, (try) get everything from the archive, then add it to the contact list
; 88   : 				shared_ptr<CContact> tempPerson = make_shared<CPerson>(true);

	mov	BYTE PTR $T3[ebp], 1
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z ; std::make_shared<CPerson,bool>
	add	esp, 8
	mov	DWORD PTR tv195[ebp], eax
	mov	edx, DWORD PTR tv195[ebp]
	push	edx
	lea	ecx, DWORD PTR _tempPerson$8[ebp]
	call	??$?0VCPerson@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCPerson@@@1@@Z ; std::shared_ptr<CContact>::shared_ptr<CContact><CPerson,void>
	mov	BYTE PTR __$EHRec$[ebp+12], 15		; 0000000fH
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$shared_ptr@VCPerson@@@std@@QAE@XZ	; std::shared_ptr<CPerson>::~shared_ptr<CPerson>

; 89   : 				people >> *tempPerson;

	lea	ecx, DWORD PTR _tempPerson$8[ebp]
	call	??D?$shared_ptr@VCContact@@@std@@QBEAAVCContact@@XZ ; std::shared_ptr<CContact>::operator*
	push	eax
	lea	ecx, DWORD PTR _people$9[ebp+24]
	call	??$?5VCContact@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVCContact@@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><CContact>

; 90   : 				contactList->push_back(tempPerson);

	lea	eax, DWORD PTR _tempPerson$8[ebp]
	push	eax
	mov	ecx, DWORD PTR _contactList$[ebp]
	call	?push_back@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAEXABV?$shared_ptr@VCContact@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::push_back

; 91   : 			}

	mov	BYTE PTR __$EHRec$[ebp+12], 14		; 0000000eH
	lea	ecx, DWORD PTR _tempPerson$8[ebp]
	call	??1?$shared_ptr@VCContact@@@std@@QAE@XZ	; std::shared_ptr<CContact>::~shared_ptr<CContact>
	jmp	$LN4@getContact
$LN5@getContact:

; 92   : 		}

	jmp	SHORT $LN16@getContact
__catch$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$4:

; 93   : 		// Nothing needs to be done with the exceptions. Either the file doesn't exist
; 94   : 		// and it doesn't matter, or it reached the end of the file and it doesn't matter
; 95   : 		catch (...)
; 96   : 		{
; 97   : 		}

	mov	eax, $LN34@getContact
	ret	0
$LN16@getContact:
	mov	DWORD PTR __$EHRec$[ebp+12], 13		; 0000000dH
	jmp	SHORT __tryend$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$5
$LN34@getContact:
	mov	DWORD PTR __$EHRec$[ebp+12], 13		; 0000000dH
__tryend$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$5:

; 98   : 	}

	mov	BYTE PTR __$EHRec$[ebp+12], 12		; 0000000cH
	lea	ecx, DWORD PTR _people$9[ebp]
	call	??1text_iarchive@archive@boost@@UAE@XZ	; boost::archive::text_iarchive::~text_iarchive
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	lea	ecx, DWORD PTR _peopleFile$10[ebp]
	call	??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
	jmp	SHORT $LN15@getContact
__catch$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$6:

; 99   : 	catch (...)
; 100  : 	{
; 101  : 	}

	mov	eax, $LN36@getContact
	ret	0
$LN15@getContact:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$7
$LN36@getContact:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$7:

; 102  : 
; 103  : 	// Sort the list once everything has been imported from the files
; 104  : 	Chris::sort(*contactList);

	mov	eax, DWORD PTR _contactList$[ebp]
	push	eax
	call	?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z ; Chris::sort
	add	esp, 4

; 105  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN45@getContact
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1152				; 00000480H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN45@getContact:
	DD	6
	DD	$LN44@getContact
$LN44@getContact:
	DD	-208					; ffffff30H
	DD	184					; 000000b8H
	DD	$LN37@getContact
	DD	-304					; fffffed0H
	DD	88					; 00000058H
	DD	$LN38@getContact
	DD	-320					; fffffec0H
	DD	8
	DD	$LN39@getContact
	DD	-512					; fffffe00H
	DD	184					; 000000b8H
	DD	$LN40@getContact
	DD	-608					; fffffda0H
	DD	88					; 00000058H
	DD	$LN41@getContact
	DD	-624					; fffffd90H
	DD	8
	DD	$LN42@getContact
$LN42@getContact:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	80					; 00000050H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN41@getContact:
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN40@getContact:
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN39@getContact:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	121					; 00000079H
	DB	0
$LN38@getContact:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN37@getContact:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$8:
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$9:
	lea	ecx, DWORD PTR _companiesFile$13[ebp]
	jmp	??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$10:
	lea	ecx, DWORD PTR _companies$12[ebp]
	jmp	??1text_iarchive@archive@boost@@UAE@XZ	; boost::archive::text_iarchive::~text_iarchive
__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$12:
	lea	ecx, DWORD PTR _tempCompany$11[ebp]
	jmp	??1?$shared_ptr@VCContact@@@std@@QAE@XZ	; std::shared_ptr<CContact>::~shared_ptr<CContact>
__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$13:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$14:
	lea	ecx, DWORD PTR _peopleFile$10[ebp]
	jmp	??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$15:
	lea	ecx, DWORD PTR _people$9[ebp]
	jmp	??1text_iarchive@archive@boost@@UAE@XZ	; boost::archive::text_iarchive::~text_iarchive
__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$17:
	lea	ecx, DWORD PTR _tempPerson$8[ebp]
	jmp	??1?$shared_ptr@VCContact@@@std@@QAE@XZ	; std::shared_ptr<CContact>::~shared_ptr<CContact>
__ehhandler$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1156]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; getContactList
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6VCContact@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVCContact@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6VCContact@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVCContact@@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<CContact>, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	mov	ecx, eax
	call	??$save_override@$$CBVCContact@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVCContact@@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<CContact const >

; 71   :         return * this->This();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?6VCContact@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVCContact@@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
_TEXT	SEGMENT
tv68 = -196						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z PROC ; std::operator==<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2479 : 	{	// test for string vs. NTCS equality

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 2480 : 	return (_Left.compare(_Right) == 0);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
	test	eax, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv68[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv68[ebp]

; 2481 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ENDP ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ PROC ; std::basic_ofstream<char,std::char_traits<char> >::`vbase destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ ENDP ; std::basic_ofstream<char,std::char_traits<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_ofstream<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 104				; 00000068H
	call	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	176					; 000000b0H
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 104				; 00000068H
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 104				; 00000068H
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_ofstream<char,std::char_traits<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back, COMDAT
; _this$ = ecx

; 709  : 		{	// set up putback area

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 710  : 		if (_Mysb::eback() != &_Mychar)

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	cmp	eax, ecx
	je	SHORT $LN2@Set_back

; 711  : 			{	// save current get buffer
; 712  : 			_Set_eback = _Mysb::eback();

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+80], eax

; 713  : 			_Set_egptr = _Mysb::egptr();

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+84], eax
$LN2@Set_back:

; 714  : 			}
; 715  : 		_Mysb::setg(&_Mychar, &_Mychar, &_Mychar + 1);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 61					; 0000003dH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 60					; 0000003cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 716  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back, COMDAT
; _this$ = ecx

; 703  : 		{	// restore buffer after putback

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 704  : 		if (_Mysb::eback() == &_Mychar)

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	cmp	eax, ecx
	jne	SHORT $LN1@Reset_back

; 705  : 			_Mysb::setg(_Set_eback, _Set_eback, _Set_egptr);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Reset_back:

; 706  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDU_Mbstatet@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Newpcvt$ = 8						; size = 4
?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDU_Mbstatet@@@2@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt, COMDAT
; _this$ = ecx

; 684  : 		{	// initialize codecvt pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 685  : 		if (_Newpcvt->always_noconv())

	mov	esi, esp
	mov	ecx, DWORD PTR __Newpcvt$[ebp]
	call	DWORD PTR __imp_?always_noconv@codecvt_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Initcvt

; 686  : 			_Pcvt = 0;	// nothing to do

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0

; 687  : 		else

	jmp	SHORT $LN1@Initcvt
$LN2@Initcvt:

; 688  : 			{	// set up for nontrivial codecvt facet
; 689  : 			_Pcvt = _Newpcvt;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newpcvt$[ebp]
	mov	DWORD PTR [eax+56], ecx

; 690  : 			_Mysb::_Init();	// reset any buffering

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Initcvt:

; 691  : 			}
; 692  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDU_Mbstatet@@@2@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ
_TEXT	SEGMENT
tv147 = -500						; size = 4
tv190 = -496						; size = 4
tv204 = -492						; size = 4
tv172 = -492						; size = 4
tv197 = -488						; size = 4
tv192 = -488						; size = 4
tv188 = -488						; size = 4
tv206 = -484						; size = 4
tv205 = -484						; size = 4
tv86 = -484						; size = 4
$T2 = -476						; size = 4
$T3 = -461						; size = 1
$T4 = -449						; size = 1
$T5 = -437						; size = 1
$T6 = -425						; size = 1
$T7 = -416						; size = 12
$T8 = -393						; size = 1
$T9 = -384						; size = 12
$T10 = -364						; size = 12
$T11 = -344						; size = 12
$T12 = -324						; size = 4
$T13 = -312						; size = 4
$T14 = -300						; size = 4
__Count$15 = -96					; size = 4
__Str$16 = -84						; size = 28
__Dest$17 = -48						; size = 4
__STRING_INC$18 = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite, COMDAT
; _this$ = ecx

; 643  : 		{	// put shift to initial conversion state, as needed

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 488				; 000001e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-500]
	mov	ecx, 122				; 0000007aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0

; 644  : 		if (_Pcvt == 0 || !_Wrotesome)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	je	SHORT $LN9@Endwrite
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+61]
	test	ecx, ecx
	jne	SHORT $LN7@Endwrite
$LN9@Endwrite:

; 645  : 			return (true);

	mov	al, 1
	jmp	$LN1@Endwrite

; 646  : 		else

	jmp	$LN1@Endwrite
$LN7@Endwrite:

; 647  : 			{	// may have to put
; 648  : 			const int _STRING_INC = 8;

	mov	DWORD PTR __STRING_INC$18[ebp], 8

; 649  : 			char *_Dest;
; 650  : 			if (_Traits::eq_int_type(_Traits::eof(), overflow()))

	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T14[ebp], eax
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T13[ebp], eax
	lea	ecx, DWORD PTR $T14[ebp]
	push	ecx
	lea	edx, DWORD PTR $T13[ebp]
	push	edx
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@Endwrite

; 651  : 				return (false);

	xor	al, al
	jmp	$LN1@Endwrite
$LN10@Endwrite:

; 652  : 
; 653  : 			string _Str(_STRING_INC, '\0');

	push	0
	push	8
	lea	ecx, DWORD PTR __Str$16[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$LN4@Endwrite:

; 654  : 			for (; ; )
; 655  : 				switch (_Pcvt->unshift(_State,

	mov	esi, esp
	lea	eax, DWORD PTR __Dest$17[ebp]
	push	eax
	lea	ecx, DWORD PTR $T11[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Str$16[ebp]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	DWORD PTR tv86[ebp], eax
	mov	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR tv188[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv188[ebp]
	call	??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
	mov	edi, eax
	lea	ecx, DWORD PTR __Str$16[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	add	edi, eax
	push	edi
	lea	eax, DWORD PTR $T10[ebp]
	push	eax
	lea	ecx, DWORD PTR __Str$16[ebp]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR tv204[ebp]
	mov	DWORD PTR tv190[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv190[ebp]
	call	??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 64					; 00000040H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	call	DWORD PTR __imp_?unshift@?$codecvt@DDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PAD1AAPAD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T12[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T10[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T11[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR $T12[ebp]
	mov	DWORD PTR tv147[ebp], ecx
	cmp	DWORD PTR tv147[ebp], 0
	je	SHORT $LN11@Endwrite
	cmp	DWORD PTR tv147[ebp], 1
	je	SHORT $LN12@Endwrite
	cmp	DWORD PTR tv147[ebp], 3
	je	$LN16@Endwrite
	jmp	$LN17@Endwrite
$LN11@Endwrite:

; 656  : 					&*_Str.begin(), &*_Str.begin() + _Str.size(), _Dest))
; 657  : 				{	// test result of homing conversion
; 658  : 				case codecvt_base::ok:
; 659  : 					_Wrotesome = false;	// homed successfully

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+61], 0
$LN12@Endwrite:

; 660  : 
; 661  : 				case codecvt_base::partial:	// fall through
; 662  : 					{	// put any generated bytes
; 663  : 					size_t _Count = _Dest - &*_Str.begin();

	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	lea	ecx, DWORD PTR __Str$16[ebp]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	DWORD PTR tv205[ebp], eax
	mov	ecx, DWORD PTR tv205[ebp]
	mov	DWORD PTR tv192[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv192[ebp]
	call	??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
	mov	edx, DWORD PTR __Dest$17[ebp]
	sub	edx, eax
	mov	DWORD PTR __Count$15[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T9[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ

; 664  : 					if (0 < _Count && _Count !=

	cmp	DWORD PTR __Count$15[ebp], 0
	jbe	SHORT $LN19@Endwrite
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	mov	edx, DWORD PTR __Count$15[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	lea	ecx, DWORD PTR __Str$16[ebp]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	DWORD PTR tv206[ebp], eax
	mov	ecx, DWORD PTR tv206[ebp]
	mov	DWORD PTR tv197[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	ecx, DWORD PTR tv197[ebp]
	call	??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
	push	eax
	call	DWORD PTR __imp__fwrite
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR __Count$15[ebp], eax
	je	SHORT $LN19@Endwrite
	mov	DWORD PTR tv172[ebp], 1
	jmp	SHORT $LN20@Endwrite
$LN19@Endwrite:
	mov	DWORD PTR tv172[ebp], 0
$LN20@Endwrite:
	mov	al, BYTE PTR tv172[ebp]
	mov	BYTE PTR $T8[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T2[ebp]
	and	ecx, 1
	je	SHORT $LN27@Endwrite
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
$LN27@Endwrite:
	movzx	edx, BYTE PTR $T8[ebp]
	test	edx, edx
	je	SHORT $LN13@Endwrite

; 665  : 						fwrite(&*_Str.begin(), 1, _Count, _Myfile))
; 666  : 						return (false);	// write failed

	mov	BYTE PTR $T6[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$16[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	al, BYTE PTR $T6[ebp]
	jmp	$LN1@Endwrite
$LN13@Endwrite:

; 667  : 					if (!_Wrotesome)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+61]
	test	ecx, ecx
	jne	SHORT $LN14@Endwrite

; 668  : 						return (true);

	mov	BYTE PTR $T5[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$16[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	al, BYTE PTR $T5[ebp]
	jmp	SHORT $LN1@Endwrite
$LN14@Endwrite:

; 669  : 					if (_Count == 0)

	cmp	DWORD PTR __Count$15[ebp], 0
	jne	SHORT $LN15@Endwrite

; 670  : 						_Str.append(_STRING_INC, '\0');	// try with more space

	push	0
	push	8
	lea	ecx, DWORD PTR __Str$16[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN15@Endwrite:

; 671  : 					break;

	jmp	SHORT $LN5@Endwrite
$LN16@Endwrite:

; 672  : 					}
; 673  : 
; 674  : 				case codecvt_base::noconv:
; 675  : 					return (true);	// nothing to do

	mov	BYTE PTR $T4[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$16[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	al, BYTE PTR $T4[ebp]
	jmp	SHORT $LN1@Endwrite
$LN17@Endwrite:

; 676  : 
; 677  : 				default:
; 678  : 					return (false);	// conversion failed

	mov	BYTE PTR $T3[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$16[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	al, BYTE PTR $T3[ebp]
	jmp	SHORT $LN1@Endwrite
$LN5@Endwrite:

; 679  : 				}

	jmp	$LN4@Endwrite

; 680  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$16[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@Endwrite:

; 681  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@Endwrite
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 500				; 000001f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN32@Endwrite:
	DD	2
	DD	$LN31@Endwrite
$LN31@Endwrite:
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN28@Endwrite
	DD	-84					; ffffffacH
	DD	28					; 0000001cH
	DD	$LN29@Endwrite
$LN29@Endwrite:
	DB	95					; 0000005fH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN28@Endwrite:
	DB	95					; 0000005fH
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$0:
	lea	ecx, DWORD PTR __Str$16[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$1:
	lea	ecx, DWORD PTR $T11[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$2:
	lea	ecx, DWORD PTR $T10[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$3:
	lea	ecx, DWORD PTR $T9[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$4:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN26@Endwrite
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
$LN26@Endwrite:
	ret	0
__ehhandler$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-504]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z
_TEXT	SEGMENT
tv66 = -256						; size = 4
__Nw$1 = -56						; size = 4
__Nr$2 = -44						; size = 4
__Pn$3 = -32						; size = 4
__Pb$4 = -20						; size = 4
_this$ = -8						; size = 4
__File$ = 8						; size = 4
__Which$ = 12						; size = 4
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Init, COMDAT
; _this$ = ecx

; 604  : 		{	// initialize to C stream _File after {new, open, close}

	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 605  : 		__PURE_APPDOMAIN_GLOBAL static _Myst _Stinit;	// initial state
; 606  : 
; 607  : 		_Closef = _Which == _Openfl;

	cmp	DWORD PTR __Which$[ebp], 1
	jne	SHORT $LN4@Init
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN5@Init
$LN4@Init:
	mov	DWORD PTR tv66[ebp], 0
$LN5@Init:
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR tv66[ebp]
	mov	BYTE PTR [eax+72], cl

; 608  : 		_Wrotesome = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+61], 0

; 609  : 
; 610  : 		_Mysb::_Init();	// initialize stream buffer base object

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp

; 611  : 
; 612  :  #ifndef _IORCNT
; 613  :   #define _IORCNT	_IOCNT	/* read and write counts are the same */
; 614  :   #define _IOWCNT _IOCNT
; 615  :  #endif /* _IORCNT */
; 616  : 
; 617  :   #pragma warning(push)
; 618  :   #pragma warning(disable: 6240)	/* prefast noise VSW 489858 */
; 619  : 		if (_File != 0 && sizeof (_Elem) == 1)

	cmp	DWORD PTR __File$[ebp], 0
	je	SHORT $LN2@Init
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@Init

; 620  :   #pragma warning(pop)
; 621  : 
; 622  : 			{	// point inside C stream with [first, first + count) buffer
; 623  : 			_Elem **_Pb = 0;

	mov	DWORD PTR __Pb$4[ebp], 0

; 624  : 			_Elem **_Pn = 0;

	mov	DWORD PTR __Pn$3[ebp], 0

; 625  : 			int *_Nr = 0;

	mov	DWORD PTR __Nr$2[ebp], 0

; 626  : 
; 627  : 			::_get_stream_buffer_pointers(

	mov	esi, esp
	lea	eax, DWORD PTR __Nr$2[ebp]
	push	eax
	lea	ecx, DWORD PTR __Pn$3[ebp]
	push	ecx
	lea	edx, DWORD PTR __Pb$4[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	call	DWORD PTR __imp___get_stream_buffer_pointers
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp

; 628  : 				_File,
; 629  : 				reinterpret_cast<char***>(&_Pb),
; 630  : 				reinterpret_cast<char***>(&_Pn),
; 631  : 				&_Nr);
; 632  : 			int *_Nw = _Nr;

	mov	eax, DWORD PTR __Nr$2[ebp]
	mov	DWORD PTR __Nw$1[ebp], eax

; 633  : 
; 634  : 			_Mysb::_Init(_Pb, _Pn, _Nr, _Pb, _Pn, _Nw);

	mov	esi, esp
	mov	eax, DWORD PTR __Nw$1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pn$3[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pb$4[ebp]
	push	edx
	mov	eax, DWORD PTR __Nr$2[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pn$3[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pb$4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAPAD0PAH001@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Init:

; 635  : 			}
; 636  : 
; 637  : 		_Myfile = _File;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __File$[ebp]
	mov	DWORD PTR [eax+76], ecx

; 638  : 		_State = _Stinit;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A
	mov	DWORD PTR [eax+64], ecx
	mov	edx, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A+4
	mov	DWORD PTR [eax+68], edx

; 639  : 		_Pcvt = 0;	// pointer to codecvt facet

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0

; 640  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Init
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN10@Init:
	DD	3
	DD	$LN9@Init
$LN9@Init:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@Init
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@Init
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN8@Init
$LN8@Init:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	114					; 00000072H
	DB	0
$LN7@Init:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	110					; 0000006eH
	DB	0
$LN6@Init:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	98					; 00000062H
	DB	0
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Loc$ = 8						; size = 4
?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::imbue, COMDAT
; _this$ = ecx

; 599  : 		{	// set locale to argument (capture nontrivial codecvt facet)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 600  : 		_Initcvt(&_USE(_Loc, _Cvt));

	mov	eax, DWORD PTR __Loc$[ebp]
	push	eax
	call	??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDU_Mbstatet@@@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt

; 601  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::imbue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
tv86 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::sync, COMDAT
; _this$ = ecx

; 592  : 		{	// synchronize C stream with external file

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 593  : 		return (_Myfile == 0

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN3@sync
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T2[ebp], eax
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@sync
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	call	DWORD PTR __imp__fflush
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jge	SHORT $LN3@sync
	mov	DWORD PTR tv86[ebp], -1
	jmp	SHORT $LN4@sync
$LN3@sync:
	mov	DWORD PTR tv86[ebp], 0
$LN4@sync:
	mov	eax, DWORD PTR tv86[ebp]

; 594  : 			|| _Traits::eq_int_type(_Traits::eof(), overflow())
; 595  : 			|| 0 <= fflush(_Myfile) ? 0 : -1);
; 596  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::sync
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z
_TEXT	SEGMENT
tv71 = -208						; size = 4
_this$ = -8						; size = 4
__Buffer$ = 8						; size = 4
__Count$ = 12						; size = 8
?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::setbuf, COMDAT
; _this$ = ecx

; 579  : 		{	// offer _Buffer to C stream

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 580  : 		if (_Myfile == 0 || setvbuf(_Myfile, (char *)_Buffer,

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN4@setbuf
	cmp	DWORD PTR __Buffer$[ebp], 0
	jne	SHORT $LN6@setbuf
	mov	eax, DWORD PTR __Count$[ebp]
	or	eax, DWORD PTR __Count$[ebp+4]
	jne	SHORT $LN6@setbuf
	mov	DWORD PTR tv71[ebp], 4
	jmp	SHORT $LN7@setbuf
$LN6@setbuf:
	mov	DWORD PTR tv71[ebp], 0
$LN7@setbuf:
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR tv71[ebp]
	push	edx
	mov	eax, DWORD PTR __Buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	call	DWORD PTR __imp__setvbuf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@setbuf
$LN4@setbuf:

; 581  : 			_Buffer == 0 && _Count == 0 ? _IONBF : _IOFBF,
; 582  : 			(size_t)_Count * sizeof (_Elem)) != 0)
; 583  : 			return (0);	// failed

	xor	eax, eax
	jmp	SHORT $LN1@setbuf

; 584  : 		else

	jmp	SHORT $LN1@setbuf
$LN2@setbuf:

; 585  : 			{	// new buffer, reinitialize pointers
; 586  : 			_Init(_Myfile, _Openfl);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init

; 587  : 			return (this);

	mov	eax, DWORD PTR _this$[ebp]
$LN1@setbuf:

; 588  : 			}
; 589  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::setbuf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
_TEXT	SEGMENT
$T1 = -248						; size = 8
__Off$ = -40						; size = 8
__Fileposition$ = -24					; size = 8
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Pos$ = 12						; size = 24
___formal$ = 36						; size = 4
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::seekpos, COMDAT
; _this$ = ecx

; 561  : 		{	// change position to _Pos

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 562  : 		fpos_t _Fileposition = _POS_TYPE_TO_FPOS_T(_Pos);

	lea	ecx, DWORD PTR __Pos$[ebp]
	call	?seekpos@?$fpos@U_Mbstatet@@@std@@QBE_JXZ ; std::fpos<_Mbstatet>::seekpos
	mov	DWORD PTR __Fileposition$[ebp], eax
	mov	DWORD PTR __Fileposition$[ebp+4], edx

; 563  : 		off_type _Off = (off_type)_Pos - (off_type)_FPOSOFF(_Fileposition);

	lea	ecx, DWORD PTR __Pos$[ebp]
	call	??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ	; std::fpos<_Mbstatet>::operator __int64
	sub	eax, DWORD PTR __Fileposition$[ebp]
	sbb	edx, DWORD PTR __Fileposition$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx

; 564  : 
; 565  : 		if (_Myfile == 0 || !_Endwrite()
; 566  : 			|| fsetpos(_Myfile, &_Fileposition) != 0
; 567  : 			|| (_Off != 0 && _FSEEK_OFF(_Myfile, _Off, SEEK_CUR) != 0)
; 568  : 			|| fgetpos(_Myfile, &_Fileposition) != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	$LN3@seekpos
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@seekpos
	mov	esi, esp
	lea	eax, DWORD PTR __Fileposition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	call	DWORD PTR __imp__fsetpos
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN3@seekpos
	mov	eax, DWORD PTR __Off$[ebp]
	or	eax, DWORD PTR __Off$[ebp+4]
	je	SHORT $LN4@seekpos
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR __Off$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	call	DWORD PTR __imp___fseeki64
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN3@seekpos
$LN4@seekpos:
	mov	esi, esp
	lea	eax, DWORD PTR __Fileposition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	call	DWORD PTR __imp__fgetpos
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@seekpos
$LN3@seekpos:

; 569  : 			return (pos_type(_BADOFF));	// report failure

	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@seekpos
$LN2@seekpos:

; 570  : 
; 571  : 		_State = _POS_TYPE_TO_STATE(_Pos);

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	lea	ecx, DWORD PTR __Pos$[ebp]
	call	?state@?$fpos@U_Mbstatet@@@std@@QBE?AU_Mbstatet@@XZ ; std::fpos<_Mbstatet>::state
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], ecx
	mov	DWORD PTR [eax+68], edx

; 572  : 
; 573  : 		_Reset_back();	// revert from _Mychar buffer, discarding any putback

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back

; 574  : 		return (_POS_TYPE_FROM_STATE(pos_type, _State,

	mov	eax, DWORD PTR __Fileposition$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Fileposition$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	push	eax
	mov	ecx, DWORD PTR [edx+64]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@U_Mbstatet@@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@seekpos:

; 575  : 			_Fileposition));	// return new position
; 576  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@seekpos
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
	npad	3
$LN8@seekpos:
	DD	1
	DD	$LN7@seekpos
$LN7@seekpos:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN6@seekpos
$LN6@seekpos:
	DB	95					; 0000005fH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
_TEXT	SEGMENT
__Fileposition$ = -24					; size = 8
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 8
__Way$ = 20						; size = 4
___formal$ = 24						; size = 4
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::seekoff, COMDAT
; _this$ = ecx

; 539  : 		{	// change position by _Off

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 540  : 		fpos_t _Fileposition;
; 541  : 
; 542  : 		if (_Mysb::gptr() == &_Mychar	// something putback
; 543  : 			&& _Way == ios_base::cur	// a relative seek
; 544  : 			&& _Pcvt == 0)	// not converting

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	cmp	eax, ecx
	jne	SHORT $LN2@seekoff
	cmp	DWORD PTR __Way$[ebp], 1
	jne	SHORT $LN2@seekoff
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	jne	SHORT $LN2@seekoff

; 545  : 			_Off -= (off_type)sizeof (_Elem);	// back up over _Elem bytes

	mov	eax, DWORD PTR __Off$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR __Off$[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], ecx
$LN2@seekoff:

; 546  : 
; 547  : 		if (_Myfile == 0 || !_Endwrite()
; 548  : 			|| ((_Off != 0 || _Way != ios_base::cur)
; 549  : 				&& _FSEEK_OFF(_Myfile, _Off, _Way) != 0)
; 550  : 			|| fgetpos(_Myfile, &_Fileposition) != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN4@seekoff
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@seekoff
	mov	eax, DWORD PTR __Off$[ebp]
	or	eax, DWORD PTR __Off$[ebp+4]
	jne	SHORT $LN6@seekoff
	cmp	DWORD PTR __Way$[ebp], 1
	je	SHORT $LN5@seekoff
$LN6@seekoff:
	mov	esi, esp
	mov	eax, DWORD PTR __Way$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	DWORD PTR __imp___fseeki64
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN4@seekoff
$LN5@seekoff:
	mov	esi, esp
	lea	eax, DWORD PTR __Fileposition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	call	DWORD PTR __imp__fgetpos
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN3@seekoff
$LN4@seekoff:

; 551  : 			return (pos_type(_BADOFF));	// report failure

	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@seekoff
$LN3@seekoff:

; 552  : 
; 553  : 		_Reset_back();	// revert from _Mychar buffer, discarding any putback

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back

; 554  : 		return (_POS_TYPE_FROM_STATE(pos_type, _State,

	mov	eax, DWORD PTR __Fileposition$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Fileposition$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	push	eax
	mov	ecx, DWORD PTR [edx+64]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@U_Mbstatet@@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@seekoff:

; 555  : 			_Fileposition));	// return new position
; 556  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@seekoff
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	2
$LN10@seekoff:
	DD	1
	DD	$LN9@seekoff
$LN9@seekoff:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN8@seekoff
$LN8@seekoff:
	DB	95					; 0000005fH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
tv180 = -508						; size = 4
tv239 = -504						; size = 4
tv249 = -500						; size = 4
tv246 = -496						; size = 4
tv244 = -496						; size = 4
tv241 = -496						; size = 4
tv237 = -496						; size = 4
tv252 = -492						; size = 4
tv251 = -492						; size = 4
tv250 = -492						; size = 4
tv141 = -492						; size = 4
tv139 = -492						; size = 4
$T2 = -484						; size = 4
$T3 = -472						; size = 4
$T4 = -460						; size = 12
$T5 = -440						; size = 12
$T6 = -420						; size = 4
$T7 = -408						; size = 12
$T8 = -388						; size = 12
$T9 = -368						; size = 12
$T10 = -348						; size = 4
$T11 = -336						; size = 4
__Meta$12 = -132					; size = 4
__Nleft$13 = -120					; size = 4
__Src$14 = -108						; size = 4
__Dest$15 = -96						; size = 4
__Ch$16 = -81						; size = 1
__Str$17 = -72						; size = 28
__Ch$18 = -33						; size = 1
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::uflow, COMDAT
; _this$ = ecx

; 472  : 		{	// get an element from stream, point past it

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 496				; 000001f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-508]
	mov	ecx, 124				; 0000007cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 473  : 		if (_Mysb::gptr() != 0
; 474  : 			&& _Mysb::gptr() < _Mysb::egptr())

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN10@uflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jae	SHORT $LN10@uflow

; 475  : 			return (_Traits::to_int_type(

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
	add	esp, 4
	jmp	$LN1@uflow
	jmp	SHORT $LN11@uflow
$LN10@uflow:

; 476  : 				*_Mysb::_Gninc()));	// return buffered
; 477  : 		else if (_Myfile == 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	jne	SHORT $LN11@uflow

; 478  : 			return (_Traits::eof());	// no open C stream, fail

	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	$LN1@uflow
$LN11@uflow:

; 479  : 		_Reset_back();	// revert from _Mychar buffer

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back

; 480  : 		if (_Pcvt == 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	jne	SHORT $LN13@uflow

; 481  : 			{	// no codecvt facet, just get it
; 482  : 			_Elem _Ch = 0;

	mov	BYTE PTR __Ch$18[ebp], 0

; 483  : 			return (_Fgetc(_Ch, _Myfile) ? _Traits::to_int_type(_Ch)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	lea	edx, DWORD PTR __Ch$18[ebp]
	push	edx
	call	??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z	; std::_Fgetc<char>
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN23@uflow
	lea	ecx, DWORD PTR __Ch$18[ebp]
	push	ecx
	call	?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
	add	esp, 4
	mov	DWORD PTR tv139[ebp], eax
	jmp	SHORT $LN24@uflow
$LN23@uflow:
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR tv139[ebp], eax
$LN24@uflow:
	mov	eax, DWORD PTR tv139[ebp]
	jmp	$LN1@uflow

; 484  : 				: _Traits::eof());
; 485  : 			}
; 486  : 		else

	jmp	$LN1@uflow
$LN13@uflow:

; 487  : 			{	// build string until codecvt succeeds
; 488  : 			string _Str;

	lea	ecx, DWORD PTR __Str$17[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$LN4@uflow:

; 489  : 
; 490  : 			for (; ; )
; 491  : 				{	// get using codecvt facet
; 492  : 				_Elem _Ch, *_Dest;
; 493  : 				const char *_Src;
; 494  : 				int _Nleft;
; 495  : 				int _Meta = fgetc(_Myfile);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	DWORD PTR __imp__fgetc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Meta$12[ebp], eax

; 496  : 
; 497  : 				if (_Meta == EOF)

	cmp	DWORD PTR __Meta$12[ebp], -1
	jne	SHORT $LN15@uflow

; 498  : 					return (_Traits::eof());	// partial char?

	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T11[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$17[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T11[ebp]
	jmp	$LN1@uflow
$LN15@uflow:

; 499  : 
; 500  : 				_Str.append(1, (char)_Meta);	// append byte and convert

	movzx	eax, BYTE PTR __Meta$12[ebp]
	push	eax
	push	1
	lea	ecx, DWORD PTR __Str$17[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 501  : 				switch (_Pcvt->in(_State,

	mov	esi, esp
	lea	eax, DWORD PTR __Dest$15[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ch$16[ebp+1]
	push	ecx
	lea	edx, DWORD PTR __Ch$16[ebp]
	push	edx
	lea	eax, DWORD PTR __Src$14[ebp]
	push	eax
	lea	ecx, DWORD PTR $T9[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Str$17[ebp]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	DWORD PTR tv141[ebp], eax
	mov	edx, DWORD PTR tv141[ebp]
	mov	DWORD PTR tv237[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv237[ebp]
	call	??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
	mov	edi, eax
	lea	ecx, DWORD PTR __Str$17[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	add	edi, eax
	push	edi
	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	lea	ecx, DWORD PTR __Str$17[ebp]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	DWORD PTR tv249[ebp], eax
	mov	ecx, DWORD PTR tv249[ebp]
	mov	DWORD PTR tv239[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv239[ebp]
	call	??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 64					; 00000040H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	call	DWORD PTR __imp_?in@?$codecvt@DDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PBD1AAPBDPAD3AAPAD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T10[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T9[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR $T10[ebp]
	mov	DWORD PTR tv180[ebp], ecx
	cmp	DWORD PTR tv180[ebp], 0
	jl	$LN21@uflow
	cmp	DWORD PTR tv180[ebp], 1
	jle	SHORT $LN16@uflow
	cmp	DWORD PTR tv180[ebp], 3
	je	$LN19@uflow
	jmp	$LN21@uflow
$LN16@uflow:

; 502  : 					&*_Str.begin(), &*_Str.begin() + _Str.size(), _Src,
; 503  : 					&_Ch, &_Ch + 1, _Dest))
; 504  : 					{	// test result of converting one element
; 505  : 				case codecvt_base::partial:
; 506  : 				case codecvt_base::ok:
; 507  : 					if (_Dest != &_Ch)

	lea	eax, DWORD PTR __Ch$16[ebp]
	cmp	DWORD PTR __Dest$15[ebp], eax
	je	$LN17@uflow

; 508  : 						{	// got an element, put back excess and deliver it
; 509  : 						_Nleft = (int)(&*_Str.begin() + _Str.size() - _Src);

	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	lea	ecx, DWORD PTR __Str$17[ebp]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	DWORD PTR tv250[ebp], eax
	mov	ecx, DWORD PTR tv250[ebp]
	mov	DWORD PTR tv241[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv241[ebp]
	call	??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
	mov	esi, eax
	lea	ecx, DWORD PTR __Str$17[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	add	esi, eax
	sub	esi, DWORD PTR __Src$14[ebp]
	mov	DWORD PTR __Nleft$13[ebp], esi
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
$LN9@uflow:

; 510  : 						for (; 0 < _Nleft; )

	cmp	DWORD PTR __Nleft$13[ebp], 0
	jle	SHORT $LN8@uflow

; 511  : 							ungetc(_Src[--_Nleft], _Myfile);

	mov	eax, DWORD PTR __Nleft$13[ebp]
	sub	eax, 1
	mov	DWORD PTR __Nleft$13[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	mov	eax, DWORD PTR __Src$14[ebp]
	add	eax, DWORD PTR __Nleft$13[ebp]
	movsx	ecx, BYTE PTR [eax]
	push	ecx
	call	DWORD PTR __imp__ungetc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN9@uflow
$LN8@uflow:

; 512  : 						return (_Traits::to_int_type(_Ch));

	lea	eax, DWORD PTR __Ch$16[ebp]
	push	eax
	call	?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$17[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T6[ebp]
	jmp	$LN1@uflow

; 513  : 						}
; 514  : 					else

	jmp	SHORT $LN18@uflow
$LN17@uflow:

; 515  : 						_Str.erase((size_t)0,	// partial, discard used input

	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	lea	ecx, DWORD PTR __Str$17[ebp]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	DWORD PTR tv251[ebp], eax
	mov	ecx, DWORD PTR tv251[ebp]
	mov	DWORD PTR tv244[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv244[ebp]
	call	??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
	mov	edx, DWORD PTR __Src$14[ebp]
	sub	edx, eax
	push	edx
	push	0
	lea	ecx, DWORD PTR __Str$17[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
$LN18@uflow:

; 516  : 							(size_t)(_Src - &*_Str.begin()));
; 517  : 					break;

	jmp	$LN5@uflow
$LN19@uflow:

; 518  : 
; 519  : 				case codecvt_base::noconv:
; 520  : 					if (_Str.size() < sizeof (_Elem))

	lea	ecx, DWORD PTR __Str$17[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, 1
	jae	SHORT $LN20@uflow

; 521  : 						break;	// no conversion, but need more chars

	jmp	$LN5@uflow
$LN20@uflow:

; 522  : 
; 523  : 					_CRT_SECURE_MEMCPY(&_Ch, sizeof (_Elem), &*_Str.begin(),

	push	1
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	lea	ecx, DWORD PTR __Str$17[ebp]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	DWORD PTR tv252[ebp], eax
	mov	ecx, DWORD PTR tv252[ebp]
	mov	DWORD PTR tv246[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR tv246[ebp]
	call	??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
	push	eax
	push	1
	lea	edx, DWORD PTR __Ch$16[ebp]
	push	edx
	call	_memcpy_s
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ

; 524  : 						sizeof (_Elem));	// copy raw bytes to element
; 525  : 
; 526  : 					return (_Traits::to_int_type(_Ch));	// return result

	lea	eax, DWORD PTR __Ch$16[ebp]
	push	eax
	call	?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$17[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T3[ebp]
	jmp	SHORT $LN1@uflow
$LN21@uflow:

; 527  : 
; 528  : 				default:
; 529  : 					return (_Traits::eof());	// conversion failed

	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$17[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T2[ebp]
	jmp	SHORT $LN1@uflow
$LN5@uflow:

; 530  : 					}
; 531  : 				}

	jmp	$LN4@uflow

; 532  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$17[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@uflow:

; 533  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN38@uflow
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 508				; 000001fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN38@uflow:
	DD	5
	DD	$LN37@uflow
$LN37@uflow:
	DD	-33					; ffffffdfH
	DD	1
	DD	$LN31@uflow
	DD	-72					; ffffffb8H
	DD	28					; 0000001cH
	DD	$LN32@uflow
	DD	-81					; ffffffafH
	DD	1
	DD	$LN33@uflow
	DD	-96					; ffffffa0H
	DD	4
	DD	$LN34@uflow
	DD	-108					; ffffff94H
	DD	4
	DD	$LN35@uflow
$LN35@uflow:
	DB	95					; 0000005fH
	DB	83					; 00000053H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
$LN34@uflow:
	DB	95					; 0000005fH
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN33@uflow:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	0
$LN32@uflow:
	DB	95					; 0000005fH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN31@uflow:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$0:
	lea	ecx, DWORD PTR __Str$17[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$1:
	lea	ecx, DWORD PTR $T9[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$2:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$3:
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$4:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$5:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__ehhandler$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-512]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::uflow
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
$T1 = -224						; size = 4
__Meta$ = -20						; size = 4
_this$ = -8						; size = 4
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::underflow, COMDAT
; _this$ = ecx

; 457  : 		{	// get an element from stream, but don't point past it

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 458  : 		int_type _Meta;
; 459  : 		if (_Mysb::gptr() != 0
; 460  : 			&& _Mysb::gptr() < _Mysb::egptr())

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@underflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jae	SHORT $LN2@underflow

; 461  : 			return (_Traits::to_int_type(*_Mysb::gptr()));	// return buffered

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
	add	esp, 4
	jmp	SHORT $LN1@underflow
	jmp	SHORT $LN1@underflow
$LN2@underflow:

; 462  : 		else if (_Traits::eq_int_type(_Traits::eof(), _Meta = uflow()))

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Meta$[ebp], eax
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR __Meta$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@underflow

; 463  : 			return (_Meta);	// uflow failed, return EOF

	mov	eax, DWORD PTR __Meta$[ebp]
	jmp	SHORT $LN1@underflow

; 464  : 		else

	jmp	SHORT $LN1@underflow
$LN4@underflow:

; 465  : 			{	// get a char, don't point past it
; 466  : 			pbackfail(_Meta);

	mov	esi, esp
	mov	eax, DWORD PTR __Meta$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 467  : 			return (_Meta);

	mov	eax, DWORD PTR __Meta$[ebp]
$LN1@underflow:

; 468  : 			}
; 469  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@underflow
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@underflow:
	DD	1
	DD	$LN8@underflow
$LN8@underflow:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN7@underflow
$LN7@underflow:
	DB	95					; 0000005fH
	DB	77					; 0000004dH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::underflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT
$T1 = -245						; size = 1
$T2 = -236						; size = 4
$T3 = -224						; size = 4
$T4 = -212						; size = 4
_this$ = -8						; size = 4
__Meta$ = 8						; size = 4
?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail, COMDAT
; _this$ = ecx

; 432  : 		{	// put an element back to stream

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 433  : 		if (_Mysb::gptr() != 0
; 434  : 			&& _Mysb::eback() < _Mysb::gptr()
; 435  : 			&& (_Traits::eq_int_type(_Traits::eof(), _Meta)

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN2@pbackfail
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jae	$LN2@pbackfail
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T4[ebp], eax
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@pbackfail
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, 1
	imul	edx, ecx, -1
	add	eax, edx
	push	eax
	call	?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@pbackfail
$LN4@pbackfail:

; 436  : 			|| _Traits::eq_int_type(_Traits::to_int_type(_Mysb::gptr()[-1]),
; 437  : 				_Meta)))
; 438  : 			{	// just back up position
; 439  : 			_Mysb::_Gndec();

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Gndec@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp

; 440  : 			return (_Traits::not_eof(_Meta));

	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?not_eof@?$char_traits@D@std@@SAHABH@Z	; std::char_traits<char>::not_eof
	add	esp, 4
	jmp	$LN1@pbackfail
	jmp	$LN1@pbackfail
$LN2@pbackfail:

; 441  : 			}
; 442  : 		else if (_Myfile == 0 || _Traits::eq_int_type(_Traits::eof(), _Meta))

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN7@pbackfail
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T2[ebp], eax
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN5@pbackfail
$LN7@pbackfail:

; 443  : 			return (_Traits::eof());	// no open C stream or EOF, fail

	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	$LN1@pbackfail
	jmp	$LN1@pbackfail
$LN5@pbackfail:

; 444  : 		else if (_Pcvt == 0 && _Ungetc(_Traits::to_char_type(_Meta), _Myfile))

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	jne	SHORT $LN8@pbackfail
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	mov	BYTE PTR $T1[ebp], al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z	; std::_Ungetc<char>
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN8@pbackfail

; 445  : 			return (_Meta);	// no facet and unget succeeded, return

	mov	eax, DWORD PTR __Meta$[ebp]
	jmp	SHORT $LN1@pbackfail
	jmp	SHORT $LN1@pbackfail
$LN8@pbackfail:

; 446  : 		else if (_Mysb::gptr() != &_Mychar)

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	cmp	eax, ecx
	je	SHORT $LN10@pbackfail

; 447  : 			{	// putback to _Mychar
; 448  : 			_Mychar = _Traits::to_char_type(_Meta);

	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+60], al

; 449  : 			_Set_back();	// switch to _Mychar buffer

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back

; 450  : 			return (_Meta);

	mov	eax, DWORD PTR __Meta$[ebp]
	jmp	SHORT $LN1@pbackfail

; 451  : 			}
; 452  : 		else

	jmp	SHORT $LN1@pbackfail
$LN10@pbackfail:

; 453  : 			return (_Traits::eof());	// nowhere to put back

	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
$LN1@pbackfail:

; 454  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT
tv184 = -524						; size = 4
tv239 = -520						; size = 4
tv254 = -516						; size = 4
tv208 = -516						; size = 4
tv246 = -512						; size = 4
tv241 = -512						; size = 4
tv237 = -512						; size = 4
tv256 = -508						; size = 4
tv255 = -508						; size = 4
tv230 = -508						; size = 4
tv151 = -508						; size = 4
tv147 = -508						; size = 4
$T2 = -500						; size = 4
$T3 = -488						; size = 4
$T4 = -476						; size = 4
$T5 = -464						; size = 4
$T6 = -452						; size = 4
$T7 = -440						; size = 4
$T8 = -428						; size = 12
$T9 = -405						; size = 1
$T10 = -396						; size = 12
$T11 = -376						; size = 12
$T12 = -356						; size = 12
$T13 = -336						; size = 4
$T14 = -324						; size = 4
__Count$15 = -120					; size = 4
__Str$16 = -108						; size = 28
__Dest$17 = -72						; size = 4
__Src$18 = -60						; size = 4
__Ch$19 = -45						; size = 1
__STRING_INC$20 = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Meta$ = 8						; size = 4
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::overflow, COMDAT
; _this$ = ecx

; 371  : 		{	// put an element to stream

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 512				; 00000200H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 128				; 00000080H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0

; 372  : 		if (_Traits::eq_int_type(_Traits::eof(), _Meta))

	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T14[ebp], eax
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T14[ebp]
	push	ecx
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN7@overflow

; 373  : 			return (_Traits::not_eof(_Meta));	// EOF, return success code

	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?not_eof@?$char_traits@D@std@@SAHABH@Z	; std::char_traits<char>::not_eof
	add	esp, 4
	jmp	$LN1@overflow

; 374  : 		else if (_Mysb::pptr() != 0

	jmp	SHORT $LN8@overflow
$LN7@overflow:

; 375  : 			&& _Mysb::pptr() < _Mysb::epptr())

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN9@overflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jae	SHORT $LN9@overflow

; 376  : 			{	// room in buffer, store it
; 377  : 			*_Mysb::_Pninc() = _Traits::to_char_type(_Meta);

	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	mov	bl, al
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR [eax], bl

; 378  : 			return (_Meta);

	mov	eax, DWORD PTR __Meta$[ebp]
	jmp	$LN1@overflow
	jmp	SHORT $LN8@overflow
$LN9@overflow:

; 379  : 			}
; 380  : 		else if (_Myfile == 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	jne	SHORT $LN8@overflow

; 381  : 			return (_Traits::eof());	// no open C stream, fail

	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	$LN1@overflow
$LN8@overflow:

; 382  : 		_Reset_back();	// revert from _Mychar buffer

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back

; 383  : 		if (_Pcvt == 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	jne	SHORT $LN12@overflow

; 384  : 			return (_Fputc(_Traits::to_char_type(_Meta), _Myfile)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	movzx	eax, al
	push	eax
	call	??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z	; std::_Fputc<char>
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN24@overflow
	mov	edx, DWORD PTR __Meta$[ebp]
	mov	DWORD PTR tv147[ebp], edx
	jmp	SHORT $LN25@overflow
$LN24@overflow:
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR tv147[ebp], eax
$LN25@overflow:
	mov	eax, DWORD PTR tv147[ebp]
	jmp	$LN1@overflow

; 385  : 				? _Meta : _Traits::eof());	// no codecvt facet, put as is
; 386  : 		else

	jmp	$LN1@overflow
$LN12@overflow:

; 387  : 			{	// put using codecvt facet
; 388  : 			const int _STRING_INC = 8;

	mov	DWORD PTR __STRING_INC$20[ebp], 8

; 389  : 			const _Elem _Ch = _Traits::to_char_type(_Meta);

	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	mov	BYTE PTR __Ch$19[ebp], al

; 390  : 			const _Elem *_Src;
; 391  : 			char *_Dest;
; 392  : 
; 393  : 			string _Str(_STRING_INC, '\0');

	push	0
	push	8
	lea	ecx, DWORD PTR __Str$16[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$LN4@overflow:

; 394  : 			for (; ; )
; 395  : 				switch (_Pcvt->out(_State,

	mov	esi, esp
	lea	eax, DWORD PTR __Dest$17[ebp]
	push	eax
	lea	ecx, DWORD PTR $T12[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Str$16[ebp]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	DWORD PTR tv151[ebp], eax
	mov	edx, DWORD PTR tv151[ebp]
	mov	DWORD PTR tv237[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv237[ebp]
	call	??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
	mov	edi, eax
	lea	ecx, DWORD PTR __Str$16[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	add	edi, eax
	push	edi
	lea	eax, DWORD PTR $T11[ebp]
	push	eax
	lea	ecx, DWORD PTR __Str$16[ebp]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	DWORD PTR tv254[ebp], eax
	mov	ecx, DWORD PTR tv254[ebp]
	mov	DWORD PTR tv239[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv239[ebp]
	call	??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
	push	eax
	lea	edx, DWORD PTR __Src$18[ebp]
	push	edx
	lea	eax, DWORD PTR __Ch$19[ebp+1]
	push	eax
	lea	ecx, DWORD PTR __Ch$19[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 64					; 00000040H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	call	DWORD PTR __imp_?out@?$codecvt@DDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PBD1AAPBDPAD3AAPAD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T13[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T11[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T12[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR $T13[ebp]
	mov	DWORD PTR tv184[ebp], ecx
	cmp	DWORD PTR tv184[ebp], 0
	jl	$LN22@overflow
	cmp	DWORD PTR tv184[ebp], 1
	jle	SHORT $LN14@overflow
	cmp	DWORD PTR tv184[ebp], 3
	je	$LN21@overflow
	jmp	$LN22@overflow
$LN14@overflow:

; 396  : 					&_Ch, &_Ch + 1, _Src,
; 397  : 					&*_Str.begin(), &*_Str.begin() + _Str.size(), _Dest))
; 398  : 				{	// test result of converting one element
; 399  : 				case codecvt_base::partial:
; 400  : 				case codecvt_base::ok:
; 401  : 					{	// converted something, try to put it out
; 402  : 					size_t _Count = _Dest - &*_Str.begin();

	lea	eax, DWORD PTR $T10[ebp]
	push	eax
	lea	ecx, DWORD PTR __Str$16[ebp]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	DWORD PTR tv255[ebp], eax
	mov	ecx, DWORD PTR tv255[ebp]
	mov	DWORD PTR tv241[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv241[ebp]
	call	??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
	mov	edx, DWORD PTR __Dest$17[ebp]
	sub	edx, eax
	mov	DWORD PTR __Count$15[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T10[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ

; 403  : 					if (0 < _Count && _Count !=

	cmp	DWORD PTR __Count$15[ebp], 0
	jbe	SHORT $LN26@overflow
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	mov	edx, DWORD PTR __Count$15[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	lea	ecx, DWORD PTR __Str$16[ebp]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	DWORD PTR tv256[ebp], eax
	mov	ecx, DWORD PTR tv256[ebp]
	mov	DWORD PTR tv246[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	ecx, DWORD PTR tv246[ebp]
	call	??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
	push	eax
	call	DWORD PTR __imp__fwrite
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR __Count$15[ebp], eax
	je	SHORT $LN26@overflow
	mov	DWORD PTR tv208[ebp], 1
	jmp	SHORT $LN27@overflow
$LN26@overflow:
	mov	DWORD PTR tv208[ebp], 0
$LN27@overflow:
	mov	al, BYTE PTR tv208[ebp]
	mov	BYTE PTR $T9[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T2[ebp]
	and	ecx, 1
	je	SHORT $LN36@overflow
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
$LN36@overflow:
	movzx	edx, BYTE PTR $T9[ebp]
	test	edx, edx
	je	SHORT $LN15@overflow

; 404  : 						fwrite(&*_Str.begin(), 1, _Count, _Myfile))
; 405  : 						return (_Traits::eof());	// write failed

	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T7[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$16[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T7[ebp]
	jmp	$LN1@overflow
$LN15@overflow:

; 406  : 
; 407  : 					_Wrotesome = true;	// write succeeded

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+61], 1

; 408  : 					if (_Src != &_Ch)

	lea	eax, DWORD PTR __Ch$19[ebp]
	cmp	DWORD PTR __Src$18[ebp], eax
	je	SHORT $LN16@overflow

; 409  : 						return (_Meta);	// converted whole element

	mov	eax, DWORD PTR __Meta$[ebp]
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$16[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T6[ebp]
	jmp	$LN1@overflow
$LN16@overflow:

; 410  : 
; 411  : 					if (0 < _Count)

	cmp	DWORD PTR __Count$15[ebp], 0
	jbe	SHORT $LN17@overflow
	jmp	SHORT $LN18@overflow
$LN17@overflow:

; 412  : 						;
; 413  : 					else if (_Str.size() < 4 * _STRING_INC)

	lea	ecx, DWORD PTR __Str$16[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, 32					; 00000020H
	jae	SHORT $LN19@overflow

; 414  : 						_Str.append(_STRING_INC, '\0');	// try with more space

	push	0
	push	8
	lea	ecx, DWORD PTR __Str$16[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 415  : 					else

	jmp	SHORT $LN18@overflow
$LN19@overflow:

; 416  : 						return (_Traits::eof());	// conversion failed

	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$16[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T5[ebp]
	jmp	$LN1@overflow
$LN18@overflow:

; 417  : 					break;

	jmp	SHORT $LN5@overflow
$LN21@overflow:

; 418  : 					}
; 419  : 
; 420  : 				case codecvt_base::noconv:
; 421  : 					return (_Fputc(_Ch, _Myfile) ? _Meta

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	movzx	edx, BYTE PTR __Ch$19[ebp]
	push	edx
	call	??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z	; std::_Fputc<char>
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN28@overflow
	mov	ecx, DWORD PTR __Meta$[ebp]
	mov	DWORD PTR tv230[ebp], ecx
	jmp	SHORT $LN29@overflow
$LN28@overflow:
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR tv230[ebp], eax
$LN29@overflow:
	mov	edx, DWORD PTR tv230[ebp]
	mov	DWORD PTR $T4[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$16[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T4[ebp]
	jmp	SHORT $LN1@overflow
$LN22@overflow:

; 422  : 						: _Traits::eof());	// no conversion, put as is
; 423  : 
; 424  : 				default:
; 425  : 					return (_Traits::eof());	// conversion failed

	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$16[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T3[ebp]
	jmp	SHORT $LN1@overflow
$LN5@overflow:

; 426  : 				}

	jmp	$LN4@overflow

; 427  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$16[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@overflow:

; 428  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN43@overflow
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN43@overflow:
	DD	4
	DD	$LN42@overflow
$LN42@overflow:
	DD	-45					; ffffffd3H
	DD	1
	DD	$LN37@overflow
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN38@overflow
	DD	-72					; ffffffb8H
	DD	4
	DD	$LN39@overflow
	DD	-108					; ffffff94H
	DD	28					; 0000001cH
	DD	$LN40@overflow
$LN40@overflow:
	DB	95					; 0000005fH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN39@overflow:
	DB	95					; 0000005fH
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN38@overflow:
	DB	95					; 0000005fH
	DB	83					; 00000053H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
$LN37@overflow:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$0:
	lea	ecx, DWORD PTR __Str$16[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$1:
	lea	ecx, DWORD PTR $T12[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$2:
	lea	ecx, DWORD PTR $T11[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$3:
	lea	ecx, DWORD PTR $T10[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$4:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN35@overflow
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
$LN35@overflow:
	ret	0
__ehhandler$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-528]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::overflow
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock, COMDAT
; _this$ = ecx

; 363  : 		{	// unlock file instead of stream buffer

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 364  : 		if (_Myfile)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN1@Unlock

; 365  : 			_CSTD _unlock_file(_Myfile);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	DWORD PTR __imp___unlock_file
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Unlock:

; 366  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Lock, COMDAT
; _this$ = ecx

; 357  : 		{	// lock file instead of stream buffer

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 358  : 		if (_Myfile)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN1@Lock

; 359  : 			_CSTD _lock_file(_Myfile);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	DWORD PTR __imp___lock_file
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Lock:

; 360  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Lock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ
_TEXT	SEGMENT
__Ans$ = -20						; size = 4
_this$ = -8						; size = 4
?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::close, COMDAT
; _this$ = ecx

; 341  : 		{	// close the C stream

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 342  : 		_Myt *_Ans = this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __Ans$[ebp], eax

; 343  : 		if (_Myfile == 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	jne	SHORT $LN2@close

; 344  : 			_Ans = 0;

	mov	DWORD PTR __Ans$[ebp], 0

; 345  : 		else

	jmp	SHORT $LN3@close
$LN2@close:

; 346  : 			{	// put any homing sequence and close file
; 347  : 			if (!_Endwrite())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@close

; 348  : 				_Ans = 0;

	mov	DWORD PTR __Ans$[ebp], 0
$LN4@close:

; 349  : 			if (fclose(_Myfile) != 0)

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN3@close

; 350  : 				_Ans = 0;

	mov	DWORD PTR __Ans$[ebp], 0
$LN3@close:

; 351  : 			}
; 352  : 		_Init(0, _Closefl);

	push	2
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init

; 353  : 		return (_Ans);

	mov	eax, DWORD PTR __Ans$[ebp]

; 354  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::close
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
_TEXT	SEGMENT
tv88 = -252						; size = 4
tv89 = -248						; size = 4
$T2 = -240						; size = 8
__File$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Filename$ = 8						; size = 4
__Mode$ = 12						; size = 4
__Prot$ = 16						; size = 4
?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::open, COMDAT
; _this$ = ecx

; 265  : 		{	// open a C stream with specified mode

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 266  : 		_Filet *_File;
; 267  : 		if (_Myfile != 0 || (_File = _Fiopen(_Filename, _Mode, _Prot)) == 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	jne	SHORT $LN3@open
	mov	esi, esp
	mov	eax, DWORD PTR __Prot$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mode$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Filename$[ebp]
	push	edx
	call	DWORD PTR __imp_?_Fiopen@std@@YAPAU_iobuf@@PBDHH@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __File$[ebp], eax
	cmp	DWORD PTR __File$[ebp], 0
	jne	SHORT $LN2@open
$LN3@open:

; 268  : 			return (0);	// open failed

	xor	eax, eax
	jmp	SHORT $LN1@open
$LN2@open:

; 269  : 
; 270  : 		_Init(_File, _Openfl);

	push	1
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init

; 271  : 		_Initcvt(&_USE(_Mysb::getloc(), _Cvt));

	mov	esi, esp
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QBE?AVlocale@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv89[ebp], eax
	mov	ecx, DWORD PTR tv89[ebp]
	mov	DWORD PTR tv88[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR tv88[ebp]
	push	edx
	call	??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDU_Mbstatet@@@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1locale@std@@QAE@XZ			; std::locale::~locale

; 272  : 		return (this);	// open succeeded

	mov	eax, DWORD PTR _this$[ebp]
$LN1@open:

; 273  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::open
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 151  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@

; 152  : 		if (_Myfile != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN2@basic_file

; 153  : 			_Reset_back();	// revert from _Mychar buffer

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
$LN2@basic_file:

; 154  : 		if (_Closef)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+72]
	test	ecx, ecx
	je	SHORT $LN1@basic_file

; 155  : 			close();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
$LN1@basic_file:

; 156  : 		}

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__File$ = 8						; size = 4
??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 146  : 		{	// construct from pointer to C stream

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 145  : 		: _Mysb()

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 146  : 		{	// construct from pointer to C stream

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@

; 147  : 		_Init(_File, _Newfl);

	push	0
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init

; 148  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ PROC ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 1083 : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-104]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx-104], OFFSET ??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-104]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, 104				; 00000068H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-104]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax-108], edx

; 1084 : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 100				; 00000064H
	call	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 96					; 00000060H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
_TEXT	SEGMENT
$T2 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Str$ = 8						; size = 4
__Mode$ = 12						; size = 4
__Prot$ = 16						; size = 4
_$initVBases$ = 20					; size = 4
??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z PROC ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 965  : 		{	// construct with named file and specified mode

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	cmp	DWORD PTR _$initVBases$[ebp], 0
	je	SHORT $LN2@basic_ofst
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
$LN2@basic_ofst:

; 964  : 		: _Mybase(&_Filebuffer)

	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 965  : 		{	// construct with named file and specified mode

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx], OFFSET ??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, 104				; 00000068H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax-4], edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 966  : 		if (_Filebuffer.open(_Str.c_str(), _Mode | ios_base::out, _Prot) == 0)

	mov	eax, DWORD PTR __Prot$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mode$[ebp]
	or	ecx, 2
	push	ecx
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
	test	eax, eax
	jne	SHORT $LN1@basic_ofst

; 967  : 			_Myios::setstate(ios_base::failbit);

	mov	esi, esp
	push	0
	push	2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@basic_ofst:

; 968  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN6@basic_ofst
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN6@basic_ofst:
	ret	0
__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
__ehhandler$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z ENDP ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
_TEXT	SEGMENT
$T2 = -252						; size = 4
__Ans$ = -48						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2355 : 	{	// return string + NTCS

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T2[ebp], 0

; 2356 : 	basic_string<_Elem, _Traits, _Alloc> _Ans;

	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2357 : 	_Ans.reserve(_Left.size() + _Traits::length(_Right));

	mov	ecx, DWORD PTR __Left$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	esi, eax
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	add	esi, eax
	push	esi
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve

; 2358 : 	_Ans += _Left;

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 2359 : 	_Ans += _Right;

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 2360 : 	return (_Ans);

	lea	eax, DWORD PTR __Ans$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2361 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@operator:
	DD	1
	DD	$LN8@operator
$LN8@operator:
	DD	-48					; ffffffd0H
	DD	28					; 0000001cH
	DD	$LN6@operator
$LN6@operator:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z$0:
	lea	ecx, DWORD PTR __Ans$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\contactlist.h
;	COMDAT ?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
tv232 = -1208						; size = 4
tv230 = -1208						; size = 4
tv228 = -1204						; size = 4
tv222 = -1204						; size = 4
tv219 = -1204						; size = 4
tv133 = -1204						; size = 4
tv92 = -1204						; size = 4
tv233 = -1200						; size = 4
tv198 = -1200						; size = 4
tv171 = -1200						; size = 4
tv142 = -1200						; size = 4
tv66 = -1200						; size = 4
$T2 = -1192						; size = 28
$T3 = -1153						; size = 1
$T4 = -1144						; size = 28
$T5 = -1105						; size = 1
$T6 = -1096						; size = 12
$T7 = -1073						; size = 1
$T8 = -1064						; size = 28
$T9 = -1028						; size = 28
_it$10 = -608						; size = 12
_people$ = -588						; size = 96
_companies$ = -484					; size = 96
_peopleFile$ = -380					; size = 176
_companiesFile$ = -196					; size = 176
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_contactList$ = 8					; size = 4
_contactFileName$ = 12					; size = 4
?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; updateContactLists, COMDAT

; 16   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1196				; 000004acH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1208]
	mov	ecx, 299				; 0000012bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 17   : 	// Sort the list
; 18   : 	Chris::sort(contactList);

	mov	eax, DWORD PTR _contactList$[ebp]
	push	eax
	call	?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z ; Chris::sort
	add	esp, 4

; 19   : 
; 20   : 	// Output files for companies and people
; 21   : 	ofstream companiesFile(contactFileName + "Companies.txt", ios_base::trunc);

	push	1
	push	64					; 00000040H
	push	16					; 00000010H
	push	OFFSET ??_C@_0O@MIMFNFBN@Companies?4txt?$AA@
	mov	eax, DWORD PTR _contactFileName$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T9[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv233[ebp], eax
	mov	edx, DWORD PTR tv233[ebp]
	mov	DWORD PTR tv219[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR tv219[ebp]
	push	eax
	lea	ecx, DWORD PTR _companiesFile$[ebp]
	call	??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T9[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 22   : 	ofstream peopleFile(contactFileName + "People.txt", ios_base::trunc);

	push	1
	push	64					; 00000040H
	push	16					; 00000010H
	push	OFFSET ??_C@_0L@GLLABICK@People?4txt?$AA@
	mov	eax, DWORD PTR _contactFileName$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T8[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv66[ebp], eax
	mov	edx, DWORD PTR tv66[ebp]
	mov	DWORD PTR tv222[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv222[ebp]
	push	eax
	lea	ecx, DWORD PTR _peopleFile$[ebp]
	call	??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 23   : 
; 24   : 	// Boost archive text files for both types of contacts
; 25   : 	boost::archive::text_oarchive companies(companiesFile);

	push	0
	lea	eax, DWORD PTR _companiesFile$[ebp]
	push	eax
	lea	ecx, DWORD PTR _companies$[ebp]
	call	??0text_oarchive@archive@boost@@QAE@AAV?$basic_ostream@DU?$char_traits@D@std@@@std@@I@Z ; boost::archive::text_oarchive::text_oarchive
	mov	BYTE PTR __$EHRec$[ebp+8], 6

; 26   : 	boost::archive::text_oarchive people(peopleFile);

	push	0
	lea	eax, DWORD PTR _peopleFile$[ebp]
	push	eax
	lea	ecx, DWORD PTR _people$[ebp]
	call	??0text_oarchive@archive@boost@@QAE@AAV?$basic_ostream@DU?$char_traits@D@std@@@std@@I@Z ; boost::archive::text_oarchive::text_oarchive
	mov	BYTE PTR __$EHRec$[ebp+8], 7

; 27   : 
; 28   : 	// Save the list to a file
; 29   : 	for (vector<shared_ptr<CContact>>::iterator it = contactList.begin(); it != contactList.end(); ++it)

	lea	eax, DWORD PTR _it$10[ebp]
	push	eax
	mov	ecx, DWORD PTR _contactList$[ebp]
	call	?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::begin
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	jmp	SHORT $LN4@updateCont
$LN2@updateCont:
	lea	ecx, DWORD PTR _it$10[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++
$LN4@updateCont:
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR _contactList$[ebp]
	call	?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
	mov	DWORD PTR tv142[ebp], eax
	mov	ecx, DWORD PTR tv142[ebp]
	mov	DWORD PTR tv228[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	edx, DWORD PTR tv228[ebp]
	push	edx
	lea	ecx, DWORD PTR _it$10[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator!=
	mov	BYTE PTR $T7[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T7[ebp]
	test	eax, eax
	je	$LN3@updateCont

; 30   : 	{
; 31   : 		// If it's a person, save it to the person file
; 32   : 		if ((*it)->classType() == "CPerson")

	lea	ecx, DWORD PTR _it$10[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
	mov	ecx, eax
	call	??C?$shared_ptr@VCContact@@@std@@QBEPAVCContact@@XZ ; std::shared_ptr<CContact>::operator->
	mov	DWORD PTR tv171[ebp], eax
	push	OFFSET ??_C@_07EEOOECP@CPerson?$AA@
	mov	esi, esp
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR tv171[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv171[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv133[ebp], eax
	mov	ecx, DWORD PTR tv133[ebp]
	mov	DWORD PTR tv230[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	edx, DWORD PTR tv230[ebp]
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	BYTE PTR $T5[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, BYTE PTR $T5[ebp]
	test	eax, eax
	je	SHORT $LN5@updateCont

; 33   : 		{
; 34   : 			people << *(*it);

	lea	ecx, DWORD PTR _it$10[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
	mov	ecx, eax
	call	??D?$shared_ptr@VCContact@@@std@@QBEAAVCContact@@XZ ; std::shared_ptr<CContact>::operator*
	push	eax
	lea	ecx, DWORD PTR _people$[ebp+24]
	call	??$?6VCContact@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVCContact@@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<CContact>
	jmp	$LN6@updateCont
$LN5@updateCont:

; 35   : 		}
; 36   : 		// If it's a company, save it to the company file
; 37   : 		else if ((*it)->classType() == "CCompany")

	lea	ecx, DWORD PTR _it$10[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
	mov	ecx, eax
	call	??C?$shared_ptr@VCContact@@@std@@QBEPAVCContact@@XZ ; std::shared_ptr<CContact>::operator->
	mov	DWORD PTR tv198[ebp], eax
	push	OFFSET ??_C@_08FGJDGFCJ@CCompany?$AA@
	mov	esi, esp
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR tv198[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv198[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv92[ebp], eax
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR tv232[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	edx, DWORD PTR tv232[ebp]
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	BYTE PTR $T3[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, BYTE PTR $T3[ebp]
	test	eax, eax
	je	SHORT $LN6@updateCont

; 38   : 		{
; 39   : 			companies << *(*it);

	lea	ecx, DWORD PTR _it$10[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
	mov	ecx, eax
	call	??D?$shared_ptr@VCContact@@@std@@QBEAAVCContact@@XZ ; std::shared_ptr<CContact>::operator*
	push	eax
	lea	ecx, DWORD PTR _companies$[ebp+24]
	call	??$?6VCContact@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVCContact@@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<CContact>
$LN6@updateCont:

; 40   : 		}

	jmp	$LN2@updateCont
$LN3@updateCont:

; 41   : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR _it$10[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ

; 42   : }

	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _people$[ebp]
	call	??1text_oarchive@archive@boost@@UAE@XZ	; boost::archive::text_oarchive::~text_oarchive
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _companies$[ebp]
	call	??1text_oarchive@archive@boost@@UAE@XZ	; boost::archive::text_oarchive::~text_oarchive
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _peopleFile$[ebp]
	call	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _companiesFile$[ebp]
	call	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN26@updateCont
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1208				; 000004b8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN26@updateCont:
	DD	5
	DD	$LN25@updateCont
$LN25@updateCont:
	DD	-196					; ffffff3cH
	DD	176					; 000000b0H
	DD	$LN19@updateCont
	DD	-380					; fffffe84H
	DD	176					; 000000b0H
	DD	$LN20@updateCont
	DD	-484					; fffffe1cH
	DD	96					; 00000060H
	DD	$LN21@updateCont
	DD	-588					; fffffdb4H
	DD	96					; 00000060H
	DD	$LN22@updateCont
	DD	-608					; fffffda0H
	DD	12					; 0000000cH
	DD	$LN23@updateCont
$LN23@updateCont:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
$LN22@updateCont:
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN21@updateCont:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN20@updateCont:
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN19@updateCont:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$0:
	lea	ecx, DWORD PTR $T9[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$1:
	lea	ecx, DWORD PTR _companiesFile$[ebp]
	jmp	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$2:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$3:
	lea	ecx, DWORD PTR _peopleFile$[ebp]
	jmp	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$4:
	lea	ecx, DWORD PTR _companies$[ebp]
	jmp	??1text_oarchive@archive@boost@@UAE@XZ	; boost::archive::text_oarchive::~text_oarchive
__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$5:
	lea	ecx, DWORD PTR _people$[ebp]
	jmp	??1text_oarchive@archive@boost@@UAE@XZ	; boost::archive::text_oarchive::~text_oarchive
__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$6:
	lea	ecx, DWORD PTR _it$10[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$7:
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$8:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$9:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1212]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; updateContactLists
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$shared_ptr@VCContact@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$shared_ptr@VCContact@@@std@@QAEPAXI@Z PROC	; std::shared_ptr<CContact>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$shared_ptr@VCContact@@@std@@QAE@XZ	; std::shared_ptr<CContact>::~shared_ptr<CContact>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	8
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$shared_ptr@VCContact@@@std@@QAEPAXI@Z ENDP	; std::shared_ptr<CContact>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??C?$shared_ptr@VCContact@@@std@@QBEPAVCContact@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??C?$shared_ptr@VCContact@@@std@@QBEPAVCContact@@XZ PROC ; std::shared_ptr<CContact>::operator->, COMDAT
; _this$ = ecx

; 634  : 		{	// return pointer to resource

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 635  : 		return (this->_Get());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get@?$_Ptr_base@VCContact@@@std@@QBEPAVCContact@@XZ ; std::_Ptr_base<CContact>::_Get

; 636  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$shared_ptr@VCContact@@@std@@QBEPAVCContact@@XZ ENDP ; std::shared_ptr<CContact>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??D?$shared_ptr@VCContact@@@std@@QBEAAVCContact@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$shared_ptr@VCContact@@@std@@QBEAAVCContact@@XZ PROC ; std::shared_ptr<CContact>::operator*, COMDAT
; _this$ = ecx

; 629  : 		{	// return reference to resource

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return (*this->_Get());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get@?$_Ptr_base@VCContact@@@std@@QBEPAVCContact@@XZ ; std::_Ptr_base<CContact>::_Get

; 631  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$shared_ptr@VCContact@@@std@@QBEAAVCContact@@XZ ENDP ; std::shared_ptr<CContact>::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?swap@?$shared_ptr@VCContact@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other$ = 8						; size = 4
?swap@?$shared_ptr@VCContact@@@std@@QAEXAAV12@@Z PROC	; std::shared_ptr<CContact>::swap, COMDAT
; _this$ = ecx

; 619  : 		{	// swap pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 620  : 		this->_Swap(_Other);

	mov	eax, DWORD PTR __Other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap@?$_Ptr_base@VCContact@@@std@@QAEXAAV12@@Z ; std::_Ptr_base<CContact>::_Swap

; 621  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?swap@?$shared_ptr@VCContact@@@std@@QAEXAAV12@@Z ENDP	; std::shared_ptr<CContact>::swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??4?$shared_ptr@VCContact@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
$T1 = -216						; size = 8
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??4?$shared_ptr@VCContact@@@std@@QAEAAV01@ABV01@@Z PROC	; std::shared_ptr<CContact>::operator=, COMDAT
; _this$ = ecx

; 571  : 		{	// assign shared ownership of resource owned by _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 572  : 		shared_ptr(_Right).swap(*this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$shared_ptr@VCContact@@@std@@QAE@ABV01@@Z ; std::shared_ptr<CContact>::shared_ptr<CContact>
	mov	ecx, eax
	call	?swap@?$shared_ptr@VCContact@@@std@@QAEXAAV12@@Z ; std::shared_ptr<CContact>::swap
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1?$shared_ptr@VCContact@@@std@@QAE@XZ	; std::shared_ptr<CContact>::~shared_ptr<CContact>

; 573  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 574  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$shared_ptr@VCContact@@@std@@QAEAAV01@ABV01@@Z ENDP	; std::shared_ptr<CContact>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??1?$shared_ptr@VCContact@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$shared_ptr@VCContact@@@std@@QAE@XZ PROC		; std::shared_ptr<CContact>::~shared_ptr<CContact>, COMDAT
; _this$ = ecx

; 566  : 		{	// release resource

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$shared_ptr@VCContact@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 567  : 		this->_Decref();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Decref@?$_Ptr_base@VCContact@@@std@@QAEXXZ ; std::_Ptr_base<CContact>::_Decref

; 568  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$shared_ptr@VCContact@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$shared_ptr@VCContact@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$shared_ptr@VCContact@@@std@@QAE@XZ ENDP		; std::shared_ptr<CContact>::~shared_ptr<CContact>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??4?$shared_ptr@VCContact@@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
$T1 = -216						; size = 8
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??4?$shared_ptr@VCContact@@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::shared_ptr<CContact>::operator=, COMDAT
; _this$ = ecx

; 553  : 		{	// take resource from _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 554  : 		shared_ptr(_STD move(_Right)).swap(*this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	call	??$move@AAV?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::move<std::shared_ptr<CContact> &>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$shared_ptr@VCContact@@@std@@QAE@$$QAV01@@Z ; std::shared_ptr<CContact>::shared_ptr<CContact>
	mov	ecx, eax
	call	?swap@?$shared_ptr@VCContact@@@std@@QAEXAAV12@@Z ; std::shared_ptr<CContact>::swap
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1?$shared_ptr@VCContact@@@std@@QAE@XZ	; std::shared_ptr<CContact>::~shared_ptr<CContact>

; 555  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 556  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$shared_ptr@VCContact@@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::shared_ptr<CContact>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$shared_ptr@VCContact@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$shared_ptr@VCContact@@@std@@QAE@$$QAV01@@Z PROC	; std::shared_ptr<CContact>::shared_ptr<CContact>, COMDAT
; _this$ = ecx

; 522  : 		{	// construct shared_ptr object that takes resource from _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$shared_ptr@VCContact@@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 521  : 		: _Mybase(_STD move(_Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$move@AAV?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::move<std::shared_ptr<CContact> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Ptr_base@VCContact@@@std@@QAE@$$QAV01@@Z ; std::_Ptr_base<CContact>::_Ptr_base<CContact>

; 523  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$shared_ptr@VCContact@@@std@@QAE@$$QAV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$shared_ptr@VCContact@@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$shared_ptr@VCContact@@@std@@QAE@$$QAV01@@Z ENDP	; std::shared_ptr<CContact>::shared_ptr<CContact>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$shared_ptr@VCContact@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Other$ = 8						; size = 4
??0?$shared_ptr@VCContact@@@std@@QAE@ABV01@@Z PROC	; std::shared_ptr<CContact>::shared_ptr<CContact>, COMDAT
; _this$ = ecx

; 492  : 	shared_ptr(const _Myt& _Other) _NOEXCEPT

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$shared_ptr@VCContact@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 493  : 		{	// construct shared_ptr object that owns same resource as _Other

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Ptr_base@VCContact@@@std@@QAE@XZ	; std::_Ptr_base<CContact>::_Ptr_base<CContact>

; 494  : 		this->_Reset(_Other);

	mov	eax, DWORD PTR __Other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset@VCContact@@@?$_Ptr_base@VCContact@@@std@@QAEXABV01@@Z ; std::_Ptr_base<CContact>::_Reset<CContact>

; 495  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$shared_ptr@VCContact@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$shared_ptr@VCContact@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$shared_ptr@VCContact@@@std@@QAE@ABV01@@Z ENDP	; std::shared_ptr<CContact>::shared_ptr<CContact>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Reset0@?$_Ptr_base@VCContact@@@std@@QAEXPAVCContact@@PAV_Ref_count_base@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other_ptr$ = 8					; size = 4
__Other_rep$ = 12					; size = 4
?_Reset0@?$_Ptr_base@VCContact@@@std@@QAEXPAVCContact@@PAV_Ref_count_base@2@@Z PROC ; std::_Ptr_base<CContact>::_Reset0, COMDAT
; _this$ = ecx

; 393  : 		{	// release resource and take new resource

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 394  : 		if (_Rep != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Reset0

; 395  : 			_Rep->_Decref();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?_Decref@_Ref_count_base@std@@QAEXXZ	; std::_Ref_count_base::_Decref
$LN2@Reset0:

; 396  : 		_Rep = _Other_rep;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Other_rep$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 397  : 		_Ptr = _Other_ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Other_ptr$[ebp]
	mov	DWORD PTR [eax], ecx

; 398  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Reset0@?$_Ptr_base@VCContact@@@std@@QAEXPAVCContact@@PAV_Ref_count_base@2@@Z ENDP ; std::_Ptr_base<CContact>::_Reset0
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Reset@?$_Ptr_base@VCContact@@@std@@QAEXPAVCContact@@PAV_Ref_count_base@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other_ptr$ = 8					; size = 4
__Other_rep$ = 12					; size = 4
?_Reset@?$_Ptr_base@VCContact@@@std@@QAEXPAVCContact@@PAV_Ref_count_base@2@@Z PROC ; std::_Ptr_base<CContact>::_Reset, COMDAT
; _this$ = ecx

; 376  : 		{	// release resource and take _Other_ptr through _Other_rep

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		if (_Other_rep)

	cmp	DWORD PTR __Other_rep$[ebp], 0
	je	SHORT $LN2@Reset

; 378  : 			_Other_rep->_Incref();

	mov	ecx, DWORD PTR __Other_rep$[ebp]
	call	?_Incref@_Ref_count_base@std@@QAEXXZ	; std::_Ref_count_base::_Incref
$LN2@Reset:

; 379  : 		_Reset0(_Other_ptr, _Other_rep);

	mov	eax, DWORD PTR __Other_rep$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Other_ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset0@?$_Ptr_base@VCContact@@@std@@QAEXPAVCContact@@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<CContact>::_Reset0

; 380  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Reset@?$_Ptr_base@VCContact@@@std@@QAEXPAVCContact@@PAV_Ref_count_base@2@@Z ENDP ; std::_Ptr_base<CContact>::_Reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Decref@?$_Ptr_base@VCContact@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Decref@?$_Ptr_base@VCContact@@@std@@QAEXXZ PROC	; std::_Ptr_base<CContact>::_Decref, COMDAT
; _this$ = ecx

; 336  : 		{	// decrement reference count

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 337  : 		if (_Rep != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Decref

; 338  : 			_Rep->_Decref();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?_Decref@_Ref_count_base@std@@QAEXXZ	; std::_Ref_count_base::_Decref
$LN1@Decref:

; 339  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Decref@?$_Ptr_base@VCContact@@@std@@QAEXXZ ENDP	; std::_Ptr_base<CContact>::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Get@?$_Ptr_base@VCContact@@@std@@QBEPAVCContact@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get@?$_Ptr_base@VCContact@@@std@@QBEPAVCContact@@XZ PROC ; std::_Ptr_base<CContact>::_Get, COMDAT
; _this$ = ecx

; 326  : 		{	// return pointer to resource

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 327  : 		return (_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 328  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Ptr_base@VCContact@@@std@@QBEPAVCContact@@XZ ENDP ; std::_Ptr_base<CContact>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Swap@?$_Ptr_base@VCContact@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Swap@?$_Ptr_base@VCContact@@@std@@QAEXAAV12@@Z PROC	; std::_Ptr_base<CContact>::_Swap, COMDAT
; _this$ = ecx

; 309  : 		{	// swap pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 310  : 		_STD swap(_Rep, _Right._Rep);

	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	??$swap@PAV_Ref_count_base@std@@X@std@@YAXAAPAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *,void>
	add	esp, 8

; 311  : 		_STD swap(_Ptr, _Right._Ptr);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$swap@PAVCContact@@X@std@@YAXAAPAVCContact@@0@Z ; std::swap<CContact *,void>
	add	esp, 8

; 312  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Swap@?$_Ptr_base@VCContact@@@std@@QAEXAAV12@@Z ENDP	; std::_Ptr_base<CContact>::_Swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$_Ptr_base@VCContact@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??0?$_Ptr_base@VCContact@@@std@@QAE@$$QAV01@@Z PROC	; std::_Ptr_base<CContact>::_Ptr_base<CContact>, COMDAT
; _this$ = ecx

; 279  : 		{	// construct _Ptr_base object that takes resource from _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 278  : 		: _Ptr(_Right._Ptr), _Rep(_Right._Rep)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 280  : 		_Right._Ptr = 0;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax], 0

; 281  : 		_Right._Rep = 0;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax+4], 0

; 282  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Ptr_base@VCContact@@@std@@QAE@$$QAV01@@Z ENDP	; std::_Ptr_base<CContact>::_Ptr_base<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$_Ptr_base@VCContact@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Ptr_base@VCContact@@@std@@QAE@XZ PROC		; std::_Ptr_base<CContact>::_Ptr_base<CContact>, COMDAT
; _this$ = ecx

; 274  : 		{	// construct

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 273  : 		: _Ptr(0), _Rep(0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 275  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Ptr_base@VCContact@@@std@@QAE@XZ ENDP		; std::_Ptr_base<CContact>::_Ptr_base<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
$T2 = -244						; size = 4
__Tmp$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator-, COMDAT
; _this$ = ecx

; 383  : 		{	// return this - integer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0

; 384  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 385  : 		return (_Tmp -= _Off);

	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator-=
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 386  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN9@operator:
	DD	1
	DD	$LN8@operator
$LN8@operator:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN6@operator
$LN6@operator:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z$0:
	lea	ecx, DWORD PTR __Tmp$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator-
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator-=, COMDAT
; _this$ = ecx

; 378  : 		{	// decrement by integer

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 379  : 		return (*this += -_Off);

	mov	eax, DWORD PTR __Off$[ebp]
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+=

; 380  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator-=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
$T2 = -244						; size = 4
__Tmp$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+, COMDAT
; _this$ = ecx

; 372  : 		{	// return this + integer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0

; 373  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 374  : 		return (_Tmp += _Off);

	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+=
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 375  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN9@operator:
	DD	1
	DD	$LN8@operator
$LN8@operator:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN6@operator
$LN6@operator:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z$0:
	lea	ecx, DWORD PTR __Tmp$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+=, COMDAT
; _this$ = ecx

; 366  : 		{	// increment by integer

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 367  : 		*(_Mybase *)this += _Off;

	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+=

; 368  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 369  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++, COMDAT
; _this$ = ecx

; 340  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 341  : 		++*(_Mybase *)this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++

; 342  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 343  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*, COMDAT
; _this$ = ecx

; 330  : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 331  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEABV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*

; 332  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >, COMDAT
; _this$ = ecx

; 313  : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 312  : 		: _Mybase(_Parg, _Pvector)

	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >

; 314  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Compat, COMDAT
; _this$ = ecx

; 245  : 		{	// test for compatible iterator pair

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 246  : 		if (this->_Getcont() != _Right._Getcont())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	je	$LN1@Compat

; 247  : 			{
; 248  : 			_DEBUG_ERROR("vector iterators incompatible");

	mov	esi, esp
	push	248					; 000000f8H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 249  : 			_SCL_SECURE_INVALID_ARGUMENT;

	mov	eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
	test	eax, eax
	je	SHORT $LN4@Compat
	xor	ecx, ecx
	jne	SHORT $LN5@Compat
$LN4@Compat:
	mov	esi, esp
	push	OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	249					; 000000f9H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN5@Compat
	int	3
$LN5@Compat:
	mov	esi, esp
	push	0
	push	249					; 000000f9H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BAE@OFDFOOPB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Compat:

; 250  : 			}
; 251  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator!=, COMDAT
; _this$ = ecx

; 218  : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 219  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 220  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator==, COMDAT
; _this$ = ecx

; 212  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 213  : 		_Compat(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Compat

; 214  : 		return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 215  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Mycont$1 = -20					; size = 4
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+=, COMDAT
; _this$ = ecx

; 155  : 		{	// increment by integer

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 156  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 157  : 		if (_Off != 0)

	cmp	DWORD PTR __Off$[ebp], 0
	je	$LN2@operator

; 158  : 			{
; 159  : 			const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$1[ebp], eax

; 160  : 			if (_Mycont == 0
; 161  : 				|| _Ptr + _Off < _Mycont->_Myfirst
; 162  : 				|| _Mycont->_Mylast < _Ptr + _Off)

	cmp	DWORD PTR __Mycont$1[ebp], 0
	je	SHORT $LN4@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [ecx+edx*8]
	mov	ecx, DWORD PTR __Mycont$1[ebp]
	cmp	eax, DWORD PTR [ecx+4]
	jb	SHORT $LN4@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [ecx+edx*8]
	mov	ecx, DWORD PTR __Mycont$1[ebp]
	cmp	DWORD PTR [ecx+8], eax
	jae	$LN2@operator
$LN4@operator:

; 163  : 				{
; 164  : 				_DEBUG_ERROR("vector iterator + offset out of range");

	mov	esi, esp
	push	164					; 000000a4H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 165  : 				_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN6@operator
	xor	ecx, ecx
	jne	SHORT $LN7@operator
$LN6@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	165					; 000000a5H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN7@operator
	int	3
$LN7@operator:
	mov	esi, esp
	push	0
	push	165					; 000000a5H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BAM@HBINONGC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:

; 166  : 				}
; 167  : 			}
; 168  : 
; 169  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 170  : 		if (_Off != 0)
; 171  : 			{
; 172  : 			const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());
; 173  : 			_SCL_SECURE_VALIDATE(_Mycont != 0);
; 174  : 			_SCL_SECURE_VALIDATE_RANGE(_Mycont->_Myfirst <= _Ptr + _Off
; 175  : 				&& _Ptr + _Off <= _Mycont->_Mylast);
; 176  : 			}
; 177  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 178  : 
; 179  : 		_Ptr += _Off;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [ecx+edx*8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 180  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 181  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Mycont$ = -20						; size = 4
_this$ = -8						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++, COMDAT
; _this$ = ecx

; 95   : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 96   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 97   : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax

; 98   : 		if (_Mycont == 0
; 99   : 			|| _Ptr == nullptr_t{}
; 100  : 			|| _Mycont->_Mylast <= _Ptr)

	cmp	DWORD PTR __Mycont$[ebp], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR __Mycont$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN2@operator
$LN3@operator:

; 101  : 			{	// report error
; 102  : 			_DEBUG_ERROR("vector iterator not incrementable");

	mov	esi, esp
	push	102					; 00000066H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 103  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	103					; 00000067H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	mov	esi, esp
	push	0
	push	103					; 00000067H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BAM@EPPOFCB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:

; 104  : 			}
; 105  : 
; 106  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 107  : 		_SCL_SECURE_VALIDATE(_Ptr != _Tptr());
; 108  : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());
; 109  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 110  : 		_SCL_SECURE_VALIDATE_RANGE(_Ptr < _Mycont->_Mylast);
; 111  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 112  : 
; 113  : 		++_Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 114  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 115  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEABV?$shared_ptr@VCContact@@@1@XZ
_TEXT	SEGMENT
__Mycont$ = -20						; size = 4
_this$ = -8						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEABV?$shared_ptr@VCContact@@@1@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*, COMDAT
; _this$ = ecx

; 65   : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 67   : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax

; 68   : 		if (_Mycont == 0
; 69   : 			|| _Ptr == _Tptr()
; 70   : 			|| _Ptr < _Mycont->_Myfirst
; 71   : 			|| _Mycont->_Mylast <= _Ptr)

	cmp	DWORD PTR __Mycont$[ebp], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Mycont$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jb	SHORT $LN3@operator
	mov	eax, DWORD PTR __Mycont$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN2@operator
$LN3@operator:

; 72   : 			{	// report error
; 73   : 			_DEBUG_ERROR("vector iterator not dereferencable");

	mov	esi, esp
	push	73					; 00000049H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 74   : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	74					; 0000004aH
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	mov	esi, esp
	push	0
	push	74					; 0000004aH
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BAK@LJFLLKPP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:

; 75   : 			}
; 76   : 
; 77   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 78   : 		_SCL_SECURE_VALIDATE(_Ptr != _Tptr());
; 79   : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());
; 80   : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 81   : 		_SCL_SECURE_VALIDATE_RANGE(_Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast);
; 82   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 83   : 
; 84   : 		_Analysis_assume_(_Ptr != _Tptr());
; 85   : 
; 86   : 		return (*_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 87   : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEABV?$shared_ptr@VCContact@@@1@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >, COMDAT
; _this$ = ecx

; 47   : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 46   : 		: _Ptr(_Parg)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 48   : 		this->_Adopt(_Pvector);

	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 49   : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z
_TEXT	SEGMENT
__Pnext$ = -44						; size = 4
__Lock$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Orphan_range, COMDAT
; _this$ = ecx

; 1775 : 		{	// orphan iterators within specified (inclusive) range

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1776 : 		_Lockit _Lock(_LOCK_DEBUG);

	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1777 : 		const_iterator **_Pnext = (const_iterator **)this->_Getpfirst();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax

; 1778 : 		if (_Pnext != 0)

	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN4@Orphan_ran
$LN2@Orphan_ran:

; 1779 : 			{	// test an iterator
; 1780 : 			while (*_Pnext != 0)

	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN4@Orphan_ran

; 1781 : 				if ((*_Pnext)->_Ptr < _First || _Last < (*_Pnext)->_Ptr)

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR __First$[ebp]
	jb	SHORT $LN7@Orphan_ran
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Last$[ebp]
	cmp	edx, DWORD PTR [ecx+8]
	jae	SHORT $LN5@Orphan_ran
$LN7@Orphan_ran:

; 1782 : 					_Pnext = (const_iterator **)(*_Pnext)->_Getpnext();

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax

; 1783 : 				else

	jmp	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:

; 1784 : 					{	// orphan the iterator
; 1785 : 					(*_Pnext)->_Clrcont();

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont

; 1786 : 					*_Pnext = *(const_iterator **)(*_Pnext)->_Getpnext();

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN6@Orphan_ran:

; 1787 : 					}

	jmp	SHORT $LN2@Orphan_ran
$LN4@Orphan_ran:

; 1788 : 			}
; 1789 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Orphan_ran
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN13@Orphan_ran:
	DD	1
	DD	$LN12@Orphan_ran
$LN12@Orphan_ran:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN10@Orphan_ran
$LN10@Orphan_ran:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Orphan_range
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Xlen@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xlen@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXXZ PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Xlen, COMDAT
; _this$ = ecx

; 1764 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1765 : 		_Xlength_error("vector<T> too long");

	mov	esi, esp
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xlen:

; 1766 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXXZ ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Tidy@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXXZ PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Tidy, COMDAT
; _this$ = ecx

; 1636 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1637 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
	cmp	DWORD PTR [eax], 0
	je	$LN1@Tidy

; 1638 : 			{	// something to free, destroy and deallocate it
; 1639 : 			this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Orphan_all

; 1640 : 			_Destroy(this->_Myfirst(), this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXPAV?$shared_ptr@VCContact@@@2@0@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Destroy

; 1641 : 			this->_Getal().deallocate(this->_Myfirst(),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
	mov	ecx, DWORD PTR [esi]
	sub	ecx, DWORD PTR [eax]
	sar	ecx, 3
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::deallocate

; 1642 : 				this->_Myend() - this->_Myfirst());
; 1643 : 			this->_Myfirst() = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
	mov	DWORD PTR [eax], 0

; 1644 : 			this->_Mylast() = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	DWORD PTR [eax], 0

; 1645 : 			this->_Myend() = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
	mov	DWORD PTR [eax], 0
$LN1@Tidy:

; 1646 : 			}
; 1647 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXXZ ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reserve@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Reserve, COMDAT
; _this$ = ecx

; 1626 : 		{	// ensure room for _Count new elements, grow exponentially

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1627 : 		if (_Unused_capacity() < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve

; 1628 : 			{	// need more room, try to get it
; 1629 : 			if (max_size() - size() < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN3@Reserve

; 1630 : 				_Xlen();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Xlen
$LN3@Reserve:

; 1631 : 			_Reallocate(_Grow_to(size() + _Count));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEII@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Reallocate
$LN4@Reserve:

; 1632 : 			}
; 1633 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -48						; size = 4
__Ptr$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Reallocate, COMDAT
; _this$ = ecx

; 1601 : 		{	// move to array of exactly _Count elements

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1602 : 		pointer _Ptr = this->_Getal().allocate(_Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEPAV?$shared_ptr@VCContact@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax

; 1603 : 
; 1604 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1605 : 		_Umove(this->_Myfirst(), this->_Mylast(), _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAV?$shared_ptr@VCContact@@@std@@@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEPAV?$shared_ptr@VCContact@@@1@PAV21@00@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Umove<std::shared_ptr<CContact> *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z$0:

; 1606 : 		_CATCH_ALL
; 1607 : 		this->_Getal().deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::deallocate

; 1608 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1609 : 		_CATCH_END

	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z$1:

; 1610 : 
; 1611 : 		size_type _Size = size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::size
	mov	DWORD PTR __Size$[ebp], eax

; 1612 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Reallocate

; 1613 : 			{	// destroy and deallocate old array
; 1614 : 			_Destroy(this->_Myfirst(), this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXPAV?$shared_ptr@VCContact@@@2@0@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Destroy

; 1615 : 			this->_Getal().deallocate(this->_Myfirst(),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [esi]
	sar	eax, 3
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::deallocate
$LN3@Reallocate:

; 1616 : 				this->_Myend() - this->_Myfirst());
; 1617 : 			}
; 1618 : 
; 1619 : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Orphan_all

; 1620 : 		this->_Myend() = _Ptr + _Count;

	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	lea	esi, DWORD PTR [ecx+eax*8]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
	mov	DWORD PTR [eax], esi

; 1621 : 		this->_Mylast() = _Ptr + _Size;

	mov	eax, DWORD PTR __Size$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	lea	esi, DWORD PTR [ecx+eax*8]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	DWORD PTR [eax], esi

; 1622 : 		this->_Myfirst() = _Ptr;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx
$LN4@Reallocate:

; 1623 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Reallocate
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBE_NPBV?$shared_ptr@VCContact@@@2@@Z
_TEXT	SEGMENT
tv82 = -208						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBE_NPBV?$shared_ptr@VCContact@@@2@@Z PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Inside, COMDAT
; _this$ = ecx

; 1596 : 		{	// test if _Ptr points inside vector

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1597 : 		return (_Ptr < _Unfancy(this->_Mylast()) && _Unfancy(this->_Myfirst()) <= _Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	call	??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unfancy<std::shared_ptr<CContact> >
	add	esp, 4
	cmp	DWORD PTR __Ptr$[ebp], eax
	jae	SHORT $LN3@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unfancy<std::shared_ptr<CContact> >
	add	esp, 4
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv82[ebp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv82[ebp], 0
$LN4@Inside:
	mov	al, BYTE PTR tv82[ebp]

; 1598 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBE_NPBV?$shared_ptr@VCContact@@@2@@Z ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Grow_to@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
__Capacity$ = -20					; size = 4
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEII@Z PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Grow_to, COMDAT
; _this$ = ecx

; 1585 : 		{	// grow by 50% or at least to _Count

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1586 : 		size_type _Capacity = capacity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax

; 1587 : 
; 1588 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax

; 1589 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%
; 1590 : 		if (_Capacity < _Count)

	mov	eax, DWORD PTR __Capacity$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN2@Grow_to

; 1591 : 			_Capacity = _Count;

	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
$LN2@Grow_to:

; 1592 : 		return (_Capacity);

	mov	eax, DWORD PTR __Capacity$[ebp]

; 1593 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEII@Z ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXPAV?$shared_ptr@VCContact@@@2@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXPAV?$shared_ptr@VCContact@@@2@0@Z PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Destroy, COMDAT
; _this$ = ecx

; 1580 : 		{	// destroy [_First, _Last) using allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1581 : 		_Destroy_range(_First, _Last, this->_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
	push	eax
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Destroy_range@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@PAV?$shared_ptr@VCContact@@@2@@std@@YAXPAV?$shared_ptr@VCContact@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::shared_ptr<CContact> >,std::shared_ptr<CContact> *>
	add	esp, 12					; 0000000cH

; 1582 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXPAV?$shared_ptr@VCContact@@@2@0@Z ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv195 = -248						; size = 4
tv194 = -244						; size = 4
tv172 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::erase, COMDAT
; _this$ = ecx

; 1470 : 		{	// erase element at where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1471 : 		if (_VICONT(_Where) != &this->_Get_data()
; 1472 : 			|| _VIPTR(_Where) < this->_Myfirst()
; 1473 : 			|| this->_Mylast() <= _VIPTR(_Where))

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
	cmp	esi, eax
	jne	SHORT $LN3@erase
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
	mov	ecx, DWORD PTR __Where$[ebp+8]
	cmp	ecx, DWORD PTR [eax]
	jb	SHORT $LN3@erase
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Where$[ebp+8]
	ja	SHORT $LN2@erase
$LN3@erase:

; 1474 : 			_DEBUG_ERROR("vector erase iterator outside range");

	mov	esi, esp
	push	1474					; 000005c2H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@erase:

; 1475 : 		_Move_unchecked(_VIPTR(_Where) + 1, this->_Mylast(), _VIPTR(_Where));

	mov	eax, DWORD PTR __Where$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp+8]
	add	edx, 8
	push	edx
	call	??$_Move_unchecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00@Z ; std::_Move_unchecked<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *>
	add	esp, 12					; 0000000cH

; 1476 : 		_Destroy(this->_Mylast() - 1, this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 8
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXPAV?$shared_ptr@VCContact@@@2@0@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Destroy

; 1477 : 		_Orphan_range(_VIPTR(_Where), this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp+8]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Orphan_range

; 1478 : 		--this->_Mylast();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	DWORD PTR tv172[ebp], eax
	mov	eax, DWORD PTR tv172[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 8
	mov	edx, DWORD PTR tv172[ebp]
	mov	DWORD PTR [edx], ecx

; 1479 : 		return (_Make_iter(_Where));

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv194[ebp], eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Make_iter
	mov	DWORD PTR tv195[ebp], eax
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1480 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::erase
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?push_back@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAEXABV?$shared_ptr@VCContact@@@2@@Z
_TEXT	SEGMENT
tv231 = -220						; size = 4
tv176 = -220						; size = 4
__Idx$1 = -20						; size = 4
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAEXABV?$shared_ptr@VCContact@@@2@@Z PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::push_back, COMDAT
; _this$ = ecx

; 1276 : 		{	// insert element at end

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1277 : 		if (_Inside(_STD addressof(_Val)))

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@$$CBV?$shared_ptr@VCContact@@@std@@@std@@YAPBV?$shared_ptr@VCContact@@@0@ABV10@@Z ; std::addressof<std::shared_ptr<CContact> const >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBE_NPBV?$shared_ptr@VCContact@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	$LN2@push_back

; 1278 : 			{	// push back an element
; 1279 : 			size_type _Idx = _STD addressof(_Val) - _Unfancy(this->_Myfirst());

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@$$CBV?$shared_ptr@VCContact@@@std@@@std@@YAPBV?$shared_ptr@VCContact@@@0@ABV10@@Z ; std::addressof<std::shared_ptr<CContact> const >
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unfancy<std::shared_ptr<CContact> >
	add	esp, 4
	sub	esi, eax
	sar	esi, 3
	mov	DWORD PTR __Idx$1[ebp], esi

; 1280 : 			if (this->_Mylast() == this->_Myend())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN4@push_back

; 1281 : 				_Reserve(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Reserve
$LN4@push_back:

; 1282 : 			_Orphan_range(this->_Mylast(), this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Orphan_range

; 1283 : 			this->_Getal().construct(_Unfancy(this->_Mylast()),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Idx$1[ebp]
	lea	edx, DWORD PTR [eax+ecx*8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	call	??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unfancy<std::shared_ptr<CContact> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
	mov	ecx, eax
	call	??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@AAV21@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> &>

; 1284 : 				this->_Myfirst()[_Idx]);
; 1285 : 			++this->_Mylast();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	DWORD PTR tv176[ebp], eax
	mov	eax, DWORD PTR tv176[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 8
	mov	edx, DWORD PTR tv176[ebp]
	mov	DWORD PTR [edx], ecx

; 1286 : 			}
; 1287 : 		else

	jmp	$LN1@push_back
$LN2@push_back:

; 1288 : 			{	// push back a non-element
; 1289 : 			if (this->_Mylast() == this->_Myend())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN5@push_back

; 1290 : 				_Reserve(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Reserve
$LN5@push_back:

; 1291 : 			_Orphan_range(this->_Mylast(), this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Orphan_range

; 1292 : 			this->_Getal().construct(_Unfancy(this->_Mylast()),

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unfancy<std::shared_ptr<CContact> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
	mov	ecx, eax
	call	??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@ABV21@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> const &>

; 1293 : 				_Val);
; 1294 : 			++this->_Mylast();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	DWORD PTR tv231[ebp], eax
	mov	eax, DWORD PTR tv231[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 8
	mov	edx, DWORD PTR tv231[ebp]
	mov	DWORD PTR [edx], ecx
$LN1@push_back:

; 1295 : 			}
; 1296 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAEXABV?$shared_ptr@VCContact@@@2@@Z ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?max_size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
?max_size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::max_size, COMDAT
; _this$ = ecx

; 1184 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1185 : 		return (this->_Getal().max_size());

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::max_size

; 1186 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::size, COMDAT
; _this$ = ecx

; 1179 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1180 : 		return (this->_Mylast() - this->_Myfirst());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
	mov	ecx, DWORD PTR [esi]
	sub	ecx, DWORD PTR [eax]
	sar	ecx, 3
	mov	eax, ecx

; 1181 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
$T2 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Make_iter, COMDAT
; _this$ = ecx

; 1077 : 		{	// make iterator from const_iterator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1078 : 		return (iterator(_Where._Ptr, &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Where$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1079 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Make_iter
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end, COMDAT
; _this$ = ecx

; 1067 : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1068 : 		return (iterator(this->_Mylast(), &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1069 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::begin, COMDAT
; _this$ = ecx

; 1057 : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1058 : 		return (iterator(this->_Myfirst(), &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1059 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::begin
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Unused_capacity@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Unused_capacity@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Unused_capacity, COMDAT
; _this$ = ecx

; 1047 : 		{	// micro-optimization for capacity() - size()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1048 : 		return (this->_Myend() - this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	ecx, DWORD PTR [esi]
	sub	ecx, DWORD PTR [eax]
	sar	ecx, 3
	mov	eax, ecx

; 1049 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?capacity@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?capacity@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::capacity, COMDAT
; _this$ = ecx

; 1042 : 		{	// return current length of allocated storage

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1043 : 		return (this->_Myend() - this->_Myfirst());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
	mov	ecx, DWORD PTR [esi]
	sub	ecx, DWORD PTR [eax]
	sar	ecx, 3
	mov	eax, ecx

; 1044 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??1?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::~vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >, COMDAT
; _this$ = ecx

; 975  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 976  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Tidy

; 977  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::~_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::~vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?push_back@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAEX$$QAV?$shared_ptr@VCContact@@@2@@Z
_TEXT	SEGMENT
tv235 = -220						; size = 4
tv178 = -220						; size = 4
__Idx$1 = -20						; size = 4
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAEX$$QAV?$shared_ptr@VCContact@@@2@@Z PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::push_back, COMDAT
; _this$ = ecx

; 896  : 		{	// insert by moving into element at end

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 897  : 		if (_Inside(_STD addressof(_Val)))

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::addressof<std::shared_ptr<CContact> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBE_NPBV?$shared_ptr@VCContact@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	$LN2@push_back

; 898  : 			{	// push back an element
; 899  : 			size_type _Idx = _STD addressof(_Val) - _Unfancy(this->_Myfirst());

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::addressof<std::shared_ptr<CContact> >
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unfancy<std::shared_ptr<CContact> >
	add	esp, 4
	sub	esi, eax
	sar	esi, 3
	mov	DWORD PTR __Idx$1[ebp], esi

; 900  : 			if (this->_Mylast() == this->_Myend())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN4@push_back

; 901  : 				_Reserve(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Reserve
$LN4@push_back:

; 902  : 			_Orphan_range(this->_Mylast(), this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Orphan_range

; 903  : 			this->_Getal().construct(_Unfancy(this->_Mylast()),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Idx$1[ebp]
	lea	edx, DWORD PTR [eax+ecx*8]
	push	edx
	call	??$forward@V?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::forward<std::shared_ptr<CContact> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	call	??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unfancy<std::shared_ptr<CContact> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
	mov	ecx, eax
	call	??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >

; 904  : 				_STD forward<value_type>(this->_Myfirst()[_Idx]));
; 905  : 			++this->_Mylast();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	DWORD PTR tv178[ebp], eax
	mov	eax, DWORD PTR tv178[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 8
	mov	edx, DWORD PTR tv178[ebp]
	mov	DWORD PTR [edx], ecx

; 906  : 			}
; 907  : 		else

	jmp	$LN1@push_back
$LN2@push_back:

; 908  : 			{	// push back a non-element
; 909  : 			if (this->_Mylast() == this->_Myend())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN5@push_back

; 910  : 				_Reserve(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Reserve
$LN5@push_back:

; 911  : 			_Orphan_range(this->_Mylast(), this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Orphan_range

; 912  : 			this->_Getal().construct(_Unfancy(this->_Mylast()),

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::forward<std::shared_ptr<CContact> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unfancy<std::shared_ptr<CContact> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
	mov	ecx, eax
	call	??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >

; 913  : 				_STD forward<value_type>(_Val));
; 914  : 			++this->_Mylast();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
	mov	DWORD PTR tv235[ebp], eax
	mov	eax, DWORD PTR tv235[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 8
	mov	edx, DWORD PTR tv235[ebp]
	mov	DWORD PTR [edx], ecx
$LN1@push_back:

; 915  : 			}
; 916  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAEX$$QAV?$shared_ptr@VCContact@@@2@@Z ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >, COMDAT
; _this$ = ecx

; 707  : 		{	// construct empty vector

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 706  : 		: _Mybase()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >

; 708  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 319  : 		{	// return const reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 320  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 321  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 314  : 		{	// return reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 315  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 316  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 299  : 		{	// return const reference to first

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 300  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 301  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 294  : 		{	// return reference to first

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 295  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 296  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >::~_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >::~_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >, COMDAT
; _this$ = ecx

; 488  : 		{	// initialize values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12

; 485  : 		: _Myfirst(),

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 486  : 		_Mylast(),

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 487  : 		_Myend()

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 489  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend, COMDAT
; _this$ = ecx

; 667  : 		{	// return const reference to _Myend

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 668  : 		return (_Get_data()._Myend);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
	add	eax, 12					; 0000000cH

; 669  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend, COMDAT
; _this$ = ecx

; 662  : 		{	// return reference to _Myend

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 663  : 		return (_Get_data()._Myend);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
	add	eax, 12					; 0000000cH

; 664  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast, COMDAT
; _this$ = ecx

; 657  : 		{	// return const reference to _Mylast

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 658  : 		return (_Get_data()._Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
	add	eax, 8

; 659  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast, COMDAT
; _this$ = ecx

; 652  : 		{	// return reference to _Mylast

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 653  : 		return (_Get_data()._Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
	add	eax, 8

; 654  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst, COMDAT
; _this$ = ecx

; 647  : 		{	// return const reference to _Myfirst

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 648  : 		return (_Get_data()._Myfirst);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
	add	eax, 4

; 649  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst, COMDAT
; _this$ = ecx

; 642  : 		{	// return reference to _Myfirst

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 643  : 		return (_Get_data()._Myfirst);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
	add	eax, 4

; 644  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data, COMDAT
; _this$ = ecx

; 637  : 		{	// return const reference to _Vector_val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 638  : 		return (_Mypair._Get_second());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_second

; 639  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data, COMDAT
; _this$ = ecx

; 632  : 		{	// return reference to _Vector_val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 633  : 		return (_Mypair._Get_second());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_second

; 634  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal, COMDAT
; _this$ = ecx

; 627  : 		{	// return const reference to allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return (_Mypair._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_first

; 629  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal, COMDAT
; _this$ = ecx

; 622  : 		{	// return reference to allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 623  : 		return (_Mypair._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_first

; 624  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Orphan_all, COMDAT
; _this$ = ecx

; 612  : 		{	// orphan all iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 613  : 		_Get_data()._Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
	mov	ecx, eax
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 614  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myproxy, COMDAT
; _this$ = ecx

; 601  : 		{	// return reference to _Myproxy

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 602  : 		return (_Get_data()._Myproxy);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data

; 603  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getpfirst, COMDAT
; _this$ = ecx

; 596  : 		{	// get address of iterator chain

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 597  : 		return (_Get_data()._Getpfirst());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
	mov	ecx, eax
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst

; 598  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -17					; size = 1
_this$ = -8						; size = 4
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Free_proxy, COMDAT
; _this$ = ecx

; 586  : 		{	// destroy proxy

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 587  : 		typename _Alty::template rebind<_Container_proxy>::other
; 588  : 			_Alproxy(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > > &>

; 589  : 		_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Orphan_all

; 590  : 		_Alproxy.destroy(_Myproxy());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>

; 591  : 		_Alproxy.deallocate(_Alproxy.address(*_Myproxy()), 1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate

; 592  : 		_Myproxy() = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myproxy
	mov	DWORD PTR [eax], 0

; 593  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Free_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Free_proxy:
	DD	1
	DD	$LN4@Free_proxy
$LN4@Free_proxy:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Free_proxy
$LN3@Free_proxy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -228						; size = 8
__Alproxy$ = -17					; size = 1
_this$ = -8						; size = 4
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Alloc_proxy, COMDAT
; _this$ = ecx

; 577  : 		{	// construct proxy

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		typename _Alty::template rebind<_Container_proxy>::other
; 579  : 			_Alproxy(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > > &>

; 580  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	push	eax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myproxy
	mov	DWORD PTR [eax], esi

; 581  : 		_Alproxy.construct(_Myproxy(), _Container_proxy());

	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>

; 582  : 		_Myproxy()->_Mycont = &_Get_data();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myproxy
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax], esi

; 583  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Alloc_prox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Alloc_prox:
	DD	1
	DD	$LN4@Alloc_prox
$LN4@Alloc_prox:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Alloc_prox
$LN3@Alloc_prox:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??1?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::~_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy proxy

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 559  : 		_Free_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Free_proxy

; 560  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::~_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >, COMDAT
; _this$ = ecx

; 544  : 		{	// default construct allocator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 543  : 		: _Mypair(_Zero_then_variadic_args_t())

	movzx	eax, BYTE PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1><>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 545  : 		_Alloc_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Alloc_proxy

; 546  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::max_size, COMDAT
; _this$ = ecx

; 1007 : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1008 : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAIABV?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::max_size
	add	esp, 4

; 1009 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::deallocate, COMDAT
; _this$ = ecx

; 986  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 987  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@2@I@Z ; std::allocator<std::shared_ptr<CContact> >::deallocate

; 988  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEPAV?$shared_ptr@VCContact@@@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEPAV?$shared_ptr@VCContact@@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::allocate, COMDAT
; _this$ = ecx

; 975  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 976  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEPAV?$shared_ptr@VCContact@@@2@I@Z ; std::allocator<std::shared_ptr<CContact> >::allocate

; 977  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEPAV?$shared_ptr@VCContact@@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >, COMDAT
; _this$ = ecx

; 936  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 935  : 		: _Mybase()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAE@XZ ; std::allocator<std::shared_ptr<CContact> >::allocator<std::shared_ptr<CContact> >

; 937  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAIABV?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAIABV?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::max_size, COMDAT

; 868  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 869  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QBEIXZ ; std::allocator<std::shared_ptr<CContact> >::max_size

; 870  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAIABV?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::shared_ptr<CContact> >::max_size, COMDAT
; _this$ = ecx

; 748  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 749  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 536870911				; 1fffffffH

; 750  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::shared_ptr<CContact> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEPAV?$shared_ptr@VCContact@@@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEPAV?$shared_ptr@VCContact@@@2@I@Z PROC ; std::allocator<std::shared_ptr<CContact> >::allocate, COMDAT
; _this$ = ecx

; 724  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 725  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

	push	1
	push	8
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	?_Allocate@std@@YAPAXII_N@Z		; std::_Allocate
	add	esp, 12					; 0000000cH

; 726  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEPAV?$shared_ptr@VCContact@@@2@I@Z ENDP ; std::allocator<std::shared_ptr<CContact> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@2@I@Z PROC ; std::allocator<std::shared_ptr<CContact> >::deallocate, COMDAT
; _this$ = ecx

; 719  : 		{	// deallocate object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 720  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	8
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 721  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@2@I@Z ENDP ; std::allocator<std::shared_ptr<CContact> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::shared_ptr<CContact> >::allocator<std::shared_ptr<CContact> >, COMDAT
; _this$ = ecx

; 699  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 700  : 		{	// construct default allocator (do nothing)
; 701  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::shared_ptr<CContact> >::allocator<std::shared_ptr<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\bubblesort.h
;	COMDAT ?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z
_TEXT	SEGMENT
tv182 = -404						; size = 4
tv190 = -400						; size = 4
tv189 = -396						; size = 4
tv187 = -396						; size = 4
tv184 = -396						; size = 4
tv180 = -396						; size = 4
tv192 = -392						; size = 4
tv191 = -392						; size = 4
tv151 = -392						; size = 4
tv71 = -392						; size = 4
$T2 = -384						; size = 12
$T3 = -364						; size = 12
$T4 = -344						; size = 12
$T5 = -321						; size = 1
$T6 = -312						; size = 12
$T7 = -292						; size = 12
$T8 = -269						; size = 1
_tempPtr$9 = -68					; size = 8
_newIt$10 = -52						; size = 12
_i$11 = -32						; size = 4
_swapHappened$ = -17					; size = 1
__$EHRec$ = -12						; size = 12
_sortVector$ = 8					; size = 4
?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z PROC ; Chris::sort, COMDAT

; 15   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 392				; 00000188H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-404]
	mov	ecx, 98					; 00000062H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 16   : 		// This will allow the algorithm to not go through excess loops
; 17   : 		bool swapHappened = true;

	mov	BYTE PTR _swapHappened$[ebp], 1

; 18   : 
; 19   : 		// This is the loop for the max number of times it will need to try sort
; 20   : 		for (unsigned int i = 0; i < sortVector.size() && swapHappened; ++i)

	mov	DWORD PTR _i$11[ebp], 0
	jmp	SHORT $LN4@sort
$LN2@sort:
	mov	eax, DWORD PTR _i$11[ebp]
	add	eax, 1
	mov	DWORD PTR _i$11[ebp], eax
$LN4@sort:
	mov	ecx, DWORD PTR _sortVector$[ebp]
	call	?size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::size
	cmp	DWORD PTR _i$11[ebp], eax
	jae	$LN1@sort
	movzx	eax, BYTE PTR _swapHappened$[ebp]
	test	eax, eax
	je	$LN1@sort

; 21   : 		{
; 22   : 			// A swap has not happened yet this iteration
; 23   : 			swapHappened = false;

	mov	BYTE PTR _swapHappened$[ebp], 0

; 24   : 			// Loop through the vector, but not up to the last one since when it sorts it does n+1
; 25   : 			for (vector<shared_ptr<CContact>>::iterator newIt = sortVector.begin(); newIt != sortVector.end() - 1; ++newIt)

	lea	eax, DWORD PTR _newIt$10[ebp]
	push	eax
	mov	ecx, DWORD PTR _sortVector$[ebp]
	call	?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::begin
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	jmp	SHORT $LN7@sort
$LN5@sort:
	lea	ecx, DWORD PTR _newIt$10[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++
$LN7@sort:
	push	1
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	mov	ecx, DWORD PTR _sortVector$[ebp]
	call	?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
	mov	DWORD PTR tv71[ebp], eax
	mov	edx, DWORD PTR tv71[ebp]
	mov	DWORD PTR tv180[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv180[ebp]
	call	??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator-
	mov	DWORD PTR tv190[ebp], eax
	mov	eax, DWORD PTR tv190[ebp]
	mov	DWORD PTR tv182[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv182[ebp]
	push	ecx
	lea	ecx, DWORD PTR _newIt$10[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator!=
	mov	BYTE PTR $T8[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	edx, BYTE PTR $T8[ebp]
	test	edx, edx
	je	$LN6@sort

; 26   : 			{
; 27   : 				// Check if the value inside the pointer was greater than the next value
; 28   : 				if (*(*newIt) > *(*(newIt + 1)))

	push	1
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	lea	ecx, DWORD PTR _newIt$10[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+
	mov	DWORD PTR tv191[ebp], eax
	mov	ecx, DWORD PTR tv191[ebp]
	mov	DWORD PTR tv184[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv184[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
	mov	ecx, eax
	call	??D?$shared_ptr@VCContact@@@std@@QBEAAVCContact@@XZ ; std::shared_ptr<CContact>::operator*
	push	eax
	lea	ecx, DWORD PTR _newIt$10[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
	mov	ecx, eax
	call	??D?$shared_ptr@VCContact@@@std@@QBEAAVCContact@@XZ ; std::shared_ptr<CContact>::operator*
	push	eax
	call	??O@YA_NAAVCContact@@0@Z		; operator>
	add	esp, 8
	mov	BYTE PTR $T5[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	edx, BYTE PTR $T5[ebp]
	test	edx, edx
	je	$LN8@sort

; 29   : 				{
; 30   : 					// Swap the two
; 31   : 					shared_ptr<CContact> tempPtr = *newIt;

	lea	ecx, DWORD PTR _newIt$10[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
	push	eax
	lea	ecx, DWORD PTR _tempPtr$9[ebp]
	call	??0?$shared_ptr@VCContact@@@std@@QAE@ABV01@@Z ; std::shared_ptr<CContact>::shared_ptr<CContact>
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 32   : 					*newIt = *(newIt + 1);

	push	1
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR _newIt$10[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+
	mov	DWORD PTR tv151[ebp], eax
	mov	ecx, DWORD PTR tv151[ebp]
	mov	DWORD PTR tv187[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR tv187[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
	push	eax
	lea	ecx, DWORD PTR _newIt$10[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
	mov	ecx, eax
	call	??4?$shared_ptr@VCContact@@@std@@QAEAAV01@ABV01@@Z ; std::shared_ptr<CContact>::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ

; 33   : 					*(newIt + 1) = tempPtr;

	lea	eax, DWORD PTR _tempPtr$9[ebp]
	push	eax
	push	1
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	ecx, DWORD PTR _newIt$10[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+
	mov	DWORD PTR tv192[ebp], eax
	mov	edx, DWORD PTR tv192[ebp]
	mov	DWORD PTR tv189[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR tv189[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
	mov	ecx, eax
	call	??4?$shared_ptr@VCContact@@@std@@QAEAAV01@ABV01@@Z ; std::shared_ptr<CContact>::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ

; 34   : 
; 35   : 					// A swap happened, so it can't stop looping yet
; 36   : 					swapHappened = true;

	mov	BYTE PTR _swapHappened$[ebp], 1

; 37   : 				}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _tempPtr$9[ebp]
	call	??1?$shared_ptr@VCContact@@@std@@QAE@XZ	; std::shared_ptr<CContact>::~shared_ptr<CContact>
$LN8@sort:
	jmp	$LN5@sort
$LN6@sort:

; 38   : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newIt$10[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ

; 39   : 		}

	jmp	$LN2@sort
$LN1@sort:

; 40   : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@sort
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 404				; 00000194H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN21@sort:
	DD	2
	DD	$LN20@sort
$LN20@sort:
	DD	-52					; ffffffccH
	DD	12					; 0000000cH
	DD	$LN17@sort
	DD	-68					; ffffffbcH
	DD	8
	DD	$LN18@sort
$LN18@sort:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	80					; 00000050H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN17@sort:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _newIt$10[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$1:
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$2:
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$3:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$4:
	lea	ecx, DWORD PTR _tempPtr$9[ebp]
	jmp	??1?$shared_ptr@VCContact@@@std@@QAE@XZ	; std::shared_ptr<CContact>::~shared_ptr<CContact>
__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$5:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$6:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-408]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z ENDP ; Chris::sort
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
__Byte$ = 8						; size = 4
__File$ = 12						; size = 4
??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z PROC		; std::_Ungetc<char>, COMDAT

; 106  : 	{	// put back a char element to a C stream

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 107  : 	return (ungetc((unsigned char)_Byte, _File) != EOF);

	mov	esi, esp
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Byte$[ebp]
	movzx	edx, BYTE PTR [ecx]
	push	edx
	call	DWORD PTR __imp__ungetc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	je	SHORT $LN3@Ungetc
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@Ungetc
$LN3@Ungetc:
	mov	DWORD PTR tv69[ebp], 0
$LN4@Ungetc:
	mov	al, BYTE PTR tv69[ebp]

; 108  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z ENDP		; std::_Ungetc<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
__Byte$ = 8						; size = 1
__File$ = 12						; size = 4
??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z PROC		; std::_Fputc<char>, COMDAT

; 82   : 	{	// put a char element to a C stream

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 83   : 	return (fputc(_Byte, _File) != EOF);

	mov	esi, esp
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	movsx	ecx, BYTE PTR __Byte$[ebp]
	push	ecx
	call	DWORD PTR __imp__fputc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	je	SHORT $LN3@Fputc
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@Fputc
$LN3@Fputc:
	mov	DWORD PTR tv69[ebp], 0
$LN4@Fputc:
	mov	al, BYTE PTR tv69[ebp]

; 84   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z ENDP		; std::_Fputc<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z
_TEXT	SEGMENT
__Meta$ = -8						; size = 4
__Byte$ = 8						; size = 4
__File$ = 12						; size = 4
??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z PROC		; std::_Fgetc<char>, COMDAT

; 37   : 	{	// get a char element from a C stream

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 38   : 	int _Meta;
; 39   : 	if ((_Meta = fgetc(_File)) == EOF)

	mov	esi, esp
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	call	DWORD PTR __imp__fgetc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Meta$[ebp], eax
	cmp	DWORD PTR __Meta$[ebp], -1
	jne	SHORT $LN2@Fgetc

; 40   : 		return (false);

	xor	al, al
	jmp	SHORT $LN1@Fgetc

; 41   : 	else

	jmp	SHORT $LN1@Fgetc
$LN2@Fgetc:

; 42   : 		{	// got one, convert to char
; 43   : 		_Byte = (char)_Meta;

	mov	eax, DWORD PTR __Byte$[ebp]
	mov	cl, BYTE PTR __Meta$[ebp]
	mov	BYTE PTR [eax], cl

; 44   : 		return (true);

	mov	al, 1
$LN1@Fgetc:

; 45   : 		}
; 46   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z ENDP		; std::_Fgetc<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\contact.h
;	COMDAT ??O@YA_NAAVCContact@@0@Z
_TEXT	SEGMENT
_lhs$ = 8						; size = 4
_rhs$ = 12						; size = 4
??O@YA_NAAVCContact@@0@Z PROC				; operator>, COMDAT

; 24   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 25   : 		return lhs.greater(rhs);

	mov	esi, esp
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lhs$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lhs$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 26   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??O@YA_NAAVCContact@@0@Z ENDP				; operator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gtext_oarchive@archive@boost@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gtext_oarchive@archive@boost@@UAEPAXI@Z PROC		; boost::archive::text_oarchive::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1text_oarchive@archive@boost@@UAE@XZ	; boost::archive::text_oarchive::~text_oarchive
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	96					; 00000060H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gtext_oarchive@archive@boost@@UAEPAXI@Z ENDP		; boost::archive::text_oarchive::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_oarchive.hpp
;	COMDAT ??1text_oarchive@archive@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1text_oarchive@archive@boost@@UAE@XZ PROC		; boost::archive::text_oarchive::~text_oarchive, COMDAT
; _this$ = ecx

; 106  :     ~text_oarchive(){}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7text_oarchive@archive@boost@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@MAE@XZ ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::~text_oarchive_impl<boost::archive::text_oarchive>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1text_oarchive@archive@boost@@UAE@XZ ENDP		; boost::archive::text_oarchive::~text_oarchive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_oarchive.hpp
;	COMDAT ??0text_oarchive@archive@boost@@QAE@AAV?$basic_ostream@DU?$char_traits@D@std@@@std@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_os_$ = 8						; size = 4
_flags$ = 12						; size = 4
??0text_oarchive@archive@boost@@QAE@AAV?$basic_ostream@DU?$char_traits@D@std@@@std@@I@Z PROC ; boost::archive::text_oarchive::text_oarchive, COMDAT
; _this$ = ecx

; 105  :     {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 104  :         text_oarchive_impl<text_oarchive>(os_, flags)

	mov	eax, DWORD PTR _flags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _os_$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAE@AAV?$basic_ostream@DU?$char_traits@D@std@@@std@@I@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::text_oarchive_impl<boost::archive::text_oarchive>

; 105  :     {}

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7text_oarchive@archive@boost@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0text_oarchive@archive@boost@@QAE@AAV?$basic_ostream@DU?$char_traits@D@std@@@std@@I@Z ENDP ; boost::archive::text_oarchive::text_oarchive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@MAEPAXI@Z PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@MAE@XZ ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::~text_oarchive_impl<boost::archive::text_oarchive>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	96					; 00000060H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@MAEPAXI@Z ENDP ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_oarchive.hpp
;	COMDAT ??1?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@MAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@MAE@XZ PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::~text_oarchive_impl<boost::archive::text_oarchive>, COMDAT
; _this$ = ecx

; 89   :     ~text_oarchive_impl(){};

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@MAE@XZ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::~basic_text_oarchive<boost::archive::text_oarchive>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??1?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAE@XZ ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::~basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@MAE@XZ ENDP ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::~text_oarchive_impl<boost::archive::text_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_oarchive.hpp
;	COMDAT ?save@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVversion_type@23@@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?save@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVversion_type@23@@Z PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save, COMDAT
; _this$ = ecx

; 67   :     void save(const version_type & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 68   :         save(static_cast<const unsigned int>(t));

	mov	ecx, DWORD PTR _t$[ebp]
	call	??Bversion_type@archive@boost@@QBEIXZ	; boost::archive::version_type::operator unsigned int
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$save@I@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABI@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<unsigned int>

; 69   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?save@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVversion_type@23@@Z ENDP ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@MAEPAXI@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@MAE@XZ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::~basic_text_oarchive<boost::archive::text_oarchive>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	28					; 0000001cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@MAEPAXI@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ??1?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@MAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@MAE@XZ PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::~basic_text_oarchive<boost::archive::text_oarchive>, COMDAT
; _this$ = ecx

; 107  :     ~basic_text_oarchive(){}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@MAE@XZ ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::~basic_text_oarchive<boost::archive::text_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z
_TEXT	SEGMENT
_s$ = -60						; size = 28
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override, COMDAT
; _this$ = ecx

; 95   :     void save_override(const class_name_type & t){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 96   :         const std::string s(t);

	mov	ecx, DWORD PTR _t$[ebp]
	call	??Bclass_name_type@archive@boost@@QBEAAPBDXZ ; boost::archive::class_name_type::operator char const * &
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR _s$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 97   :         * this->This() << s;

	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	add	eax, 24					; 00000018H
	mov	ecx, eax
	call	??$?6V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 98   :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _s$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@save_overr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN7@save_overr:
	DD	1
	DD	$LN6@save_overr
$LN6@save_overr:
	DD	-60					; ffffffc4H
	DD	28					; 0000001cH
	DD	$LN4@save_overr
$LN4@save_overr:
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z$0:
	lea	ecx, DWORD PTR _s$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_optional_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_optional_type@23@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override, COMDAT
; _this$ = ecx

; 93   :     void save_override(const class_id_optional_type & /* t */){}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_optional_type@23@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_id_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_id_type@23@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override, COMDAT
; _this$ = ecx

; 87   :     void save_override(const object_id_type & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 88   :         this->This()->newline();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	mov	ecx, eax
	call	?newline@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::newline

; 89   :         this->detail_common_oarchive::save_override(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$save_override@$$CBVobject_id_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVobject_id_type@23@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::object_id_type const >

; 90   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_id_type@23@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ?newline@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?newline@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::newline, COMDAT
; _this$ = ecx

; 74   :     void newline(){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 75   :         delimiter = eol;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 1

; 76   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?newline@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::newline
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@UAE@XZ PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::~common_oarchive<boost::archive::text_oarchive>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1basic_oarchive@detail@archive@boost@@MAE@XZ ; boost::archive::detail::basic_oarchive::~basic_oarchive
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@UAE@XZ ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::~common_oarchive<boost::archive::text_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXUtracking_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 1
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXUtracking_type@34@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave, COMDAT
; _this$ = ecx

; 63   :     virtual void vsave(const tracking_type t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 64   :         * this->This() << t;

	lea	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	add	eax, 24					; 00000018H
	mov	ecx, eax
	call	??$?6Utracking_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABUtracking_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::tracking_type>

; 65   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXUtracking_type@34@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXABUclass_name_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXABUclass_name_type@34@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave, COMDAT
; _this$ = ecx

; 60   :     virtual void vsave(const class_name_type & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 61   :         * this->This() << t;

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	add	eax, 24					; 00000018H
	mov	ecx, eax
	call	??$?6Uclass_name_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABUclass_name_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_name_type>

; 62   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXABUclass_name_type@34@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_optional_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 2
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_optional_type@34@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave, COMDAT
; _this$ = ecx

; 57   :     virtual void vsave(const class_id_optional_type t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 58   :         * this->This() << t;

	lea	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	add	eax, 24					; 00000018H
	mov	ecx, eax
	call	??$?6Vclass_id_optional_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_optional_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_id_optional_type>

; 59   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_optional_type@34@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_reference_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 2
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_reference_type@34@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave, COMDAT
; _this$ = ecx

; 54   :     virtual void vsave(const class_id_reference_type t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 55   :         * this->This() << t;

	lea	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	add	eax, 24					; 00000018H
	mov	ecx, eax
	call	??$?6Vclass_id_reference_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_reference_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_id_reference_type>

; 56   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_reference_type@34@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 2
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_type@34@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave, COMDAT
; _this$ = ecx

; 51   :     virtual void vsave(const class_id_type t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 52   :         * this->This() << t;

	lea	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	add	eax, 24					; 00000018H
	mov	ecx, eax
	call	??$?6Vclass_id_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_id_type>

; 53   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_type@34@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_reference_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_reference_type@34@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave, COMDAT
; _this$ = ecx

; 48   :     virtual void vsave(const object_reference_type t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 49   :         * this->This() << t;

	lea	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	add	eax, 24					; 00000018H
	mov	ecx, eax
	call	??$?6Vobject_reference_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVobject_reference_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::object_reference_type>

; 50   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_reference_type@34@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_id_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_id_type@34@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave, COMDAT
; _this$ = ecx

; 45   :     virtual void vsave(const object_id_type t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 46   :         * this->This() << t;

	lea	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	add	eax, 24					; 00000018H
	mov	ecx, eax
	call	??$?6Vobject_id_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVobject_id_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::object_id_type>

; 47   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_id_type@34@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVversion_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVversion_type@34@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave, COMDAT
; _this$ = ecx

; 42   :     virtual void vsave(const version_type t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 43   :         * this->This() << t;

	lea	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
	add	eax, 24					; 00000018H
	mov	ecx, eax
	call	??$?6Vversion_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVversion_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::version_type>

; 44   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVversion_type@34@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This, COMDAT
; _this$ = ecx

; 46   :     Archive * This(){

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 47   :         return static_cast<Archive *>(this);

	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN3@This
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 24					; 00000018H
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@This
$LN3@This:
	mov	DWORD PTR tv68[ebp], 0
$LN4@This:
	mov	eax, DWORD PTR tv68[ebp]

; 48   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\basic_oserializer.hpp
;	COMDAT ?serialized_as_pointer@basic_oserializer@detail@archive@boost@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
?serialized_as_pointer@basic_oserializer@detail@archive@boost@@QBE_NXZ PROC ; boost::archive::detail::basic_oserializer::serialized_as_pointer, COMDAT
; _this$ = ecx

; 57   :     bool serialized_as_pointer() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 58   :         return m_bpos != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@serialized
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@serialized
$LN3@serialized:
	mov	DWORD PTR tv66[ebp], 0
$LN4@serialized:
	mov	al, BYTE PTR tv66[ebp]

; 59   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?serialized_as_pointer@basic_oserializer@detail@archive@boost@@QBE_NXZ ENDP ; boost::archive::detail::basic_oserializer::serialized_as_pointer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gtext_iarchive@archive@boost@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gtext_iarchive@archive@boost@@UAEPAXI@Z PROC		; boost::archive::text_iarchive::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1text_iarchive@archive@boost@@UAE@XZ	; boost::archive::text_iarchive::~text_iarchive
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gtext_iarchive@archive@boost@@UAEPAXI@Z ENDP		; boost::archive::text_iarchive::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??1text_iarchive@archive@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1text_iarchive@archive@boost@@UAE@XZ PROC		; boost::archive::text_iarchive::~text_iarchive, COMDAT
; _this$ = ecx

; 119  :     ~text_iarchive(){}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7text_iarchive@archive@boost@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@MAE@XZ ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::~text_iarchive_impl<boost::archive::text_iarchive>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1text_iarchive@archive@boost@@UAE@XZ ENDP		; boost::archive::text_iarchive::~text_iarchive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??0text_iarchive@archive@boost@@QAE@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_is_$ = 8						; size = 4
_flags$ = 12						; size = 4
??0text_iarchive@archive@boost@@QAE@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@I@Z PROC ; boost::archive::text_iarchive::text_iarchive, COMDAT
; _this$ = ecx

; 118  :     {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 117  :         text_iarchive_impl<text_iarchive>(is_, flags)

	mov	eax, DWORD PTR _flags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _is_$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAE@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@I@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::text_iarchive_impl<boost::archive::text_iarchive>

; 118  :     {}

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7text_iarchive@archive@boost@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0text_iarchive@archive@boost@@QAE@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@I@Z ENDP ; boost::archive::text_iarchive::text_iarchive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@MAEPAXI@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@MAE@XZ ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::~text_iarchive_impl<boost::archive::text_iarchive>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@MAEPAXI@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??1?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@MAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@MAE@XZ PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::~text_iarchive_impl<boost::archive::text_iarchive>, COMDAT
; _this$ = ecx

; 92   :     ~text_iarchive_impl(){};

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@MAE@XZ ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::~basic_text_iarchive<boost::archive::text_iarchive>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??1?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAE@XZ ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::~basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@MAE@XZ ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::~text_iarchive_impl<boost::archive::text_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ?load@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@23@@Z
_TEXT	SEGMENT
$T1 = -224						; size = 4
_v$ = -20						; size = 4
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?load@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@23@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load, COMDAT
; _this$ = ecx

; 58   :     void load(version_type & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 59   :         unsigned int v;
; 60   :         load(v);

	lea	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$load@I@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAI@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<unsigned int>

; 61   :         t = version_type(v);

	lea	eax, DWORD PTR _v$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0version_type@archive@boost@@QAE@ABI@Z ; boost::archive::version_type::version_type
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	call	??4version_type@archive@boost@@QAEAAV012@ABV012@@Z ; boost::archive::version_type::operator=

; 62   :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@load
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN5@load:
	DD	1
	DD	$LN4@load
$LN4@load:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@load
$LN3@load:
	DB	118					; 00000076H
	DB	0
?load@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@23@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@MAEPAXI@Z PROC ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@MAE@XZ ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::~basic_text_iarchive<boost::archive::text_iarchive>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	24					; 00000018H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@MAEPAXI@Z ENDP ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iarchive.hpp
;	COMDAT ??1?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@MAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@MAE@XZ PROC ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::~basic_text_iarchive<boost::archive::text_iarchive>, COMDAT
; _this$ = ecx

; 84   :     ~basic_text_iarchive(){}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@MAE@XZ ENDP ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::~basic_text_iarchive<boost::archive::text_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iarchive.hpp
;	COMDAT ?load_override@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_optional_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?load_override@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_optional_type@23@@Z PROC ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override, COMDAT
; _this$ = ecx

; 73   :     void load_override(class_id_optional_type & /*t*/){}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?load_override@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_optional_type@23@@Z ENDP ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@UAE@XZ PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::~common_iarchive<boost::archive::text_iarchive>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1basic_iarchive@detail@archive@boost@@UAE@XZ ; boost::archive::detail::basic_iarchive::~basic_iarchive
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@UAE@XZ ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::~common_iarchive<boost::archive::text_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUclass_name_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUclass_name_type@34@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload, COMDAT
; _this$ = ecx

; 59   :     virtual void vload(class_name_type &s){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 60   :         * this->This() >> s;

	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	add	eax, 24					; 00000018H
	mov	ecx, eax
	call	??$?5Uclass_name_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAUclass_name_type@23@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::class_name_type>

; 61   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUclass_name_type@34@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUtracking_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUtracking_type@34@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload, COMDAT
; _this$ = ecx

; 56   :     virtual void vload(tracking_type & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 57   :         * this->This() >> t;

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	add	eax, 24					; 00000018H
	mov	ecx, eax
	call	??$?5Utracking_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAUtracking_type@23@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::tracking_type>

; 58   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUtracking_type@34@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_optional_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_optional_type@34@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload, COMDAT
; _this$ = ecx

; 53   :     virtual void vload(class_id_optional_type & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 54   :         * this->This() >> t;

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	add	eax, 24					; 00000018H
	mov	ecx, eax
	call	??$?5Vclass_id_optional_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVclass_id_optional_type@23@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::class_id_optional_type>

; 55   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_optional_type@34@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_type@34@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload, COMDAT
; _this$ = ecx

; 50   :     virtual void vload(class_id_type & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 51   :         * this->This() >> t;

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	add	eax, 24					; 00000018H
	mov	ecx, eax
	call	??$?5Vclass_id_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVclass_id_type@23@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::class_id_type>

; 52   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_type@34@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVobject_id_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVobject_id_type@34@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload, COMDAT
; _this$ = ecx

; 47   :     virtual void vload(object_id_type & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 48   :         * this->This() >> t;

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	add	eax, 24					; 00000018H
	mov	ecx, eax
	call	??$?5Vobject_id_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVobject_id_type@23@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::object_id_type>

; 49   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVobject_id_type@34@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVversion_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVversion_type@34@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload, COMDAT
; _this$ = ecx

; 44   :     virtual void vload(version_type & t){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 45   :         * this->This() >> t; 

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
	add	eax, 24					; 00000018H
	mov	ecx, eax
	call	??$?5Vversion_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVversion_type@23@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::version_type>

; 46   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVversion_type@34@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_iarchive.hpp
;	COMDAT ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ PROC ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This, COMDAT
; _this$ = ecx

; 45   :     Archive * This(){

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 46   :         return static_cast<Archive *>(this);

	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN3@This
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 24					; 00000018H
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@This
$LN3@This:
	mov	DWORD PTR tv68[ebp], 0
$LN4@This:
	mov	eax, DWORD PTR tv68[ebp]

; 47   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ENDP ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\basic_iserializer.hpp
;	COMDAT ?serialized_as_pointer@basic_iserializer@detail@archive@boost@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
?serialized_as_pointer@basic_iserializer@detail@archive@boost@@QBE_NXZ PROC ; boost::archive::detail::basic_iserializer::serialized_as_pointer, COMDAT
; _this$ = ecx

; 56   :     bool serialized_as_pointer() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 57   :         return m_bpis != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@serialized
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@serialized
$LN3@serialized:
	mov	DWORD PTR tv66[ebp], 0
$LN4@serialized:
	mov	al, BYTE PTR tv66[ebp]

; 58   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?serialized_as_pointer@basic_iserializer@detail@archive@boost@@QBE_NXZ ENDP ; boost::archive::detail::basic_iserializer::serialized_as_pointer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??Bversion_type@serialization@boost@@QBEABIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bversion_type@serialization@boost@@QBEABIXZ PROC	; boost::serialization::version_type::operator unsigned int const &, COMDAT
; _this$ = ecx

; 61   : BOOST_STRONG_TYPEDEF(unsigned int, version_type)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??Bversion_type@serialization@boost@@QBEABIXZ ENDP	; boost::serialization::version_type::operator unsigned int const &
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??0version_type@serialization@boost@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t_$ = 8						; size = 4
??0version_type@serialization@boost@@QAE@I@Z PROC	; boost::serialization::version_type::version_type, COMDAT
; _this$ = ecx

; 61   : BOOST_STRONG_TYPEDEF(unsigned int, version_type)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t_$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0version_type@serialization@boost@@QAE@I@Z ENDP	; boost::serialization::version_type::version_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\extended_type_info_typeid.hpp
;	COMDAT ?get_debug_info@extended_type_info_typeid_0@typeid_system@serialization@boost@@EBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get_debug_info@extended_type_info_typeid_0@typeid_system@serialization@boost@@EBEPBDXZ PROC ; boost::serialization::typeid_system::extended_type_info_typeid_0::get_debug_info, COMDAT
; _this$ = ecx

; 55   :     virtual const char * get_debug_info() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   :         if(static_cast<const std::type_info *>(0) == m_ti)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN2@get_debug_

; 57   :             return static_cast<const char *>(0);

	xor	eax, eax
	jmp	SHORT $LN1@get_debug_
$LN2@get_debug_:

; 58   :         return m_ti->name();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	call	?name@type_info@@QBEPBDXZ		; type_info::name
$LN1@get_debug_:

; 59   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?get_debug_info@extended_type_info_typeid_0@typeid_system@serialization@boost@@EBEPBDXZ ENDP ; boost::serialization::typeid_system::extended_type_info_typeid_0::get_debug_info
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??Bclass_name_type@archive@boost@@QBEAAPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bclass_name_type@archive@boost@@QBEAAPBDXZ PROC	; boost::archive::class_name_type::operator char const * &, COMDAT
; _this$ = ecx

; 218  :     operator const char * & () const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 219  :         return const_cast<const char * &>(t);

	mov	eax, DWORD PTR _this$[ebp]

; 220  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??Bclass_name_type@archive@boost@@QBEAAPBDXZ ENDP	; boost::archive::class_name_type::operator char const * &
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??Btracking_type@archive@boost@@QAEAA_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Btracking_type@archive@boost@@QAEAA_NXZ PROC		; boost::archive::tracking_type::operator bool &, COMDAT
; _this$ = ecx

; 195  :     operator bool & () {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 196  :         return t;

	mov	eax, DWORD PTR _this$[ebp]

; 197  :     };

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??Btracking_type@archive@boost@@QAEAA_NXZ ENDP		; boost::archive::tracking_type::operator bool &
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??Btracking_type@archive@boost@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Btracking_type@archive@boost@@QBE_NXZ PROC		; boost::archive::tracking_type::operator bool, COMDAT
; _this$ = ecx

; 192  :     operator bool () const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 193  :         return t;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax]

; 194  :     };

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??Btracking_type@archive@boost@@QBE_NXZ ENDP		; boost::archive::tracking_type::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??Bobject_id_type@archive@boost@@QAEAAIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bobject_id_type@archive@boost@@QAEAAIXZ PROC		; boost::archive::object_id_type::operator unsigned int &, COMDAT
; _this$ = ecx

; 169  :     operator uint_least32_t & () {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 170  :         return t;

	mov	eax, DWORD PTR _this$[ebp]

; 171  :     }                

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??Bobject_id_type@archive@boost@@QAEAAIXZ ENDP		; boost::archive::object_id_type::operator unsigned int &
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??Bobject_id_type@archive@boost@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bobject_id_type@archive@boost@@QBEIXZ PROC		; boost::archive::object_id_type::operator unsigned int, COMDAT
; _this$ = ecx

; 165  :     operator uint_least32_t () const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 166  :         return t;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 167  :     }                

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??Bobject_id_type@archive@boost@@QBEIXZ ENDP		; boost::archive::object_id_type::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??Bclass_id_type@archive@boost@@QAEAAFXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bclass_id_type@archive@boost@@QAEAAFXZ PROC		; boost::archive::class_id_type::operator short &, COMDAT
; _this$ = ecx

; 134  :     operator int_least16_t &() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 135  :         return t;

	mov	eax, DWORD PTR _this$[ebp]

; 136  :     }                

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??Bclass_id_type@archive@boost@@QAEAAFXZ ENDP		; boost::archive::class_id_type::operator short &
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??Bclass_id_type@archive@boost@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bclass_id_type@archive@boost@@QBEHXZ PROC		; boost::archive::class_id_type::operator int, COMDAT
; _this$ = ecx

; 130  :     operator int () const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 131  :         return t;

	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax]

; 132  :     }                

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??Bclass_id_type@archive@boost@@QBEHXZ ENDP		; boost::archive::class_id_type::operator int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??Bversion_type@archive@boost@@QAEAAIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bversion_type@archive@boost@@QAEAAIXZ PROC		; boost::archive::version_type::operator unsigned int &, COMDAT
; _this$ = ecx

; 97   :     operator base_type  & (){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 98   :         return t;

	mov	eax, DWORD PTR _this$[ebp]

; 99   :     }                

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??Bversion_type@archive@boost@@QAEAAIXZ ENDP		; boost::archive::version_type::operator unsigned int &
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??Bversion_type@archive@boost@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bversion_type@archive@boost@@QBEIXZ PROC		; boost::archive::version_type::operator unsigned int, COMDAT
; _this$ = ecx

; 93   :     operator base_type () const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 94   :         return t;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 95   :     }                

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??Bversion_type@archive@boost@@QBEIXZ ENDP		; boost::archive::version_type::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??4version_type@archive@boost@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??4version_type@archive@boost@@QAEAAV012@ABV012@@Z PROC	; boost::archive::version_type::operator=, COMDAT
; _this$ = ecx

; 88   :     version_type & operator=(const version_type & rhs){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 89   :         t = rhs.t; 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 90   :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 91   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4version_type@archive@boost@@QAEAAV012@ABV012@@Z ENDP	; boost::archive::version_type::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??0version_type@archive@boost@@QAE@ABI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t_$ = 8						; size = 4
??0version_type@archive@boost@@QAE@ABI@Z PROC		; boost::archive::version_type::version_type, COMDAT
; _this$ = ecx

; 82   :     explicit version_type(const unsigned int & t_) : t(t_){

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t_$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 83   :         BOOST_ASSERT(t_ <= boost::integer_traits<base_type>::const_max);

	mov	eax, DWORD PTR _t_$[ebp]
	cmp	DWORD PTR [eax], -1
	jbe	SHORT $LN1@version_ty
	mov	esi, esp
	push	83					; 00000053H
	push	OFFSET ??_C@_1IO@DBEBMPEE@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
	push	OFFSET ??_C@_1GE@MNCNLAH@?$AAt?$AA_?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAb?$AAo?$AAo?$AAs?$AAt?$AA?3?$AA?3?$AAi?$AAn?$AAt?$AAe?$AAg?$AAe?$AAr?$AA_?$AAt?$AAr?$AAa?$AAi?$AAt?$AAs?$AA?$DM?$AAb?$AAa?$AAs?$AAe@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@version_ty:

; 84   :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0version_type@archive@boost@@QAE@ABI@Z ENDP		; boost::archive::version_type::version_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Darchive_exception@archive@boost@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??_Darchive_exception@archive@boost@@QAEXXZ PROC	; boost::archive::archive_exception::`vbase destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??1archive_exception@archive@boost@@UAE@XZ ; boost::archive::archive_exception::~archive_exception
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??_Darchive_exception@archive@boost@@QAEXXZ ENDP	; boost::archive::archive_exception::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\io\ios_state.hpp
;	COMDAT ?restore@ios_precision_saver@io@boost@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?restore@ios_precision_saver@io@boost@@QAEXXZ PROC	; boost::io::ios_precision_saver::restore, COMDAT
; _this$ = ecx

; 73   :         { s_save_.precision( a_save_ ); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?precision@ios_base@std@@QAE_J_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?restore@ios_precision_saver@io@boost@@QAEXXZ ENDP	; boost::io::ios_precision_saver::restore
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\io\ios_state.hpp
;	COMDAT ??1ios_precision_saver@io@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1ios_precision_saver@io@boost@@QAE@XZ PROC		; boost::io::ios_precision_saver::~ios_precision_saver, COMDAT
; _this$ = ecx

; 70   :         { this->restore(); }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1ios_precision_saver@io@boost@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?restore@ios_precision_saver@io@boost@@QAEXXZ ; boost::io::ios_precision_saver::restore
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1ios_precision_saver@io@boost@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1ios_precision_saver@io@boost@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1ios_precision_saver@io@boost@@QAE@XZ ENDP		; boost::io::ios_precision_saver::~ios_precision_saver
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\io\ios_state.hpp
;	COMDAT ??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z PROC ; boost::io::ios_precision_saver::ios_precision_saver, COMDAT
; _this$ = ecx

; 65   :         {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 64   :         : s_save_( s ), a_save_( s.precision() )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?precision@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], edx

; 65   :         {}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z ENDP ; boost::io::ios_precision_saver::ios_precision_saver
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\io\ios_state.hpp
;	COMDAT ?restore@ios_flags_saver@io@boost@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?restore@ios_flags_saver@io@boost@@QAEXXZ PROC		; boost::io::ios_flags_saver::restore, COMDAT
; _this$ = ecx

; 48   :         { s_save_.flags( a_save_ ); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?flags@ios_base@std@@QAEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?restore@ios_flags_saver@io@boost@@QAEXXZ ENDP		; boost::io::ios_flags_saver::restore
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\io\ios_state.hpp
;	COMDAT ??1ios_flags_saver@io@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1ios_flags_saver@io@boost@@QAE@XZ PROC		; boost::io::ios_flags_saver::~ios_flags_saver, COMDAT
; _this$ = ecx

; 45   :         { this->restore(); }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1ios_flags_saver@io@boost@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?restore@ios_flags_saver@io@boost@@QAEXXZ ; boost::io::ios_flags_saver::restore
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1ios_flags_saver@io@boost@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1ios_flags_saver@io@boost@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1ios_flags_saver@io@boost@@QAE@XZ ENDP		; boost::io::ios_flags_saver::~ios_flags_saver
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\io\ios_state.hpp
;	COMDAT ??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z PROC ; boost::io::ios_flags_saver::ios_flags_saver, COMDAT
; _this$ = ecx

; 40   :         {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 39   :         : s_save_( s ), a_save_( s.flags() )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 40   :         {}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z ENDP ; boost::io::ios_flags_saver::ios_flags_saver
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ??8std@@YA_NVid@thread@0@0@Z
_TEXT	SEGMENT
tv65 = -196						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??8std@@YA_NVid@thread@0@0@Z PROC			; std::operator==, COMDAT

; 215  : 	{	// return true if _Left and _Right identify the same thread

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 216  : 	return (_Left._Id == _Right._Id);

	mov	eax, DWORD PTR __Left$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 217  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??8std@@YA_NVid@thread@0@0@Z ENDP			; std::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ??0id@thread@std@@AAE@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other_id$ = 8						; size = 4
??0id@thread@std@@AAE@I@Z PROC				; std::thread::id::id, COMDAT
; _this$ = ecx

; 168  : 		{	// construct from unique id

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 167  : 		: _Id(_Other_id)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Other_id$[ebp]
	mov	DWORD PTR [eax], ecx

; 169  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@thread@std@@AAE@I@Z ENDP				; std::thread::id::id
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ?get_id@this_thread@std@@YA?AVid@thread@2@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?get_id@this_thread@std@@YA?AVid@thread@2@XZ PROC	; std::this_thread::get_id, COMDAT

; 205  : 	{	// return id for current thread

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?get_id@this_thread@std@@YA?AVid@thread@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 206  : 	return (_Thrd_id());

	mov	esi, esp
	call	DWORD PTR __imp___Thrd_id
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0id@thread@std@@AAE@I@Z		; std::thread::id::id
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 207  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?get_id@this_thread@std@@YA?AVid@thread@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?get_id@this_thread@std@@YA?AVid@thread@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?get_id@this_thread@std@@YA?AVid@thread@2@XZ ENDP	; std::this_thread::get_id
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ?get_id@thread@std@@QBE?AVid@12@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?get_id@thread@std@@QBE?AVid@12@XZ PROC			; std::thread::get_id, COMDAT
; _this$ = ecx

; 200  : 	{	// return id for this thread

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?get_id@thread@std@@QBE?AVid@12@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 201  : 	return (_Thr_val(_Thr));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0id@thread@std@@AAE@I@Z		; std::thread::id::id
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 202  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?get_id@thread@std@@QBE?AVid@12@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?get_id@thread@std@@QBE?AVid@12@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?get_id@thread@std@@QBE?AVid@12@XZ ENDP			; std::thread::get_id
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ?join@thread@std@@QAEXXZ
_TEXT	SEGMENT
tv72 = -241						; size = 1
$T1 = -236						; size = 4
$T2 = -224						; size = 4
__Is_null$ = -17					; size = 1
_this$ = -8						; size = 4
?join@thread@std@@QAEXXZ PROC				; std::thread::join, COMDAT
; _this$ = ecx

; 186  : 	{	// join thread

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 187  : 	if (!joinable())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?joinable@thread@std@@QBE_NXZ		; std::thread::joinable
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@join

; 188  : 		_Throw_Cpp_error(_INVALID_ARGUMENT);

	mov	esi, esp
	push	1
	call	DWORD PTR __imp_?_Throw_Cpp_error@std@@YAXH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@join:

; 189  : 	const bool _Is_null = _Thr_is_null(_Thr);	// Avoid Clang -Wparentheses-equality

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN7@join
	mov	BYTE PTR tv72[ebp], 1
	jmp	SHORT $LN8@join
$LN7@join:
	mov	BYTE PTR tv72[ebp], 0
$LN8@join:
	mov	cl, BYTE PTR tv72[ebp]
	mov	BYTE PTR __Is_null$[ebp], cl

; 190  : 	if (_Is_null)

	movzx	eax, BYTE PTR __Is_null$[ebp]
	test	eax, eax
	je	SHORT $LN3@join

; 191  : 		_Throw_Cpp_error(_INVALID_ARGUMENT);

	mov	esi, esp
	push	1
	call	DWORD PTR __imp_?_Throw_Cpp_error@std@@YAXH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@join:

; 192  : 	if (get_id() == _STD this_thread::get_id())

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?get_id@this_thread@std@@YA?AVid@thread@2@XZ ; std::this_thread::get_id
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_id@thread@std@@QBE?AVid@12@XZ	; std::thread::get_id
	mov	eax, DWORD PTR [eax]
	push	eax
	call	??8std@@YA_NVid@thread@0@0@Z		; std::operator==
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@join

; 193  : 		_Throw_Cpp_error(_RESOURCE_DEADLOCK_WOULD_OCCUR);

	mov	esi, esp
	push	5
	call	DWORD PTR __imp_?_Throw_Cpp_error@std@@YAXH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@join:

; 194  : 	if (_Thrd_join(_Thr, 0) != _Thrd_success)

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	DWORD PTR __imp___Thrd_join
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN5@join

; 195  : 		_Throw_Cpp_error(_NO_SUCH_PROCESS);

	mov	esi, esp
	push	2
	call	DWORD PTR __imp_?_Throw_Cpp_error@std@@YAXH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@join:

; 196  : 	_Thr_set_null(_Thr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 197  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?join@thread@std@@QAEXXZ ENDP				; std::thread::join
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ?joinable@thread@std@@QBE_NXZ
_TEXT	SEGMENT
tv67 = -208						; size = 4
_this$ = -8						; size = 4
?joinable@thread@std@@QBE_NXZ PROC			; std::thread::joinable, COMDAT
; _this$ = ecx

; 80   : 		{	// return true if this thread can be joined

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 81   : 		return (!_Thr_is_null(_Thr));

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@joinable
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@joinable
$LN3@joinable:
	mov	DWORD PTR tv67[ebp], 0
$LN4@joinable:
	mov	al, BYTE PTR tv67[ebp]

; 82   : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?joinable@thread@std@@QBE_NXZ ENDP			; std::thread::joinable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ??1thread@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1thread@std@@QAE@XZ PROC				; std::thread::~thread, COMDAT
; _this$ = ecx

; 55   : 		{	// clean up

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		if (joinable())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?joinable@thread@std@@QBE_NXZ		; std::thread::joinable
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@thread

; 57   : 			_XSTD terminate();

	mov	esi, esp
	call	DWORD PTR __imp__terminate
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@thread:

; 58   : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1thread@std@@QAE@XZ ENDP				; std::thread::~thread
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Call_func@_Pad@std@@CGIPAX@Z
_TEXT	SEGMENT
__Data$ = 8						; size = 4
?_Call_func@_Pad@std@@CGIPAX@Z PROC			; std::_Pad::_Call_func, COMDAT

; 208  : 		{	// entry point for new thread

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 209  : 		static_cast<_Pad *>(_Data)->_Go();

	mov	eax, DWORD PTR __Data$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR __Data$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 210  : 		_Cnd_do_broadcast_at_thread_exit();

	mov	esi, esp
	call	DWORD PTR __imp___Cnd_do_broadcast_at_thread_exit
	cmp	esi, esp
	call	__RTC_CheckEsp

; 211  : 		return (0);

	xor	eax, eax

; 212  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Call_func@_Pad@std@@CGIPAX@Z ENDP			; std::_Pad::_Call_func
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Release@_Pad@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Release@_Pad@std@@QAEXXZ PROC				; std::_Pad::_Release, COMDAT
; _this$ = ecx

; 194  : 		{	// notify caller that it's okay to continue

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 195  : 		_Mtx_lockX(_Mtx);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Mtx_lockX@std@@YAHPAU_Mtx_internal_imp_t@@@Z ; std::_Mtx_lockX
	add	esp, 4

; 196  : 		_Started = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 1

; 197  : 		_Cnd_signalX(_Cond);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Cnd_signalX@std@@YAHPAU_Cnd_internal_imp_t@@@Z ; std::_Cnd_signalX
	add	esp, 4

; 198  : 		_Mtx_unlockX(_Mtx);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Mtx_unlockX@std@@YAHPAU_Mtx_internal_imp_t@@@Z ; std::_Mtx_unlockX
	add	esp, 4

; 199  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Release@_Pad@std@@QAEXXZ ENDP				; std::_Pad::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Launch@_Pad@std@@QAEXPAU_Thrd_imp_t@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Thr$ = 8						; size = 4
?_Launch@_Pad@std@@QAEXPAU_Thrd_imp_t@@@Z PROC		; std::_Pad::_Launch, COMDAT
; _this$ = ecx

; 187  : 		{	// launch a thread

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 188  : 		_Thrd_startX(_Thr, _Call_func, this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	push	OFFSET ?_Call_func@_Pad@std@@CGIPAX@Z	; std::_Pad::_Call_func
	mov	ecx, DWORD PTR __Thr$[ebp]
	push	ecx
	call	?_Thrd_startX@std@@YAHPAU_Thrd_imp_t@@P6GIPAX@Z1@Z ; std::_Thrd_startX
	add	esp, 12					; 0000000cH
$LN2@Launch:

; 189  : 		while (!_Started)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+12]
	test	ecx, ecx
	jne	SHORT $LN1@Launch

; 190  : 			_Cnd_waitX(_Cond, _Mtx);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?_Cnd_waitX@std@@YAHPAU_Cnd_internal_imp_t@@PAU_Mtx_internal_imp_t@@@Z ; std::_Cnd_waitX
	add	esp, 8
	jmp	SHORT $LN2@Launch
$LN1@Launch:

; 191  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Launch@_Pad@std@@QAEXPAU_Thrd_imp_t@@@Z ENDP		; std::_Pad::_Launch
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??1_Pad@std@@QAE@XZ
_TEXT	SEGMENT
__Mtx_cleaner$ = -52					; size = 8
__Cnd_cleaner$ = -36					; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1_Pad@std@@QAE@XZ PROC				; std::_Pad::~_Pad, COMDAT
; _this$ = ecx

; 180  : 		{	// clean up handshake; non-virtual due to type-erasure

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Pad@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Pad@std@@6B@

; 181  : 		_Auto_cnd _Cnd_cleaner(_Cond);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	ecx, DWORD PTR __Cnd_cleaner$[ebp]
	call	??0_Auto_cnd@std@@QAE@PAU_Cnd_internal_imp_t@@@Z ; std::_Auto_cnd::_Auto_cnd

; 182  : 		_Auto_mtx _Mtx_cleaner(_Mtx);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	lea	ecx, DWORD PTR __Mtx_cleaner$[ebp]
	call	??0_Auto_mtx@std@@QAE@PAU_Mtx_internal_imp_t@@@Z ; std::_Auto_mtx::_Auto_mtx

; 183  : 		_Mtx_unlockX(_Mtx);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Mtx_unlockX@std@@YAHPAU_Mtx_internal_imp_t@@@Z ; std::_Mtx_unlockX
	add	esp, 4

; 184  : 		}

	lea	ecx, DWORD PTR __Mtx_cleaner$[ebp]
	call	??1_Auto_mtx@std@@QAE@XZ		; std::_Auto_mtx::~_Auto_mtx
	lea	ecx, DWORD PTR __Cnd_cleaner$[ebp]
	call	??1_Auto_cnd@std@@QAE@XZ		; std::_Auto_cnd::~_Auto_cnd
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Pad
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Pad:
	DD	2
	DD	$LN6@Pad
$LN6@Pad:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN3@Pad
	DD	-52					; ffffffccH
	DD	8
	DD	$LN4@Pad
$LN4@Pad:
	DB	95					; 0000005fH
	DB	77					; 0000004dH
	DB	116					; 00000074H
	DB	120					; 00000078H
	DB	95					; 0000005fH
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN3@Pad:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Pad@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Pad@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Pad@std@@QAE@XZ ENDP				; std::_Pad::~_Pad
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??0_Pad@std@@QAE@XZ
_TEXT	SEGMENT
__Mtx_cleaner$ = -52					; size = 8
__Cnd_cleaner$ = -36					; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0_Pad@std@@QAE@XZ PROC				; std::_Pad::_Pad, COMDAT
; _this$ = ecx

; 167  : 	_Pad()

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_Pad@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 168  : 		{	// initialize handshake

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Pad@std@@6B@

; 169  : 		_Cnd_initX(&_Cond);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	?_Cnd_initX@std@@YAHPAPAU_Cnd_internal_imp_t@@@Z ; std::_Cnd_initX
	add	esp, 4

; 170  : 		_Auto_cnd _Cnd_cleaner(_Cond);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	ecx, DWORD PTR __Cnd_cleaner$[ebp]
	call	??0_Auto_cnd@std@@QAE@PAU_Cnd_internal_imp_t@@@Z ; std::_Auto_cnd::_Auto_cnd
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 171  : 		_Mtx_initX(&_Mtx, _Mtx_plain);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	call	?_Mtx_initX@std@@YAHPAPAU_Mtx_internal_imp_t@@H@Z ; std::_Mtx_initX
	add	esp, 8

; 172  : 		_Auto_mtx _Mtx_cleaner(_Mtx);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	lea	ecx, DWORD PTR __Mtx_cleaner$[ebp]
	call	??0_Auto_mtx@std@@QAE@PAU_Mtx_internal_imp_t@@@Z ; std::_Auto_mtx::_Auto_mtx
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 173  : 		_Started = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0

; 174  : 		_Mtx_lockX(_Mtx);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Mtx_lockX@std@@YAHPAU_Mtx_internal_imp_t@@@Z ; std::_Mtx_lockX
	add	esp, 4

; 175  : 		_Mtx_cleaner._Release();

	lea	ecx, DWORD PTR __Mtx_cleaner$[ebp]
	call	?_Release@_Auto_mtx@std@@QAEXXZ		; std::_Auto_mtx::_Release

; 176  : 		_Cnd_cleaner._Release();

	lea	ecx, DWORD PTR __Cnd_cleaner$[ebp]
	call	?_Release@_Auto_cnd@std@@QAEXXZ		; std::_Auto_cnd::_Release

; 177  : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Mtx_cleaner$[ebp]
	call	??1_Auto_mtx@std@@QAE@XZ		; std::_Auto_mtx::~_Auto_mtx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Cnd_cleaner$[ebp]
	call	??1_Auto_cnd@std@@QAE@XZ		; std::_Auto_cnd::~_Auto_cnd
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Pad
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@Pad:
	DD	2
	DD	$LN8@Pad
$LN8@Pad:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN5@Pad
	DD	-52					; ffffffccH
	DD	8
	DD	$LN6@Pad
$LN6@Pad:
	DB	95					; 0000005fH
	DB	77					; 0000004dH
	DB	116					; 00000074H
	DB	120					; 00000078H
	DB	95					; 0000005fH
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN5@Pad:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_Pad@std@@QAE@XZ$0:
	lea	ecx, DWORD PTR __Cnd_cleaner$[ebp]
	jmp	??1_Auto_cnd@std@@QAE@XZ		; std::_Auto_cnd::~_Auto_cnd
__unwindfunclet$??0_Pad@std@@QAE@XZ$1:
	lea	ecx, DWORD PTR __Mtx_cleaner$[ebp]
	jmp	??1_Auto_mtx@std@@QAE@XZ		; std::_Auto_mtx::~_Auto_mtx
__ehhandler$??0_Pad@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_Pad@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_Pad@std@@QAE@XZ ENDP				; std::_Pad::_Pad
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Release@_Auto_mtx@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Release@_Auto_mtx@std@@QAEXXZ PROC			; std::_Auto_mtx::_Release, COMDAT
; _this$ = ecx

; 153  : 		{	// release the mutex

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 154  : 		_Active = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax], 0

; 155  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Release@_Auto_mtx@std@@QAEXXZ ENDP			; std::_Auto_mtx::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??1_Auto_mtx@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_Auto_mtx@std@@QAE@XZ PROC				; std::_Auto_mtx::~_Auto_mtx, COMDAT
; _this$ = ecx

; 147  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 148  : 		if (_Active)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@Auto_mtx

; 149  : 			_Mtx_destroy(_MyMtxp);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp___Mtx_destroy
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Auto_mtx:

; 150  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Auto_mtx@std@@QAE@XZ ENDP				; std::_Auto_mtx::~_Auto_mtx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??0_Auto_mtx@std@@QAE@PAU_Mtx_internal_imp_t@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Mtxp$ = 8						; size = 4
??0_Auto_mtx@std@@QAE@PAU_Mtx_internal_imp_t@@@Z PROC	; std::_Auto_mtx::_Auto_mtx, COMDAT
; _this$ = ecx

; 143  : 		{	// construct from mutex

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 142  : 		: _Active(true), _MyMtxp(_Mtxp)

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Mtxp$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 144  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Auto_mtx@std@@QAE@PAU_Mtx_internal_imp_t@@@Z ENDP	; std::_Auto_mtx::_Auto_mtx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Release@_Auto_cnd@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Release@_Auto_cnd@std@@QAEXXZ PROC			; std::_Auto_cnd::_Release, COMDAT
; _this$ = ecx

; 129  : 		{	// release the condition variable

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 130  : 		_Active = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax], 0

; 131  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Release@_Auto_cnd@std@@QAEXXZ ENDP			; std::_Auto_cnd::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??1_Auto_cnd@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_Auto_cnd@std@@QAE@XZ PROC				; std::_Auto_cnd::~_Auto_cnd, COMDAT
; _this$ = ecx

; 123  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 124  : 		if (_Active)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@Auto_cnd

; 125  : 			_Cnd_destroy(_MyCndp);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp___Cnd_destroy
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Auto_cnd:

; 126  : 			}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Auto_cnd@std@@QAE@XZ ENDP				; std::_Auto_cnd::~_Auto_cnd
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??0_Auto_cnd@std@@QAE@PAU_Cnd_internal_imp_t@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Cndp$ = 8						; size = 4
??0_Auto_cnd@std@@QAE@PAU_Cnd_internal_imp_t@@@Z PROC	; std::_Auto_cnd::_Auto_cnd, COMDAT
; _this$ = ecx

; 119  : 		{	// construct from condition variable pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 118  : 		: _Active(true), _MyCndp(_Cndp)

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Cndp$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 120  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Auto_cnd@std@@QAE@PAU_Cnd_internal_imp_t@@@Z ENDP	; std::_Auto_cnd::_Auto_cnd
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Cnd_signalX@std@@YAHPAU_Cnd_internal_imp_t@@@Z
_TEXT	SEGMENT
__Cnd$ = 8						; size = 4
?_Cnd_signalX@std@@YAHPAU_Cnd_internal_imp_t@@@Z PROC	; std::_Cnd_signalX, COMDAT

; 110  : 	{	// throw exception on failure

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 111  : 	return (_Check_C_return(_Cnd_signal(_Cnd)));

	mov	esi, esp
	mov	eax, DWORD PTR __Cnd$[ebp]
	push	eax
	call	DWORD PTR __imp___Cnd_signal
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?_Check_C_return@std@@YAHH@Z		; std::_Check_C_return
	add	esp, 4

; 112  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Cnd_signalX@std@@YAHPAU_Cnd_internal_imp_t@@@Z ENDP	; std::_Cnd_signalX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Cnd_waitX@std@@YAHPAU_Cnd_internal_imp_t@@PAU_Mtx_internal_imp_t@@@Z
_TEXT	SEGMENT
__Cnd$ = 8						; size = 4
__Mtx$ = 12						; size = 4
?_Cnd_waitX@std@@YAHPAU_Cnd_internal_imp_t@@PAU_Mtx_internal_imp_t@@@Z PROC ; std::_Cnd_waitX, COMDAT

; 94   : 	{	// throw exception on failure

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 95   : 	return (_Check_C_return(_Cnd_wait(_Cnd, _Mtx)));

	mov	esi, esp
	mov	eax, DWORD PTR __Mtx$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Cnd$[ebp]
	push	ecx
	call	DWORD PTR __imp___Cnd_wait
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?_Check_C_return@std@@YAHH@Z		; std::_Check_C_return
	add	esp, 4

; 96   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Cnd_waitX@std@@YAHPAU_Cnd_internal_imp_t@@PAU_Mtx_internal_imp_t@@@Z ENDP ; std::_Cnd_waitX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Cnd_initX@std@@YAHPAPAU_Cnd_internal_imp_t@@@Z
_TEXT	SEGMENT
__Cnd$ = 8						; size = 4
?_Cnd_initX@std@@YAHPAPAU_Cnd_internal_imp_t@@@Z PROC	; std::_Cnd_initX, COMDAT

; 89   : 	{	// throw exception on failure

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 90   : 	return (_Check_C_return(_Cnd_init(_Cnd)));

	mov	esi, esp
	mov	eax, DWORD PTR __Cnd$[ebp]
	push	eax
	call	DWORD PTR __imp___Cnd_init
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?_Check_C_return@std@@YAHH@Z		; std::_Check_C_return
	add	esp, 4

; 91   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Cnd_initX@std@@YAHPAPAU_Cnd_internal_imp_t@@@Z ENDP	; std::_Cnd_initX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Mtx_unlockX@std@@YAHPAU_Mtx_internal_imp_t@@@Z
_TEXT	SEGMENT
__Mtx$ = 8						; size = 4
?_Mtx_unlockX@std@@YAHPAU_Mtx_internal_imp_t@@@Z PROC	; std::_Mtx_unlockX, COMDAT

; 84   : 	{	// throw exception on failure

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 85   : 	return (_Check_C_return(_Mtx_unlock(_Mtx)));

	mov	esi, esp
	mov	eax, DWORD PTR __Mtx$[ebp]
	push	eax
	call	DWORD PTR __imp___Mtx_unlock
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?_Check_C_return@std@@YAHH@Z		; std::_Check_C_return
	add	esp, 4

; 86   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mtx_unlockX@std@@YAHPAU_Mtx_internal_imp_t@@@Z ENDP	; std::_Mtx_unlockX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Mtx_lockX@std@@YAHPAU_Mtx_internal_imp_t@@@Z
_TEXT	SEGMENT
__Mtx$ = 8						; size = 4
?_Mtx_lockX@std@@YAHPAU_Mtx_internal_imp_t@@@Z PROC	; std::_Mtx_lockX, COMDAT

; 69   : 	{	// throw exception on failure

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 70   : 	return (_Check_C_return(_Mtx_lock(_Mtx)));

	mov	esi, esp
	mov	eax, DWORD PTR __Mtx$[ebp]
	push	eax
	call	DWORD PTR __imp___Mtx_lock
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?_Check_C_return@std@@YAHH@Z		; std::_Check_C_return
	add	esp, 4

; 71   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mtx_lockX@std@@YAHPAU_Mtx_internal_imp_t@@@Z ENDP	; std::_Mtx_lockX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Mtx_initX@std@@YAHPAPAU_Mtx_internal_imp_t@@H@Z
_TEXT	SEGMENT
__Mtx$ = 8						; size = 4
__Type$ = 12						; size = 4
?_Mtx_initX@std@@YAHPAPAU_Mtx_internal_imp_t@@H@Z PROC	; std::_Mtx_initX, COMDAT

; 64   : 	{	// throw exception on failure

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 65   : 	return (_Check_C_return(_Mtx_init(_Mtx, _Type)));

	mov	esi, esp
	mov	eax, DWORD PTR __Type$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mtx$[ebp]
	push	ecx
	call	DWORD PTR __imp___Mtx_init
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?_Check_C_return@std@@YAHH@Z		; std::_Check_C_return
	add	esp, 4

; 66   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mtx_initX@std@@YAHPAPAU_Mtx_internal_imp_t@@H@Z ENDP	; std::_Mtx_initX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Thrd_startX@std@@YAHPAU_Thrd_imp_t@@P6GIPAX@Z1@Z
_TEXT	SEGMENT
tv70 = -208						; size = 4
__Res$ = -8						; size = 4
__Thr$ = 8						; size = 4
__Fp$ = 12						; size = 4
__Arg$ = 16						; size = 4
?_Thrd_startX@std@@YAHPAU_Thrd_imp_t@@P6GIPAX@Z1@Z PROC	; std::_Thrd_startX, COMDAT

; 48   : 	{	// throw exception on failure

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 49   : 	int _Res = _Thrd_start(_Thr, _Fp, _Arg);

	mov	esi, esp
	mov	eax, DWORD PTR __Arg$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Fp$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Thr$[ebp]
	push	edx
	call	DWORD PTR __imp___Thrd_start
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Res$[ebp], eax

; 50   : 	return (_Check_C_return(_Res != _Thrd_error ? _Res : _Thrd_nomem));

	cmp	DWORD PTR __Res$[ebp], 4
	je	SHORT $LN3@Thrd_start
	mov	eax, DWORD PTR __Res$[ebp]
	mov	DWORD PTR tv70[ebp], eax
	jmp	SHORT $LN4@Thrd_start
$LN3@Thrd_start:
	mov	DWORD PTR tv70[ebp], 1
$LN4@Thrd_start:
	mov	ecx, DWORD PTR tv70[ebp]
	push	ecx
	call	?_Check_C_return@std@@YAHH@Z		; std::_Check_C_return
	add	esp, 4

; 51   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Thrd_startX@std@@YAHPAU_Thrd_imp_t@@P6GIPAX@Z1@Z ENDP	; std::_Thrd_startX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Check_C_return@std@@YAHH@Z
_TEXT	SEGMENT
__Res$ = 8						; size = 4
?_Check_C_return@std@@YAHH@Z PROC			; std::_Check_C_return, COMDAT

; 33   : 	{	// throw exception on failure

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 34   : 	if (_Res != _Thrd_success)

	cmp	DWORD PTR __Res$[ebp], 0
	je	SHORT $LN2@Check_C_re

; 35   : 		_Throw_C_error(_Res);

	mov	esi, esp
	mov	eax, DWORD PTR __Res$[ebp]
	push	eax
	call	DWORD PTR __imp_?_Throw_C_error@std@@YAXH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Check_C_re:

; 36   : 	return (_Res);

	mov	eax, DWORD PTR __Res$[ebp]

; 37   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Check_C_return@std@@YAHH@Z ENDP			; std::_Check_C_return
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Enable_shared@std@@YAXPDX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Enable_shared@std@@YAXPDX0@Z PROC			; std::_Enable_shared, COMDAT

; 261  : 	{	// not derived from enable_shared_from_this; do nothing

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 262  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Enable_shared@std@@YAXPDX0@Z ENDP			; std::_Enable_shared
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G_Ref_count_base@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G_Ref_count_base@std@@UAEPAXI@Z PROC			; std::_Ref_count_base::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Ref_count_base@std@@UAE@XZ		; std::_Ref_count_base::~_Ref_count_base
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Ref_count_base@std@@UAEPAXI@Z ENDP			; std::_Ref_count_base::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Get_deleter@_Ref_count_base@std@@UBEPAXABVtype_info@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?_Get_deleter@_Ref_count_base@std@@UBEPAXABVtype_info@@@Z PROC ; std::_Ref_count_base::_Get_deleter, COMDAT
; _this$ = ecx

; 134  : 		{	// return address of deleter object

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 135  : 		return (0);

	xor	eax, eax

; 136  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?_Get_deleter@_Ref_count_base@std@@UBEPAXABVtype_info@@@Z ENDP ; std::_Ref_count_base::_Get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Decwref@_Ref_count_base@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Decwref@_Ref_count_base@std@@QAEXXZ PROC		; std::_Ref_count_base::_Decwref, COMDAT
; _this$ = ecx

; 118  : 		{	// decrement weak reference count

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 119  : 		if (_MT_DECR(_Weaks) == 0)

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	dec	ecx
	jne	SHORT $LN1@Decwref

; 120  : 			_Delete_this();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Decwref:

; 121  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Decwref@_Ref_count_base@std@@QAEXXZ ENDP		; std::_Ref_count_base::_Decwref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Decref@_Ref_count_base@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Decref@_Ref_count_base@std@@QAEXXZ PROC		; std::_Ref_count_base::_Decref, COMDAT
; _this$ = ecx

; 109  : 		{	// decrement use count

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 110  : 		if (_MT_DECR(_Uses) == 0)

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	dec	ecx
	jne	SHORT $LN1@Decref

; 111  : 			{	// destroy managed resource, decrement weak reference count
; 112  : 			_Destroy();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 113  : 			_Decwref();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Decwref@_Ref_count_base@std@@QAEXXZ	; std::_Ref_count_base::_Decwref
$LN1@Decref:

; 114  : 			}
; 115  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Decref@_Ref_count_base@std@@QAEXXZ ENDP		; std::_Ref_count_base::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Incref@_Ref_count_base@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Incref@_Ref_count_base@std@@QAEXXZ PROC		; std::_Ref_count_base::_Incref, COMDAT
; _this$ = ecx

; 99   : 		{	// increment use count

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 100  : 		_MT_INCR(_Uses);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	lock	 inc	 DWORD PTR [eax]

; 101  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Incref@_Ref_count_base@std@@QAEXXZ ENDP		; std::_Ref_count_base::_Incref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??1_Ref_count_base@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_Ref_count_base@std@@UAE@XZ PROC			; std::_Ref_count_base::~_Ref_count_base, COMDAT
; _this$ = ecx

; 66   : 		{	// ensure that derived classes can be destroyed properly

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Ref_count_base@std@@6B@

; 67   : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Ref_count_base@std@@UAE@XZ ENDP			; std::_Ref_count_base::~_Ref_count_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0_Ref_count_base@std@@IAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Ref_count_base@std@@IAE@XZ PROC			; std::_Ref_count_base::_Ref_count_base, COMDAT
; _this$ = ecx

; 58   : 	_Ref_count_base()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 59   : 		{	// construct

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Ref_count_base@std@@6B@

; 60   : 		_Init_atomic_counter(_Uses, 1);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	?_Init_atomic_counter@std@@YAXAAKK@Z	; std::_Init_atomic_counter
	add	esp, 8

; 61   : 		_Init_atomic_counter(_Weaks, 1);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	call	?_Init_atomic_counter@std@@YAXAAKK@Z	; std::_Init_atomic_counter
	add	esp, 8

; 62   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Ref_count_base@std@@IAE@XZ ENDP			; std::_Ref_count_base::_Ref_count_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z
_TEXT	SEGMENT
tv83 = -232						; size = 4
tv71 = -232						; size = 4
__Ptr0$1 = -32						; size = 4
__Facptr$ = -20						; size = 4
_this$ = -8						; size = 4
__Id$ = 8						; size = 4
?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z PROC		; std::locale::_Getfacet, COMDAT
; _this$ = ecx

; 458  : 		{	// look up a facet in locale object

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 459  : 		const facet *_Facptr = _Id < _Ptr->_Facetcount

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Id$[ebp]
	cmp	edx, DWORD PTR [ecx+12]
	jae	SHORT $LN6@Getfacet
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR __Id$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR tv71[ebp], ecx
	jmp	SHORT $LN7@Getfacet
$LN6@Getfacet:
	mov	DWORD PTR tv71[ebp], 0
$LN7@Getfacet:
	mov	edx, DWORD PTR tv71[ebp]
	mov	DWORD PTR __Facptr$[ebp], edx

; 460  : 			? _Ptr->_Facetvec[_Id] : 0;	// null if id off end
; 461  : 		if (_Facptr != 0 || !_Ptr->_Xparent)

	cmp	DWORD PTR __Facptr$[ebp], 0
	jne	SHORT $LN4@Getfacet
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	movzx	edx, BYTE PTR [ecx+20]
	test	edx, edx
	jne	SHORT $LN2@Getfacet
$LN4@Getfacet:

; 462  : 			return (_Facptr);	// found facet or not transparent

	mov	eax, DWORD PTR __Facptr$[ebp]
	jmp	SHORT $LN1@Getfacet

; 463  : 		else

	jmp	SHORT $LN1@Getfacet
$LN2@Getfacet:

; 464  : 			{	// look in current locale
; 465  : 			locale::_Locimp *_Ptr0 = _Getgloballocale();

	mov	esi, esp
	call	DWORD PTR __imp_?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Ptr0$1[ebp], eax

; 466  : 			return (_Id < _Ptr0->_Facetcount

	mov	eax, DWORD PTR __Ptr0$1[ebp]
	mov	ecx, DWORD PTR __Id$[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jae	SHORT $LN8@Getfacet
	mov	edx, DWORD PTR __Ptr0$1[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR __Id$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR tv83[ebp], edx
	jmp	SHORT $LN9@Getfacet
$LN8@Getfacet:
	mov	DWORD PTR tv83[ebp], 0
$LN9@Getfacet:
	mov	eax, DWORD PTR tv83[ebp]
$LN1@Getfacet:

; 467  : 				? _Ptr0->_Facetvec[_Id]	// get from current locale
; 468  : 				: 0);	// no entry in current locale
; 469  : 			}
; 470  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z ENDP		; std::locale::_Getfacet
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??1locale@std@@QAE@XZ
_TEXT	SEGMENT
tv84 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1locale@std@@QAE@XZ PROC				; std::locale::~locale, COMDAT
; _this$ = ecx

; 430  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1locale@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 431  : 		if (_Ptr != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@locale

; 432  : 			delete _Ptr->_Decref();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T3[ebp], eax
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN4@locale
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN3@locale
$LN4@locale:
	mov	DWORD PTR tv84[ebp], 0
$LN3@locale:

; 433  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1locale@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1locale@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1locale@std@@QAE@XZ ENDP				; std::locale::~locale
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_cast@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gbad_cast@std@@UAEPAXI@Z PROC			; std::bad_cast::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_cast@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_cast@std@@UAEPAXI@Z ENDP			; std::bad_cast::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_cast@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0bad_cast@std@@QAE@ABV01@@Z PROC			; std::bad_cast::bad_cast, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_cast@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_cast@std@@QAE@ABV01@@Z ENDP			; std::bad_cast::bad_cast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_cast@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1bad_cast@std@@UAE@XZ PROC				; std::bad_cast::~bad_cast, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_cast@std@@UAE@XZ ENDP				; std::bad_cast::~bad_cast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_typeinfo.h
;	COMDAT ??0bad_cast@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0bad_cast@std@@QAE@XZ PROC				; std::bad_cast::bad_cast, COMDAT
; _this$ = ecx

; 125  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 124  :         : exception("bad cast", 1)

	push	1
	push	OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@QBDH@Z		; std::exception::exception

; 125  :     {

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_cast@std@@6B@

; 126  :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0bad_cast@std@@QAE@XZ ENDP				; std::bad_cast::bad_cast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_typeinfo.h
;	COMDAT ?name@type_info@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?name@type_info@@QBEPBDXZ PROC				; type_info::name, COMDAT
; _this$ = ecx

; 90   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 91   :         #ifdef _M_CEE_PURE
; 92   :         return __std_type_info_name(&_Data, static_cast<__type_info_node*>(__type_info_root_node.ToPointer()));
; 93   :         #else
; 94   :         return __std_type_info_name(&_Data, &__type_info_root_node);

	mov	esi, esp
	push	OFFSET ?__type_info_root_node@@3U__type_info_node@@A ; __type_info_root_node
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	DWORD PTR __imp____std_type_info_name
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 95   :         #endif
; 96   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?name@type_info@@QBEPBDXZ ENDP				; type_info::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2282 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2283 : 		_Xout_of_range("invalid string position");

	mov	esi, esp
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xran:

; 2284 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset, COMDAT
; _this$ = ecx

; 2270 : 		{	// checks whether _Off is in the bounds of [0, this->size()]

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		if (this->_Mysize() < _Off)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Off$[ebp]
	jae	SHORT $LN3@Check_offs

; 2272 : 			_Xran();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN3@Check_offs:

; 2273 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2265 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2266 : 		_Xlength_error("string too long");

	mov	esi, esp
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xlen:

; 2267 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -20						; size = 4
_this$ = -8						; size = 4
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2248 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2249 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN2@Tidy
	jmp	$LN3@Tidy
$LN2@Tidy:

; 2250 : 			;
; 2251 : 		else if (this->_BUF_SIZE <= this->_Myres())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	cmp	DWORD PTR [eax], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2252 : 			{	// copy any leftovers to small buffer and deallocate
; 2253 : 			pointer _Ptr = this->_Bx()._Ptr;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2254 : 			this->_Getal().destroy(_STD addressof(this->_Bx()._Ptr));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
	push	eax
	call	??$addressof@PAD@std@@YAPAPADAAPAD@Z	; std::addressof<char *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2255 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN5@Tidy

; 2256 : 				_Traits::copy(this->_Bx()._Buf,

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN5@Tidy:

; 2257 : 					_Unfancy(_Ptr), _Newsize);
; 2258 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	mov	eax, DWORD PTR [eax]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2259 : 			}
; 2260 : 		this->_Myres() = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	mov	DWORD PTR [eax], 15			; 0000000fH

; 2261 : 		_Eos(_Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2262 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2238 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2239 : 		if (_Ptr == nullptr_t{} || _Ptr < this->_Myptr()
; 2240 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN4@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN4@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	add	esi, DWORD PTR [eax]
	cmp	esi, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN2@Inside
$LN4@Inside:

; 2241 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN1@Inside

; 2242 : 		else

	jmp	SHORT $LN1@Inside
$LN2@Inside:

; 2243 : 			return (true);

	mov	al, 1
$LN1@Inside:

; 2244 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv140 = -208						; size = 4
tv133 = -208						; size = 4
_this$ = -8						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2224 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2225 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN2@Grow

; 2226 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Grow:

; 2227 : 		if (this->_Myres() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN3@Grow

; 2228 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2229 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	eax, BYTE PTR __Trim$[ebp]
	test	eax, eax
	je	SHORT $LN5@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN5@Grow

; 2230 : 			_Tidy(true,	// copy and deallocate if trimming to small string

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv133[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv133[ebp], eax
$LN10@Grow:
	mov	ecx, DWORD PTR tv133[ebp]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2231 : 				_Newsize < this->_Mysize() ? _Newsize : this->_Mysize());
; 2232 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2233 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2234 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv140[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv140[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv140[ebp]
$LN8@Grow:

; 2235 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
$T1 = -221						; size = 1
__Dx$ = -20						; size = 4
_this$ = -8						; size = 4
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		auto& _Dx = this->_Get_data();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
	mov	DWORD PTR __Dx$[ebp], eax

; 2219 : 		_Traits::assign(_Dx._Myptr()[_Dx._Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR __Dx$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+20], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR __Dx$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2220 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv217 = -248						; size = 4
tv216 = -248						; size = 4
__Ptr$ = -48						; size = 4
__Newres$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN2@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], eax
	jmp	SHORT $LN3@Copy
$LN2@Copy:

; 2186 : 		else if (this->_Myres() / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	mov	edx, DWORD PTR [eax]
	shr	edx, 1
	cmp	edx, esi
	ja	SHORT $LN4@Copy
	jmp	SHORT $LN3@Copy
$LN4@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres() <= max_size() - this->_Myres() / 2)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	mov	esi, DWORD PTR [eax]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	edi, eax
	sub	edi, esi
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	cmp	DWORD PTR [eax], edi
	ja	SHORT $LN6@Copy

; 2189 : 			_Newres = this->_Myres()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	mov	esi, DWORD PTR [eax]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	add	esi, DWORD PTR [eax]
	mov	DWORD PTR __Newres$[ebp], esi

; 2190 : 				+ this->_Myres() / 2;	// grow exponentially if possible
; 2191 : 		else

	jmp	SHORT $LN3@Copy
$LN6@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN3@Copy:

; 2193 : 
; 2194 : 		pointer _Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv216[ebp], eax
	mov	ecx, DWORD PTR tv216[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], eax

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv217[ebp], eax
	mov	ecx, DWORD PTR tv217[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN10@Copy

; 2208 : 			_Traits::copy(_Unfancy(_Ptr), this->_Myptr(),

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN10@Copy:

; 2209 : 				_Oldlen);	// copy existing elements
; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(_STD addressof(this->_Bx()._Ptr), _Ptr);

	lea	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
	push	eax
	call	??$addressof@PAD@std@@YAPAPADAAPAD@Z	; std::addressof<char *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres() = _Newres;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	mov	ecx, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [eax], ecx

; 2213 : 		_Eos(_Oldlen);

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@Copy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN23@Copy:
	DD	1
	DD	$LN22@Copy
$LN22@Copy:
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN20@Copy
$LN20@Copy:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ch$ = 16						; size = 1
?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign, COMDAT
; _this$ = ecx

; 2174 : 		{	// assign _Count copies of _Ch beginning at _Off

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2175 : 		if (_Count == 1)

	cmp	DWORD PTR __Count$[ebp], 1
	jne	SHORT $LN2@Chassign

; 2176 : 			_Traits::assign(*(this->_Myptr() + _Off), _Ch);

	lea	eax, DWORD PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2177 : 		else

	jmp	SHORT $LN1@Chassign
$LN2@Chassign:

; 2178 : 			_Traits::assign(this->_Myptr() + _Off, _Count, _Ch);

	movzx	eax, BYTE PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAPADPADID@Z ; std::char_traits<char>::assign
	add	esp, 12					; 0000000cH
$LN1@Chassign:

; 2179 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT
; _this$ = ecx

; 2144 : 		{	// compare [0, _Mysize()) with [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2145 : 		_DEBUG_POINTER(_Ptr);

	push	2145					; 00000861H
	push	OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@$$CBD@std@@YAXPBDPB_WI@Z ; std::_Debug_pointer<char const >
	add	esp, 12					; 0000000cH

; 2146 : 		return (_Traits_compare(this->_Myptr(), this->_Mysize(),

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	push	eax
	call	?_Traits_compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAHQBDI0I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Traits_compare
	add	esp, 16					; 00000010H

; 2147 : 			_Ptr, _Traits::length(_Ptr)));
; 2148 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z
_TEXT	SEGMENT
__Max_effective_size$ = -20				; size = 4
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__Size$ = 12						; size = 4
?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size, COMDAT
; _this$ = ecx

; 2111 : 		{	// trims _Size to the longest it can be assuming a string starting at _Off

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2112 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Max_effective_size$[ebp], eax

; 2113 : 		if (_Size <= _Max_effective_size)

	mov	eax, DWORD PTR __Size$[ebp]
	cmp	eax, DWORD PTR __Max_effective_size$[ebp]
	ja	SHORT $LN2@Clamp_suff

; 2114 : 			return (_Size);

	mov	eax, DWORD PTR __Size$[ebp]
	jmp	SHORT $LN1@Clamp_suff

; 2115 : 		else

	jmp	SHORT $LN1@Clamp_suff
$LN2@Clamp_suff:

; 2116 : 			return (_Max_effective_size);

	mov	eax, DWORD PTR __Max_effective_size$[ebp]
$LN1@Clamp_suff:

; 2117 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Traits_compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAHQBDI0I@Z
_TEXT	SEGMENT
tv65 = -220						; size = 4
__Ans$ = -20						; size = 4
__Min_size$ = -8					; size = 4
__Left$ = 8						; size = 4
__Left_size$ = 12					; size = 4
__Right$ = 16						; size = 4
__Right_size$ = 20					; size = 4
?_Traits_compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAHQBDI0I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Traits_compare, COMDAT

; 2094 : 		{	// compare [_Left, _Left + _Left_size) to [_Right, _Right + _Right_size) using _Traits

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 2095 : 		const size_type _Min_size = _Left_size < _Right_size ? _Left_size : _Right_size;

	mov	eax, DWORD PTR __Left_size$[ebp]
	cmp	eax, DWORD PTR __Right_size$[ebp]
	jae	SHORT $LN6@Traits_com
	mov	ecx, DWORD PTR __Left_size$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
	jmp	SHORT $LN7@Traits_com
$LN6@Traits_com:
	mov	edx, DWORD PTR __Right_size$[ebp]
	mov	DWORD PTR tv65[ebp], edx
$LN7@Traits_com:
	mov	eax, DWORD PTR tv65[ebp]
	mov	DWORD PTR __Min_size$[ebp], eax

; 2096 : 		const int _Ans = _Traits::compare(_Left, _Right, _Min_size);

	mov	eax, DWORD PTR __Min_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Left$[ebp]
	push	edx
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ans$[ebp], eax

; 2097 : 
; 2098 : 		if (_Ans != 0)

	cmp	DWORD PTR __Ans$[ebp], 0
	je	SHORT $LN2@Traits_com

; 2099 : 			return (_Ans);

	mov	eax, DWORD PTR __Ans$[ebp]
	jmp	SHORT $LN1@Traits_com
$LN2@Traits_com:

; 2100 : 
; 2101 : 		if (_Left_size < _Right_size)

	mov	eax, DWORD PTR __Left_size$[ebp]
	cmp	eax, DWORD PTR __Right_size$[ebp]
	jae	SHORT $LN3@Traits_com

; 2102 : 			return (-1);

	or	eax, -1
	jmp	SHORT $LN1@Traits_com
$LN3@Traits_com:

; 2103 : 
; 2104 : 		if (_Left_size > _Right_size)

	mov	eax, DWORD PTR __Left_size$[ebp]
	cmp	eax, DWORD PTR __Right_size$[ebp]
	jbe	SHORT $LN4@Traits_com

; 2105 : 			return (1);

	mov	eax, 1
	jmp	SHORT $LN1@Traits_com
$LN4@Traits_com:

; 2106 : 
; 2107 : 		return (0);

	xor	eax, eax
$LN1@Traits_com:

; 2108 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Traits_compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAHQBDI0I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Traits_compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Size$1 = -20						; size = 4
_this$ = -8						; size = 4
__Newcap$ = 8						; size = 4
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve, COMDAT
; _this$ = ecx

; 1793 : 		{	// determine new minimum length of allocated storage

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1794 : 		if (this->_Mysize() <= _Newcap && this->_Myres() != _Newcap)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Newcap$[ebp]
	ja	SHORT $LN1@reserve
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Newcap$[ebp]
	je	SHORT $LN1@reserve

; 1795 : 			{	// change reservation
; 1796 : 			size_type _Size = this->_Mysize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Size$1[ebp], eax

; 1797 : 			if (_Grow(_Newcap, true))

	push	1
	mov	eax, DWORD PTR __Newcap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@reserve

; 1798 : 				_Eos(_Size);

	mov	eax, DWORD PTR __Size$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@reserve:

; 1799 : 			}
; 1800 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
tv75 = -232						; size = 4
$T1 = -221						; size = 1
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1769 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1770 : 		const size_type _Num = this->_Getal().max_size();

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1771 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	eax, DWORD PTR __Num$[ebp]
	sub	eax, 1
	mov	DWORD PTR tv75[ebp], eax
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1772 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1764 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1765 : 		return (this->_Mysize());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]

; 1766 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx

; 1742 : 		{	// return pointer to null-terminated nonmutable array

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1743 : 		return (this->_Myptr());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr

; 1744 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
_TEXT	SEGMENT
__Mydata$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin, COMDAT
; _this$ = ecx

; 1594 : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1595 : 		auto _Mydata = &this->_Get_data();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
	mov	DWORD PTR __Mydata$[ebp], eax

; 1596 : 		return (iterator(this->_Getal().address(*_Mydata->_Myptr()), _Mydata));

	mov	eax, DWORD PTR __Mydata$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mydata$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?address@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEPADAAD@Z ; std::_Wrap_alloc<std::allocator<char> >::address
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1597 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -32					; size = 4
__Ptr$2 = -20						; size = 4
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1347 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1348 : 		_Check_offset(_Off);

	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset

; 1349 : 		if (this->_Mysize() - _Off <= _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN2@erase

; 1350 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN3@erase
$LN2@erase:

; 1351 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@erase

; 1352 : 			{	// move elements down
; 1353 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1354 : 			size_type _Newsize = this->_Mysize() - _Count;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1355 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	eax, DWORD PTR __Newsize$1[ebp]
	sub	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$2[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	push	edx
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1356 : 			_Eos(_Newsize);

	mov	eax, DWORD PTR __Newsize$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN3@erase:

; 1357 : 			}
; 1358 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1359 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1340 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1341 : 		_Check_offset(_Off);

	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset

; 1342 : 		_Eos(_Off);

	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1343 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1344 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
__Ch$ = 12						; size = 1
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1186 : 		{	// assign _Count * _Ch

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1187 : 		if (_Count == npos)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	jne	SHORT $LN2@assign

; 1188 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@assign:

; 1189 : 
; 1190 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@assign

; 1191 : 			{	// make room and assign new stuff
; 1192 : 			_Chassign(0, _Count, _Ch);

	movzx	eax, BYTE PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign

; 1193 : 			_Eos(_Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN3@assign:

; 1194 : 			}
; 1195 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN4@assign:

; 1196 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1180 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1181 : 		_DEBUG_POINTER(_Ptr);

	push	1181					; 0000049dH
	push	OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@$$CBD@std@@YAXPBDPB_WI@Z ; std::_Debug_pointer<char const >
	add	esp, 12					; 0000000cH

; 1182 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1183 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
tv68 = -205						; size = 1
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1165 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1166 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);

	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN5@assign
	mov	BYTE PTR tv68[ebp], 1
	jmp	SHORT $LN6@assign
$LN5@assign:
	mov	BYTE PTR tv68[ebp], 0
$LN6@assign:
	push	1166					; 0000048eH
	push	OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	movzx	ecx, BYTE PTR tv68[ebp]
	push	ecx
	call	??$_Debug_pointer_if@$$CBD@std@@YAX_NPBDPB_WI@Z ; std::_Debug_pointer_if<char const >
	add	esp, 16					; 00000010H

; 1167 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1168 : 			return (assign(*this,

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN1@assign
$LN2@assign:

; 1169 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1170 : 
; 1171 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@assign

; 1172 : 			{	// make room and assign new stuff
; 1173 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1174 : 			_Eos(_Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN3@assign:

; 1175 : 			}
; 1176 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN1@assign:

; 1177 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1149 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1150 : 		_Right._Check_offset(_Roff);

	mov	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset

; 1151 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
	mov	DWORD PTR __Count$[ebp], eax

; 1152 : 
; 1153 : 		if (this == &_Right)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN2@assign

; 1154 : 			erase((size_type)(_Roff + _Count)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1155 : 		else if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@assign

; 1156 : 			{	// make room and assign new stuff
; 1157 : 			_Traits::copy(this->_Myptr(),

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1158 : 				_Right._Myptr() + _Roff, _Count);
; 1159 : 			_Eos(_Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN3@assign:

; 1160 : 			}
; 1161 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1162 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z
_TEXT	SEGMENT
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
__Ch$ = 12						; size = 1
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 1111 : 		{	// append _Count * _Ch

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1112 : 		if (npos - this->_Mysize() <= _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	ecx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	sub	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Count$[ebp]
	ja	SHORT $LN2@append

; 1113 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@append:

; 1114 : 
; 1115 : 		const size_type _Num = this->_Mysize() + _Count;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1116 : 		if (0 < _Count && _Grow(_Num))

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@append
	push	0
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@append

; 1117 : 			{	// make room and append new stuff using assign
; 1118 : 			_Chassign(this->_Mysize(), _Count, _Ch);

	movzx	eax, BYTE PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign

; 1119 : 			_Eos(_Num);

	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN3@append:

; 1120 : 			}
; 1121 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN4@append:

; 1122 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 1105 : 		{	// append [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1106 : 		_DEBUG_POINTER(_Ptr);

	push	1106					; 00000452H
	push	OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@$$CBD@std@@YAXPBDPB_WI@Z ; std::_Debug_pointer<char const >
	add	esp, 12					; 0000000cH

; 1107 : 		return (append(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 1108 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
tv68 = -217						; size = 1
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 1087 : 		{	// append [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1088 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);

	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN6@append
	mov	BYTE PTR tv68[ebp], 1
	jmp	SHORT $LN7@append
$LN6@append:
	mov	BYTE PTR tv68[ebp], 0
$LN7@append:
	push	1088					; 00000440H
	push	OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	movzx	ecx, BYTE PTR tv68[ebp]
	push	ecx
	call	??$_Debug_pointer_if@$$CBD@std@@YAX_NPBDPB_WI@Z ; std::_Debug_pointer_if<char const >
	add	esp, 16					; 00000010H

; 1089 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@append

; 1090 : 			return (append(*this,

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	jmp	SHORT $LN5@append
$LN2@append:

; 1091 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1092 : 		if (npos - this->_Mysize() <= _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	ecx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	sub	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@append

; 1093 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN3@append:

; 1094 : 
; 1095 : 		const size_type _Num = this->_Mysize() + _Count;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1096 : 		if (0 < _Count && _Grow(_Num))

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN4@append
	push	0
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@append

; 1097 : 			{	// make room and append new stuff
; 1098 : 			_Traits::copy(this->_Myptr() + this->_Mysize(), _Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	add	esi, DWORD PTR [eax]
	push	esi
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1099 : 			_Eos(_Num);

	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@append:

; 1100 : 			}
; 1101 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN5@append:

; 1102 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 1070 : 		{	// append _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1071 : 		_Right._Check_offset(_Roff);

	mov	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset

; 1072 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
	mov	DWORD PTR __Count$[ebp], eax

; 1073 : 		if (npos - this->_Mysize() <= _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	ecx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	sub	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Count$[ebp]
	ja	SHORT $LN2@append

; 1074 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@append:

; 1075 : 
; 1076 : 		const size_type _Num = this->_Mysize() + _Count;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1077 : 		if (0 < _Count && _Grow(_Num))

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@append
	push	0
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@append

; 1078 : 			{	// make room and append new stuff
; 1079 : 			_Traits::copy(this->_Myptr() + this->_Mysize(),

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	add	esi, DWORD PTR [eax]
	push	esi
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1080 : 				_Right._Myptr() + _Roff, _Count);
; 1081 : 			_Eos(_Num);

	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN3@append:

; 1082 : 			}
; 1083 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN4@append:

; 1084 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 1064 : 		{	// append _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1065 : 		return (append(_Right, 0, npos));

	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	eax
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 1066 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ch$ = 8						; size = 1
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx

; 1059 : 		{	// append 1 * _Ch

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1060 : 		return (append((size_type)1, _Ch));

	movzx	eax, BYTE PTR __Ch$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 1061 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx

; 1054 : 		{	// append [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1055 : 		return (append(_Ptr));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 1056 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx

; 1049 : 		{	// append _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1050 : 		return (append(_Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 1051 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 1016 : 		{	// destroy the string

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1017 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 1018 : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv, COMDAT
; _this$ = ecx

; 961  : 		{	// assign by moving _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 962  : 		if (_Right._Myres() < this->_BUF_SIZE)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	cmp	DWORD PTR [eax], 16			; 00000010H
	jae	SHORT $LN2@Assign_rv

; 963  : 			_Traits::move(this->_Bx()._Buf, _Right._Bx()._Buf,

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	eax, DWORD PTR [eax]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 964  : 				_Right._Mysize() + 1);
; 965  : 		else

	jmp	SHORT $LN3@Assign_rv
$LN2@Assign_rv:

; 966  : 			{	// copy pointer
; 967  : 			this->_Getal().construct(_STD addressof(this->_Bx()._Ptr), _Right._Bx()._Ptr);

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
	push	eax
	call	??$addressof@PAD@std@@YAPAPADAAPAD@Z	; std::addressof<char *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 968  : 			_Right._Bx()._Ptr = pointer();

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
	mov	DWORD PTR [eax], 0
$LN3@Assign_rv:

; 969  : 			}
; 970  : 		this->_Mysize() = _Right._Mysize();

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 971  : 		this->_Myres() = _Right._Myres();

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 972  : 		_Right._Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 973  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 911  : 		{	// construct by moving _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 910  : 		: _Mybase(_STD move(_Right._Getal()))

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	push	eax
	call	??$move@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<char> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>

; 912  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 913  : 		_Assign_rv(_STD forward<_Myt>(_Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv

; 914  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Count$ = 8						; size = 4
__Ch$ = 12						; size = 1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 850  : 		{	// construct from _Count * _Ch

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 849  : 		: _Mybase()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 851  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 852  : 		assign(_Count, _Ch);

	movzx	eax, BYTE PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 853  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 836  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 835  : 		: _Mybase()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 837  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 838  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 839  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 794  : 		{	// construct empty string

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 793  : 		: _Mybase()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >

; 795  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 796  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
$T2 = -233						; size = 1
$T3 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 780  : 		{	// construct by copying _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 777  : 		: _Mybase(_Right._Getal().select_on_container_copy_construction())

	movzx	eax, BYTE PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@U_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 781  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 782  : 		assign(_Right, 0, npos);

	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	eax
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 783  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 319  : 		{	// return const reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 320  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 321  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 314  : 		{	// return reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 315  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 316  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 299  : 		{	// return const reference to first

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 300  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 301  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 294  : 		{	// return reference to first

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 295  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 296  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres, COMDAT
; _this$ = ecx

; 733  : 		{	// return reference to _Myres

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 734  : 		return (_Get_data()._Myres);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
	add	eax, 24					; 00000018H

; 735  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize, COMDAT
; _this$ = ecx

; 728  : 		{	// return const reference to _Mysize

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 729  : 		return (_Get_data()._Mysize);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
	add	eax, 20					; 00000014H

; 730  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize, COMDAT
; _this$ = ecx

; 723  : 		{	// return reference to _Mysize

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 724  : 		return (_Get_data()._Mysize);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
	add	eax, 20					; 00000014H

; 725  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx, COMDAT
; _this$ = ecx

; 713  : 		{	// return reference to _Bx

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 714  : 		return (_Get_data()._Bx);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
	add	eax, 4

; 715  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT
; _this$ = ecx

; 706  : 		{	// return const reference to _String_val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 707  : 		return (_Mypair._Get_second());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second

; 708  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT
; _this$ = ecx

; 701  : 		{	// return reference to _String_val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 702  : 		return (_Mypair._Get_second());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second

; 703  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 696  : 		{	// return const reference to allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 697  : 		return (_Mypair._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 698  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 691  : 		{	// return reference to allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 692  : 		return (_Mypair._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 693  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all, COMDAT
; _this$ = ecx

; 681  : 		{	// orphan all iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 682  : 		_Get_data()._Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
	mov	ecx, eax
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 683  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy, COMDAT
; _this$ = ecx

; 670  : 		{	// return reference to _Myproxy

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 671  : 		return (_Get_data()._Myproxy);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data

; 672  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Free_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -17					; size = 1
_this$ = -8						; size = 4
?_Free_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Free_proxy, COMDAT
; _this$ = ecx

; 655  : 		{	// destroy proxy

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 656  : 		typename _Alty::template rebind<_Container_proxy>::other
; 657  : 			_Alproxy(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<char> > &>

; 658  : 		_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all

; 659  : 		_Alproxy.destroy(_Myproxy());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>

; 660  : 		_Alproxy.deallocate(_Alproxy.address(*_Myproxy()), 1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate

; 661  : 		_Myproxy() = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
	mov	DWORD PTR [eax], 0

; 662  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Free_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Free_proxy:
	DD	1
	DD	$LN4@Free_proxy
$LN4@Free_proxy:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Free_proxy
$LN3@Free_proxy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Free_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -228						; size = 8
__Alproxy$ = -17					; size = 1
_this$ = -8						; size = 4
?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy, COMDAT
; _this$ = ecx

; 646  : 		{	// construct proxy

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 647  : 		typename _Alty::template rebind<_Container_proxy>::other
; 648  : 			_Alproxy(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<char> > &>

; 649  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	push	eax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
	mov	DWORD PTR [eax], esi

; 650  : 		_Alproxy.construct(_Myproxy(), _Container_proxy());

	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>

; 651  : 		_Myproxy()->_Mycont = &_Get_data();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax], esi

; 652  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Alloc_prox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Alloc_prox:
	DD	1
	DD	$LN4@Alloc_prox
$LN4@Alloc_prox:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Alloc_prox
$LN3@Alloc_prox:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 627  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		_Free_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Free_proxy

; 629  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 613  : 		{	// default construct allocator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 612  : 		: _Mypair(_Zero_then_variadic_args_t())

	movzx	eax, BYTE PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 614  : 		_Alloc_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy

; 615  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
__ehhandler$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr, COMDAT
; _this$ = ecx

; 582  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 583  : 		return (_Get_data()._Myptr());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
	mov	ecx, eax
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr

; 584  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr, COMDAT
; _this$ = ecx

; 577  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Get_data()._Myptr());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
	mov	ecx, eax
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr

; 579  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT
; _this$ = ecx

; 533  : 			{	// user-provided, for fancy pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 534  : 			}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT
; _this$ = ecx

; 528  : 		_Bxty()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 529  : 			{	// user-provided, for fancy pointers
; 530  : 			}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 520  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 521  : 		return (this->_BUF_SIZE <= _Myres

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 522  : 			? _Unfancy(_Bx._Ptr)
; 523  : 			: _Bx._Buf);
; 524  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 513  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 514  : 		return (this->_BUF_SIZE <= _Myres

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 515  : 			? _Unfancy(_Bx._Ptr)
; 516  : 			: _Bx._Buf);
; 517  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 498  : 		{	// initialize values

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 495  : 		: _Bx(),

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty

; 496  : 		_Mysize(0),

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0

; 497  : 		_Myres(0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0

; 499  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1007 : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1008 : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 1009 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 986  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 987  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 988  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 975  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 976  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 977  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAU01@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 946  : 		{	// construct by moving

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 945  : 		: _Mybase(_STD move(_Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$move@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<char> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>

; 947  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAU01@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 936  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 935  : 		: _Mybase()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 937  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?address@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEPADAAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?address@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEPADAAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::address, COMDAT
; _this$ = ecx

; 925  : 		{	// return address of mutable _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 926  : 		return (pointer_traits<pointer>::pointer_to(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z ; std::pointer_traits<char *>::pointer_to
	add	esp, 4

; 927  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?address@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEPADAAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::address
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@U_Nil@2@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 1
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@U_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction, COMDAT
; _this$ = ecx

; 912  : 		{	// get allocator to use

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 913  : 		return (_Mytraits::select_on_container_copy_construction(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAV?$allocator@D@1@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 914  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@U_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Al$ = 12						; size = 4
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z PROC ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction, COMDAT

; 874  : 		{	// get allocator to use

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 875  : 		return (_Al);

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 876  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ENDP ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 868  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 869  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 870  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 748  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 749  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 750  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 724  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 725  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

	push	1
	push	1
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	?_Allocate@std@@YAPAXII_N@Z		; std::_Allocate
	add	esp, 12					; 0000000cH

; 726  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 719  : 		{	// deallocate object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 720  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 721  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 703  : 	allocator(const allocator<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 704  : 		{	// construct by copying (do nothing)
; 705  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 699  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 700  : 		{	// construct default allocator (do nothing)
; 701  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xatomic0.h
;	COMDAT ?_Init_atomic_counter@std@@YAXAAKK@Z
_TEXT	SEGMENT
__Counter$ = 8						; size = 4
__Value$ = 12						; size = 4
?_Init_atomic_counter@std@@YAXAAKK@Z PROC		; std::_Init_atomic_counter, COMDAT

; 62   : 	{	// non-atomically initialize counter

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 63   : 	_Counter = _Value;

	mov	eax, DWORD PTR __Counter$[ebp]
	mov	ecx, DWORD PTR __Value$[ebp]
	mov	DWORD PTR [eax], ecx

; 64   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Init_atomic_counter@std@@YAXAAKK@Z ENDP		; std::_Init_atomic_counter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?_Deallocate@std@@YAXPAXII@Z
_TEXT	SEGMENT
__Ptr_container$1 = -44					; size = 4
__Ptr_ptr$2 = -32					; size = 4
__Ptr_user$3 = -20					; size = 4
__User_size$ = -8					; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Sz$ = 16						; size = 4
?_Deallocate@std@@YAXPAXII@Z PROC			; std::_Deallocate, COMDAT

; 92   : 	{	// deallocate storage for _Count elements of size _Sz

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 93   :  #if defined(_M_IX86) || defined(_M_X64)
; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Sz$[ebp]
	cmp	DWORD PTR __Count$[ebp], eax
	jbe	SHORT $LN2@Deallocate
	mov	eax, OFFSET ??_C@_0BN@HMCJOMKN@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5_Sz?$AA@
	test	eax, eax
	je	SHORT $LN10@Deallocate
	xor	ecx, ecx
	jne	SHORT $LN11@Deallocate
$LN10@Deallocate:
	mov	esi, esp
	push	OFFSET ??_C@_1EI@MLOBABC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AA_?$AAS?$AAz?$AA?$CC?$AA?5?$AA?$CG@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	mov	edx, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	edx, 2
	push	edx
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN11@Deallocate
	int	3
$LN11@Deallocate:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	eax, 2
	push	eax
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Deallocate:

; 95   : 	const size_t _User_size = _Count * _Sz;

	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, DWORD PTR __Sz$[ebp]
	mov	DWORD PTR __User_size$[ebp], eax

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	DWORD PTR __User_size$[ebp], 4096	; 00001000H
	jb	$LN3@Deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Ptr_user$3[ebp], eax

; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

	mov	eax, DWORD PTR __Ptr_user$3[ebp]
	and	eax, 31					; 0000001fH
	je	SHORT $LN4@Deallocate
	mov	eax, OFFSET ??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@
	test	eax, eax
	je	SHORT $LN12@Deallocate
	xor	ecx, ecx
	jne	SHORT $LN13@Deallocate
$LN12@Deallocate:
	mov	esi, esp
	push	OFFSET ??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	mov	edx, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	edx, 8
	push	edx
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN13@Deallocate
	int	3
$LN13@Deallocate:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	eax, 8
	push	eax
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@Deallocate:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);

	mov	eax, DWORD PTR __Ptr_user$3[ebp]
	sub	eax, 4
	mov	DWORD PTR __Ptr_ptr$2[ebp], eax

; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	eax, DWORD PTR __Ptr_ptr$2[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Ptr_container$1[ebp], ecx

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(

	mov	eax, 4
	imul	ecx, eax, -1
	mov	edx, DWORD PTR __Ptr_ptr$2[ebp]
	cmp	DWORD PTR [edx+ecx], -84215046		; fafafafaH
	je	SHORT $LN5@Deallocate
	mov	eax, OFFSET ??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@
	test	eax, eax
	je	SHORT $LN14@Deallocate
	xor	ecx, ecx
	jne	SHORT $LN15@Deallocate
$LN14@Deallocate:
	mov	esi, esp
	push	OFFSET ??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	mov	edx, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	edx, 18					; 00000012H
	push	edx
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN15@Deallocate
	int	3
$LN15@Deallocate:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	eax, 18					; 00000012H
	push	eax
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@Deallocate:

; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

	mov	eax, DWORD PTR __Ptr_container$1[ebp]
	cmp	eax, DWORD PTR __Ptr_user$3[ebp]
	jb	SHORT $LN6@Deallocate
	mov	eax, OFFSET ??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@
	test	eax, eax
	je	SHORT $LN16@Deallocate
	xor	ecx, ecx
	jne	SHORT $LN17@Deallocate
$LN16@Deallocate:
	mov	esi, esp
	push	OFFSET ??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	mov	edx, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	edx, 22					; 00000016H
	push	edx
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN17@Deallocate
	int	3
$LN17@Deallocate:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	eax, 22					; 00000016H
	push	eax
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@Deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)

	mov	eax, DWORD PTR __Ptr_user$3[ebp]
	sub	eax, DWORD PTR __Ptr_container$1[ebp]
	cmp	eax, 8
	jae	SHORT $LN7@Deallocate
	mov	eax, OFFSET ??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@
	test	eax, eax
	je	SHORT $LN18@Deallocate
	xor	ecx, ecx
	jne	SHORT $LN19@Deallocate
$LN18@Deallocate:
	mov	esi, esp
	push	OFFSET ??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	mov	edx, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	edx, 26					; 0000001aH
	push	edx
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN19@Deallocate
	int	3
$LN19@Deallocate:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	eax, 26					; 0000001aH
	push	eax
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@Deallocate:

; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)
; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

	mov	eax, DWORD PTR __Ptr_user$3[ebp]
	sub	eax, DWORD PTR __Ptr_container$1[ebp]
	cmp	eax, 39					; 00000027H
	jbe	SHORT $LN8@Deallocate
	mov	eax, OFFSET ??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@
	test	eax, eax
	je	SHORT $LN20@Deallocate
	xor	ecx, ecx
	jne	SHORT $LN21@Deallocate
$LN20@Deallocate:
	mov	esi, esp
	push	OFFSET ??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	mov	edx, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	edx, 34					; 00000022H
	push	edx
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN21@Deallocate
	int	3
$LN21@Deallocate:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	eax, 34					; 00000022H
	push	eax
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@Deallocate:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	eax, DWORD PTR __Ptr_container$1[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax
$LN3@Deallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 133  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Deallocate@std@@YAXPAXII@Z ENDP			; std::_Deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?_Allocate@std@@YAPAXII_N@Z
_TEXT	SEGMENT
__Ptr_container$1 = -44					; size = 4
__Block_size$2 = -32					; size = 4
__User_size$ = -20					; size = 4
__Ptr$ = -8						; size = 4
__Count$ = 8						; size = 4
__Sz$ = 12						; size = 4
__Try_aligned_allocation$ = 16				; size = 1
?_Allocate@std@@YAPAXII_N@Z PROC			; std::_Allocate, COMDAT

; 48   : 	{	// allocate storage for _Count elements of size _Sz

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 49   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 50   : 
; 51   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN2@Allocate

; 52   : 		return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	jmp	$LN9@Allocate
$LN2@Allocate:

; 53   : 
; 54   : 	// check overflow of multiply
; 55   : 	if ((size_t)(-1) / _Sz < _Count)

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Sz$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN3@Allocate

; 56   : 		_Xbad_alloc();	// report no memory

	mov	esi, esp
	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Allocate:

; 57   : 	const size_t _User_size = _Count * _Sz;

	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, DWORD PTR __Sz$[ebp]
	mov	DWORD PTR __User_size$[ebp], eax

; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	movzx	eax, BYTE PTR __Try_aligned_allocation$[ebp]
	test	eax, eax
	je	$LN4@Allocate
	cmp	DWORD PTR __User_size$[ebp], 4096	; 00001000H
	jb	$LN4@Allocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	mov	eax, DWORD PTR __User_size$[ebp]
	add	eax, 39					; 00000027H
	mov	DWORD PTR __Block_size$2[ebp], eax

; 66   : 		if (_Block_size <= _User_size)

	mov	eax, DWORD PTR __Block_size$2[ebp]
	cmp	eax, DWORD PTR __User_size$[ebp]
	ja	SHORT $LN6@Allocate

; 67   : 			_Xbad_alloc();	// report no memory

	mov	esi, esp
	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@Allocate:

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	mov	eax, DWORD PTR __Block_size$2[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr_container$1[ebp], eax

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	cmp	DWORD PTR __Ptr_container$1[ebp], 0
	jne	SHORT $LN7@Allocate
	mov	eax, OFFSET ??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@
	test	eax, eax
	je	SHORT $LN10@Allocate
	xor	ecx, ecx
	jne	SHORT $LN11@Allocate
$LN10@Allocate:
	mov	esi, esp
	push	OFFSET ??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	mov	edx, DWORD PTR ?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA
	add	edx, 22					; 00000016H
	push	edx
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN11@Allocate
	int	3
$LN11@Allocate:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA
	add	eax, 22					; 00000016H
	push	eax
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@Allocate:

; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	mov	eax, DWORD PTR __Ptr_container$1[ebp]
	add	eax, 39					; 00000027H
	and	eax, -32				; ffffffe0H
	mov	DWORD PTR __Ptr$[ebp], eax

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	eax, 4
	imul	ecx, eax, -1
	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR __Ptr_container$1[ebp]
	mov	DWORD PTR [edx+ecx], eax

; 74   : 
; 75   :  #ifdef _DEBUG
; 76   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;

	mov	eax, 4
	imul	ecx, eax, -2
	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [edx+ecx], -84215046		; fafafafaH

; 77   :  #endif /* _DEBUG */
; 78   : 		}
; 79   : 	else

	jmp	$LN5@Allocate
$LN4@Allocate:

; 80   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 81   : 
; 82   : 		{	// allocate normal block
; 83   : 		_Ptr = ::operator new(_User_size);

	mov	eax, DWORD PTR __User_size$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN5@Allocate
	mov	eax, OFFSET ??_C@_09GLJCAGLP@_Ptr?5?$CB?$DN?50?$AA@
	test	eax, eax
	je	SHORT $LN12@Allocate
	xor	ecx, ecx
	jne	SHORT $LN13@Allocate
$LN12@Allocate:
	mov	esi, esp
	push	OFFSET ??_C@_1CC@GKJLLHIM@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	mov	edx, DWORD PTR ?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA
	add	edx, 36					; 00000024H
	push	edx
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN13@Allocate
	int	3
$LN13@Allocate:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA
	add	eax, 36					; 00000024H
	push	eax
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@Allocate:

; 85   : 		}
; 86   : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN9@Allocate:

; 87   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Allocate@std@@YAPAXII_N@Z ENDP			; std::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -20						; size = 4
_this$ = -8						; size = 4
?_Orphan_me@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT
; _this$ = ecx

; 193  : 		{	// cut ties with parent

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 194  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 195  : 		if (_Myproxy != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Orphan_me

; 196  : 			{	// adopted, remove self from list
; 197  : 			_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$1[ebp], ecx
$LN2@Orphan_me:

; 198  : 			while (*_Pnext != 0 && *_Pnext != this)

	mov	eax, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Orphan_me
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _this$[ebp]
	je	SHORT $LN3@Orphan_me

; 199  : 				_Pnext = &(*_Pnext)->_Mynextiter;

	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$1[ebp], ecx
	jmp	SHORT $LN2@Orphan_me
$LN3@Orphan_me:

; 200  : 
; 201  : 			if (*_Pnext == 0)

	mov	eax, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN5@Orphan_me

; 202  : 				_DEBUG_ERROR("ITERATOR LIST CORRUPTED!");

	mov	esi, esp
	push	202					; 000000caH
	push	OFFSET ??_C@_1JA@MHADJNIL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@Orphan_me:

; 203  : 			*_Pnext = _Mynextiter;

	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 204  : 			_Myproxy = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@Orphan_me:

; 205  : 			}
; 206  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 207  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_me@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ PROC	; std::_Iterator_base12::_Getpnext, COMDAT
; _this$ = ecx

; 188  : 		{	// get address of remaining iterator chain

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 189  : 		return (&_Mynextiter);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4

; 190  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ENDP	; std::_Iterator_base12::_Getpnext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx

; 183  : 		{	// get owning container

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 184  : 		return (_Myproxy == 0 ? 0 : _Myproxy->_Mycont);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getcont
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@Getcont
$LN3@Getcont:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv68[ebp], eax
$LN4@Getcont:
	mov	eax, DWORD PTR tv68[ebp]

; 185  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Clrcont@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Clrcont@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Clrcont, COMDAT
; _this$ = ecx

; 178  : 		{	// disown owning container

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 179  : 		_Myproxy = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 180  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Clrcont@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Clrcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$2 = -56						; size = 4
__Parent_proxy$3 = -44					; size = 4
__Lock$4 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx

; 149  : 		{	// adopt this iterator by parent

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 150  : 		if (_Parent == 0)

	cmp	DWORD PTR __Parent$[ebp], 0
	jne	SHORT $LN2@Adopt

; 151  : 			{	// no future parent, just disown current parent
; 152  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 153  : 			_Lockit _Lock(_LOCK_DEBUG);

	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$4[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 154  : 			_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 155  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 156  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$4[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp

; 157  : 		else

	jmp	SHORT $LN1@Adopt
$LN2@Adopt:

; 158  : 			{	// have a parent, do adoption
; 159  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;

	mov	eax, DWORD PTR __Parent$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Parent_proxy$3[ebp], ecx

; 160  : 
; 161  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 162  : 			if (_Myproxy != _Parent_proxy)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Parent_proxy$3[ebp]
	je	SHORT $LN1@Adopt

; 163  : 				{	// change parentage
; 164  : 				_Lockit _Lock(_LOCK_DEBUG);

	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 165  : 				_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 166  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parent_proxy$3[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 167  : 				_Parent_proxy->_Myfirstiter = this;

	mov	eax, DWORD PTR __Parent_proxy$3[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 168  : 				_Myproxy = _Parent_proxy;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parent_proxy$3[ebp]
	mov	DWORD PTR [eax], ecx

; 169  : 				}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Adopt:

; 170  : 
; 171  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 172  : 			_Myproxy = _Parent_proxy;
; 173  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 174  : 			}
; 175  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@Adopt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN12@Adopt:
	DD	2
	DD	$LN11@Adopt
$LN11@Adopt:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN8@Adopt
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN9@Adopt
$LN9@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN8@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$4[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx

; 141  : 		{	// destroy the iterator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Iterator_base12@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 142  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 143  : 		_Lockit _Lock(_LOCK_DEBUG);

	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 144  : 		_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 145  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 146  : 		}

	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@Iterator_b
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@Iterator_b:
	DD	1
	DD	$LN5@Iterator_b
$LN5@Iterator_b:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN3@Iterator_b
$LN3@Iterator_b:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Iterator_base12@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
__Lock$2 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z PROC		; std::_Iterator_base12::operator=, COMDAT
; _this$ = ecx

; 124  : 		{	// assign an iterator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 125  : 		if (_Myproxy == _Right._Myproxy)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN2@operator
	jmp	SHORT $LN3@operator
$LN2@operator:

; 126  : 			;
; 127  : 		else if (_Right._Myproxy != 0)

	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN4@operator

; 128  : 			_Adopt(_Right._Myproxy->_Mycont);

	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 129  : 		else

	jmp	SHORT $LN3@operator
$LN4@operator:

; 130  : 			{	// becoming invalid, disown current parent
; 131  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 132  : 			_Lockit _Lock(_LOCK_DEBUG);

	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 133  : 			_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 134  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 135  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@operator:

; 136  : 
; 137  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 138  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN11@operator:
	DD	1
	DD	$LN10@operator
$LN10@operator:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN8@operator
$LN8@operator:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ENDP		; std::_Iterator_base12::operator=
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0_Iterator_base12@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??0_Iterator_base12@std@@QAE@ABU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 119  : 		{	// copy an iterator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 118  : 		: _Myproxy(0), _Mynextiter(0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 120  : 		*this = _Right;

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=

; 121  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Iterator_base12@std@@QAE@ABU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 114  : 		{	// construct orphaned iterator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 113  : 		: _Myproxy(0), _Mynextiter(0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 115  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -32						; size = 4
__Lock$2 = -20						; size = 4
_this$ = -8						; size = 4
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx

; 215  : 	{	// orphan all iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 216  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 217  : 	if (_Myproxy != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Orphan_all

; 218  : 		{	// proxy allocated, drain it
; 219  : 		_Lockit _Lock(_LOCK_DEBUG);

	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 220  : 
; 221  : 		for (_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$1[ebp], ecx
	jmp	SHORT $LN4@Orphan_all
$LN2@Orphan_all:

; 222  : 			*_Pnext != 0; *_Pnext = (*_Pnext)->_Mynextiter)

	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnext$1[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN4@Orphan_all:
	mov	eax, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Orphan_all

; 223  : 			(*_Pnext)->_Myproxy = 0;

	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], 0
	jmp	SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 224  : 		_Myproxy->_Myfirstiter = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], 0

; 225  : 		}

	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Orphan_all:

; 226  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 227  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Orphan_all
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@Orphan_all:
	DD	1
	DD	$LN9@Orphan_all
$LN9@Orphan_all:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@Orphan_all
$LN8@Orphan_all:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Container_base12::_Getpfirst, COMDAT
; _this$ = ecx

; 99   : 		{	// get address of iterator chain

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 100  : 		return (_Myproxy == 0 ? 0 : &_Myproxy->_Myfirstiter);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getpfirst
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@Getpfirst
$LN3@Getpfirst:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR tv68[ebp], edx
$LN4@Getpfirst:
	mov	eax, DWORD PTR tv68[ebp]

; 101  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Container_base12::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??1_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::~_Container_base12, COMDAT
; _this$ = ecx

; 94   : 		{	// destroy the container

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Container_base12@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 95   : 		_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 96   : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Container_base12@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Container_base12@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::~_Container_base12
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx

; 80   : 		{	// construct childless container

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 79   : 		: _Myproxy(0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 81   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx

; 68   : 		{	// construct from pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 67   : 		: _Mycont(0), _Myfirstiter(0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 69   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$char_traits@D@std@@SAHXZ PROC			; std::char_traits<char>::eof, COMDAT

; 605  : 		{	// return end-of-file metacharacter

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 606  : 		return (EOF);

	or	eax, -1

; 607  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?eof@?$char_traits@D@std@@SAHXZ ENDP			; std::char_traits<char>::eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?not_eof@?$char_traits@D@std@@SAHABH@Z
_TEXT	SEGMENT
tv68 = -200						; size = 4
tv69 = -196						; size = 4
__Meta$ = 8						; size = 4
?not_eof@?$char_traits@D@std@@SAHABH@Z PROC		; std::char_traits<char>::not_eof, COMDAT

; 600  : 		{	// return anything but EOF

	push	ebp
	mov	ebp, esp
	sub	esp, 200				; 000000c8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-200]
	mov	ecx, 50					; 00000032H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 601  : 		return (_Meta != eof() ? _Meta : !eof());

	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	ecx, DWORD PTR __Meta$[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN5@not_eof
	mov	edx, DWORD PTR __Meta$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN6@not_eof
$LN5@not_eof:
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	test	eax, eax
	jne	SHORT $LN3@not_eof
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@not_eof
$LN3@not_eof:
	mov	DWORD PTR tv68[ebp], 0
$LN4@not_eof:
	mov	ecx, DWORD PTR tv68[ebp]
	mov	DWORD PTR tv69[ebp], ecx
$LN6@not_eof:
	mov	eax, DWORD PTR tv69[ebp]

; 602  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 200				; 000000c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?not_eof@?$char_traits@D@std@@SAHABH@Z ENDP		; std::char_traits<char>::not_eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z
_TEXT	SEGMENT
tv65 = -196						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z PROC	; std::char_traits<char>::eq_int_type, COMDAT

; 594  : 		{	// test for metacharacter equality

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 595  : 		return (_Left == _Right);

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@eq_int_typ
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
	mov	DWORD PTR tv65[ebp], 0
$LN4@eq_int_typ:
	mov	al, BYTE PTR tv65[ebp]

; 596  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ENDP	; std::char_traits<char>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?to_int_type@?$char_traits@D@std@@SAHABD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 4
?to_int_type@?$char_traits@D@std@@SAHABD@Z PROC		; std::char_traits<char>::to_int_type, COMDAT

; 588  : 		{	// convert character to metacharacter

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 589  : 		return ((unsigned char)_Ch);

	mov	eax, DWORD PTR __Ch$[ebp]
	movzx	eax, BYTE PTR [eax]

; 590  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?to_int_type@?$char_traits@D@std@@SAHABD@Z ENDP		; std::char_traits<char>::to_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?to_char_type@?$char_traits@D@std@@SADABH@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?to_char_type@?$char_traits@D@std@@SADABH@Z PROC	; std::char_traits<char>::to_char_type, COMDAT

; 582  : 		{	// convert metacharacter to character

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 583  : 		return ((_Elem)_Meta);

	mov	eax, DWORD PTR __Meta$[ebp]
	mov	al, BYTE PTR [eax]

; 584  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?to_char_type@?$char_traits@D@std@@SADABH@Z ENDP	; std::char_traits<char>::to_char_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 564  : 		{	// assign an element

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 565  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 566  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAPADPADID@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ch$ = 16						; size = 1
?assign@?$char_traits@D@std@@SAPADPADID@Z PROC		; std::char_traits<char>::assign, COMDAT

; 559  : 		{	// assign _Count * _Ch to [_First, ...)

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 560  : 		return ((_Elem *)_CSTD memset(_First, _Ch, _Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	movsx	ecx, BYTE PTR __Ch$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH

; 561  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAPADPADID@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 552  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 553  : 		return (_Count == 0 ? _First1

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	esi, esp
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));
; 555  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 529  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 530  : 		return (_Count == 0 ? _First1

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));
; 532  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -196						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 522  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 523  : 		return (*_First == 0 ? 0

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 			: _CSTD strlen(_First));
; 525  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?compare@?$char_traits@D@std@@SAHPBD0I@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?compare@?$char_traits@D@std@@SAHPBD0I@Z PROC		; std::char_traits<char>::compare, COMDAT

; 516  : 		{	// compare [_First1, _First1 + _Count) with [_First2, ...)

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 517  : 		return (_Count == 0 ? 0

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@compare
	mov	DWORD PTR tv69[ebp], 0
	jmp	SHORT $LN4@compare
$LN3@compare:
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@compare:
	mov	eax, DWORD PTR tv69[ebp]

; 518  : 			: _CSTD memcmp(_First1, _First2, _Count));
; 519  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?compare@?$char_traits@D@std@@SAHPBD0I@Z ENDP		; std::char_traits<char>::compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_new.h
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 93   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 94   :         return;
; 95   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 87   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 88   :         (void)_Size;
; 89   :         return _Where;

	mov	eax, DWORD PTR __Where$[ebp]

; 90   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 88   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 89   :         return _Data._What ? _Data._What : "Unknown exception";

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@what
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv69[ebp], edx
	jmp	SHORT $LN4@what
$LN3@what:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception?$AA@
$LN4@what:
	mov	eax, DWORD PTR tv69[ebp]

; 90   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 83   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 84   :         __std_exception_destroy(&_Data);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp____std_exception_destroy
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 85   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 66   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 65   :         : _Data()

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax

; 67   :         __std_exception_copy(&_Other._Data, &_Data);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR __Other$[ebp]
	add	ecx, 4
	push	ecx
	call	DWORD PTR __imp____std_exception_copy
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 68   :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@QBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Message$ = 8						; size = 4
___formal$ = 12						; size = 4
??0exception@std@@QAE@QBDH@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 60   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 59   :         : _Data()

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax

; 61   :         _Data._What = _Message;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Message$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 62   :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0exception@std@@QAE@QBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\corecrt_memcpy_s.h
;	COMDAT _memcpy_s
_TEXT	SEGMENT
tv79 = -232						; size = 4
tv75 = -232						; size = 4
tv66 = -232						; size = 4
__Expr_val$1 = -32					; size = 4
__Expr_val$2 = -20					; size = 4
__Expr_val$3 = -8					; size = 4
__Destination$ = 8					; size = 4
__DestinationSize$ = 12					; size = 4
__Source$ = 16						; size = 4
__SourceSize$ = 20					; size = 4
_memcpy_s PROC						; COMDAT

; 41   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 42   :         if (_SourceSize == 0)

	cmp	DWORD PTR __SourceSize$[ebp], 0
	jne	SHORT $LN2@memcpy_s

; 43   :         {
; 44   :             return 0;

	xor	eax, eax
	jmp	$LN1@memcpy_s
$LN2@memcpy_s:

; 45   :         }
; 46   : 
; 47   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Destination != NULL, EINVAL);

	cmp	DWORD PTR __Destination$[ebp], 0
	je	SHORT $LN9@memcpy_s
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN10@memcpy_s
$LN9@memcpy_s:
	mov	DWORD PTR tv66[ebp], 0
$LN10@memcpy_s:
	mov	eax, DWORD PTR tv66[ebp]
	mov	DWORD PTR __Expr_val$3[ebp], eax
	cmp	DWORD PTR __Expr_val$3[ebp], 0
	jne	SHORT $LN3@memcpy_s
	mov	esi, esp
	call	DWORD PTR __imp___errno
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR [eax], 22			; 00000016H
	mov	esi, esp
	call	DWORD PTR __imp___invalid_parameter_noinfo
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, 22					; 00000016H
	jmp	$LN1@memcpy_s
$LN3@memcpy_s:

; 48   :         if (_Source == NULL || _DestinationSize < _SourceSize)

	cmp	DWORD PTR __Source$[ebp], 0
	je	SHORT $LN5@memcpy_s
	mov	eax, DWORD PTR __DestinationSize$[ebp]
	cmp	eax, DWORD PTR __SourceSize$[ebp]
	jae	$LN4@memcpy_s
$LN5@memcpy_s:

; 49   :         {
; 50   :             memset(_Destination, 0, _DestinationSize);

	mov	eax, DWORD PTR __DestinationSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Destination$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 51   : 
; 52   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Source != NULL,                 EINVAL);

	cmp	DWORD PTR __Source$[ebp], 0
	je	SHORT $LN11@memcpy_s
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN12@memcpy_s
$LN11@memcpy_s:
	mov	DWORD PTR tv75[ebp], 0
$LN12@memcpy_s:
	mov	eax, DWORD PTR tv75[ebp]
	mov	DWORD PTR __Expr_val$2[ebp], eax
	cmp	DWORD PTR __Expr_val$2[ebp], 0
	jne	SHORT $LN6@memcpy_s
	mov	esi, esp
	call	DWORD PTR __imp___errno
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR [eax], 22			; 00000016H
	mov	esi, esp
	call	DWORD PTR __imp___invalid_parameter_noinfo
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, 22					; 00000016H
	jmp	SHORT $LN1@memcpy_s
$LN6@memcpy_s:

; 53   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_DestinationSize >= _SourceSize, ERANGE);

	mov	eax, DWORD PTR __DestinationSize$[ebp]
	cmp	eax, DWORD PTR __SourceSize$[ebp]
	jb	SHORT $LN13@memcpy_s
	mov	DWORD PTR tv79[ebp], 1
	jmp	SHORT $LN14@memcpy_s
$LN13@memcpy_s:
	mov	DWORD PTR tv79[ebp], 0
$LN14@memcpy_s:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR __Expr_val$1[ebp], ecx
	cmp	DWORD PTR __Expr_val$1[ebp], 0
	jne	SHORT $LN7@memcpy_s
	mov	esi, esp
	call	DWORD PTR __imp___errno
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR [eax], 34			; 00000022H
	mov	esi, esp
	call	DWORD PTR __imp___invalid_parameter_noinfo
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, 34					; 00000022H
	jmp	SHORT $LN1@memcpy_s
$LN7@memcpy_s:

; 54   : 
; 55   :             // Unreachable, but required to suppress /analyze warnings:
; 56   :             return EINVAL;

	mov	eax, 22					; 00000016H
	jmp	SHORT $LN1@memcpy_s
$LN4@memcpy_s:

; 57   :         }
; 58   : 
; 59   :         memcpy(_Destination, _Source, _SourceSize);

	mov	eax, DWORD PTR __SourceSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Source$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Destination$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 60   :         return 0;

	xor	eax, eax
$LN1@memcpy_s:

; 61   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_memcpy_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\main.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\main.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
