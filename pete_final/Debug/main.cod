; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	S:\Chris\OneDrive - UAT\C++ Programming II\pete_final\pete_final\main.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0exception@std@@QAE@QBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?compare@?$char_traits@D@std@@SAHPBD0I@Z	; std::char_traits<char>::compare
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAPADPADID@Z	; std::char_traits<char>::assign
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	?to_char_type@?$char_traits@D@std@@SADABH@Z	; std::char_traits<char>::to_char_type
PUBLIC	?to_int_type@?$char_traits@D@std@@SAHABD@Z	; std::char_traits<char>::to_int_type
PUBLIC	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z	; std::char_traits<char>::eq_int_type
PUBLIC	?not_eof@?$char_traits@D@std@@SAHABH@Z		; std::char_traits<char>::not_eof
PUBLIC	?eof@?$char_traits@D@std@@SAHXZ			; std::char_traits<char>::eof
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
PUBLIC	??1_Container_base12@std@@QAE@XZ		; std::_Container_base12::~_Container_base12
PUBLIC	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QAE@ABU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Clrcont@_Iterator_base12@std@@QAEXXZ		; std::_Iterator_base12::_Clrcont
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ	; std::_Iterator_base12::_Getpnext
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	?_Allocate@std@@YAPAXII_N@Z			; std::_Allocate
PUBLIC	?_Deallocate@std@@YAXPAXII@Z			; std::_Deallocate
PUBLIC	?_Init_atomic_counter@std@@YAXAAKK@Z		; std::_Init_atomic_counter
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@U_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	?address@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEPADAAD@Z ; std::_Wrap_alloc<std::allocator<char> >::address
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAU01@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
PUBLIC	??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
PUBLIC	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
PUBLIC	?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
PUBLIC	?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
PUBLIC	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
PUBLIC	?_Traits_compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAHQBDI0I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Traits_compare
PUBLIC	?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
PUBLIC	?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	?name@type_info@@QBEPBDXZ			; type_info::name
PUBLIC	??0bad_cast@std@@QAE@XZ				; std::bad_cast::bad_cast
PUBLIC	??1bad_cast@std@@UAE@XZ				; std::bad_cast::~bad_cast
PUBLIC	??0bad_cast@std@@QAE@ABV01@@Z			; std::bad_cast::bad_cast
PUBLIC	??_Gbad_cast@std@@UAEPAXI@Z			; std::bad_cast::`scalar deleting destructor'
PUBLIC	??1locale@std@@QAE@XZ				; std::locale::~locale
PUBLIC	?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z	; std::locale::_Getfacet
PUBLIC	??0_Ref_count_base@std@@IAE@XZ			; std::_Ref_count_base::_Ref_count_base
PUBLIC	??1_Ref_count_base@std@@UAE@XZ			; std::_Ref_count_base::~_Ref_count_base
PUBLIC	?_Incref@_Ref_count_base@std@@QAEXXZ		; std::_Ref_count_base::_Incref
PUBLIC	?_Decref@_Ref_count_base@std@@QAEXXZ		; std::_Ref_count_base::_Decref
PUBLIC	?_Decwref@_Ref_count_base@std@@QAEXXZ		; std::_Ref_count_base::_Decwref
PUBLIC	?_Get_deleter@_Ref_count_base@std@@UBEPAXABVtype_info@@@Z ; std::_Ref_count_base::_Get_deleter
PUBLIC	??_G_Ref_count_base@std@@UAEPAXI@Z		; std::_Ref_count_base::`scalar deleting destructor'
PUBLIC	?_Enable_shared@std@@YAXPDX0@Z			; std::_Enable_shared
PUBLIC	?_Check_C_return@std@@YAHH@Z			; std::_Check_C_return
PUBLIC	?_Thrd_startX@std@@YAHPAU_Thrd_imp_t@@P6GIPAX@Z1@Z ; std::_Thrd_startX
PUBLIC	?_Mtx_initX@std@@YAHPAPAU_Mtx_internal_imp_t@@H@Z ; std::_Mtx_initX
PUBLIC	?_Mtx_lockX@std@@YAHPAU_Mtx_internal_imp_t@@@Z	; std::_Mtx_lockX
PUBLIC	?_Mtx_unlockX@std@@YAHPAU_Mtx_internal_imp_t@@@Z ; std::_Mtx_unlockX
PUBLIC	?_Cnd_initX@std@@YAHPAPAU_Cnd_internal_imp_t@@@Z ; std::_Cnd_initX
PUBLIC	?_Cnd_waitX@std@@YAHPAU_Cnd_internal_imp_t@@PAU_Mtx_internal_imp_t@@@Z ; std::_Cnd_waitX
PUBLIC	?_Cnd_signalX@std@@YAHPAU_Cnd_internal_imp_t@@@Z ; std::_Cnd_signalX
PUBLIC	??0_Auto_cnd@std@@QAE@PAU_Cnd_internal_imp_t@@@Z ; std::_Auto_cnd::_Auto_cnd
PUBLIC	??1_Auto_cnd@std@@QAE@XZ			; std::_Auto_cnd::~_Auto_cnd
PUBLIC	?_Release@_Auto_cnd@std@@QAEXXZ			; std::_Auto_cnd::_Release
PUBLIC	??0_Auto_mtx@std@@QAE@PAU_Mtx_internal_imp_t@@@Z ; std::_Auto_mtx::_Auto_mtx
PUBLIC	??1_Auto_mtx@std@@QAE@XZ			; std::_Auto_mtx::~_Auto_mtx
PUBLIC	?_Release@_Auto_mtx@std@@QAEXXZ			; std::_Auto_mtx::_Release
PUBLIC	??0_Pad@std@@QAE@XZ				; std::_Pad::_Pad
PUBLIC	??1_Pad@std@@QAE@XZ				; std::_Pad::~_Pad
PUBLIC	?_Launch@_Pad@std@@QAEXPAU_Thrd_imp_t@@@Z	; std::_Pad::_Launch
PUBLIC	?_Release@_Pad@std@@QAEXXZ			; std::_Pad::_Release
PUBLIC	?_Call_func@_Pad@std@@CGIPAX@Z			; std::_Pad::_Call_func
PUBLIC	??1thread@std@@QAE@XZ				; std::thread::~thread
PUBLIC	?joinable@thread@std@@QBE_NXZ			; std::thread::joinable
PUBLIC	?join@thread@std@@QAEXXZ			; std::thread::join
PUBLIC	?get_id@thread@std@@QBE?AVid@12@XZ		; std::thread::get_id
PUBLIC	?get_id@this_thread@std@@YA?AVid@thread@2@XZ	; std::this_thread::get_id
PUBLIC	??0id@thread@std@@AAE@I@Z			; std::thread::id::id
PUBLIC	??8std@@YA_NVid@thread@0@0@Z			; std::operator==
PUBLIC	??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_flags_saver::ios_flags_saver
PUBLIC	??1ios_flags_saver@io@boost@@QAE@XZ		; boost::io::ios_flags_saver::~ios_flags_saver
PUBLIC	?restore@ios_flags_saver@io@boost@@QAEXXZ	; boost::io::ios_flags_saver::restore
PUBLIC	??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_precision_saver::ios_precision_saver
PUBLIC	??1ios_precision_saver@io@boost@@QAE@XZ		; boost::io::ios_precision_saver::~ios_precision_saver
PUBLIC	?restore@ios_precision_saver@io@boost@@QAEXXZ	; boost::io::ios_precision_saver::restore
PUBLIC	??_Darchive_exception@archive@boost@@QAEXXZ	; boost::archive::archive_exception::`vbase destructor'
PUBLIC	??0version_type@archive@boost@@QAE@ABI@Z	; boost::archive::version_type::version_type
PUBLIC	??4version_type@archive@boost@@QAEAAV012@ABV012@@Z ; boost::archive::version_type::operator=
PUBLIC	??Bversion_type@archive@boost@@QBEIXZ		; boost::archive::version_type::operator unsigned int
PUBLIC	??Bversion_type@archive@boost@@QAEAAIXZ		; boost::archive::version_type::operator unsigned int &
PUBLIC	??Bclass_id_type@archive@boost@@QBEHXZ		; boost::archive::class_id_type::operator int
PUBLIC	??Bclass_id_type@archive@boost@@QAEAAFXZ	; boost::archive::class_id_type::operator short &
PUBLIC	??Bobject_id_type@archive@boost@@QBEIXZ		; boost::archive::object_id_type::operator unsigned int
PUBLIC	??Bobject_id_type@archive@boost@@QAEAAIXZ	; boost::archive::object_id_type::operator unsigned int &
PUBLIC	??Btracking_type@archive@boost@@QBE_NXZ		; boost::archive::tracking_type::operator bool
PUBLIC	??Btracking_type@archive@boost@@QAEAA_NXZ	; boost::archive::tracking_type::operator bool &
PUBLIC	??Bclass_name_type@archive@boost@@QBEAAPBDXZ	; boost::archive::class_name_type::operator char const * &
PUBLIC	?get_debug_info@extended_type_info_typeid_0@typeid_system@serialization@boost@@EBEPBDXZ ; boost::serialization::typeid_system::extended_type_info_typeid_0::get_debug_info
PUBLIC	??0version_type@serialization@boost@@QAE@I@Z	; boost::serialization::version_type::version_type
PUBLIC	??Bversion_type@serialization@boost@@QBEABIXZ	; boost::serialization::version_type::operator unsigned int const &
PUBLIC	?serialized_as_pointer@basic_iserializer@detail@archive@boost@@QBE_NXZ ; boost::archive::detail::basic_iserializer::serialized_as_pointer
PUBLIC	?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
PUBLIC	?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVversion_type@34@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload
PUBLIC	?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVobject_id_type@34@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload
PUBLIC	?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_type@34@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload
PUBLIC	?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_optional_type@34@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload
PUBLIC	?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUtracking_type@34@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload
PUBLIC	?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUclass_name_type@34@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload
PUBLIC	??1?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@UAE@XZ ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::~common_iarchive<boost::archive::text_iarchive>
PUBLIC	?load_override@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_optional_type@23@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override
PUBLIC	??1?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@MAE@XZ ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::~basic_text_iarchive<boost::archive::text_iarchive>
PUBLIC	??_G?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@MAEPAXI@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`scalar deleting destructor'
PUBLIC	?load@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@23@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load
PUBLIC	??1?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@MAE@XZ ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::~text_iarchive_impl<boost::archive::text_iarchive>
PUBLIC	??_G?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@MAEPAXI@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`scalar deleting destructor'
PUBLIC	??0text_iarchive@archive@boost@@QAE@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@I@Z ; boost::archive::text_iarchive::text_iarchive
PUBLIC	??1text_iarchive@archive@boost@@UAE@XZ		; boost::archive::text_iarchive::~text_iarchive
PUBLIC	??_Gtext_iarchive@archive@boost@@UAEPAXI@Z	; boost::archive::text_iarchive::`scalar deleting destructor'
PUBLIC	?serialized_as_pointer@basic_oserializer@detail@archive@boost@@QBE_NXZ ; boost::archive::detail::basic_oserializer::serialized_as_pointer
PUBLIC	?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
PUBLIC	?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVversion_type@34@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
PUBLIC	?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_id_type@34@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
PUBLIC	?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_reference_type@34@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
PUBLIC	?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_type@34@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
PUBLIC	?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_reference_type@34@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
PUBLIC	?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_optional_type@34@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
PUBLIC	?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXABUclass_name_type@34@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
PUBLIC	?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXUtracking_type@34@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
PUBLIC	??1?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@UAE@XZ ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::~common_oarchive<boost::archive::text_oarchive>
PUBLIC	?newline@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::newline
PUBLIC	?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_id_type@23@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override
PUBLIC	?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_optional_type@23@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override
PUBLIC	?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override
PUBLIC	??1?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@MAE@XZ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::~basic_text_oarchive<boost::archive::text_oarchive>
PUBLIC	??_G?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@MAEPAXI@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`scalar deleting destructor'
PUBLIC	?save@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVversion_type@23@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save
PUBLIC	??1?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@MAE@XZ ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::~text_oarchive_impl<boost::archive::text_oarchive>
PUBLIC	??_G?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@MAEPAXI@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`scalar deleting destructor'
PUBLIC	??0text_oarchive@archive@boost@@QAE@AAV?$basic_ostream@DU?$char_traits@D@std@@@std@@I@Z ; boost::archive::text_oarchive::text_oarchive
PUBLIC	??1text_oarchive@archive@boost@@UAE@XZ		; boost::archive::text_oarchive::~text_oarchive
PUBLIC	??_Gtext_oarchive@archive@boost@@UAEPAXI@Z	; boost::archive::text_oarchive::`scalar deleting destructor'
PUBLIC	??O@YA_NAAVCContact@@0@Z			; operator>
PUBLIC	??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z		; std::_Fgetc<char>
PUBLIC	??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z		; std::_Fputc<char>
PUBLIC	??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z		; std::_Ungetc<char>
PUBLIC	?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z ; Chris::sort
PUBLIC	??0?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAE@XZ ; std::allocator<std::shared_ptr<CContact> >::allocator<std::shared_ptr<CContact> >
PUBLIC	?deallocate@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@2@I@Z ; std::allocator<std::shared_ptr<CContact> >::deallocate
PUBLIC	?allocate@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEPAV?$shared_ptr@VCContact@@@2@I@Z ; std::allocator<std::shared_ptr<CContact> >::allocate
PUBLIC	?max_size@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QBEIXZ ; std::allocator<std::shared_ptr<CContact> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAIABV?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEPAV?$shared_ptr@VCContact@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::max_size
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >
PUBLIC	??1?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::~_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Free_proxy
PUBLIC	?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getpfirst
PUBLIC	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myproxy
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Orphan_all
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >::~_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>
PUBLIC	??0?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >
PUBLIC	?push_back@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAEX$$QAV?$shared_ptr@VCContact@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::push_back
PUBLIC	??1?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::~vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >
PUBLIC	?capacity@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::capacity
PUBLIC	?_Unused_capacity@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Unused_capacity
PUBLIC	?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::begin
PUBLIC	?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
PUBLIC	?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Make_iter
PUBLIC	?size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::size
PUBLIC	?max_size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::max_size
PUBLIC	?push_back@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAEXABV?$shared_ptr@VCContact@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::push_back
PUBLIC	?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::erase
PUBLIC	?_Destroy@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXPAV?$shared_ptr@VCContact@@@2@0@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Destroy
PUBLIC	?_Grow_to@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEII@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Grow_to
PUBLIC	?_Inside@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBE_NPBV?$shared_ptr@VCContact@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Inside
PUBLIC	?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Reallocate
PUBLIC	?_Reserve@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Reserve
PUBLIC	?_Tidy@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Tidy
PUBLIC	?_Xlen@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Xlen
PUBLIC	?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Orphan_range
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>
PUBLIC	??4?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::operator=
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEABV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+=
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator!=
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Compat
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
PUBLIC	??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator=
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+=
PUBLIC	??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+
PUBLIC	??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator-=
PUBLIC	??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator-
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
PUBLIC	??4?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator=
PUBLIC	??0?$_Ptr_base@VCContact@@@std@@QAE@XZ		; std::_Ptr_base<CContact>::_Ptr_base<CContact>
PUBLIC	??0?$_Ptr_base@VCContact@@@std@@QAE@$$QAV01@@Z	; std::_Ptr_base<CContact>::_Ptr_base<CContact>
PUBLIC	?_Swap@?$_Ptr_base@VCContact@@@std@@QAEXAAV12@@Z ; std::_Ptr_base<CContact>::_Swap
PUBLIC	?_Get@?$_Ptr_base@VCContact@@@std@@QBEPAVCContact@@XZ ; std::_Ptr_base<CContact>::_Get
PUBLIC	?_Decref@?$_Ptr_base@VCContact@@@std@@QAEXXZ	; std::_Ptr_base<CContact>::_Decref
PUBLIC	?_Reset@?$_Ptr_base@VCContact@@@std@@QAEXPAVCContact@@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<CContact>::_Reset
PUBLIC	?_Reset0@?$_Ptr_base@VCContact@@@std@@QAEXPAVCContact@@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<CContact>::_Reset0
PUBLIC	??0?$shared_ptr@VCContact@@@std@@QAE@ABV01@@Z	; std::shared_ptr<CContact>::shared_ptr<CContact>
PUBLIC	??0?$shared_ptr@VCContact@@@std@@QAE@$$QAV01@@Z	; std::shared_ptr<CContact>::shared_ptr<CContact>
PUBLIC	??4?$shared_ptr@VCContact@@@std@@QAEAAV01@$$QAV01@@Z ; std::shared_ptr<CContact>::operator=
PUBLIC	??1?$shared_ptr@VCContact@@@std@@QAE@XZ		; std::shared_ptr<CContact>::~shared_ptr<CContact>
PUBLIC	??4?$shared_ptr@VCContact@@@std@@QAEAAV01@ABV01@@Z ; std::shared_ptr<CContact>::operator=
PUBLIC	?swap@?$shared_ptr@VCContact@@@std@@QAEXAAV12@@Z ; std::shared_ptr<CContact>::swap
PUBLIC	??D?$shared_ptr@VCContact@@@std@@QBEAAVCContact@@XZ ; std::shared_ptr<CContact>::operator*
PUBLIC	??C?$shared_ptr@VCContact@@@std@@QBEPAVCContact@@XZ ; std::shared_ptr<CContact>::operator->
PUBLIC	??_G?$shared_ptr@VCContact@@@std@@QAEPAXI@Z	; std::shared_ptr<CContact>::`scalar deleting destructor'
PUBLIC	?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; updateContactLists
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
PUBLIC	??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >
PUBLIC	??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
PUBLIC	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
PUBLIC	?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
PUBLIC	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
PUBLIC	?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Lock
PUBLIC	?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock
PUBLIC	?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::overflow
PUBLIC	?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail
PUBLIC	?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_filebuf<char,std::char_traits<char> >::underflow
PUBLIC	?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_filebuf<char,std::char_traits<char> >::uflow
PUBLIC	?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
PUBLIC	?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
PUBLIC	?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z ; std::basic_filebuf<char,std::char_traits<char> >::setbuf
PUBLIC	?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_filebuf<char,std::char_traits<char> >::sync
PUBLIC	?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::imbue
PUBLIC	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init
PUBLIC	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
PUBLIC	?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDU_Mbstatet@@@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
PUBLIC	?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
PUBLIC	?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back
PUBLIC	??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_ofstream<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ofstream<char,std::char_traits<char> >::`vbase destructor'
PUBLIC	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?6VCContact@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVCContact@@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<CContact>
PUBLIC	?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; getContactList
PUBLIC	??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
PUBLIC	??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >
PUBLIC	??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_ifstream<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ifstream<char,std::char_traits<char> >::`vbase destructor'
PUBLIC	??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z ; std::make_shared<CCompany,bool>
PUBLIC	??0?$_Ptr_base@VCCompany@@@std@@QAE@XZ		; std::_Ptr_base<CCompany>::_Ptr_base<CCompany>
PUBLIC	??0?$_Ptr_base@VCCompany@@@std@@QAE@$$QAV01@@Z	; std::_Ptr_base<CCompany>::_Ptr_base<CCompany>
PUBLIC	?_Decref@?$_Ptr_base@VCCompany@@@std@@QAEXXZ	; std::_Ptr_base<CCompany>::_Decref
PUBLIC	?_Reset0@?$_Ptr_base@VCCompany@@@std@@QAEXPAVCCompany@@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<CCompany>::_Reset0
PUBLIC	??0?$shared_ptr@VCCompany@@@std@@QAE@XZ		; std::shared_ptr<CCompany>::shared_ptr<CCompany>
PUBLIC	??0?$shared_ptr@VCCompany@@@std@@QAE@$$QAV01@@Z	; std::shared_ptr<CCompany>::shared_ptr<CCompany>
PUBLIC	??1?$shared_ptr@VCCompany@@@std@@QAE@XZ		; std::shared_ptr<CCompany>::~shared_ptr<CCompany>
PUBLIC	??$?0VCCompany@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCCompany@@@1@@Z ; std::shared_ptr<CContact>::shared_ptr<CContact><CCompany,void>
PUBLIC	??$?5VCContact@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVCContact@@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><CContact>
PUBLIC	??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z ; std::make_shared<CPerson,bool>
PUBLIC	??0?$_Ptr_base@VCPerson@@@std@@QAE@XZ		; std::_Ptr_base<CPerson>::_Ptr_base<CPerson>
PUBLIC	??0?$_Ptr_base@VCPerson@@@std@@QAE@$$QAV01@@Z	; std::_Ptr_base<CPerson>::_Ptr_base<CPerson>
PUBLIC	?_Decref@?$_Ptr_base@VCPerson@@@std@@QAEXXZ	; std::_Ptr_base<CPerson>::_Decref
PUBLIC	?_Reset0@?$_Ptr_base@VCPerson@@@std@@QAEXPAVCPerson@@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<CPerson>::_Reset0
PUBLIC	??0?$shared_ptr@VCPerson@@@std@@QAE@XZ		; std::shared_ptr<CPerson>::shared_ptr<CPerson>
PUBLIC	??0?$shared_ptr@VCPerson@@@std@@QAE@$$QAV01@@Z	; std::shared_ptr<CPerson>::shared_ptr<CPerson>
PUBLIC	??1?$shared_ptr@VCPerson@@@std@@QAE@XZ		; std::shared_ptr<CPerson>::~shared_ptr<CPerson>
PUBLIC	??$?0VCPerson@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCPerson@@@1@@Z ; std::shared_ptr<CContact>::shared_ptr<CContact><CPerson,void>
PUBLIC	_main
PUBLIC	??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z ; std::thread::thread<void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,void>
PUBLIC	??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ ; std::make_shared<CPerson>
PUBLIC	??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ ; std::make_shared<CCompany>
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
PUBLIC	??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::getline<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$_Move_unchecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00@Z ; std::_Move_unchecked<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *>
PUBLIC	??$addressof@$$CBV?$shared_ptr@VCContact@@@std@@@std@@YAPBV?$shared_ptr@VCContact@@@0@ABV10@@Z ; std::addressof<std::shared_ptr<CContact> const >
PUBLIC	??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unfancy<std::shared_ptr<CContact> >
PUBLIC	??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@AAV21@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> &>
PUBLIC	??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@ABV21@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> const &>
PUBLIC	??$addressof@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::addressof<std::shared_ptr<CContact> >
PUBLIC	??$forward@V?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::forward<std::shared_ptr<CContact> >
PUBLIC	??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >
PUBLIC	??$_Reset@VCContact@@@?$_Ptr_base@VCContact@@@std@@QAEXABV01@@Z ; std::_Ptr_base<CContact>::_Reset<CContact>
PUBLIC	??$?6Utracking_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABUtracking_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::tracking_type>
PUBLIC	??$?6Uclass_name_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABUclass_name_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_name_type>
PUBLIC	??$?6Vclass_id_optional_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_optional_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_id_optional_type>
PUBLIC	??$?6Vclass_id_reference_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_reference_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_id_reference_type>
PUBLIC	??$?6Vclass_id_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_id_type>
PUBLIC	??$?6Vobject_reference_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVobject_reference_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::object_reference_type>
PUBLIC	??$?6Vobject_id_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVobject_id_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::object_id_type>
PUBLIC	??$?6Vversion_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVversion_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::version_type>
PUBLIC	??$?5Uclass_name_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAUclass_name_type@23@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::class_name_type>
PUBLIC	??$?5Utracking_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAUtracking_type@23@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::tracking_type>
PUBLIC	??$?5Vclass_id_optional_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVclass_id_optional_type@23@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::class_id_optional_type>
PUBLIC	??$?5Vclass_id_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVclass_id_type@23@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::class_id_type>
PUBLIC	??$?5Vobject_id_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVobject_id_type@23@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::object_id_type>
PUBLIC	??$?5Vversion_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVversion_type@23@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::version_type>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>
PUBLIC	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEABDXZ ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
PUBLIC	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
PUBLIC	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$_Debug_pointer@$$CBD@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char const >
PUBLIC	??$move@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<char> > &>
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>
PUBLIC	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z		; std::fpos<_Mbstatet>::fpos<_Mbstatet>
PUBLIC	??0?$fpos@U_Mbstatet@@@std@@QAE@U_Mbstatet@@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
PUBLIC	?state@?$fpos@U_Mbstatet@@@std@@QBE?AU_Mbstatet@@XZ ; std::fpos<_Mbstatet>::state
PUBLIC	?seekpos@?$fpos@U_Mbstatet@@@std@@QBE_JXZ	; std::fpos<_Mbstatet>::seekpos
PUBLIC	??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ		; std::fpos<_Mbstatet>::operator __int64
PUBLIC	??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1><>
PUBLIC	??$_Destroy_range@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@PAV?$shared_ptr@VCContact@@@2@@std@@YAXPAV?$shared_ptr@VCContact@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::shared_ptr<CContact> >,std::shared_ptr<CContact> *>
PUBLIC	??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAV?$allocator@D@1@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> >
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$addressof@PAD@std@@YAPAPADAAPAD@Z		; std::addressof<char *>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$_Unfancy@D@std@@YAPADPAD@Z			; std::_Unfancy<char>
PUBLIC	??$_Debug_pointer_if@$$CBD@std@@YAX_NPBDPB_WI@Z	; std::_Debug_pointer_if<char const >
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$swap@PAV_Ref_count_base@std@@X@std@@YAXAAPAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *,void>
PUBLIC	??$swap@PAVCContact@@X@std@@YAXAAPAVCContact@@0@Z ; std::swap<CContact *,void>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$?0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > > &>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$_Umove@PAV?$shared_ptr@VCContact@@@std@@@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEPAV?$shared_ptr@VCContact@@@1@PAV21@00@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Umove<std::shared_ptr<CContact> *>
PUBLIC	??$_Unfancy@$$CBD@std@@YAPBDPBD@Z		; std::_Unfancy<char const >
PUBLIC	?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z ; std::pointer_traits<char *>::pointer_to
PUBLIC	??$?0AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<char> > &>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z ; std::pointer_traits<std::_Container_proxy *>::pointer_to
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$save_override@$$CBVCContact@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVCContact@@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<CContact const >
PUBLIC	?_Getptr@?$_Ref_count_obj@VCCompany@@@std@@QBEPAVCCompany@@XZ ; std::_Ref_count_obj<CCompany>::_Getptr
PUBLIC	?_Destroy@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ ; std::_Ref_count_obj<CCompany>::_Destroy
PUBLIC	?_Delete_this@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ ; std::_Ref_count_obj<CCompany>::_Delete_this
PUBLIC	??1?$_Ref_count_obj@VCCompany@@@std@@UAE@XZ	; std::_Ref_count_obj<CCompany>::~_Ref_count_obj<CCompany>
PUBLIC	??_G?$_Ref_count_obj@VCCompany@@@std@@UAEPAXI@Z	; std::_Ref_count_obj<CCompany>::`scalar deleting destructor'
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
PUBLIC	??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z ; std::_Ref_count_obj<CCompany>::_Ref_count_obj<CCompany><bool>
PUBLIC	??$_Resetp0@VCCompany@@@?$shared_ptr@VCCompany@@@std@@QAEXPAVCCompany@@PAV_Ref_count_base@1@@Z ; std::shared_ptr<CCompany>::_Resetp0<CCompany>
PUBLIC	??$move@AAV?$shared_ptr@VCCompany@@@std@@@std@@YA$$QAV?$shared_ptr@VCCompany@@@0@AAV10@@Z ; std::move<std::shared_ptr<CCompany> &>
PUBLIC	??$?0VCCompany@@@?$_Ptr_base@VCContact@@@std@@QAE@$$QAV?$_Ptr_base@VCCompany@@@1@@Z ; std::_Ptr_base<CContact>::_Ptr_base<CContact><CCompany>
PUBLIC	??$load_override@VCContact@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVCContact@@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<CContact>
PUBLIC	?_Getptr@?$_Ref_count_obj@VCPerson@@@std@@QBEPAVCPerson@@XZ ; std::_Ref_count_obj<CPerson>::_Getptr
PUBLIC	?_Destroy@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ ; std::_Ref_count_obj<CPerson>::_Destroy
PUBLIC	?_Delete_this@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ ; std::_Ref_count_obj<CPerson>::_Delete_this
PUBLIC	??1?$_Ref_count_obj@VCPerson@@@std@@UAE@XZ	; std::_Ref_count_obj<CPerson>::~_Ref_count_obj<CPerson>
PUBLIC	??_G?$_Ref_count_obj@VCPerson@@@std@@UAEPAXI@Z	; std::_Ref_count_obj<CPerson>::`scalar deleting destructor'
PUBLIC	??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z ; std::_Ref_count_obj<CPerson>::_Ref_count_obj<CPerson><bool>
PUBLIC	??$_Resetp0@VCPerson@@@?$shared_ptr@VCPerson@@@std@@QAEXPAVCPerson@@PAV_Ref_count_base@1@@Z ; std::shared_ptr<CPerson>::_Resetp0<CPerson>
PUBLIC	??$move@AAV?$shared_ptr@VCPerson@@@std@@@std@@YA$$QAV?$shared_ptr@VCPerson@@@0@AAV10@@Z ; std::move<std::shared_ptr<CPerson> &>
PUBLIC	??$?0VCPerson@@@?$_Ptr_base@VCContact@@@std@@QAE@$$QAV?$_Ptr_base@VCPerson@@@1@@Z ; std::_Ptr_base<CContact>::_Ptr_base<CContact><CPerson>
PUBLIC	??$forward@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YAA6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZA6AX01@Z@Z ; std::forward<void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
PUBLIC	??$forward@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z ; std::forward<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>
PUBLIC	??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z ; std::make_unique<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??R?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@QBEXPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ; std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator()
PUBLIC	?get_deleter@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEAAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@XZ ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::get_deleter
PUBLIC	?_Myptr@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myptr
PUBLIC	?_Myptr@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEABQAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myptr
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAEAAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAEAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QBEABQAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Get_second
PUBLIC	??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@$$QAV01@@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??1?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??D?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
PUBLIC	?get@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::get
PUBLIC	?release@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::release
PUBLIC	??1?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ; std::_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??1?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ; std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??1?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ ; std::tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??1?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@XZ ; std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??_G?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAEPAXI@Z ; std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`scalar deleting destructor'
PUBLIC	??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z ; std::_Launch<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ ; std::_Ref_count_obj<CPerson>::_Ref_count_obj<CPerson><>
PUBLIC	??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ ; std::_Ref_count_obj<CCompany>::_Ref_count_obj<CCompany><>
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??$move@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::move<std::basic_istream<char,std::char_traits<char> > &>
PUBLIC	??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z ; std::getline<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$_Ptr_move_cat@V?$shared_ptr@VCContact@@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAV?$shared_ptr@VCContact@@@0@0@Z ; std::_Ptr_move_cat<std::shared_ptr<CContact>,std::shared_ptr<CContact> >
PUBLIC	??$_Move_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00U_General_ptr_iterator_tag@0@@Z ; std::_Move_unchecked1<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *>
PUBLIC	??$forward@AAV?$shared_ptr@VCContact@@@std@@@std@@YAAAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::forward<std::shared_ptr<CContact> &>
PUBLIC	??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@AAV31@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> &>
PUBLIC	??$forward@ABV?$shared_ptr@VCContact@@@std@@@std@@YAABV?$shared_ptr@VCContact@@@0@ABV10@@Z ; std::forward<std::shared_ptr<CContact> const &>
PUBLIC	??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@ABV31@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> const &>
PUBLIC	??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@$$QAV31@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >
PUBLIC	??$save_override@$$CBUtracking_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUtracking_type@12@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::tracking_type const >
PUBLIC	??$save_override@$$CBVclass_id_reference_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_reference_type const >
PUBLIC	??$save_override@$$CBVclass_id_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_type@12@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_type const >
PUBLIC	??$save_override@$$CBVobject_reference_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_reference_type@12@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::object_reference_type const >
PUBLIC	??$save_override@$$CBVversion_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVversion_type@12@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::version_type const >
PUBLIC	??$load_override@Utracking_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::tracking_type>
PUBLIC	??$load_override@Vclass_id_optional_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_optional_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::class_id_optional_type>
PUBLIC	??$load_override@Vclass_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::class_id_type>
PUBLIC	??$load_override@Vobject_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::object_id_type>
PUBLIC	??$load_override@Vversion_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::version_type>
PUBLIC	??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >
PUBLIC	??$_Destroy_range1@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@PAV?$shared_ptr@VCContact@@@2@@std@@YAXPAV?$shared_ptr@VCContact@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Destroy_range1<std::allocator<std::shared_ptr<CContact> >,std::shared_ptr<CContact> *>
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$move@AAPAV_Ref_count_base@std@@@std@@YA$$QAPAV_Ref_count_base@0@AAPAV10@@Z ; std::move<std::_Ref_count_base * &>
PUBLIC	??$move@AAPAVCContact@@@std@@YA$$QAPAVCContact@@AAPAV1@@Z ; std::move<CContact * &>
PUBLIC	??$forward@AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > > &>
PUBLIC	??$?0V?$shared_ptr@VCContact@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::shared_ptr<CContact> >
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$_Uninitialized_move@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *,std::allocator<std::shared_ptr<CContact> > >
PUBLIC	??$forward@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<char> > &>
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??$?6V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$save_override@$$CBVobject_id_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVobject_id_type@23@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::object_id_type const >
PUBLIC	??$save_override@$$CBVCContact@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVCContact@@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<CContact const >
PUBLIC	??$load_override@VCContact@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVCContact@@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<CContact>
PUBLIC	??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z ; std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>
PUBLIC	??$forward@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YA$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@AAV10@@Z ; std::forward<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	?_Go@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@UAEXXZ ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Go
PUBLIC	?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXPAV12@@Z ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Run
PUBLIC	??1?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@QAE@XZ ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??$?0V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@QAE@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@1@@Z ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > ><std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_istream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??$move@AAV?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::move<std::shared_ptr<CContact> &>
PUBLIC	??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@AAV21@@Z ; std::allocator<std::shared_ptr<CContact> >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> &>
PUBLIC	??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@ABV21@@Z ; std::allocator<std::shared_ptr<CContact> >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> const &>
PUBLIC	??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@$$QAV21@@Z ; std::allocator<std::shared_ptr<CContact> >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >
PUBLIC	??$save_override@$$CBUtracking_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABUtracking_type@23@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::tracking_type const >
PUBLIC	??$save_override@$$CBVclass_id_reference_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVclass_id_reference_type@23@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_reference_type const >
PUBLIC	??$save_override@$$CBVclass_id_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVclass_id_type@23@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_type const >
PUBLIC	??$save_override@$$CBVobject_reference_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVobject_reference_type@23@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::object_reference_type const >
PUBLIC	??$save_override@$$CBVversion_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVversion_type@23@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::version_type const >
PUBLIC	??$load_override@Utracking_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::tracking_type>
PUBLIC	??$load_override@Vclass_id_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::class_id_type>
PUBLIC	??$load_override@Vobject_id_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::object_id_type>
PUBLIC	??$load_override@Vversion_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@12@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::version_type>
PUBLIC	??$destroy@V?$shared_ptr@VCContact@@@std@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::destroy<std::shared_ptr<CContact> >
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$_Unchecked@PAV?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unchecked<std::shared_ptr<CContact> *>
PUBLIC	??$_Uninitialized_move_al_unchecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z ; std::_Uninitialized_move_al_unchecked<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *,std::allocator<std::shared_ptr<CContact> > >
PUBLIC	??$_Rechecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAAAPAV?$shared_ptr@VCContact@@@0@AAPAV10@PAV10@@Z ; std::_Rechecked<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *>
PUBLIC	??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
PUBLIC	??$save@Vtext_oarchive@archive@boost@@$$CBVobject_id_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVobject_id_type@01@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::archive::object_id_type const >
PUBLIC	??$?0PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *>
PUBLIC	??$_Execute@$0A@$00$01@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@U?$integer_sequence@I$0A@$00$01@1@@Z ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Execute<0,1,2>
PUBLIC	??$forward@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@0@AAU10@@Z ; std::forward<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$?0PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@@Z ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$save@Vtext_oarchive@archive@boost@@$$CBVCContact@@@archive@boost@@YAXAAVtext_oarchive@01@ABVCContact@@@Z ; boost::archive::save<boost::archive::text_oarchive,CContact const >
PUBLIC	??$load_override@VCContact@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVCContact@@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<CContact>
PUBLIC	??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::_Exact_args_t,std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>
PUBLIC	??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@?$_Tuple_val@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@Z ; std::_Tuple_val<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>::_Tuple_val<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)><void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
PUBLIC	??$save@Vtext_oarchive@archive@boost@@$$CBUtracking_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABUtracking_type@01@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::archive::tracking_type const >
PUBLIC	??$save@Vtext_oarchive@archive@boost@@$$CBVclass_id_reference_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVclass_id_reference_type@01@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::archive::class_id_reference_type const >
PUBLIC	??$save@Vtext_oarchive@archive@boost@@$$CBVclass_id_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVclass_id_type@01@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::archive::class_id_type const >
PUBLIC	??$save@Vtext_oarchive@archive@boost@@$$CBVobject_reference_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVobject_reference_type@01@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::archive::object_reference_type const >
PUBLIC	??$save@Vtext_oarchive@archive@boost@@$$CBVversion_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVversion_type@01@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::archive::version_type const >
PUBLIC	??$load_override@Utracking_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAUtracking_type@23@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::tracking_type>
PUBLIC	??$load_override@Vclass_id_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVclass_id_type@23@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::class_id_type>
PUBLIC	??$load_override@Vobject_id_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVobject_id_type@23@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::object_id_type>
PUBLIC	??$load_override@Vversion_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVversion_type@23@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::version_type>
PUBLIC	??$destroy@V?$shared_ptr@VCContact@@@std@@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::destroy<std::shared_ptr<CContact> >
PUBLIC	??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked1<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *,std::allocator<std::shared_ptr<CContact> > >
PUBLIC	??$?0U?$integral_constant@_N$00@std@@@_Any_tag@std@@QAE@$$QAU?$integral_constant@_N$00@1@@Z ; std::_Any_tag::_Any_tag<std::integral_constant<bool,1> >
PUBLIC	??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
PUBLIC	??$invoke@Vobject_id_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVobject_id_type@23@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::object_id_type>
PUBLIC	??$?0AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1><std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>
PUBLIC	??$get@$0A@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z ; std::get<0,void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$move@AAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YA$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAP6AX01@Z@Z ; std::move<void (__cdecl*&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
PUBLIC	??$get@$00P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z ; std::get<1,void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$move@AAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z ; std::move<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > * &>
PUBLIC	??$get@$01P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z ; std::get<2,void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??$forward@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YA$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAP6AX01@Z@Z ; std::forward<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
PUBLIC	??$_Call@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@_Invoker_functor@std@@SAX$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@$$QAV31@@Z ; std::_Invoker_functor::_Call<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$invoke@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAX$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV10@$$QAV20@@Z ; std::invoke<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$?0U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1><std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>
PUBLIC	??$invoke@VCContact@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVCContact@@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<CContact>
PUBLIC	??$load@Vtext_iarchive@archive@boost@@VCContact@@@archive@boost@@YAXAAVtext_iarchive@01@AAVCContact@@@Z ; boost::archive::load<boost::archive::text_iarchive,CContact>
PUBLIC	??$?0U_Exact_args_t@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$V$0A@@?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@U_Exact_args_t@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::_Exact_args_t,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>
PUBLIC	??$?0PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@?$_Tuple_val@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@@Z ; std::_Tuple_val<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>::_Tuple_val<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *><std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>
PUBLIC	??$invoke@Utracking_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABUtracking_type@23@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::tracking_type>
PUBLIC	??$invoke@Vclass_id_reference_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVclass_id_reference_type@23@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::class_id_reference_type>
PUBLIC	??$invoke@Vclass_id_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVclass_id_type@23@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::class_id_type>
PUBLIC	??$invoke@Vobject_reference_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVobject_reference_type@23@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::object_reference_type>
PUBLIC	??$invoke@Vversion_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVversion_type@23@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::version_type>
PUBLIC	??$load@Vtext_iarchive@archive@boost@@Utracking_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAUtracking_type@01@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::archive::tracking_type>
PUBLIC	??$load@Vtext_iarchive@archive@boost@@Vclass_id_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVclass_id_type@01@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::archive::class_id_type>
PUBLIC	??$load@Vtext_iarchive@archive@boost@@Vobject_id_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVobject_id_type@01@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::archive::object_id_type>
PUBLIC	??$load@Vtext_iarchive@archive@boost@@Vversion_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVversion_type@01@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::archive::version_type>
PUBLIC	??$destroy@V?$shared_ptr@VCContact@@@std@@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@@Z ; std::allocator<std::shared_ptr<CContact> >::destroy<std::shared_ptr<CContact> >
PUBLIC	??$save@Vtext_oarchive@archive@boost@@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@archive@boost@@YAXAAVtext_oarchive@01@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::save<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
PUBLIC	??$check_object_versioning@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::object_id_type>
PUBLIC	??$invoke@Vobject_id_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVobject_id_type@34@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::object_id_type>
PUBLIC	??$forward@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@YAAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@AAPAV10@@Z ; std::forward<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>
PUBLIC	??$check_object_versioning@VCContact@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<CContact>
PUBLIC	??$invoke@VCContact@@@save_standard@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVCContact@@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_standard::invoke<CContact>
PUBLIC	??$check_const_loading@VCContact@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<CContact>
PUBLIC	??$invoke@VCContact@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVCContact@@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<CContact>
PUBLIC	??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>
PUBLIC	??$?0AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??$check_object_versioning@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::tracking_type>
PUBLIC	??$invoke@Utracking_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABUtracking_type@34@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::tracking_type>
PUBLIC	??$check_object_versioning@Vclass_id_reference_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::class_id_reference_type>
PUBLIC	??$invoke@Vclass_id_reference_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVclass_id_reference_type@34@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::class_id_reference_type>
PUBLIC	??$check_object_versioning@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::class_id_type>
PUBLIC	??$invoke@Vclass_id_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVclass_id_type@34@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::class_id_type>
PUBLIC	??$check_object_versioning@Vobject_reference_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::object_reference_type>
PUBLIC	??$invoke@Vobject_reference_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVobject_reference_type@34@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::object_reference_type>
PUBLIC	??$check_object_versioning@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::version_type>
PUBLIC	??$invoke@Vversion_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVversion_type@34@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::version_type>
PUBLIC	??$check_const_loading@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::archive::tracking_type>
PUBLIC	??$invoke@Utracking_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAUtracking_type@23@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::tracking_type>
PUBLIC	??$check_const_loading@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::archive::class_id_type>
PUBLIC	??$invoke@Vclass_id_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVclass_id_type@23@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::class_id_type>
PUBLIC	??$check_const_loading@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::archive::object_id_type>
PUBLIC	??$invoke@Vobject_id_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVobject_id_type@23@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::object_id_type>
PUBLIC	??$check_const_loading@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::archive::version_type>
PUBLIC	??$invoke@Vversion_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVversion_type@23@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::version_type>
PUBLIC	??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$save_primitive@Vtext_oarchive@archive@boost@@Vobject_id_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVobject_id_type@12@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::object_id_type>
PUBLIC	?use@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@@Z ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::use
PUBLIC	?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance
PUBLIC	?get_const_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@SAABV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_const_instance
PUBLIC	??0?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@QAE@XZ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::oserializer<boost::archive::text_oarchive,CContact>
PUBLIC	?save_object_data@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBEXAAVbasic_oarchive@234@PBX@Z ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::save_object_data
PUBLIC	?class_info@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::class_info
PUBLIC	?tracking@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NI@Z ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::tracking
PUBLIC	?version@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE?AVversion_type@34@XZ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::version
PUBLIC	?is_polymorphic@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::is_polymorphic
PUBLIC	??1?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAE@XZ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::~oserializer<boost::archive::text_oarchive,CContact>
PUBLIC	??_G?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAEPAXI@Z ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`scalar deleting destructor'
PUBLIC	??$check_object_level@VCContact@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<CContact>
PUBLIC	??$invoke@VCContact@@@load_standard@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABVCContact@@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_standard::invoke<CContact>
PUBLIC	??$save_primitive@Vtext_oarchive@archive@boost@@Utracking_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABUtracking_type@12@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::tracking_type>
PUBLIC	??$save_primitive@Vtext_oarchive@archive@boost@@Vclass_id_reference_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVclass_id_reference_type@12@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::class_id_reference_type>
PUBLIC	??$save_primitive@Vtext_oarchive@archive@boost@@Vclass_id_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVclass_id_type@12@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::class_id_type>
PUBLIC	??$save_primitive@Vtext_oarchive@archive@boost@@Vobject_reference_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVobject_reference_type@12@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::object_reference_type>
PUBLIC	??$save_primitive@Vtext_oarchive@archive@boost@@Vversion_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVversion_type@12@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::version_type>
PUBLIC	??$check_object_level@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::archive::tracking_type>
PUBLIC	??$invoke@Utracking_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAUtracking_type@34@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::tracking_type>
PUBLIC	??$check_object_level@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::archive::class_id_type>
PUBLIC	??$invoke@Vclass_id_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVclass_id_type@34@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::class_id_type>
PUBLIC	??$check_object_level@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::archive::object_id_type>
PUBLIC	??$invoke@Vobject_id_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVobject_id_type@34@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::object_id_type>
PUBLIC	??$check_object_level@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::archive::version_type>
PUBLIC	??$invoke@Vversion_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVversion_type@34@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::version_type>
PUBLIC	??$check_object_versioning@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$save@Vobject_id_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_id_type@12@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::object_id_type>
PUBLIC	??1?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::~singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >
PUBLIC	??0?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >
PUBLIC	??_G?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`scalar deleting destructor'
PUBLIC	??__Ft@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ@YAXXZ ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance'::`2'::`dynamic atexit destructor for 't''
PUBLIC	?use@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAXPBV?$extended_type_info_typeid@VCContact@@@23@@Z ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::use
PUBLIC	?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance
PUBLIC	?get_const_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@SAABV?$extended_type_info_typeid@VCContact@@@23@XZ ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_const_instance
PUBLIC	??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ ; boost::serialization::extended_type_info_typeid<CContact>::extended_type_info_typeid<CContact>
PUBLIC	??1?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAE@XZ ; boost::serialization::extended_type_info_typeid<CContact>::~extended_type_info_typeid<CContact>
PUBLIC	?construct@?$extended_type_info_typeid@VCContact@@@serialization@boost@@UBAPAXIZZ ; boost::serialization::extended_type_info_typeid<CContact>::construct
PUBLIC	?destroy@?$extended_type_info_typeid@VCContact@@@serialization@boost@@UBEXQBX@Z ; boost::serialization::extended_type_info_typeid<CContact>::destroy
PUBLIC	??_G?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAEPAXI@Z ; boost::serialization::extended_type_info_typeid<CContact>::`scalar deleting destructor'
PUBLIC	??$destroy@VCContact@@@access@serialization@boost@@SAXPBVCContact@@@Z ; boost::serialization::access::destroy<CContact>
PUBLIC	??$__vcrt_va_start_verify_argument_type@I@@YAXXZ ; __vcrt_va_start_verify_argument_type<unsigned int>
PUBLIC	??$factory@VCContact@@$0A@@serialization@boost@@YAPAVCContact@@PAD@Z ; boost::serialization::factory<CContact,0>
PUBLIC	??$factory@VCContact@@$00@serialization@boost@@YAPAVCContact@@PAD@Z ; boost::serialization::factory<CContact,1>
PUBLIC	??$factory@VCContact@@$01@serialization@boost@@YAPAVCContact@@PAD@Z ; boost::serialization::factory<CContact,2>
PUBLIC	??$factory@VCContact@@$02@serialization@boost@@YAPAVCContact@@PAD@Z ; boost::serialization::factory<CContact,3>
PUBLIC	??$factory@VCContact@@$03@serialization@boost@@YAPAVCContact@@PAD@Z ; boost::serialization::factory<CContact,4>
PUBLIC	??1?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::~singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >
PUBLIC	??0?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@QAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >
PUBLIC	??_G?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@UAEPAXI@Z ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`scalar deleting destructor'
PUBLIC	??__Ft@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ@YAXXZ ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance'::`2'::`dynamic atexit destructor for 't''
PUBLIC	??$guid@VCContact@@@serialization@boost@@YAPBDXZ ; boost::serialization::guid<CContact>
PUBLIC	??$smart_cast_reference@AAVtext_oarchive@archive@boost@@Vbasic_oarchive@detail@23@@serialization@boost@@YAAAVtext_oarchive@archive@1@AAVbasic_oarchive@detail@31@@Z ; boost::serialization::smart_cast_reference<boost::archive::text_oarchive &,boost::archive::detail::basic_oarchive>
PUBLIC	??$serialize_adl@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z ; boost::serialization::serialize_adl<boost::archive::text_oarchive,CContact>
PUBLIC	?use@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@@Z ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::use
PUBLIC	?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance
PUBLIC	?get_const_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@SAABV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_const_instance
PUBLIC	?destroy@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@EBEXPAX@Z ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::destroy
PUBLIC	??0?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@IAE@XZ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::iserializer<boost::archive::text_iarchive,CContact>
PUBLIC	?load_object_data@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBEXAAVbasic_iarchive@234@PAXI@Z ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::load_object_data
PUBLIC	?class_info@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::class_info
PUBLIC	?tracking@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NI@Z ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::tracking
PUBLIC	?version@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE?AVversion_type@34@XZ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::version
PUBLIC	?is_polymorphic@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::is_polymorphic
PUBLIC	??1?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAE@XZ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::~iserializer<boost::archive::text_iarchive,CContact>
PUBLIC	??_G?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAEPAXI@Z ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`scalar deleting destructor'
PUBLIC	??$save@Utracking_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUtracking_type@12@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::tracking_type>
PUBLIC	??$save@Vclass_id_reference_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::class_id_reference_type>
PUBLIC	??$save@Vclass_id_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_type@12@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::class_id_type>
PUBLIC	??$save@Vobject_reference_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_reference_type@12@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::object_reference_type>
PUBLIC	??$load_primitive@Vtext_iarchive@archive@boost@@Utracking_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAUtracking_type@12@@Z ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::tracking_type>
PUBLIC	??$load_primitive@Vtext_iarchive@archive@boost@@Vclass_id_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVclass_id_type@12@@Z ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::class_id_type>
PUBLIC	??$load_primitive@Vtext_iarchive@archive@boost@@Vobject_id_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVobject_id_type@12@@Z ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::object_id_type>
PUBLIC	??$load_primitive@Vtext_iarchive@archive@boost@@Vversion_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVversion_type@12@@Z ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::version_type>
PUBLIC	??$save_primitive@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::object_id_type>
PUBLIC	?call@?$guid_impl@VCContact@@@ext@serialization@boost@@SAPBDXZ ; boost::serialization::ext::guid_impl<CContact>::call
PUBLIC	??$save@I@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABI@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<unsigned int>
PUBLIC	??1?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::~singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >
PUBLIC	??0?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >
PUBLIC	??_G?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`scalar deleting destructor'
PUBLIC	??__Ft@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ@YAXXZ ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance'::`2'::`dynamic atexit destructor for 't''
PUBLIC	??$cast@Vbasic_oarchive@detail@archive@boost@@@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@3@AAVbasic_oarchive@detail@53@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::cast<boost::archive::detail::basic_oarchive>
PUBLIC	??$serialize@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z ; boost::serialization::serialize<boost::archive::text_oarchive,CContact>
PUBLIC	??$smart_cast_reference@AAVtext_iarchive@archive@boost@@Vbasic_iarchive@detail@23@@serialization@boost@@YAAAVtext_iarchive@archive@1@AAVbasic_iarchive@detail@31@@Z ; boost::serialization::smart_cast_reference<boost::archive::text_iarchive &,boost::archive::detail::basic_iarchive>
PUBLIC	??$serialize_adl@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z ; boost::serialization::serialize_adl<boost::archive::text_iarchive,CContact>
PUBLIC	??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::tracking_type>
PUBLIC	??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::class_id_reference_type>
PUBLIC	??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::class_id_type>
PUBLIC	??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::object_reference_type>
PUBLIC	??$load@Utracking_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::archive::tracking_type>
PUBLIC	??$load@Vclass_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::archive::class_id_type>
PUBLIC	??$load@Vobject_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::archive::object_id_type>
PUBLIC	??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::object_id_type>
PUBLIC	??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<unsigned int>
PUBLIC	??$load@I@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAI@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<unsigned int>
PUBLIC	??$cast@Vbasic_oarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@4@AAVbasic_oarchive@detail@64@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::polymorphic::cast<boost::archive::detail::basic_oarchive>
PUBLIC	??$serialize@Vtext_oarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@AAVCContact@@I@Z ; boost::serialization::access::serialize<boost::archive::text_oarchive,CContact>
PUBLIC	??$cast@Vbasic_iarchive@detail@archive@boost@@@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@3@AAVbasic_iarchive@detail@53@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::cast<boost::archive::detail::basic_iarchive>
PUBLIC	??$serialize@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z ; boost::serialization::serialize<boost::archive::text_iarchive,CContact>
PUBLIC	??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::tracking_type>
PUBLIC	??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::class_id_reference_type>
PUBLIC	??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::class_id_type>
PUBLIC	??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::object_reference_type>
PUBLIC	??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::archive::tracking_type>
PUBLIC	??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::archive::class_id_type>
PUBLIC	??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::archive::object_id_type>
PUBLIC	??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
PUBLIC	??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<unsigned int>
PUBLIC	??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<unsigned int>
PUBLIC	??$cast@Vbasic_oarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@5@AAVbasic_oarchive@detail@75@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::polymorphic::cross::cast<boost::archive::detail::basic_oarchive>
PUBLIC	??$serialize@Vtext_oarchive@archive@boost@@@CContact@@IAEXAAVtext_oarchive@archive@boost@@I@Z ; CContact::serialize<boost::archive::text_oarchive>
PUBLIC	??$cast@Vbasic_iarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@4@AAVbasic_iarchive@detail@64@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::polymorphic::cast<boost::archive::detail::basic_iarchive>
PUBLIC	??$serialize@Vtext_iarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAVCContact@@I@Z ; boost::serialization::access::serialize<boost::archive::text_iarchive,CContact>
PUBLIC	??$split_member@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z ; boost::serialization::split_member<boost::archive::text_oarchive,CContact>
PUBLIC	??$cast@Vbasic_iarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@5@AAVbasic_iarchive@detail@75@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::polymorphic::cross::cast<boost::archive::detail::basic_iarchive>
PUBLIC	??$serialize@Vtext_iarchive@archive@boost@@@CContact@@IAEXAAVtext_iarchive@archive@boost@@I@Z ; CContact::serialize<boost::archive::text_iarchive>
PUBLIC	?invoke@?$member_saver@Vtext_oarchive@archive@boost@@VCContact@@@detail@serialization@boost@@SAXAAVtext_oarchive@archive@4@ABVCContact@@I@Z ; boost::serialization::detail::member_saver<boost::archive::text_oarchive,CContact>::invoke
PUBLIC	??$split_member@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z ; boost::serialization::split_member<boost::archive::text_iarchive,CContact>
PUBLIC	??$member_save@Vtext_oarchive@archive@boost@@$$CBVCContact@@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@ABVCContact@@I@Z ; boost::serialization::access::member_save<boost::archive::text_oarchive,CContact const >
PUBLIC	?invoke@?$member_loader@Vtext_iarchive@archive@boost@@VCContact@@@detail@serialization@boost@@SAXAAVtext_iarchive@archive@4@AAVCContact@@I@Z ; boost::serialization::detail::member_loader<boost::archive::text_iarchive,CContact>::invoke
PUBLIC	??$member_load@Vtext_iarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAVCContact@@I@Z ; boost::serialization::access::member_load<boost::archive::text_iarchive,CContact>
PUBLIC	??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z ; std::basic_ifstream<char,std::char_traits<char> >::`vector deleting destructor'
PUBLIC	??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z ; std::basic_ofstream<char,std::char_traits<char> >::`vector deleting destructor'
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception?$AA@	; `string'
PUBLIC	??_C@_1JA@MHADJNIL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA	; `std::_Allocate'::`1'::__LINE__Var
PUBLIC	??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@ ; `string'
PUBLIC	??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@	; `string'
PUBLIC	??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_09GLJCAGLP@_Ptr?5?$CB?$DN?50?$AA@		; `string'
PUBLIC	??_C@_1CC@GKJLLHIM@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA ; `std::_Deallocate'::`1'::__LINE__Var
PUBLIC	??_C@_0BN@HMCJOMKN@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5_Sz?$AA@ ; `string'
PUBLIC	??_C@_1EI@MLOBABC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AA_?$AAS?$AAz?$AA?$CC?$AA?5?$AA?$CG@ ; `string'
PUBLIC	??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@ ; `string'
PUBLIC	??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@ ; `string'
PUBLIC	??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@ ; `string'
PUBLIC	??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@ ; `string'
PUBLIC	??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@ ; `string'
PUBLIC	??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ ; `string'
PUBLIC	??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@ ; `string'
PUBLIC	??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@ ; `string'
PUBLIC	??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@ ; `string'
PUBLIC	?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
PUBLIC	??_7bad_cast@std@@6B@				; std::bad_cast::`vftable'
PUBLIC	??_C@_08EPJLHIJG@bad?5cast?$AA@			; `string'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_7_Ref_count_base@std@@6B@			; std::_Ref_count_base::`vftable'
PUBLIC	??_7_Pad@std@@6B@				; std::_Pad::`vftable'
PUBLIC	??_C@_1IO@DBEBMPEE@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ ; `string'
PUBLIC	??_C@_1GE@MNCNLAH@?$AAt?$AA_?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAb?$AAo?$AAo?$AAs?$AAt?$AA?3?$AA?3?$AAi?$AAn?$AAt?$AAe?$AAg?$AAe?$AAr?$AA_?$AAt?$AAr?$AAa?$AAi?$AAt?$AAs?$AA?$DM?$AAb?$AAa?$AAs?$AAe@ ; `string'
PUBLIC	??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ ; `string'
PUBLIC	??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ ; `string'
PUBLIC	??_7?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@6B@ ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`vftable'
PUBLIC	??_7?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@6B@ ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`vftable'
PUBLIC	??_7text_iarchive@archive@boost@@6B@		; boost::archive::text_iarchive::`vftable'
PUBLIC	??_7?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@6B@ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`vftable'
PUBLIC	??_7?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@6B@ ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`vftable'
PUBLIC	??_7text_oarchive@archive@boost@@6B@		; boost::archive::text_oarchive::`vftable'
PUBLIC	??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`vftable'
PUBLIC	??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ofstream<char,std::char_traits<char> >::`vftable'
PUBLIC	??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@ ; std::basic_ofstream<char,std::char_traits<char> >::`vbtable'
PUBLIC	??_C@_0O@MIMFNFBN@Companies?4txt?$AA@		; `string'
PUBLIC	??_C@_0L@GLLABICK@People?4txt?$AA@		; `string'
PUBLIC	??_C@_07EEOOECP@CPerson?$AA@			; `string'
PUBLIC	??_C@_08FGJDGFCJ@CCompany?$AA@			; `string'
PUBLIC	??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ifstream<char,std::char_traits<char> >::`vftable'
PUBLIC	??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@ ; std::basic_ifstream<char,std::char_traits<char> >::`vbtable'
PUBLIC	??_C@_0M@IKMOJNDM@contactList?$AA@		; `string'
PUBLIC	??_C@_0CG@MNNPHAFE@You?5don?8t?5have?5any?5contacts?5to?5r@ ; `string'
PUBLIC	??_C@_05PDJBBECF@pause?$AA@			; `string'
PUBLIC	??_C@_0FJ@GBCKFMI@Enter?5the?5name?5of?5the?5person?5or?5@ ; `string'
PUBLIC	??_C@_0DA@FLPABHKE@That?5contact?5was?5not?5found?5in?5yo@ ; `string'
PUBLIC	??_C@_0CP@GFNLJBBP@The?5contact?5was?5removed?5from?5you@ ; `string'
PUBLIC	??_C@_0CE@GGNPEDJA@You?5don?8t?5have?5any?5contacts?5to?5e@ ; `string'
PUBLIC	??_C@_0EB@GEBCPOHK@Enter?5the?5name?5of?5the?5person?5or?5@ ; `string'
PUBLIC	??_C@_03LCPHGAHP@cls?$AA@			; `string'
PUBLIC	??_C@_0DP@KOHCCCHA@Enter?5the?5first?5name?0?5last?5name?0@ ; `string'
PUBLIC	??_C@_0BA@KBDJCHMC@Found?5contacts?3?$AA@	; `string'
PUBLIC	??_C@_04OHJIHAFH@None?$AA@			; `string'
PUBLIC	??_C@_0CH@MIDKGGF@You?5don?8t?5have?5any?5contacts?5to?5d@ ; `string'
PUBLIC	??_C@_08HDBDJBNL@Goodbye?$CB?$AA@		; `string'
PUBLIC	??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@ ; `string'
PUBLIC	??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ ; `string'
PUBLIC	??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ ; `string'
PUBLIC	??_C@_1BAM@EPPOFCB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ ; `string'
PUBLIC	??_C@_1BAK@LJFLLKPP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@ ; `string'
PUBLIC	??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BAE@OFDFOOPB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
PUBLIC	??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@ ; `string'
PUBLIC	??_C@_1BAM@HBINONGC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_1EG@CNCHLAOB@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ ; `string'
PUBLIC	??_C@_1MG@GDGHDIKC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	__TI2?AVbad_cast@std@@
PUBLIC	__CTA2?AVbad_cast@std@@
PUBLIC	??_R0?AVbad_cast@std@@@8			; std::bad_cast `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
PUBLIC	??_7?$_Ref_count_obj@VCCompany@@@std@@6B@	; std::_Ref_count_obj<CCompany>::`vftable'
PUBLIC	??_7?$_Ref_count_obj@VCPerson@@@std@@6B@	; std::_Ref_count_obj<CPerson>::`vftable'
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::codecvt<char,char,_Mbstatet> >::_Psave
PUBLIC	??_7?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@6B@ ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`vftable'
PUBLIC	?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@A ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::instance
PUBLIC	??_7?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`vftable'
PUBLIC	?m_is_destroyed@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@2_NA ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::m_is_destroyed
PUBLIC	??_7?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`vftable'
PUBLIC	?t@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@634@A ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance'::`2'::t
PUBLIC	?$TSS0@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_oarchive::erializer,CContact>
PUBLIC	??_C@_1JC@GIHFICPP@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ ; `string'
PUBLIC	??_C@_1GC@KKEDEOBO@?$AA?$CB?$AA?5?$AAd?$AAe?$AAt?$AAa?$AAi?$AAl?$AA?3?$AA?3?$AAs?$AAi?$AAn?$AAg?$AAl?$AAe?$AAt?$AAo?$AAn?$AA_?$AAw?$AAr?$AAa?$AAp?$AAp?$AAe?$AAr?$AA?$DM?$AA?5?$AAT?$AA?5?$AA?$DO@ ; `string'
PUBLIC	?instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@VCContact@@@23@A ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::instance
PUBLIC	??_7?$extended_type_info_typeid@VCContact@@@serialization@boost@@6B@ ; boost::serialization::extended_type_info_typeid<CContact>::`vftable'
PUBLIC	??_C@_1LC@ILBAKICL@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ ; `string'
PUBLIC	??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@ ; `string'
PUBLIC	?m_is_destroyed@?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@2_NA ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::m_is_destroyed
PUBLIC	??_7?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`vftable'
PUBLIC	?t@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4V?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@34@A ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance'::`2'::t
PUBLIC	?$TSS0@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::et_instance,signed char,VCContact::tended_type_info_typeid>
PUBLIC	??_R0?AVCContact@@@8				; CContact `RTTI Type Descriptor'
PUBLIC	?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@A ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::instance
PUBLIC	??_7?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`vftable'
PUBLIC	??_C@_1IO@PLLJMNBK@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ ; `string'
PUBLIC	?m_is_destroyed@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@2_NA ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::m_is_destroyed
PUBLIC	??_7?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`vftable'
PUBLIC	?t@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@634@A ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance'::`2'::t
PUBLIC	?$TSS0@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_iarchive::erializer,CContact>
PUBLIC	__TI2?AVarchive_exception@archive@boost@@
PUBLIC	__CTA2?AVarchive_exception@archive@boost@@
PUBLIC	??_R0?AVarchive_exception@archive@boost@@@8	; boost::archive::archive_exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVarchive_exception@archive@boost@@@8??0archive_exception@archive@boost@@QAE@ABV012@@Z152
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12004
PUBLIC	??_R0?AVbasic_oarchive@detail@archive@boost@@@8	; boost::archive::detail::basic_oarchive `RTTI Type Descriptor'
PUBLIC	??_R0?AVtext_oarchive@archive@boost@@@8		; boost::archive::text_oarchive `RTTI Type Descriptor'
PUBLIC	??_R0?AVbasic_iarchive@detail@archive@boost@@@8	; boost::archive::detail::basic_iarchive `RTTI Type Descriptor'
PUBLIC	??_R0?AVtext_iarchive@archive@boost@@@8		; boost::archive::text_iarchive `RTTI Type Descriptor'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_filebuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ifstream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVios_base@std@@@8			; std::ios_base `RTTI Type Descriptor'
PUBLIC	??_R3ios_base@std@@8				; std::ios_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ios_base@std@@8				; std::ios_base::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AV?$_Iosb@H@std@@@8			; std::_Iosb<int> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@A@3EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
PUBLIC	??_R17A@3EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
PUBLIC	??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ofstream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R4bad_cast@std@@6B@				; std::bad_cast::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_cast@std@@8				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_cast@std@@8				; std::bad_cast::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_cast@std@@8			; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Ref_count_base@std@@6B@			; std::_Ref_count_base::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Ref_count_base@std@@@8			; std::_Ref_count_base `RTTI Type Descriptor'
PUBLIC	??_R3_Ref_count_base@std@@8			; std::_Ref_count_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Ref_count_base@std@@8			; std::_Ref_count_base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Ref_count_base@std@@8		; std::_Ref_count_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Pad@std@@6B@				; std::_Pad::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Pad@std@@@8				; std::_Pad `RTTI Type Descriptor'
PUBLIC	??_R3_Pad@std@@8				; std::_Pad::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Pad@std@@8				; std::_Pad::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Pad@std@@8			; std::_Pad::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EN@noncopyable@noncopyable_@boost@@8	; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (4,-1,0,77)'
PUBLIC	??_R0?AVnoncopyable@noncopyable_@boost@@@8	; boost::noncopyable_::noncopyable `RTTI Type Descriptor'
PUBLIC	??_R3noncopyable@noncopyable_@boost@@8		; boost::noncopyable_::noncopyable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2noncopyable@noncopyable_@boost@@8		; boost::noncopyable_::noncopyable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@noncopyable@noncopyable_@boost@@8	; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4text_iarchive@archive@boost@@6B@		; boost::archive::text_iarchive::`RTTI Complete Object Locator'
PUBLIC	??_R3text_iarchive@archive@boost@@8		; boost::archive::text_iarchive::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2text_iarchive@archive@boost@@8		; boost::archive::text_iarchive::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@text_iarchive@archive@boost@@8	; boost::archive::text_iarchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8 ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@@8 ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive> `RTTI Type Descriptor'
PUBLIC	??_R3?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8 ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8 ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`RTTI Base Class Array'
PUBLIC	??_R1BI@?0A@EA@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (24,-1,0,64)'
PUBLIC	??_R0?AV?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@@8 ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8 ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@@8 ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive> `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8 ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8 ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@@8 ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive> `RTTI Type Descriptor'
PUBLIC	??_R3?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@basic_iarchive@detail@archive@boost@@8 ; boost::archive::detail::basic_iarchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3basic_iarchive@detail@archive@boost@@8	; boost::archive::detail::basic_iarchive::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2basic_iarchive@detail@archive@boost@@8	; boost::archive::detail::basic_iarchive::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@helper_collection@detail@archive@boost@@8 ; boost::archive::detail::helper_collection::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVhelper_collection@detail@archive@boost@@@8 ; boost::archive::detail::helper_collection `RTTI Type Descriptor'
PUBLIC	??_R3helper_collection@detail@archive@boost@@8	; boost::archive::detail::helper_collection::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2helper_collection@detail@archive@boost@@8	; boost::archive::detail::helper_collection::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@helper_collection@detail@archive@boost@@8 ; boost::archive::detail::helper_collection::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BI@?0A@EA@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Descriptor at (24,-1,0,64)'
PUBLIC	??_R0?AV?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@@8 ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive> `RTTI Type Descriptor'
PUBLIC	??_R3?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@6B@ ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@6B@ ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`RTTI Complete Object Locator'
PUBLIC	??_R4text_oarchive@archive@boost@@6B@		; boost::archive::text_oarchive::`RTTI Complete Object Locator'
PUBLIC	??_R3text_oarchive@archive@boost@@8		; boost::archive::text_oarchive::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2text_oarchive@archive@boost@@8		; boost::archive::text_oarchive::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@text_oarchive@archive@boost@@8	; boost::archive::text_oarchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8 ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@@8 ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive> `RTTI Type Descriptor'
PUBLIC	??_R3?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8 ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8 ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`RTTI Base Class Array'
PUBLIC	??_R1CA@?0A@EA@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (32,-1,0,64)'
PUBLIC	??_R0?AV?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@@8 ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8 ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@@8 ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive> `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8 ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8 ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@@8 ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive> `RTTI Type Descriptor'
PUBLIC	??_R3?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@basic_oarchive@detail@archive@boost@@8 ; boost::archive::detail::basic_oarchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3basic_oarchive@detail@archive@boost@@8	; boost::archive::detail::basic_oarchive::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2basic_oarchive@detail@archive@boost@@8	; boost::archive::detail::basic_oarchive::`RTTI Base Class Array'
PUBLIC	??_R1BI@?0A@EA@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Descriptor at (24,-1,0,64)'
PUBLIC	??_R0?AV?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@@8 ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive> `RTTI Type Descriptor'
PUBLIC	??_R3?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@6B@ ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@6B@ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$_Ref_count_obj@VCCompany@@@std@@6B@	; std::_Ref_count_obj<CCompany>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$_Ref_count_obj@VCCompany@@@std@@@8	; std::_Ref_count_obj<CCompany> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Ref_count_obj@VCCompany@@@std@@8	; std::_Ref_count_obj<CCompany>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Ref_count_obj@VCCompany@@@std@@8	; std::_Ref_count_obj<CCompany>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Ref_count_obj@VCCompany@@@std@@8 ; std::_Ref_count_obj<CCompany>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$_Ref_count_obj@VCPerson@@@std@@6B@	; std::_Ref_count_obj<CPerson>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$_Ref_count_obj@VCPerson@@@std@@@8	; std::_Ref_count_obj<CPerson> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Ref_count_obj@VCPerson@@@std@@8		; std::_Ref_count_obj<CPerson>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Ref_count_obj@VCPerson@@@std@@8		; std::_Ref_count_obj<CPerson>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Ref_count_obj@VCPerson@@@std@@8 ; std::_Ref_count_obj<CPerson>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@6B@ ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@@8 ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > `RTTI Type Descriptor'
PUBLIC	??_R3?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8 ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8 ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8 ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@8 ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> `RTTI Type Descriptor'
PUBLIC	??_R3?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@basic_oserializer@detail@archive@boost@@8 ; boost::archive::detail::basic_oserializer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVbasic_oserializer@detail@archive@boost@@@8 ; boost::archive::detail::basic_oserializer `RTTI Type Descriptor'
PUBLIC	??_R3basic_oserializer@detail@archive@boost@@8	; boost::archive::detail::basic_oserializer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2basic_oserializer@detail@archive@boost@@8	; boost::archive::detail::basic_oserializer::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@basic_serializer@detail@archive@boost@@8 ; boost::archive::detail::basic_serializer::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVbasic_serializer@detail@archive@boost@@@8 ; boost::archive::detail::basic_serializer `RTTI Type Descriptor'
PUBLIC	??_R3basic_serializer@detail@archive@boost@@8	; boost::archive::detail::basic_serializer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2basic_serializer@detail@archive@boost@@8	; boost::archive::detail::basic_serializer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@basic_serializer@detail@archive@boost@@8 ; boost::archive::detail::basic_serializer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EN@noncopyable@noncopyable_@boost@@8	; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (0,-1,0,77)'
PUBLIC	??_R4?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> > `RTTI Type Descriptor'
PUBLIC	??_R3?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$extended_type_info_typeid@VCContact@@@serialization@boost@@6B@ ; boost::serialization::extended_type_info_typeid<CContact>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$extended_type_info_typeid@VCContact@@@serialization@boost@@@8 ; boost::serialization::extended_type_info_typeid<CContact> `RTTI Type Descriptor'
PUBLIC	??_R3?$extended_type_info_typeid@VCContact@@@serialization@boost@@8 ; boost::serialization::extended_type_info_typeid<CContact>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$extended_type_info_typeid@VCContact@@@serialization@boost@@8 ; boost::serialization::extended_type_info_typeid<CContact>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$extended_type_info_typeid@VCContact@@@serialization@boost@@8 ; boost::serialization::extended_type_info_typeid<CContact>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@extended_type_info_typeid_0@typeid_system@serialization@boost@@8 ; boost::serialization::typeid_system::extended_type_info_typeid_0::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVextended_type_info_typeid_0@typeid_system@serialization@boost@@@8 ; boost::serialization::typeid_system::extended_type_info_typeid_0 `RTTI Type Descriptor'
PUBLIC	??_R3extended_type_info_typeid_0@typeid_system@serialization@boost@@8 ; boost::serialization::typeid_system::extended_type_info_typeid_0::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2extended_type_info_typeid_0@typeid_system@serialization@boost@@8 ; boost::serialization::typeid_system::extended_type_info_typeid_0::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@extended_type_info@serialization@boost@@8 ; boost::serialization::extended_type_info::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVextended_type_info@serialization@boost@@@8 ; boost::serialization::extended_type_info `RTTI Type Descriptor'
PUBLIC	??_R3extended_type_info@serialization@boost@@8	; boost::serialization::extended_type_info::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2extended_type_info@serialization@boost@@8	; boost::serialization::extended_type_info::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EP@noncopyable@noncopyable_@boost@@8	; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (4,-1,0,79)'
PUBLIC	??_R1BB@?0A@EA@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8 ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Base Class Descriptor at (17,-1,0,64)'
PUBLIC	??_R0?AV?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@@8 ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> > `RTTI Type Descriptor'
PUBLIC	??_R3?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8 ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8 ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8 ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@singleton_module@serialization@boost@@8 ; boost::serialization::singleton_module::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVsingleton_module@serialization@boost@@@8 ; boost::serialization::singleton_module `RTTI Type Descriptor'
PUBLIC	??_R3singleton_module@serialization@boost@@8	; boost::serialization::singleton_module::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2singleton_module@serialization@boost@@8	; boost::serialization::singleton_module::`RTTI Base Class Array'
PUBLIC	??_R1BB@?0A@EA@singleton_module@serialization@boost@@8 ; boost::serialization::singleton_module::`RTTI Base Class Descriptor at (17,-1,0,64)'
PUBLIC	??_R1BB@?0A@EC@noncopyable@noncopyable_@boost@@8 ; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (17,-1,0,66)'
PUBLIC	??_R4?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@@8 ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> > `RTTI Type Descriptor'
PUBLIC	??_R3?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@8 ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> `RTTI Type Descriptor'
PUBLIC	??_R3?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@basic_iserializer@detail@archive@boost@@8 ; boost::archive::detail::basic_iserializer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVbasic_iserializer@detail@archive@boost@@@8 ; boost::archive::detail::basic_iserializer `RTTI Type Descriptor'
PUBLIC	??_R3basic_iserializer@detail@archive@boost@@8	; boost::archive::detail::basic_iserializer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2basic_iserializer@detail@archive@boost@@8	; boost::archive::detail::basic_iserializer::`RTTI Base Class Array'
PUBLIC	??_R4?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> > `RTTI Type Descriptor'
PUBLIC	??_R3?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___invalid_parameter_noinfo:PROC
EXTRN	__imp_??0_Lockit@std@@QAE@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:PROC
EXTRN	__imp___errno:PROC
EXTRN	__imp__system:PROC
EXTRN	__imp___get_stream_buffer_pointers:PROC
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fflush:PROC
EXTRN	__imp__fgetc:PROC
EXTRN	__imp__fgetpos:PROC
EXTRN	__imp__fputc:PROC
EXTRN	__imp__fsetpos:PROC
EXTRN	__imp___fseeki64:PROC
EXTRN	__imp__fwrite:PROC
EXTRN	__imp__setvbuf:PROC
EXTRN	__imp__ungetc:PROC
EXTRN	__imp___lock_file:PROC
EXTRN	__imp___unlock_file:PROC
EXTRN	_memcmp:PROC
EXTRN	_memcpy:PROC
EXTRN	__imp__memmove:PROC
EXTRN	_memset:PROC
EXTRN	_strlen:PROC
EXTRN	__imp_?uncaught_exception@std@@YA_NXZ:PROC
EXTRN	__imp__terminate:PROC
EXTRN	__imp____std_exception_copy:PROC
EXTRN	__imp____std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	__imp_?_Debug_message@std@@YAXPB_W0I@Z:PROC
EXTRN	__imp_?_Xbad_alloc@std@@YAXXZ:PROC
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
EXTRN	__imp____std_type_info_name:PROC
EXTRN	??_Ebad_cast@std@@UAEPAXI@Z:PROC		; std::bad_cast::`vector deleting destructor'
EXTRN	?_Facet_Register@std@@YAXPAV_Facet_base@1@@Z:PROC ; std::_Facet_Register
EXTRN	__imp_??Bid@locale@std@@QAEIXZ:PROC
EXTRN	__imp_?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ:PROC
EXTRN	__imp_?always_noconv@codecvt_base@std@@QBE_NXZ:PROC
EXTRN	__imp_?in@?$codecvt@DDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PBD1AAPBDPAD3AAPAD@Z:PROC
EXTRN	__imp_?out@?$codecvt@DDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PBD1AAPBDPAD3AAPAD@Z:PROC
EXTRN	__imp_?unshift@?$codecvt@DDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PAD1AAPAD@Z:PROC
EXTRN	__imp_?_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z:PROC
EXTRN	__imp_??Bios_base@std@@QBE_NXZ:PROC
EXTRN	__imp_?good@ios_base@std@@QBE_NXZ:PROC
EXTRN	__imp_?fail@ios_base@std@@QBE_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QBEHXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QAEHH@Z:PROC
EXTRN	__imp_?precision@ios_base@std@@QBE_JXZ:PROC
EXTRN	__imp_?precision@ios_base@std@@QAE_J_J@Z:PROC
EXTRN	__imp_?width@ios_base@std@@QBE_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QAE_J_J@Z:PROC
EXTRN	__imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QBE?AVlocale@2@XZ:PROC
EXTRN	__imp_?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ:PROC
EXTRN	__imp_?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ:PROC
EXTRN	__imp_?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z:PROC
EXTRN	__imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z:PROC
EXTRN	__imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?_Gndec@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ:PROC
EXTRN	__imp_?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ:PROC
EXTRN	__imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ:PROC
EXTRN	__imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ:PROC
EXTRN	__imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAPAD0PAH001@Z:PROC
EXTRN	__imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ:PROC
EXTRN	__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z:PROC
EXTRN	__imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z:PROC
EXTRN	__imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_N@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z:PROC
EXTRN	__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ:PROC
EXTRN	__imp_??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z:PROC
EXTRN	__imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z:PROC
EXTRN	__imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_N@Z:PROC
EXTRN	__imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAF@Z:PROC
EXTRN	__imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAI@Z:PROC
EXTRN	??_E_Ref_count_base@std@@UAEPAXI@Z:PROC		; std::_Ref_count_base::`vector deleting destructor'
EXTRN	__imp___Thrd_start:PROC
EXTRN	__imp___Thrd_join:PROC
EXTRN	__imp___Thrd_id:PROC
EXTRN	__imp___Mtx_init:PROC
EXTRN	__imp___Mtx_destroy:PROC
EXTRN	__imp___Mtx_lock:PROC
EXTRN	__imp___Mtx_unlock:PROC
EXTRN	__imp___Cnd_init:PROC
EXTRN	__imp___Cnd_destroy:PROC
EXTRN	__imp___Cnd_wait:PROC
EXTRN	__imp___Cnd_signal:PROC
EXTRN	__imp___Cnd_do_broadcast_at_thread_exit:PROC
EXTRN	__imp_?_Throw_C_error@std@@YAXH@Z:PROC
EXTRN	__imp_?_Throw_Cpp_error@std@@YAXH@Z:PROC
EXTRN	??0CUserInterface@@QAE@XZ:PROC			; CUserInterface::CUserInterface
EXTRN	??1CUserInterface@@QAE@XZ:PROC			; CUserInterface::~CUserInterface
EXTRN	?displayStartScreen@CUserInterface@@QAEXXZ:PROC	; CUserInterface::displayStartScreen
EXTRN	?displayMainMenu@CUserInterface@@QAEDXZ:PROC	; CUserInterface::displayMainMenu
EXTRN	?displayContactChoiceMenu@CUserInterface@@QAEDXZ:PROC ; CUserInterface::displayContactChoiceMenu
EXTRN	?getUserInput@CUserInterface@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z:PROC ; CUserInterface::getUserInput
EXTRN	__imp___wassert:PROC
EXTRN	??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z:PROC ; boost::archive::archive_exception::archive_exception
EXTRN	??0archive_exception@archive@boost@@QAE@ABV012@@Z:PROC ; boost::archive::archive_exception::archive_exception
EXTRN	??1archive_exception@archive@boost@@UAE@XZ:PROC	; boost::archive::archive_exception::~archive_exception
EXTRN	??1basic_iarchive@detail@archive@boost@@UAE@XZ:PROC ; boost::archive::detail::basic_iarchive::~basic_iarchive
EXTRN	?load_object@basic_iarchive@detail@archive@boost@@QAEXPAXABVbasic_iserializer@234@@Z:PROC ; boost::archive::detail::basic_iarchive::load_object
EXTRN	?key_unregister@extended_type_info@serialization@boost@@IBEXXZ:PROC ; boost::serialization::extended_type_info::key_unregister
EXTRN	?key_register@extended_type_info@serialization@boost@@IBEXXZ:PROC ; boost::serialization::extended_type_info::key_register
EXTRN	??0extended_type_info_typeid_0@typeid_system@serialization@boost@@IAE@PBD@Z:PROC ; boost::serialization::typeid_system::extended_type_info_typeid_0::extended_type_info_typeid_0
EXTRN	??1extended_type_info_typeid_0@typeid_system@serialization@boost@@MAE@XZ:PROC ; boost::serialization::typeid_system::extended_type_info_typeid_0::~extended_type_info_typeid_0
EXTRN	?type_register@extended_type_info_typeid_0@typeid_system@serialization@boost@@IAEXABVtype_info@@@Z:PROC ; boost::serialization::typeid_system::extended_type_info_typeid_0::type_register
EXTRN	?type_unregister@extended_type_info_typeid_0@typeid_system@serialization@boost@@IAEXXZ:PROC ; boost::serialization::typeid_system::extended_type_info_typeid_0::type_unregister
EXTRN	?is_less_than@extended_type_info_typeid_0@typeid_system@serialization@boost@@UBE_NABVextended_type_info@34@@Z:PROC ; boost::serialization::typeid_system::extended_type_info_typeid_0::is_less_than
EXTRN	?is_equal@extended_type_info_typeid_0@typeid_system@serialization@boost@@UBE_NABVextended_type_info@34@@Z:PROC ; boost::serialization::typeid_system::extended_type_info_typeid_0::is_equal
EXTRN	??0basic_iserializer@detail@archive@boost@@IAE@ABVextended_type_info@serialization@3@@Z:PROC ; boost::archive::detail::basic_iserializer::basic_iserializer
EXTRN	??1basic_iserializer@detail@archive@boost@@MAE@XZ:PROC ; boost::archive::detail::basic_iserializer::~basic_iserializer
EXTRN	??1?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAE@XZ:PROC ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::~basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >
EXTRN	??_E?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@MAEPAXI@Z:PROC ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`vector deleting destructor'
EXTRN	?load_override@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUclass_name_type@23@@Z:PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override
EXTRN	??0?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAE@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@I@Z:PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::text_iarchive_impl<boost::archive::text_iarchive>
EXTRN	??_E?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@MAEPAXI@Z:PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`vector deleting destructor'
EXTRN	??_Etext_iarchive@archive@boost@@UAEPAXI@Z:PROC	; boost::archive::text_iarchive::`vector deleting destructor'
EXTRN	??1basic_oarchive@detail@archive@boost@@MAE@XZ:PROC ; boost::archive::detail::basic_oarchive::~basic_oarchive
EXTRN	?save_object@basic_oarchive@detail@archive@boost@@QAEXPBXABVbasic_oserializer@234@@Z:PROC ; boost::archive::detail::basic_oarchive::save_object
EXTRN	?end_preamble@basic_oarchive@detail@archive@boost@@QAEXXZ:PROC ; boost::archive::detail::basic_oarchive::end_preamble
EXTRN	??0basic_oserializer@detail@archive@boost@@IAE@ABVextended_type_info@serialization@3@@Z:PROC ; boost::archive::detail::basic_oserializer::basic_oserializer
EXTRN	??1basic_oserializer@detail@archive@boost@@MAE@XZ:PROC ; boost::archive::detail::basic_oserializer::~basic_oserializer
EXTRN	??1?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAE@XZ:PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::~basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >
EXTRN	?newtoken@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ:PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::newtoken
EXTRN	??_E?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@MAEPAXI@Z:PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`vector deleting destructor'
EXTRN	?save@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save
EXTRN	??0?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAE@AAV?$basic_ostream@DU?$char_traits@D@std@@@std@@I@Z:PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::text_oarchive_impl<boost::archive::text_oarchive>
EXTRN	??_E?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@MAEPAXI@Z:PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`vector deleting destructor'
EXTRN	??_Etext_oarchive@archive@boost@@UAEPAXI@Z:PROC	; boost::archive::text_oarchive::`vector deleting destructor'
EXTRN	??0CCompany@@QAE@XZ:PROC			; CCompany::CCompany
EXTRN	??0CCompany@@QAE@_N@Z:PROC			; CCompany::CCompany
EXTRN	??0CPerson@@QAE@XZ:PROC				; CPerson::CPerson
EXTRN	??0CPerson@@QAE@_N@Z:PROC			; CPerson::CPerson
EXTRN	__imp_?_Fiopen@std@@YAPAU_iobuf@@PBDHH@Z:PROC
EXTRN	??_E?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_filebuf<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_ofstream<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_ifstream<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??_E?$_Ref_count_obj@VCCompany@@@std@@UAEPAXI@Z:PROC ; std::_Ref_count_obj<CCompany>::`vector deleting destructor'
EXTRN	??_E?$_Ref_count_obj@VCPerson@@@std@@UAEPAXI@Z:PROC ; std::_Ref_count_obj<CPerson>::`vector deleting destructor'
EXTRN	??_E?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAEPAXI@Z:PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`vector deleting destructor'
EXTRN	??_E?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z:PROC ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`vector deleting destructor'
EXTRN	??_E?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAEPAXI@Z:PROC ; boost::serialization::extended_type_info_typeid<CContact>::`vector deleting destructor'
EXTRN	??_E?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@UAEPAXI@Z:PROC ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`vector deleting destructor'
EXTRN	??_E?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAEPAXI@Z:PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`vector deleting destructor'
EXTRN	??_E?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z:PROC ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`vector deleting destructor'
EXTRN	?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc
EXTRN	?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn
EXTRN	?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsputn
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___RTDynamicCast:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	__imp_?_BADOFF@std@@3_JB:QWORD
EXTRN	?__type_info_root_node@@3U__type_info_node@@A:BYTE ; __type_info_root_node
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__imp_?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A:DWORD
EXTRN	__imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	___security_cookie:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A
_BSS	SEGMENT
?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A DQ 01H DUP (?) ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PBVfacet@locale@2@B
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PBVfacet@locale@2@B DD 01H DUP (?) ; std::_Facetptr<std::codecvt<char,char,_Mbstatet> >::_Psave
_BSS	ENDS
;	COMDAT ?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@A
_BSS	SEGMENT
?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@A DD 01H DUP (?) ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::instance
_BSS	ENDS
;	COMDAT ?m_is_destroyed@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@2_NA
_BSS	SEGMENT
?m_is_destroyed@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@2_NA DB 01H DUP (?) ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::m_is_destroyed
_BSS	ENDS
;	COMDAT ?t@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@634@A
_BSS	SEGMENT
?t@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@634@A DB 0cH DUP (?) ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance'::`2'::t
_BSS	ENDS
;	COMDAT ?$TSS0@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_oarchive::erializer,CContact>
_BSS	ENDS
;	COMDAT ?instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@VCContact@@@23@A
_BSS	SEGMENT
?instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@VCContact@@@23@A DD 01H DUP (?) ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::instance
_BSS	ENDS
;	COMDAT ?m_is_destroyed@?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@2_NA
_BSS	SEGMENT
?m_is_destroyed@?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@2_NA DB 01H DUP (?) ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::m_is_destroyed
_BSS	ENDS
;	COMDAT ?t@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4V?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@34@A
_BSS	SEGMENT
?t@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4V?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@34@A DB 014H DUP (?) ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance'::`2'::t
_BSS	ENDS
;	COMDAT ?$TSS0@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::et_instance,signed char,VCContact::tended_type_info_typeid>
_BSS	ENDS
;	COMDAT ?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@A
_BSS	SEGMENT
?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@A DD 01H DUP (?) ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::instance
_BSS	ENDS
;	COMDAT ?m_is_destroyed@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@2_NA
_BSS	SEGMENT
?m_is_destroyed@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@2_NA DB 01H DUP (?) ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::m_is_destroyed
_BSS	ENDS
;	COMDAT ?t@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@634@A
_BSS	SEGMENT
?t@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@634@A DB 0cH DUP (?) ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance'::`2'::t
_BSS	ENDS
;	COMDAT ?$TSS0@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_iarchive::erializer,CContact>
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??instance$initializer$@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0P6AXXZA@@3P6AXXZA DD FLAT:??__E?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@A@@YAXXZ ; ??instance$initializer$@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 DD FLAT:??_R0?AV?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R2?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 DD FLAT:??_R1A@?0A@EA@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@basic_iserializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EA@basic_serializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R3?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 DD 00H ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@@8
data$r	SEGMENT
??_R0?AV?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$singleton_wrapper@V?$iserializer@Vtext_iarchive@ar'
	DB	'chive@boost@@VCContact@@@detail@archive@boost@@@detail@serial'
	DB	'ization@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@
rdata$r	SEGMENT
??_R4?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@ DD 00H ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@@8
	DD	FLAT:??_R3?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2basic_iserializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2basic_iserializer@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@basic_iserializer@detail@archive@boost@@8 ; boost::archive::detail::basic_iserializer::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@basic_serializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3basic_iserializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3basic_iserializer@detail@archive@boost@@8 DD 00H	; boost::archive::detail::basic_iserializer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2basic_iserializer@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbasic_iserializer@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AVbasic_iserializer@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::basic_iserializer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbasic_iserializer@detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@basic_iserializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@basic_iserializer@detail@archive@boost@@8 DD FLAT:??_R0?AVbasic_iserializer@detail@archive@boost@@@8 ; boost::archive::detail::basic_iserializer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3basic_iserializer@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 DD FLAT:??_R0?AV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@8 ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@basic_iserializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EA@basic_serializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 DD 00H ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$iserializer@Vtext_iarchive@archive@boost@@VCContac'
	DB	't@@@detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@
rdata$r	SEGMENT
??_R4?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@ DD 00H ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@8
	DD	FLAT:??_R3?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8 DD FLAT:??_R0?AV?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@@8 ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	07H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R2?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8 DD FLAT:??_R1A@?0A@EA@?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$extended_type_info_typeid@VCContact@@@serialization@boost@@8
	DD	FLAT:??_R1A@?0A@EA@extended_type_info_typeid_0@typeid_system@serialization@boost@@8
	DD	FLAT:??_R1A@?0A@EA@extended_type_info@serialization@boost@@8
	DD	FLAT:??_R13?0A@EP@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R1BB@?0A@EA@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8
	DD	FLAT:??_R1BB@?0A@EA@singleton_module@serialization@boost@@8
	DD	FLAT:??_R1BB@?0A@EC@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R3?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8 DD 00H ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	08H
	DD	FLAT:??_R2?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@@8
data$r	SEGMENT
??_R0?AV?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$singleton_wrapper@V?$extended_type_info_typeid@VCC'
	DB	'ontact@@@serialization@boost@@@detail@serialization@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@6B@
rdata$r	SEGMENT
??_R4?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@6B@ DD 00H ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@@8
	DD	FLAT:??_R3?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1BB@?0A@EC@noncopyable@noncopyable_@boost@@8
rdata$r	SEGMENT
??_R1BB@?0A@EC@noncopyable@noncopyable_@boost@@8 DD FLAT:??_R0?AVnoncopyable@noncopyable_@boost@@@8 ; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (17,-1,0,66)'
	DD	00H
	DD	011H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1BB@?0A@EA@singleton_module@serialization@boost@@8
rdata$r	SEGMENT
??_R1BB@?0A@EA@singleton_module@serialization@boost@@8 DD FLAT:??_R0?AVsingleton_module@serialization@boost@@@8 ; boost::serialization::singleton_module::`RTTI Base Class Descriptor at (17,-1,0,64)'
	DD	01H
	DD	011H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3singleton_module@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2singleton_module@serialization@boost@@8
rdata$r	SEGMENT
??_R2singleton_module@serialization@boost@@8 DD FLAT:??_R1A@?0A@EA@singleton_module@serialization@boost@@8 ; boost::serialization::singleton_module::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3singleton_module@serialization@boost@@8
rdata$r	SEGMENT
??_R3singleton_module@serialization@boost@@8 DD 00H	; boost::serialization::singleton_module::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2singleton_module@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVsingleton_module@serialization@boost@@@8
data$r	SEGMENT
??_R0?AVsingleton_module@serialization@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::serialization::singleton_module `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVsingleton_module@serialization@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@singleton_module@serialization@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@singleton_module@serialization@boost@@8 DD FLAT:??_R0?AVsingleton_module@serialization@boost@@@8 ; boost::serialization::singleton_module::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3singleton_module@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8 DD FLAT:??_R0?AV?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@@8 ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8
rdata$r	SEGMENT
??_R2?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8 DD FLAT:??_R1A@?0A@EA@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8 ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@singleton_module@serialization@boost@@8
	DD	FLAT:??_R1A@?0A@EA@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8
rdata$r	SEGMENT
??_R3?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8 DD 00H ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@@8
data$r	SEGMENT
??_R0?AV?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$singleton@V?$extended_type_info_typeid@VCContact@@'
	DB	'@serialization@boost@@@serialization@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1BB@?0A@EA@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8
rdata$r	SEGMENT
??_R1BB@?0A@EA@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8 DD FLAT:??_R0?AV?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@@8 ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::`RTTI Base Class Descriptor at (17,-1,0,64)'
	DD	02H
	DD	011H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EP@noncopyable@noncopyable_@boost@@8
rdata$r	SEGMENT
??_R13?0A@EP@noncopyable@noncopyable_@boost@@8 DD FLAT:??_R0?AVnoncopyable@noncopyable_@boost@@@8 ; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (4,-1,0,79)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	04fH
	DD	FLAT:??_R3noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2extended_type_info@serialization@boost@@8
rdata$r	SEGMENT
??_R2extended_type_info@serialization@boost@@8 DD FLAT:??_R1A@?0A@EA@extended_type_info@serialization@boost@@8 ; boost::serialization::extended_type_info::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3extended_type_info@serialization@boost@@8
rdata$r	SEGMENT
??_R3extended_type_info@serialization@boost@@8 DD 00H	; boost::serialization::extended_type_info::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2extended_type_info@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVextended_type_info@serialization@boost@@@8
data$r	SEGMENT
??_R0?AVextended_type_info@serialization@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::serialization::extended_type_info `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVextended_type_info@serialization@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@extended_type_info@serialization@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@extended_type_info@serialization@boost@@8 DD FLAT:??_R0?AVextended_type_info@serialization@boost@@@8 ; boost::serialization::extended_type_info::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3extended_type_info@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2extended_type_info_typeid_0@typeid_system@serialization@boost@@8
rdata$r	SEGMENT
??_R2extended_type_info_typeid_0@typeid_system@serialization@boost@@8 DD FLAT:??_R1A@?0A@EA@extended_type_info_typeid_0@typeid_system@serialization@boost@@8 ; boost::serialization::typeid_system::extended_type_info_typeid_0::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@extended_type_info@serialization@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3extended_type_info_typeid_0@typeid_system@serialization@boost@@8
rdata$r	SEGMENT
??_R3extended_type_info_typeid_0@typeid_system@serialization@boost@@8 DD 00H ; boost::serialization::typeid_system::extended_type_info_typeid_0::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2extended_type_info_typeid_0@typeid_system@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVextended_type_info_typeid_0@typeid_system@serialization@boost@@@8
data$r	SEGMENT
??_R0?AVextended_type_info_typeid_0@typeid_system@serialization@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::serialization::typeid_system::extended_type_info_typeid_0 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVextended_type_info_typeid_0@typeid_system@serializat'
	DB	'ion@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@extended_type_info_typeid_0@typeid_system@serialization@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@extended_type_info_typeid_0@typeid_system@serialization@boost@@8 DD FLAT:??_R0?AVextended_type_info_typeid_0@typeid_system@serialization@boost@@@8 ; boost::serialization::typeid_system::extended_type_info_typeid_0::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3extended_type_info_typeid_0@typeid_system@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$extended_type_info_typeid@VCContact@@@serialization@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$extended_type_info_typeid@VCContact@@@serialization@boost@@8 DD FLAT:??_R0?AV?$extended_type_info_typeid@VCContact@@@serialization@boost@@@8 ; boost::serialization::extended_type_info_typeid<CContact>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	06H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$extended_type_info_typeid@VCContact@@@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$extended_type_info_typeid@VCContact@@@serialization@boost@@8
rdata$r	SEGMENT
??_R2?$extended_type_info_typeid@VCContact@@@serialization@boost@@8 DD FLAT:??_R1A@?0A@EA@?$extended_type_info_typeid@VCContact@@@serialization@boost@@8 ; boost::serialization::extended_type_info_typeid<CContact>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@extended_type_info_typeid_0@typeid_system@serialization@boost@@8
	DD	FLAT:??_R1A@?0A@EA@extended_type_info@serialization@boost@@8
	DD	FLAT:??_R13?0A@EP@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R1BB@?0A@EA@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@8
	DD	FLAT:??_R1BB@?0A@EA@singleton_module@serialization@boost@@8
	DD	FLAT:??_R1BB@?0A@EC@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$extended_type_info_typeid@VCContact@@@serialization@boost@@8
rdata$r	SEGMENT
??_R3?$extended_type_info_typeid@VCContact@@@serialization@boost@@8 DD 00H ; boost::serialization::extended_type_info_typeid<CContact>::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	07H
	DD	FLAT:??_R2?$extended_type_info_typeid@VCContact@@@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$extended_type_info_typeid@VCContact@@@serialization@boost@@@8
data$r	SEGMENT
??_R0?AV?$extended_type_info_typeid@VCContact@@@serialization@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::serialization::extended_type_info_typeid<CContact> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$extended_type_info_typeid@VCContact@@@serializatio'
	DB	'n@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$extended_type_info_typeid@VCContact@@@serialization@boost@@6B@
rdata$r	SEGMENT
??_R4?$extended_type_info_typeid@VCContact@@@serialization@boost@@6B@ DD 00H ; boost::serialization::extended_type_info_typeid<CContact>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$extended_type_info_typeid@VCContact@@@serialization@boost@@@8
	DD	FLAT:??_R3?$extended_type_info_typeid@VCContact@@@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 DD FLAT:??_R0?AV?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R2?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 DD FLAT:??_R1A@?0A@EA@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@basic_oserializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EA@basic_serializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	SEGMENT
??_R3?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8 DD 00H ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@@8
data$r	SEGMENT
??_R0?AV?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$singleton_wrapper@V?$oserializer@Vtext_oarchive@ar'
	DB	'chive@boost@@VCContact@@@detail@archive@boost@@@detail@serial'
	DB	'ization@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@
rdata$r	SEGMENT
??_R4?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@ DD 00H ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@@8
	DD	FLAT:??_R3?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EN@noncopyable@noncopyable_@boost@@8 DD FLAT:??_R0?AVnoncopyable@noncopyable_@boost@@@8 ; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (0,-1,0,77)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@basic_serializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@basic_serializer@detail@archive@boost@@8 DD FLAT:??_R0?AVbasic_serializer@detail@archive@boost@@@8 ; boost::archive::detail::basic_serializer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3basic_serializer@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2basic_serializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2basic_serializer@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@basic_serializer@detail@archive@boost@@8 ; boost::archive::detail::basic_serializer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3basic_serializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3basic_serializer@detail@archive@boost@@8 DD 00H	; boost::archive::detail::basic_serializer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2basic_serializer@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbasic_serializer@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AVbasic_serializer@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::basic_serializer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbasic_serializer@detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R13?0A@EA@basic_serializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R13?0A@EA@basic_serializer@detail@archive@boost@@8 DD FLAT:??_R0?AVbasic_serializer@detail@archive@boost@@@8 ; boost::archive::detail::basic_serializer::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3basic_serializer@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2basic_oserializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2basic_oserializer@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@basic_oserializer@detail@archive@boost@@8 ; boost::archive::detail::basic_oserializer::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@basic_serializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3basic_oserializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3basic_oserializer@detail@archive@boost@@8 DD 00H	; boost::archive::detail::basic_oserializer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2basic_oserializer@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbasic_oserializer@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AVbasic_oserializer@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::basic_oserializer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbasic_oserializer@detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@basic_oserializer@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@basic_oserializer@detail@archive@boost@@8 DD FLAT:??_R0?AVbasic_oserializer@detail@archive@boost@@@8 ; boost::archive::detail::basic_oserializer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3basic_oserializer@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 DD FLAT:??_R0?AV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@8 ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@basic_oserializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EA@basic_serializer@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8 DD 00H ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$oserializer@Vtext_oarchive@archive@boost@@VCContac'
	DB	't@@@detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@
rdata$r	SEGMENT
??_R4?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@ DD 00H ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@8
	DD	FLAT:??_R3?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8 DD FLAT:??_R0?AV?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@@8 ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8
rdata$r	SEGMENT
??_R2?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8 ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Pad@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8
rdata$r	SEGMENT
??_R3?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8 DD 00H ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@'
	DB	'V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCC'
	DB	'ontact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@st'
	DB	'd@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?'
	DB	'$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allo'
	DB	'cator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_stri'
	DB	'ng@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@st'
	DB	'd@@@2@@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@6B@ DD 00H ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@@8
	DD	FLAT:??_R3?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Ref_count_obj@VCPerson@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Ref_count_obj@VCPerson@@@std@@8 DD FLAT:??_R0?AV?$_Ref_count_obj@VCPerson@@@std@@@8 ; std::_Ref_count_obj<CPerson>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Ref_count_obj@VCPerson@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Ref_count_obj@VCPerson@@@std@@8
rdata$r	SEGMENT
??_R2?$_Ref_count_obj@VCPerson@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Ref_count_obj@VCPerson@@@std@@8 ; std::_Ref_count_obj<CPerson>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Ref_count_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Ref_count_obj@VCPerson@@@std@@8
rdata$r	SEGMENT
??_R3?$_Ref_count_obj@VCPerson@@@std@@8 DD 00H		; std::_Ref_count_obj<CPerson>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Ref_count_obj@VCPerson@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Ref_count_obj@VCPerson@@@std@@@8
data$r	SEGMENT
??_R0?AV?$_Ref_count_obj@VCPerson@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Ref_count_obj<CPerson> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Ref_count_obj@VCPerson@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$_Ref_count_obj@VCPerson@@@std@@6B@
rdata$r	SEGMENT
??_R4?$_Ref_count_obj@VCPerson@@@std@@6B@ DD 00H	; std::_Ref_count_obj<CPerson>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Ref_count_obj@VCPerson@@@std@@@8
	DD	FLAT:??_R3?$_Ref_count_obj@VCPerson@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Ref_count_obj@VCCompany@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Ref_count_obj@VCCompany@@@std@@8 DD FLAT:??_R0?AV?$_Ref_count_obj@VCCompany@@@std@@@8 ; std::_Ref_count_obj<CCompany>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Ref_count_obj@VCCompany@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Ref_count_obj@VCCompany@@@std@@8
rdata$r	SEGMENT
??_R2?$_Ref_count_obj@VCCompany@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Ref_count_obj@VCCompany@@@std@@8 ; std::_Ref_count_obj<CCompany>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Ref_count_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Ref_count_obj@VCCompany@@@std@@8
rdata$r	SEGMENT
??_R3?$_Ref_count_obj@VCCompany@@@std@@8 DD 00H		; std::_Ref_count_obj<CCompany>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Ref_count_obj@VCCompany@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Ref_count_obj@VCCompany@@@std@@@8
data$r	SEGMENT
??_R0?AV?$_Ref_count_obj@VCCompany@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Ref_count_obj<CCompany> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Ref_count_obj@VCCompany@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$_Ref_count_obj@VCCompany@@@std@@6B@
rdata$r	SEGMENT
??_R4?$_Ref_count_obj@VCCompany@@@std@@6B@ DD 00H	; std::_Ref_count_obj<CCompany>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Ref_count_obj@VCCompany@@@std@@@8
	DD	FLAT:??_R3?$_Ref_count_obj@VCCompany@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R4?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@6B@
rdata$r	SEGMENT
??_R4?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@6B@ DD 00H ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@@8
	DD	FLAT:??_R3?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R4?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@6B@
rdata$r	SEGMENT
??_R4?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@6B@ DD 00H ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@@8
	DD	FLAT:??_R3?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 DD FLAT:??_R0?AV?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@@8 ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 DD 00H ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$interface_oarchive@Vtext_oarchive@archive@boost@@@'
	DB	'detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1BI@?0A@EA@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1BI@?0A@EA@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 DD FLAT:??_R0?AV?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@@8 ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Descriptor at (24,-1,0,64)'
	DD	00H
	DD	018H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2basic_oarchive@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2basic_oarchive@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@basic_oarchive@detail@archive@boost@@8 ; boost::archive::detail::basic_oarchive::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R13?0A@EA@helper_collection@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3basic_oarchive@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3basic_oarchive@detail@archive@boost@@8 DD 00H	; boost::archive::detail::basic_oarchive::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2basic_oarchive@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@basic_oarchive@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@basic_oarchive@detail@archive@boost@@8 DD FLAT:??_R0?AVbasic_oarchive@detail@archive@boost@@@8 ; boost::archive::detail::basic_oarchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3basic_oarchive@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@basic_oarchive@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R13?0A@EA@helper_collection@detail@archive@boost@@8
	DD	FLAT:??_R1BI@?0A@EA@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 DD 00H ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$common_oarchive@Vtext_oarchive@archive@boost@@@det'
	DB	'ail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8 DD FLAT:??_R0?AV?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@@8 ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8
rdata$r	SEGMENT
??_R2?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8 ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@basic_oarchive@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R13?0A@EA@helper_collection@detail@archive@boost@@8
	DD	FLAT:??_R1BI@?0A@EA@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8
rdata$r	SEGMENT
??_R3?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8 DD 00H ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	06H
	DD	FLAT:??_R2?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_text_oarchive@Vtext_oarchive@archive@boost@@'
	DB	'@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8 DD FLAT:??_R0?AV?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@@8 ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 DD FLAT:??_R0?AV?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@@8 ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	SEGMENT
??_R2?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	SEGMENT
??_R3?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 DD 00H ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_text_oprimitive@V?$basic_ostream@DU?$char_tr'
	DB	'aits@D@std@@@std@@@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1CA@?0A@EA@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	SEGMENT
??_R1CA@?0A@EA@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 DD FLAT:??_R0?AV?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@@8 ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (32,-1,0,64)'
	DD	00H
	DD	020H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8
rdata$r	SEGMENT
??_R2?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8 ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`RTTI Base Class Array'
	DD	FLAT:??_R1CA@?0A@EA@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@basic_oarchive@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R13?0A@EA@helper_collection@detail@archive@boost@@8
	DD	FLAT:??_R1BI@?0A@EA@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8
rdata$r	SEGMENT
??_R3?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8 DD 00H ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	08H
	DD	FLAT:??_R2?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@'
	DB	'archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8 DD FLAT:??_R0?AV?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@@8 ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	07H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@text_oarchive@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@text_oarchive@archive@boost@@8 DD FLAT:??_R0?AVtext_oarchive@archive@boost@@@8 ; boost::archive::text_oarchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3text_oarchive@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2text_oarchive@archive@boost@@8
rdata$r	SEGMENT
??_R2text_oarchive@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@text_oarchive@archive@boost@@8 ; boost::archive::text_oarchive::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@8
	DD	FLAT:??_R1CA@?0A@EA@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@basic_oarchive@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R13?0A@EA@helper_collection@detail@archive@boost@@8
	DD	FLAT:??_R1BI@?0A@EA@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3text_oarchive@archive@boost@@8
rdata$r	SEGMENT
??_R3text_oarchive@archive@boost@@8 DD 00H		; boost::archive::text_oarchive::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	09H
	DD	FLAT:??_R2text_oarchive@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R4text_oarchive@archive@boost@@6B@
rdata$r	SEGMENT
??_R4text_oarchive@archive@boost@@6B@ DD 00H		; boost::archive::text_oarchive::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVtext_oarchive@archive@boost@@@8
	DD	FLAT:??_R3text_oarchive@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R4?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@6B@
rdata$r	SEGMENT
??_R4?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@6B@ DD 00H ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@@8
	DD	FLAT:??_R3?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R4?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@6B@
rdata$r	SEGMENT
??_R4?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@6B@ DD 00H ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@@8
	DD	FLAT:??_R3?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 DD FLAT:??_R0?AV?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@@8 ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 DD 00H ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$interface_iarchive@Vtext_iarchive@archive@boost@@@'
	DB	'detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1BI@?0A@EA@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1BI@?0A@EA@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 DD FLAT:??_R0?AV?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@@8 ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Descriptor at (24,-1,0,64)'
	DD	00H
	DD	018H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@helper_collection@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@helper_collection@detail@archive@boost@@8 DD FLAT:??_R0?AVhelper_collection@detail@archive@boost@@@8 ; boost::archive::detail::helper_collection::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3helper_collection@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2helper_collection@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2helper_collection@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@helper_collection@detail@archive@boost@@8 ; boost::archive::detail::helper_collection::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3helper_collection@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3helper_collection@detail@archive@boost@@8 DD 00H	; boost::archive::detail::helper_collection::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2helper_collection@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVhelper_collection@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AVhelper_collection@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::helper_collection `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVhelper_collection@detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R13?0A@EA@helper_collection@detail@archive@boost@@8
rdata$r	SEGMENT
??_R13?0A@EA@helper_collection@detail@archive@boost@@8 DD FLAT:??_R0?AVhelper_collection@detail@archive@boost@@@8 ; boost::archive::detail::helper_collection::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3helper_collection@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2basic_iarchive@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2basic_iarchive@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@basic_iarchive@detail@archive@boost@@8 ; boost::archive::detail::basic_iarchive::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R13?0A@EA@helper_collection@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3basic_iarchive@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3basic_iarchive@detail@archive@boost@@8 DD 00H	; boost::archive::detail::basic_iarchive::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2basic_iarchive@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@basic_iarchive@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@basic_iarchive@detail@archive@boost@@8 DD FLAT:??_R0?AVbasic_iarchive@detail@archive@boost@@@8 ; boost::archive::detail::basic_iarchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3basic_iarchive@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R2?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@basic_iarchive@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R13?0A@EA@helper_collection@detail@archive@boost@@8
	DD	FLAT:??_R1BI@?0A@EA@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R3?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 DD 00H ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$common_iarchive@Vtext_iarchive@archive@boost@@@det'
	DB	'ail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8 DD FLAT:??_R0?AV?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@@8 ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8
rdata$r	SEGMENT
??_R2?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8 ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@basic_iarchive@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R13?0A@EA@helper_collection@detail@archive@boost@@8
	DD	FLAT:??_R1BI@?0A@EA@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8
rdata$r	SEGMENT
??_R3?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8 DD 00H ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	06H
	DD	FLAT:??_R2?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_text_iarchive@Vtext_iarchive@archive@boost@@'
	DB	'@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8 DD FLAT:??_R0?AV?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@@8 ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 DD FLAT:??_R0?AV?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@@8 ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	SEGMENT
??_R2?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	SEGMENT
??_R3?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 DD 00H ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_text_iprimitive@V?$basic_istream@DU?$char_tr'
	DB	'aits@D@std@@@std@@@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1BI@?0A@EA@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	SEGMENT
??_R1BI@?0A@EA@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8 DD FLAT:??_R0?AV?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@@8 ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (24,-1,0,64)'
	DD	00H
	DD	018H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8
rdata$r	SEGMENT
??_R2?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8 ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`RTTI Base Class Array'
	DD	FLAT:??_R1BI@?0A@EA@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@basic_iarchive@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R13?0A@EA@helper_collection@detail@archive@boost@@8
	DD	FLAT:??_R1BI@?0A@EA@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8
rdata$r	SEGMENT
??_R3?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8 DD 00H ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	08H
	DD	FLAT:??_R2?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@@8
data$r	SEGMENT
??_R0?AV?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@'
	DB	'archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8 DD FLAT:??_R0?AV?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@@8 ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	07H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@text_iarchive@archive@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@text_iarchive@archive@boost@@8 DD FLAT:??_R0?AVtext_iarchive@archive@boost@@@8 ; boost::archive::text_iarchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3text_iarchive@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2text_iarchive@archive@boost@@8
rdata$r	SEGMENT
??_R2text_iarchive@archive@boost@@8 DD FLAT:??_R1A@?0A@EA@text_iarchive@archive@boost@@8 ; boost::archive::text_iarchive::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@8
	DD	FLAT:??_R1BI@?0A@EA@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
	DD	FLAT:??_R1A@?0A@EA@basic_iarchive@detail@archive@boost@@8
	DD	FLAT:??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
	DD	FLAT:??_R13?0A@EA@helper_collection@detail@archive@boost@@8
	DD	FLAT:??_R1BI@?0A@EA@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3text_iarchive@archive@boost@@8
rdata$r	SEGMENT
??_R3text_iarchive@archive@boost@@8 DD 00H		; boost::archive::text_iarchive::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	09H
	DD	FLAT:??_R2text_iarchive@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R4text_iarchive@archive@boost@@6B@
rdata$r	SEGMENT
??_R4text_iarchive@archive@boost@@6B@ DD 00H		; boost::archive::text_iarchive::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVtext_iarchive@archive@boost@@@8
	DD	FLAT:??_R3text_iarchive@archive@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@noncopyable@noncopyable_@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@noncopyable@noncopyable_@boost@@8 DD FLAT:??_R0?AVnoncopyable@noncopyable_@boost@@@8 ; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2noncopyable@noncopyable_@boost@@8
rdata$r	SEGMENT
??_R2noncopyable@noncopyable_@boost@@8 DD FLAT:??_R1A@?0A@EA@noncopyable@noncopyable_@boost@@8 ; boost::noncopyable_::noncopyable::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3noncopyable@noncopyable_@boost@@8
rdata$r	SEGMENT
??_R3noncopyable@noncopyable_@boost@@8 DD 00H		; boost::noncopyable_::noncopyable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVnoncopyable@noncopyable_@boost@@@8
data$r	SEGMENT
??_R0?AVnoncopyable@noncopyable_@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::noncopyable_::noncopyable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVnoncopyable@noncopyable_@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R13?0A@EN@noncopyable@noncopyable_@boost@@8
rdata$r	SEGMENT
??_R13?0A@EN@noncopyable@noncopyable_@boost@@8 DD FLAT:??_R0?AVnoncopyable@noncopyable_@boost@@@8 ; boost::noncopyable_::noncopyable::`RTTI Base Class Descriptor at (4,-1,0,77)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3noncopyable@noncopyable_@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Pad@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Pad@std@@8 DD FLAT:??_R0?AV_Pad@std@@@8	; std::_Pad::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Pad@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Pad@std@@8
rdata$r	SEGMENT
??_R2_Pad@std@@8 DD FLAT:??_R1A@?0A@EA@_Pad@std@@8	; std::_Pad::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3_Pad@std@@8
rdata$r	SEGMENT
??_R3_Pad@std@@8 DD 00H					; std::_Pad::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2_Pad@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Pad@std@@@8
data$r	SEGMENT
??_R0?AV_Pad@std@@@8 DD FLAT:??_7type_info@@6B@		; std::_Pad `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Pad@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Pad@std@@6B@
rdata$r	SEGMENT
??_R4_Pad@std@@6B@ DD 00H				; std::_Pad::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Pad@std@@@8
	DD	FLAT:??_R3_Pad@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Ref_count_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Ref_count_base@std@@8 DD FLAT:??_R0?AV_Ref_count_base@std@@@8 ; std::_Ref_count_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Ref_count_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Ref_count_base@std@@8
rdata$r	SEGMENT
??_R2_Ref_count_base@std@@8 DD FLAT:??_R1A@?0A@EA@_Ref_count_base@std@@8 ; std::_Ref_count_base::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3_Ref_count_base@std@@8
rdata$r	SEGMENT
??_R3_Ref_count_base@std@@8 DD 00H			; std::_Ref_count_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2_Ref_count_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Ref_count_base@std@@@8
data$r	SEGMENT
??_R0?AV_Ref_count_base@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Ref_count_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Ref_count_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Ref_count_base@std@@6B@
rdata$r	SEGMENT
??_R4_Ref_count_base@std@@6B@ DD 00H			; std::_Ref_count_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Ref_count_base@std@@@8
	DD	FLAT:??_R3_Ref_count_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_cast@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_cast@std@@8 DD FLAT:??_R0?AVbad_cast@std@@@8 ; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_cast@std@@8
rdata$r	SEGMENT
??_R2bad_cast@std@@8 DD FLAT:??_R1A@?0A@EA@bad_cast@std@@8 ; std::bad_cast::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_cast@std@@8
rdata$r	SEGMENT
??_R3bad_cast@std@@8 DD 00H				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_cast@std@@6B@
rdata$r	SEGMENT
??_R4bad_cast@std@@6B@ DD 00H				; std::bad_cast::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_cast@std@@@8
	DD	FLAT:??_R3bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ofstream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	068H
	DD	04H
	DD	FLAT:??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17A@3EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
	DD	00H
	DD	08H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@A@3EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
	DD	01H
	DD	00H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R2?$_Iosb@H@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Iosb@H@std@@8 ; std::_Iosb<int>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R3?$_Iosb@H@std@@8 DD 00H				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Iosb@H@std@@@8
data$r	SEGMENT
??_R0?AV?$_Iosb@H@std@@@8 DD FLAT:??_7type_info@@6B@	; std::_Iosb<int> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Iosb@H@std@@', 00H
data$r	ENDS
;	COMDAT ??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ios_base@std@@8
rdata$r	SEGMENT
??_R2ios_base@std@@8 DD FLAT:??_R1A@?0A@EA@ios_base@std@@8 ; std::ios_base::`RTTI Base Class Array'
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ios_base@std@@8
rdata$r	SEGMENT
??_R3ios_base@std@@8 DD 00H				; std::ios_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVios_base@std@@@8
data$r	SEGMENT
??_R0?AVios_base@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ios_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVios_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ios_base@std@@8
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD 00H	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_istream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ifstream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	070H
	DD	04H
	DD	FLAT:??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_filebuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVtext_iarchive@archive@boost@@@8
data$r	SEGMENT
??_R0?AVtext_iarchive@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::text_iarchive `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVtext_iarchive@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVbasic_iarchive@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AVbasic_iarchive@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::basic_iarchive `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbasic_iarchive@detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVtext_oarchive@archive@boost@@@8
data$r	SEGMENT
??_R0?AVtext_oarchive@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::text_oarchive `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVtext_oarchive@archive@boost@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVbasic_oarchive@detail@archive@boost@@@8
data$r	SEGMENT
??_R0?AVbasic_oarchive@detail@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::detail::basic_oarchive `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbasic_oarchive@detail@archive@boost@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12004
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12004 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	00H
	DD	04H
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVarchive_exception@archive@boost@@@8??0archive_exception@archive@boost@@QAE@ABV012@@Z152
xdata$x	SEGMENT
__CT??_R0?AVarchive_exception@archive@boost@@@8??0archive_exception@archive@boost@@QAE@ABV012@@Z152 DD 04H
	DD	FLAT:??_R0?AVarchive_exception@archive@boost@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	098H
	DD	FLAT:??0archive_exception@archive@boost@@QAE@ABV012@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVarchive_exception@archive@boost@@@8
data$r	SEGMENT
??_R0?AVarchive_exception@archive@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::archive::archive_exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVarchive_exception@archive@boost@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVarchive_exception@archive@boost@@
xdata$x	SEGMENT
__CTA2?AVarchive_exception@archive@boost@@ DD 02H
	DD	FLAT:__CT??_R0?AVarchive_exception@archive@boost@@@8??0archive_exception@archive@boost@@QAE@ABV012@@Z152
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12004
xdata$x	ENDS
;	COMDAT __TI2?AVarchive_exception@archive@boost@@
xdata$x	SEGMENT
__TI2?AVarchive_exception@archive@boost@@ DD 00H
	DD	FLAT:??_Darchive_exception@archive@boost@@QAEXXZ
	DD	00H
	DD	FLAT:__CTA2?AVarchive_exception@archive@boost@@
xdata$x	ENDS
;	COMDAT ??_7?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@
CONST	SEGMENT
??_7?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@ DD FLAT:??_R4?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`vftable'
	DD	FLAT:??_E?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z
	DD	FLAT:?load_object_data@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBEXAAVbasic_iarchive@234@PAXI@Z
	DD	FLAT:?class_info@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ
	DD	FLAT:?tracking@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NI@Z
	DD	FLAT:?version@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE?AVversion_type@34@XZ
	DD	FLAT:?is_polymorphic@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ
	DD	FLAT:?destroy@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@EBEXPAX@Z
CONST	ENDS
;	COMDAT ??_C@_1IO@PLLJMNBK@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
CONST	SEGMENT
??_C@_1IO@PLLJMNBK@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ DB 's'
	DB	00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'p', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i'
	DB	00H, 'c', 00H, '\', 00H, 'd', 00H, 'o', 00H, 'c', 00H, 'u', 00H
	DB	'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '_', 00H, '1', 00H
	DB	'_', 00H, '6', 00H, '3', 00H, '_', 00H, '0', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '\', 00H, 's', 00H
	DB	'e', 00H, 'r', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '\', 00H
	DB	'f', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 'y'
	DB	00H, '.', 00H, 'h', 00H, 'p', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@
CONST	SEGMENT
??_7?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@ DD FLAT:??_R4?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`vftable'
	DD	FLAT:??_E?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAEPAXI@Z
	DD	FLAT:?load_object_data@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBEXAAVbasic_iarchive@234@PAXI@Z
	DD	FLAT:?class_info@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ
	DD	FLAT:?tracking@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NI@Z
	DD	FLAT:?version@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE?AVversion_type@34@XZ
	DD	FLAT:?is_polymorphic@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ
	DD	FLAT:?destroy@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@EBEXPAX@Z
CONST	ENDS
;	COMDAT ??_R0?AVCContact@@@8
data$r	SEGMENT
??_R0?AVCContact@@@8 DD FLAT:??_7type_info@@6B@		; CContact `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCContact@@', 00H
data$r	ENDS
;	COMDAT ??_7?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@6B@
CONST	SEGMENT
??_7?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@6B@ DD FLAT:??_R4?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`vftable'
	DD	FLAT:?is_less_than@extended_type_info_typeid_0@typeid_system@serialization@boost@@UBE_NABVextended_type_info@34@@Z
	DD	FLAT:?is_equal@extended_type_info_typeid_0@typeid_system@serialization@boost@@UBE_NABVextended_type_info@34@@Z
	DD	FLAT:??_E?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@UAEPAXI@Z
	DD	FLAT:?get_debug_info@extended_type_info_typeid_0@typeid_system@serialization@boost@@EBEPBDXZ
	DD	FLAT:?construct@?$extended_type_info_typeid@VCContact@@@serialization@boost@@UBAPAXIZZ
	DD	FLAT:?destroy@?$extended_type_info_typeid@VCContact@@@serialization@boost@@UBEXQBX@Z
CONST	ENDS
;	COMDAT ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@ DB 'f', 00H, 'a', 00H
	DB	'l', 00H, 's', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1LC@ILBAKICL@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
CONST	SEGMENT
??_C@_1LC@ILBAKICL@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ DB 's'
	DB	00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'p', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i'
	DB	00H, 'c', 00H, '\', 00H, 'd', 00H, 'o', 00H, 'c', 00H, 'u', 00H
	DB	'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '_', 00H, '1', 00H
	DB	'_', 00H, '6', 00H, '3', 00H, '_', 00H, '0', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '\', 00H, 's', 00H
	DB	'e', 00H, 'r', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '\', 00H
	DB	'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e'
	DB	00H, 'd', 00H, '_', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H
	DB	'_', 00H, 'i', 00H, 'n', 00H, 'f', 00H, 'o', 00H, '_', 00H, 't'
	DB	00H, 'y', 00H, 'p', 00H, 'e', 00H, 'i', 00H, 'd', 00H, '.', 00H
	DB	'h', 00H, 'p', 00H, 'p', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_7?$extended_type_info_typeid@VCContact@@@serialization@boost@@6B@
CONST	SEGMENT
??_7?$extended_type_info_typeid@VCContact@@@serialization@boost@@6B@ DD FLAT:??_R4?$extended_type_info_typeid@VCContact@@@serialization@boost@@6B@ ; boost::serialization::extended_type_info_typeid<CContact>::`vftable'
	DD	FLAT:?is_less_than@extended_type_info_typeid_0@typeid_system@serialization@boost@@UBE_NABVextended_type_info@34@@Z
	DD	FLAT:?is_equal@extended_type_info_typeid_0@typeid_system@serialization@boost@@UBE_NABVextended_type_info@34@@Z
	DD	FLAT:??_E?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAEPAXI@Z
	DD	FLAT:?get_debug_info@extended_type_info_typeid_0@typeid_system@serialization@boost@@EBEPBDXZ
	DD	FLAT:?construct@?$extended_type_info_typeid@VCContact@@@serialization@boost@@UBAPAXIZZ
	DD	FLAT:?destroy@?$extended_type_info_typeid@VCContact@@@serialization@boost@@UBEXQBX@Z
CONST	ENDS
;	COMDAT ??_C@_1GC@KKEDEOBO@?$AA?$CB?$AA?5?$AAd?$AAe?$AAt?$AAa?$AAi?$AAl?$AA?3?$AA?3?$AAs?$AAi?$AAn?$AAg?$AAl?$AAe?$AAt?$AAo?$AAn?$AA_?$AAw?$AAr?$AAa?$AAp?$AAp?$AAe?$AAr?$AA?$DM?$AA?5?$AAT?$AA?5?$AA?$DO@
CONST	SEGMENT
??_C@_1GC@KKEDEOBO@?$AA?$CB?$AA?5?$AAd?$AAe?$AAt?$AAa?$AAi?$AAl?$AA?3?$AA?3?$AAs?$AAi?$AAn?$AAg?$AAl?$AAe?$AAt?$AAo?$AAn?$AA_?$AAw?$AAr?$AAa?$AAp?$AAp?$AAe?$AAr?$AA?$DM?$AA?5?$AAT?$AA?5?$AA?$DO@ DB '!'
	DB	00H, ' ', 00H, 'd', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'i', 00H
	DB	'l', 00H, ':', 00H, ':', 00H, 's', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 'l', 00H, 'e', 00H, 't', 00H, 'o', 00H, 'n', 00H, '_', 00H
	DB	'w', 00H, 'r', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, '<', 00H, ' ', 00H, 'T', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, 'm', 00H, '_', 00H, 'i', 00H, 's', 00H, '_', 00H, 'd'
	DB	00H, 'e', 00H, 's', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'y', 00H
	DB	'e', 00H, 'd', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1JC@GIHFICPP@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
CONST	SEGMENT
??_C@_1JC@GIHFICPP@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ DB 's'
	DB	00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'p', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i'
	DB	00H, 'c', 00H, '\', 00H, 'd', 00H, 'o', 00H, 'c', 00H, 'u', 00H
	DB	'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '_', 00H, '1', 00H
	DB	'_', 00H, '6', 00H, '3', 00H, '_', 00H, '0', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '\', 00H, 's', 00H
	DB	'e', 00H, 'r', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '\', 00H
	DB	's', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'l', 00H, 'e', 00H, 't'
	DB	00H, 'o', 00H, 'n', 00H, '.', 00H, 'h', 00H, 'p', 00H, 'p', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_7?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@
CONST	SEGMENT
??_7?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@ DD FLAT:??_R4?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`vftable'
	DD	FLAT:??_E?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z
	DD	FLAT:?save_object_data@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBEXAAVbasic_oarchive@234@PBX@Z
	DD	FLAT:?class_info@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ
	DD	FLAT:?tracking@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NI@Z
	DD	FLAT:?version@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE?AVversion_type@34@XZ
	DD	FLAT:?is_polymorphic@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ
CONST	ENDS
;	COMDAT ??_7?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@
CONST	SEGMENT
??_7?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@ DD FLAT:??_R4?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`vftable'
	DD	FLAT:??_E?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAEPAXI@Z
	DD	FLAT:?save_object_data@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBEXAAVbasic_oarchive@234@PBX@Z
	DD	FLAT:?class_info@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ
	DD	FLAT:?tracking@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NI@Z
	DD	FLAT:?version@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE?AVversion_type@34@XZ
	DD	FLAT:?is_polymorphic@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ
CONST	ENDS
;	COMDAT ??_7?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@6B@
CONST	SEGMENT
??_7?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@6B@ DD FLAT:??_R4?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@6B@ ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`vftable'
	DD	FLAT:?_Go@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@UAEXXZ
CONST	ENDS
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_7?$_Ref_count_obj@VCPerson@@@std@@6B@
CONST	SEGMENT
??_7?$_Ref_count_obj@VCPerson@@@std@@6B@ DD FLAT:??_R4?$_Ref_count_obj@VCPerson@@@std@@6B@ ; std::_Ref_count_obj<CPerson>::`vftable'
	DD	FLAT:?_Destroy@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ
	DD	FLAT:?_Delete_this@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ
	DD	FLAT:??_E?$_Ref_count_obj@VCPerson@@@std@@UAEPAXI@Z
	DD	FLAT:?_Get_deleter@_Ref_count_base@std@@UBEPAXABVtype_info@@@Z
CONST	ENDS
;	COMDAT ??_7?$_Ref_count_obj@VCCompany@@@std@@6B@
CONST	SEGMENT
??_7?$_Ref_count_obj@VCCompany@@@std@@6B@ DD FLAT:??_R4?$_Ref_count_obj@VCCompany@@@std@@6B@ ; std::_Ref_count_obj<CCompany>::`vftable'
	DD	FLAT:?_Destroy@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ
	DD	FLAT:?_Delete_this@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ
	DD	FLAT:??_E?$_Ref_count_obj@VCCompany@@@std@@UAEPAXI@Z
	DD	FLAT:?_Get_deleter@_Ref_count_base@std@@UBEPAXABVtype_info@@@Z
CONST	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_cast@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_cast@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
data$r	SEGMENT
??_R0?AVbad_cast@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_cast `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_cast@std@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT
__CTA2?AVbad_cast@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT
__TI2?AVbad_cast@std@@ DD 00H
	DD	FLAT:??1bad_cast@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_cast@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MG@GDGHDIKC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1MG@GDGHDIKC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H
	DB	't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '*', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@CNCHLAOB@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
CONST	SEGMENT
??_C@_1EG@CNCHLAOB@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ DB 's'
	DB	00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BAM@HBINONGC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1BAM@HBINONGC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 's', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, 'd', 00H, '_', 00H, 'p', 00H, 't', 00H, 'r', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'C', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H
	DB	'c', 00H, 't', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, '+', 00H, '=', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@
CONST	SEGMENT
??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '+', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	'f', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u'
	DB	00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H
	DB	'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BAE@OFDFOOPB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1BAE@OFDFOOPB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 's', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, 'd', 00H, '_', 00H, 'p', 00H, 't', 00H, 'r', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'C', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H
	DB	'c', 00H, 't', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, '_', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'b'
	DB	00H, 'l', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@
CONST	SEGMENT
??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 's', 00H, 'e', 00H, ' ', 00H, 'i'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, 's', 00H, 'i'
	DB	00H, 'd', 00H, 'e', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BAK@LJFLLKPP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1BAK@LJFLLKPP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 's', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, 'd', 00H, '_', 00H, 'p', 00H, 't', 00H, 'r', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'C', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H
	DB	'c', 00H, 't', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, '*', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
CONST	SEGMENT
??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BAM@EPPOFCB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1BAM@EPPOFCB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 's', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, 'd', 00H, '_', 00H, 'p', 00H, 't', 00H, 'r', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'C', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H
	DB	'c', 00H, 't', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, '+', 00H, '+', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
CONST	SEGMENT
??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
CONST	SEGMENT
??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ DB 'Stand'
	DB	'ard C++ Libraries Out of Range', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
CONST	SEGMENT
??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HDBDJBNL@Goodbye?$CB?$AA@
CONST	SEGMENT
??_C@_08HDBDJBNL@Goodbye?$CB?$AA@ DB 'Goodbye!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@MIDKGGF@You?5don?8t?5have?5any?5contacts?5to?5d@
CONST	SEGMENT
??_C@_0CH@MIDKGGF@You?5don?8t?5have?5any?5contacts?5to?5d@ DB 'You don''t'
	DB	' have any contacts to display', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OHJIHAFH@None?$AA@
CONST	SEGMENT
??_C@_04OHJIHAFH@None?$AA@ DB 'None', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KBDJCHMC@Found?5contacts?3?$AA@
CONST	SEGMENT
??_C@_0BA@KBDJCHMC@Found?5contacts?3?$AA@ DB 'Found contacts:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@KOHCCCHA@Enter?5the?5first?5name?0?5last?5name?0@
CONST	SEGMENT
??_C@_0DP@KOHCCCHA@Enter?5the?5first?5name?0?5last?5name?0@ DB 'Enter the'
	DB	' first name, last name, or company name of a contact:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03LCPHGAHP@cls?$AA@
CONST	SEGMENT
??_C@_03LCPHGAHP@cls?$AA@ DB 'cls', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@GEBCPOHK@Enter?5the?5name?5of?5the?5person?5or?5@
CONST	SEGMENT
??_C@_0EB@GEBCPOHK@Enter?5the?5name?5of?5the?5person?5or?5@ DB 'Enter the'
	DB	' name of the person or company you would like to edit:', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@GGNPEDJA@You?5don?8t?5have?5any?5contacts?5to?5e@
CONST	SEGMENT
??_C@_0CE@GGNPEDJA@You?5don?8t?5have?5any?5contacts?5to?5e@ DB 'You don'''
	DB	't have any contacts to edit', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@GFNLJBBP@The?5contact?5was?5removed?5from?5you@
CONST	SEGMENT
??_C@_0CP@GFNLJBBP@The?5contact?5was?5removed?5from?5you@ DB 'The contact'
	DB	' was removed from your contact list', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@FLPABHKE@That?5contact?5was?5not?5found?5in?5yo@
CONST	SEGMENT
??_C@_0DA@FLPABHKE@That?5contact?5was?5not?5found?5in?5yo@ DB 'That conta'
	DB	'ct was not found in your contact list', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FJ@GBCKFMI@Enter?5the?5name?5of?5the?5person?5or?5@
CONST	SEGMENT
??_C@_0FJ@GBCKFMI@Enter?5the?5name?5of?5the?5person?5or?5@ DB 'Enter the '
	DB	'name of the person or company you would like to remove from t'
	DB	'he contact list:', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05PDJBBECF@pause?$AA@
CONST	SEGMENT
??_C@_05PDJBBECF@pause?$AA@ DB 'pause', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@MNNPHAFE@You?5don?8t?5have?5any?5contacts?5to?5r@
CONST	SEGMENT
??_C@_0CG@MNNPHAFE@You?5don?8t?5have?5any?5contacts?5to?5r@ DB 'You don'''
	DB	't have any contacts to remove', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IKMOJNDM@contactList?$AA@
CONST	SEGMENT
??_C@_0M@IKMOJNDM@contactList?$AA@ DB 'contactList', 00H ; `string'
CONST	ENDS
;	COMDAT ??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@
CONST	SEGMENT
??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@ DD 00H ; std::basic_ifstream<char,std::char_traits<char> >::`vbtable'
	DD	070H
CONST	ENDS
;	COMDAT ??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ifstream<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_08FGJDGFCJ@CCompany?$AA@
CONST	SEGMENT
??_C@_08FGJDGFCJ@CCompany?$AA@ DB 'CCompany', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07EEOOECP@CPerson?$AA@
CONST	SEGMENT
??_C@_07EEOOECP@CPerson?$AA@ DB 'CPerson', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GLLABICK@People?4txt?$AA@
CONST	SEGMENT
??_C@_0L@GLLABICK@People?4txt?$AA@ DB 'People.txt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MIMFNFBN@Companies?4txt?$AA@
CONST	SEGMENT
??_C@_0O@MIMFNFBN@Companies?4txt?$AA@ DB 'Companies.txt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@
CONST	SEGMENT
??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@ DD 00H ; std::basic_ofstream<char,std::char_traits<char> >::`vbtable'
	DD	068H
CONST	ENDS
;	COMDAT ??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ofstream<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
	DD	FLAT:?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	FLAT:?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ
	DD	FLAT:?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z
	DD	FLAT:?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
	DD	FLAT:?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z
	DD	FLAT:?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_7text_oarchive@archive@boost@@6B@
CONST	SEGMENT
??_7text_oarchive@archive@boost@@6B@ DD FLAT:??_R4text_oarchive@archive@boost@@6B@ ; boost::archive::text_oarchive::`vftable'
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXUtracking_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXABUclass_name_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_reference_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_optional_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_reference_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_id_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVversion_type@34@@Z
	DD	FLAT:??_Etext_oarchive@archive@boost@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@6B@
CONST	SEGMENT
??_7?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@6B@ DD FLAT:??_R4?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@6B@ ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`vftable'
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXUtracking_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXABUclass_name_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_reference_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_optional_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_reference_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_id_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVversion_type@34@@Z
	DD	FLAT:??_E?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@MAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@6B@
CONST	SEGMENT
??_7?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@6B@ DD FLAT:??_R4?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@6B@ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`vftable'
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXUtracking_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXABUclass_name_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_reference_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_optional_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_reference_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_id_type@34@@Z
	DD	FLAT:?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVversion_type@34@@Z
	DD	FLAT:??_E?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@MAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7text_iarchive@archive@boost@@6B@
CONST	SEGMENT
??_7text_iarchive@archive@boost@@6B@ DD FLAT:??_R4text_iarchive@archive@boost@@6B@ ; boost::archive::text_iarchive::`vftable'
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUtracking_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUclass_name_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_optional_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVobject_id_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVversion_type@34@@Z
	DD	FLAT:??_Etext_iarchive@archive@boost@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@6B@
CONST	SEGMENT
??_7?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@6B@ DD FLAT:??_R4?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@6B@ ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`vftable'
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUtracking_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUclass_name_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_optional_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVobject_id_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVversion_type@34@@Z
	DD	FLAT:??_E?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@MAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@6B@
CONST	SEGMENT
??_7?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@6B@ DD FLAT:??_R4?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@6B@ ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`vftable'
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUtracking_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUclass_name_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_optional_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVobject_id_type@34@@Z
	DD	FLAT:?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVversion_type@34@@Z
	DD	FLAT:??_E?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@MAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
CONST	SEGMENT
??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 'v'
	DB	00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'A', 00H
	DB	'r', 00H, 'g', 00H, 'u', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
CONST	SEGMENT
??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ DB 'Standa'
	DB	'rd C++ Libraries Invalid Argument', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GE@MNCNLAH@?$AAt?$AA_?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAb?$AAo?$AAo?$AAs?$AAt?$AA?3?$AA?3?$AAi?$AAn?$AAt?$AAe?$AAg?$AAe?$AAr?$AA_?$AAt?$AAr?$AAa?$AAi?$AAt?$AAs?$AA?$DM?$AAb?$AAa?$AAs?$AAe@
CONST	SEGMENT
??_C@_1GE@MNCNLAH@?$AAt?$AA_?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAb?$AAo?$AAo?$AAs?$AAt?$AA?3?$AA?3?$AAi?$AAn?$AAt?$AAe?$AAg?$AAe?$AAr?$AA_?$AAt?$AAr?$AAa?$AAi?$AAt?$AAs?$AA?$DM?$AAb?$AAa?$AAs?$AAe@ DB 't'
	DB	00H, '_', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'b', 00H
	DB	'o', 00H, 'o', 00H, 's', 00H, 't', 00H, ':', 00H, ':', 00H, 'i'
	DB	00H, 'n', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'e', 00H, 'r', 00H
	DB	'_', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'i', 00H, 't', 00H, 's'
	DB	00H, '<', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H
	DB	'm', 00H, 'a', 00H, 'x', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@DBEBMPEE@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
CONST	SEGMENT
??_C@_1IO@DBEBMPEE@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@ DB 's'
	DB	00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'p', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i'
	DB	00H, 'c', 00H, '\', 00H, 'd', 00H, 'o', 00H, 'c', 00H, 'u', 00H
	DB	'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '_', 00H, '1', 00H
	DB	'_', 00H, '6', 00H, '3', 00H, '_', 00H, '0', 00H, '\', 00H, 'b'
	DB	00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H, '\', 00H, 'a', 00H
	DB	'r', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'v', 00H, 'e', 00H, '\'
	DB	00H, 'b', 00H, 'a', 00H, 's', 00H, 'i', 00H, 'c', 00H, '_', 00H
	DB	'a', 00H, 'r', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'v', 00H, 'e'
	DB	00H, '.', 00H, 'h', 00H, 'p', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7_Pad@std@@6B@
CONST	SEGMENT
??_7_Pad@std@@6B@ DD FLAT:??_R4_Pad@std@@6B@		; std::_Pad::`vftable'
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7_Ref_count_base@std@@6B@
CONST	SEGMENT
??_7_Ref_count_base@std@@6B@ DD FLAT:??_R4_Ref_count_base@std@@6B@ ; std::_Ref_count_base::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:??_E_Ref_count_base@std@@UAEPAXI@Z
	DD	FLAT:?_Get_deleter@_Ref_count_base@std@@UBEPAXABVtype_info@@@Z
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT
??_C@_08EPJLHIJG@bad?5cast?$AA@ DB 'bad cast', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7bad_cast@std@@6B@
CONST	SEGMENT
??_7bad_cast@std@@6B@ DD FLAT:??_R4bad_cast@std@@6B@	; std::bad_cast::`vftable'
	DD	FLAT:??_Ebad_cast@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT
?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB DD 0ffffffffH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
CONST	ENDS
;	COMDAT ??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@
CONST	SEGMENT
??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'u', 00H
	DB	's', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '-', 00H, ' ', 00H, '_'
	DB	00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'c', 00H, 'o', 00H
	DB	'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'e', 00H, 'r'
	DB	00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '_', 00H, 'N', 00H
	DB	'O', 00H, 'N', 00H, '_', 00H, 'U', 00H, 'S', 00H, 'E', 00H, 'R'
	DB	00H, '_', 00H, 'S', 00H, 'I', 00H, 'Z', 00H, 'E', 00H, '"', 00H
	DB	' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@
CONST	SEGMENT
??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@ DB '_Ptr_u'
	DB	'ser - _Ptr_container <= _NON_USER_SIZE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@
CONST	SEGMENT
??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@ DB '"'
	DB	00H, '2', 00H, ' ', 00H, '*', 00H, ' ', 00H, 's', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, 'o', 00H, 'f', 00H, '(', 00H, 'v', 00H, 'o'
	DB	00H, 'i', 00H, 'd', 00H, ' ', 00H, '*', 00H, ')', 00H, ' ', 00H
	DB	'<', 00H, '=', 00H, ' ', 00H, '_', 00H, 'P', 00H, 't', 00H, 'r'
	DB	00H, '_', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'-', 00H, ' ', 00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_'
	DB	00H, 'c', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H
	DB	'n', 00H, 'e', 00H, 'r', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@
CONST	SEGMENT
??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@ DB '2'
	DB	' * sizeof(void *) <= _Ptr_user - _Ptr_container', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
CONST	SEGMENT
??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'e'
	DB	00H, 'r', 00H, ' ', 00H, '<', 00H, ' ', 00H, '_', 00H, 'P', 00H
	DB	't', 00H, 'r', 00H, '_', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@
CONST	SEGMENT
??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@ DB '_Ptr_containe'
	DB	'r < _Ptr_user', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@
CONST	SEGMENT
??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@ DB '"'
	DB	00H, 'r', 00H, 'e', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'p', 00H, 'r', 00H, 'e', 00H, 't', 00H, '_', 00H, 'c'
	DB	00H, 'a', 00H, 's', 00H, 't', 00H, '<', 00H, 'u', 00H, 'i', 00H
	DB	'n', 00H, 't', 00H, 'p', 00H, 't', 00H, 'r', 00H, '_', 00H, 't'
	DB	00H, ' ', 00H, '*', 00H, '>', 00H, '(', 00H, '_', 00H, 'P', 00H
	DB	't', 00H, 'r', 00H, '_', 00H, 'p', 00H, 't', 00H, 'r', 00H, ')'
	DB	00H, '[', 00H, '-', 00H, '1', 00H, ']', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, '_', 00H, 'B', 00H, 'I', 00H, 'G', 00H, '_'
	DB	00H, 'A', 00H, 'L', 00H, 'L', 00H, 'O', 00H, 'C', 00H, 'A', 00H
	DB	'T', 00H, 'I', 00H, 'O', 00H, 'N', 00H, '_', 00H, 'S', 00H, 'E'
	DB	00H, 'N', 00H, 'T', 00H, 'I', 00H, 'N', 00H, 'E', 00H, 'L', 00H
	DB	'"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@
CONST	SEGMENT
??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@ DB 'rei'
	DB	'nterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] == _BIG_ALLOCATION_S'
	DB	'ENTINEL', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@
CONST	SEGMENT
??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@ DB '"'
	DB	00H, '(', 00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H
	DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '&', 00H, ' '
	DB	00H, '(', 00H, '_', 00H, 'B', 00H, 'I', 00H, 'G', 00H, '_', 00H
	DB	'A', 00H, 'L', 00H, 'L', 00H, 'O', 00H, 'C', 00H, 'A', 00H, 'T'
	DB	00H, 'I', 00H, 'O', 00H, 'N', 00H, '_', 00H, 'A', 00H, 'L', 00H
	DB	'I', 00H, 'G', 00H, 'N', 00H, 'M', 00H, 'E', 00H, 'N', 00H, 'T'
	DB	00H, ' ', 00H, '-', 00H, ' ', 00H, '1', 00H, ')', 00H, ')', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, '"', 00H, ' '
	DB	00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@
CONST	SEGMENT
??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@ DB '(_Ptr'
	DB	'_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'D', 00H
	DB	'e', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@MLOBABC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AA_?$AAS?$AAz?$AA?$CC?$AA?5?$AA?$CG@
CONST	SEGMENT
??_C@_1EI@MLOBABC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AA_?$AAS?$AAz?$AA?$CC?$AA?5?$AA?$CG@ DB '"'
	DB	00H, '_', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H
	DB	' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '(', 00H, 's', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, '_', 00H, 't', 00H, ')', 00H, '(', 00H
	DB	'-', 00H, '1', 00H, ')', 00H, ' ', 00H, '/', 00H, ' ', 00H, '_'
	DB	00H, 'S', 00H, 'z', 00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H
	DB	' ', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@HMCJOMKN@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5_Sz?$AA@
CONST	SEGMENT
??_C@_0BN@HMCJOMKN@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5_Sz?$AA@ DB '_'
	DB	'Count <= (size_t)(-1) / _Sz', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA DD 05cH ; `std::_Deallocate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CC@GKJLLHIM@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@GKJLLHIM@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09GLJCAGLP@_Ptr?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_09GLJCAGLP@_Ptr?5?$CB?$DN?50?$AA@ DB '_Ptr != 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H, 'e'
	DB	00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@ DB '%', 00H, 'l', 00H, 's', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'e'
	DB	00H, 'r', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H
	DB	'"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@ DB '_Ptr_container !='
	DB	' 0', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA DD 030H	; `std::_Allocate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ DB 'I'
	DB	00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H, 'O', 00H
	DB	'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T', 00H, ' '
	DB	00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H, 'P', 00H
	DB	'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@MHADJNIL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@MHADJNIL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H, 't'
	DB	00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception?$AA@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception?$AA@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z$0
__ehfuncinfo$??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z$0
__ehfuncinfo$??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z$0
__ehfuncinfo$??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z$0
__ehfuncinfo$??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z$0
__ehfuncinfo$??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z$0
__ehfuncinfo$??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z$0
__ehfuncinfo$??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z$0
__ehfuncinfo$??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z$0
__ehfuncinfo$??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z$1
__ehfuncinfo$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z$0
__ehfuncinfo$??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z$1
__ehfuncinfo$??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z$1
__ehfuncinfo$??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z$1
__ehfuncinfo$??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z$1
__ehfuncinfo$??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z$1
__ehfuncinfo$??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ$0
__ehfuncinfo$?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ$0
__ehfuncinfo$??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ$0
__ehfuncinfo$?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ$0
__ehfuncinfo$?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z$0
__unwindtable$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z$2
__ehfuncinfo$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0
__ehfuncinfo$??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z$0
__ehfuncinfo$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXPAV12@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z$0
__ehfuncinfo$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$0
__tryblocktable$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$3
__unwindtable$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0
__ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ$1
__ehfuncinfo$??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ$1
__ehfuncinfo$??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z$0
__ehfuncinfo$??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z$0
__ehfuncinfo$??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z$1
__ehfuncinfo$??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Destroy@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z$1
__ehfuncinfo$??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Destroy@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z$0
__ehfuncinfo$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z$0
__ehfuncinfo$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0
__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3
__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ$1
__ehfuncinfo$??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ$1
__ehfuncinfo$??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z$0
__ehfuncinfo$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$_main DD 019930522H
	DD	01dH
	DD	FLAT:__unwindtable$_main
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$_main DD 0ffffffffH
	DD	FLAT:__unwindfunclet$_main$0
	DD	00H
	DD	FLAT:__unwindfunclet$_main$1
	DD	01H
	DD	FLAT:__unwindfunclet$_main$2
	DD	02H
	DD	FLAT:__unwindfunclet$_main$3
	DD	03H
	DD	FLAT:__unwindfunclet$_main$4
	DD	04H
	DD	FLAT:__unwindfunclet$_main$5
	DD	03H
	DD	FLAT:__unwindfunclet$_main$6
	DD	06H
	DD	FLAT:__unwindfunclet$_main$7
	DD	03H
	DD	FLAT:__unwindfunclet$_main$8
	DD	08H
	DD	FLAT:__unwindfunclet$_main$9
	DD	03H
	DD	FLAT:__unwindfunclet$_main$11
	DD	0aH
	DD	FLAT:__unwindfunclet$_main$12
	DD	0bH
	DD	FLAT:__unwindfunclet$_main$13
	DD	0cH
	DD	FLAT:__unwindfunclet$_main$14
	DD	0bH
	DD	FLAT:__unwindfunclet$_main$16
	DD	03H
	DD	FLAT:__unwindfunclet$_main$19
	DD	0fH
	DD	FLAT:__unwindfunclet$_main$20
	DD	03H
	DD	FLAT:__unwindfunclet$_main$22
	DD	011H
	DD	FLAT:__unwindfunclet$_main$23
	DD	012H
	DD	FLAT:__unwindfunclet$_main$24
	DD	013H
	DD	FLAT:__unwindfunclet$_main$25
	DD	012H
	DD	FLAT:__unwindfunclet$_main$27
	DD	03H
	DD	FLAT:__unwindfunclet$_main$28
	DD	016H
	DD	FLAT:__unwindfunclet$_main$29
	DD	017H
	DD	FLAT:__unwindfunclet$_main$30
	DD	016H
	DD	FLAT:__unwindfunclet$_main$30
	DD	019H
	DD	FLAT:__unwindfunclet$_main$31
	DD	03H
	DD	FLAT:__unwindfunclet$_main$32
	DD	01bH
	DD	FLAT:__unwindfunclet$_main$33
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$?0VCPerson@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCPerson@@@1@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$shared_ptr@VCPerson@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$shared_ptr@VCPerson@@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z$1
__ehfuncinfo$??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$?0VCCompany@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCCompany@@@1@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$shared_ptr@VCCompany@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$shared_ptr@VCCompany@@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z$1
__ehfuncinfo$??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z$2
__ehfuncinfo$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$21 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$6
__catchsym$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$20 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$4
__catchsym$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$19 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$2
__catchsym$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$18 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$0
__ehfuncinfo$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 019930522H
	DD	012H
	DD	FLAT:__unwindtable$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	DD	04H
	DD	FLAT:__tryblocktable$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 05H
	DD	06H
	DD	07H
	DD	01H
	DD	FLAT:__catchsym$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$18
	DD	00H
	DD	07H
	DD	08H
	DD	01H
	DD	FLAT:__catchsym$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$19
	DD	0eH
	DD	0fH
	DD	010H
	DD	01H
	DD	FLAT:__catchsym$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$20
	DD	09H
	DD	010H
	DD	011H
	DD	01H
	DD	FLAT:__catchsym$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$21
__unwindtable$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$8
	DD	01H
	DD	FLAT:__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$9
	DD	00H
	DD	FLAT:__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$9
	DD	03H
	DD	FLAT:__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$10
	DD	04H
	DD	00H
	DD	05H
	DD	FLAT:__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$12
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	09H
	DD	FLAT:__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$13
	DD	0aH
	DD	FLAT:__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$14
	DD	09H
	DD	FLAT:__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$14
	DD	0cH
	DD	FLAT:__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$15
	DD	0dH
	DD	00H
	DD	0eH
	DD	FLAT:__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$17
	DD	0dH
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$3
	DD	00H
	DD	FLAT:__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$3
	DD	00H
	DD	FLAT:__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$4
	DD	00H
	DD	FLAT:__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z$0
__ehfuncinfo$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z$0
__ehfuncinfo$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z$2
__ehfuncinfo$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z$0
__ehfuncinfo$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 019930522H
	DD	0cH
	DD	FLAT:__unwindtable$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$3
	DD	05H
	DD	FLAT:__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$4
	DD	06H
	DD	FLAT:__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$5
	DD	07H
	DD	FLAT:__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$6
	DD	08H
	DD	FLAT:__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$7
	DD	08H
	DD	FLAT:__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$9
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$shared_ptr@VCContact@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$shared_ptr@VCContact@@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$shared_ptr@VCContact@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z$0
__ehfuncinfo$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z$0
__ehfuncinfo$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z$0
__ehfuncinfo$?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z$0
__ehfuncinfo$?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$5
	DD	04H
	DD	FLAT:__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$6
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z$0
__ehfuncinfo$?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1ios_precision_saver@io@boost@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1ios_flags_saver@io@boost@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?get_id@this_thread@std@@YA?AVid@thread@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?get_id@thread@std@@QBE?AVid@12@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Pad@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_Pad@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_Pad@std@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0_Pad@std@@QAE@XZ$1
__ehfuncinfo$??0_Pad@std@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0_Pad@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1locale@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1
__ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0
__ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Container_base12@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??instance$initializer$@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@0P6AXXZA@@3P6AXXZA DD FLAT:??__E?instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@VCContact@@@23@A@@YAXXZ ; ??instance$initializer$@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@0P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??instance$initializer$@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0P6AXXZA@@3P6AXXZA DD FLAT:??__E?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@A@@YAXXZ ; ??instance$initializer$@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Odsp /RTCsu /ZI
;	COMDAT ??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z
_TEXT	SEGMENT
??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z PROC ; std::basic_ofstream<char,std::char_traits<char> >::`vector deleting destructor', COMDAT
  00000	2b 49 fc	 sub	 ecx, DWORD PTR [ecx-4]
  00003	e9 00 00 00 00	 jmp	 ??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z ENDP ; std::basic_ofstream<char,std::char_traits<char> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu /ZI
;	COMDAT ??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z
_TEXT	SEGMENT
??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z PROC ; std::basic_ifstream<char,std::char_traits<char> >::`vector deleting destructor', COMDAT
  00000	2b 49 fc	 sub	 ecx, DWORD PTR [ecx-4]
  00003	e9 00 00 00 00	 jmp	 ??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z ENDP ; std::basic_ifstream<char,std::char_traits<char> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\access.hpp
;	COMDAT ??$member_load@Vtext_iarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAVCContact@@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$member_load@Vtext_iarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAVCContact@@I@Z PROC ; boost::serialization::access::member_load<boost::archive::text_iarchive,CContact>, COMDAT

; 98   :     ){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 99   :         t.load(ar, file_version);

  0001e	8b f4		 mov	 esi, esp
  00020	8b 45 10	 mov	 eax, DWORD PTR _file_version$[ebp]
  00023	50		 push	 eax
  00024	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00027	51		 push	 ecx
  00028	8b 55 0c	 mov	 edx, DWORD PTR _t$[ebp]
  0002b	8b 02		 mov	 eax, DWORD PTR [edx]
  0002d	8b 4d 0c	 mov	 ecx, DWORD PTR _t$[ebp]
  00030	8b 50 2c	 mov	 edx, DWORD PTR [eax+44]
  00033	ff d2		 call	 edx
  00035	3b f4		 cmp	 esi, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 100  :     }

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
??$member_load@Vtext_iarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAVCContact@@I@Z ENDP ; boost::serialization::access::member_load<boost::archive::text_iarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\split_member.hpp
;	COMDAT ?invoke@?$member_loader@Vtext_iarchive@archive@boost@@VCContact@@@detail@serialization@boost@@SAXAAVtext_iarchive@archive@4@AAVCContact@@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
?invoke@?$member_loader@Vtext_iarchive@archive@boost@@VCContact@@@detail@serialization@boost@@SAXAAVtext_iarchive@archive@4@AAVCContact@@I@Z PROC ; boost::serialization::detail::member_loader<boost::archive::text_iarchive,CContact>::invoke, COMDAT

; 53   :         ){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 54   :             access::member_load(ar, t, file_version);

  0001e	8b 45 10	 mov	 eax, DWORD PTR _file_version$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 0c	 mov	 ecx, DWORD PTR _t$[ebp]
  00025	51		 push	 ecx
  00026	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00029	52		 push	 edx
  0002a	e8 00 00 00 00	 call	 ??$member_load@Vtext_iarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAVCContact@@I@Z ; boost::serialization::access::member_load<boost::archive::text_iarchive,CContact>
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 55   :         }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?invoke@?$member_loader@Vtext_iarchive@archive@boost@@VCContact@@@detail@serialization@boost@@SAXAAVtext_iarchive@archive@4@AAVCContact@@I@Z ENDP ; boost::serialization::detail::member_loader<boost::archive::text_iarchive,CContact>::invoke
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\access.hpp
;	COMDAT ??$member_save@Vtext_oarchive@archive@boost@@$$CBVCContact@@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@ABVCContact@@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$member_save@Vtext_oarchive@archive@boost@@$$CBVCContact@@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@ABVCContact@@I@Z PROC ; boost::serialization::access::member_save<boost::archive::text_oarchive,CContact const >, COMDAT

; 90   :     ){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 91   :         t.save(ar, file_version);

  0001e	8b f4		 mov	 esi, esp
  00020	8b 45 10	 mov	 eax, DWORD PTR _file_version$[ebp]
  00023	50		 push	 eax
  00024	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00027	51		 push	 ecx
  00028	8b 55 0c	 mov	 edx, DWORD PTR _t$[ebp]
  0002b	8b 02		 mov	 eax, DWORD PTR [edx]
  0002d	8b 4d 0c	 mov	 ecx, DWORD PTR _t$[ebp]
  00030	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  00033	ff d2		 call	 edx
  00035	3b f4		 cmp	 esi, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 92   :     }

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
??$member_save@Vtext_oarchive@archive@boost@@$$CBVCContact@@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@ABVCContact@@I@Z ENDP ; boost::serialization::access::member_save<boost::archive::text_oarchive,CContact const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\split_member.hpp
;	COMDAT ??$split_member@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$split_member@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z PROC ; boost::serialization::split_member<boost::archive::text_iarchive,CContact>, COMDAT

; 63   : ){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 64   :     typedef typename mpl::eval_if<
; 65   :         typename Archive::is_saving,
; 66   :         mpl::identity<detail::member_saver<Archive, T> >, 
; 67   :         mpl::identity<detail::member_loader<Archive, T> >
; 68   :     >::type typex;
; 69   :     typex::invoke(ar, t, file_version);

  0001e	8b 45 10	 mov	 eax, DWORD PTR _file_version$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 0c	 mov	 ecx, DWORD PTR _t$[ebp]
  00025	51		 push	 ecx
  00026	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00029	52		 push	 edx
  0002a	e8 00 00 00 00	 call	 ?invoke@?$member_loader@Vtext_iarchive@archive@boost@@VCContact@@@detail@serialization@boost@@SAXAAVtext_iarchive@archive@4@AAVCContact@@I@Z ; boost::serialization::detail::member_loader<boost::archive::text_iarchive,CContact>::invoke
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 70   : }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
??$split_member@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z ENDP ; boost::serialization::split_member<boost::archive::text_iarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\split_member.hpp
;	COMDAT ?invoke@?$member_saver@Vtext_oarchive@archive@boost@@VCContact@@@detail@serialization@boost@@SAXAAVtext_oarchive@archive@4@ABVCContact@@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
?invoke@?$member_saver@Vtext_oarchive@archive@boost@@VCContact@@@detail@serialization@boost@@SAXAAVtext_oarchive@archive@4@ABVCContact@@I@Z PROC ; boost::serialization::detail::member_saver<boost::archive::text_oarchive,CContact>::invoke, COMDAT

; 42   :         ){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 43   :             access::member_save(ar, t, file_version);

  0001e	8b 45 10	 mov	 eax, DWORD PTR _file_version$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 0c	 mov	 ecx, DWORD PTR _t$[ebp]
  00025	51		 push	 ecx
  00026	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00029	52		 push	 edx
  0002a	e8 00 00 00 00	 call	 ??$member_save@Vtext_oarchive@archive@boost@@$$CBVCContact@@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@ABVCContact@@I@Z ; boost::serialization::access::member_save<boost::archive::text_oarchive,CContact const >
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 44   :         }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?invoke@?$member_saver@Vtext_oarchive@archive@boost@@VCContact@@@detail@serialization@boost@@SAXAAVtext_oarchive@archive@4@ABVCContact@@I@Z ENDP ; boost::serialization::detail::member_saver<boost::archive::text_oarchive,CContact>::invoke
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\contact.h
;	COMDAT ??$serialize@Vtext_iarchive@archive@boost@@@CContact@@IAEXAAVtext_iarchive@archive@boost@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ar$ = 8						; size = 4
_file_version$ = 12					; size = 4
??$serialize@Vtext_iarchive@archive@boost@@@CContact@@IAEXAAVtext_iarchive@archive@boost@@I@Z PROC ; CContact::serialize<boost::archive::text_iarchive>, COMDAT
; _this$ = ecx

; 45   : 	BOOST_SERIALIZATION_SPLIT_MEMBER()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 0c	 mov	 eax, DWORD PTR _file_version$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ??$split_member@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z ; boost::serialization::split_member<boost::archive::text_iarchive,CContact>
  00034	83 c4 0c	 add	 esp, 12			; 0000000cH
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 08 00	 ret	 8
??$serialize@Vtext_iarchive@archive@boost@@@CContact@@IAEXAAVtext_iarchive@archive@boost@@I@Z ENDP ; CContact::serialize<boost::archive::text_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\smart_cast.hpp
;	COMDAT ??$cast@Vbasic_iarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@5@AAVbasic_iarchive@detail@75@@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??$cast@Vbasic_iarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@5@AAVbasic_iarchive@detail@75@@Z PROC ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::polymorphic::cross::cast<boost::archive::detail::basic_iarchive>, COMDAT

; 79   :                 static T cast(U & u){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 80   :                     return dynamic_cast< T >(u);

  0001e	6a 01		 push	 1
  00020	68 00 00 00 00	 push	 OFFSET ??_R0?AVtext_iarchive@archive@boost@@@8
  00025	68 00 00 00 00	 push	 OFFSET ??_R0?AVbasic_iarchive@detail@archive@boost@@@8
  0002a	6a 00		 push	 0
  0002c	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ___RTDynamicCast
  00035	83 c4 14	 add	 esp, 20			; 00000014H

; 81   :                 }

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00041	3b ec		 cmp	 ebp, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
??$cast@Vbasic_iarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@5@AAVbasic_iarchive@detail@75@@Z ENDP ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::polymorphic::cross::cast<boost::archive::detail::basic_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\split_member.hpp
;	COMDAT ??$split_member@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$split_member@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z PROC ; boost::serialization::split_member<boost::archive::text_oarchive,CContact>, COMDAT

; 63   : ){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 64   :     typedef typename mpl::eval_if<
; 65   :         typename Archive::is_saving,
; 66   :         mpl::identity<detail::member_saver<Archive, T> >, 
; 67   :         mpl::identity<detail::member_loader<Archive, T> >
; 68   :     >::type typex;
; 69   :     typex::invoke(ar, t, file_version);

  0001e	8b 45 10	 mov	 eax, DWORD PTR _file_version$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 0c	 mov	 ecx, DWORD PTR _t$[ebp]
  00025	51		 push	 ecx
  00026	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00029	52		 push	 edx
  0002a	e8 00 00 00 00	 call	 ?invoke@?$member_saver@Vtext_oarchive@archive@boost@@VCContact@@@detail@serialization@boost@@SAXAAVtext_oarchive@archive@4@ABVCContact@@I@Z ; boost::serialization::detail::member_saver<boost::archive::text_oarchive,CContact>::invoke
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 70   : }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
??$split_member@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z ENDP ; boost::serialization::split_member<boost::archive::text_oarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\access.hpp
;	COMDAT ??$serialize@Vtext_iarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAVCContact@@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize@Vtext_iarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAVCContact@@I@Z PROC ; boost::serialization::access::serialize<boost::archive::text_iarchive,CContact>, COMDAT

; 106  :     ){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 107  :         // note: if you get a compile time error here with a
; 108  :         // message something like:
; 109  :         // cannot convert parameter 1 from <file type 1> to <file type 2 &>
; 110  :         // a likely possible cause is that the class T contains a 
; 111  :         // serialize function - but that serialize function isn't 
; 112  :         // a template and corresponds to a file type different than
; 113  :         // the class Archive.  To resolve this, don't include an
; 114  :         // archive type other than that for which the serialization
; 115  :         // function is defined!!!
; 116  :         t.serialize(ar, file_version);

  0001e	8b 45 10	 mov	 eax, DWORD PTR _file_version$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00025	51		 push	 ecx
  00026	8b 4d 0c	 mov	 ecx, DWORD PTR _t$[ebp]
  00029	e8 00 00 00 00	 call	 ??$serialize@Vtext_iarchive@archive@boost@@@CContact@@IAEXAAVtext_iarchive@archive@boost@@I@Z ; CContact::serialize<boost::archive::text_iarchive>

; 117  :     }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??$serialize@Vtext_iarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAVCContact@@I@Z ENDP ; boost::serialization::access::serialize<boost::archive::text_iarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\smart_cast.hpp
;	COMDAT ??$cast@Vbasic_iarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@4@AAVbasic_iarchive@detail@64@@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??$cast@Vbasic_iarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@4@AAVbasic_iarchive@detail@64@@Z PROC ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::polymorphic::cast<boost::archive::detail::basic_iarchive>, COMDAT

; 85   :             static T cast(U & u){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 86   :                 // if we're in debug mode
; 87   :                 #if ! defined(NDEBUG)                               \
; 88   :                 || defined(__MWERKS__)
; 89   :                     // do a checked dynamic cast
; 90   :                     return cross::cast(u);

  0001e	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$cast@Vbasic_iarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@5@AAVbasic_iarchive@detail@75@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::polymorphic::cross::cast<boost::archive::detail::basic_iarchive>
  00027	83 c4 04	 add	 esp, 4

; 91   :                 #else
; 92   :                     // borland 5.51 chokes here so we can't use it
; 93   :                     // note: if remove_reference isn't function for these types
; 94   :                     // cross casting will be selected this will work but will
; 95   :                     // not be the most efficient method. This will conflict with
; 96   :                     // the original smart_cast motivation.
; 97   :                     typedef typename mpl::eval_if<
; 98   :                             typename mpl::and_<
; 99   :                                 mpl::not_<is_base_and_derived<
; 100  :                                     typename remove_reference< T >::type,
; 101  :                                     U
; 102  :                                 > >,
; 103  :                                 mpl::not_<is_base_and_derived<
; 104  :                                     U,
; 105  :                                     typename remove_reference< T >::type
; 106  :                                 > >
; 107  :                             >,
; 108  :                             // borland chokes w/o full qualification here
; 109  :                             mpl::identity<cross>,
; 110  :                             mpl::identity<linear>
; 111  :                     >::type typex;
; 112  :                     // typex works around gcc 2.95 issue
; 113  :                     return typex::cast(u);
; 114  :                 #endif
; 115  :             }

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??$cast@Vbasic_iarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@4@AAVbasic_iarchive@detail@64@@Z ENDP ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::polymorphic::cast<boost::archive::detail::basic_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\contact.h
;	COMDAT ??$serialize@Vtext_oarchive@archive@boost@@@CContact@@IAEXAAVtext_oarchive@archive@boost@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ar$ = 8						; size = 4
_file_version$ = 12					; size = 4
??$serialize@Vtext_oarchive@archive@boost@@@CContact@@IAEXAAVtext_oarchive@archive@boost@@I@Z PROC ; CContact::serialize<boost::archive::text_oarchive>, COMDAT
; _this$ = ecx

; 45   : 	BOOST_SERIALIZATION_SPLIT_MEMBER()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 0c	 mov	 eax, DWORD PTR _file_version$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ??$split_member@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z ; boost::serialization::split_member<boost::archive::text_oarchive,CContact>
  00034	83 c4 0c	 add	 esp, 12			; 0000000cH
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 08 00	 ret	 8
??$serialize@Vtext_oarchive@archive@boost@@@CContact@@IAEXAAVtext_oarchive@archive@boost@@I@Z ENDP ; CContact::serialize<boost::archive::text_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\smart_cast.hpp
;	COMDAT ??$cast@Vbasic_oarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@5@AAVbasic_oarchive@detail@75@@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??$cast@Vbasic_oarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@5@AAVbasic_oarchive@detail@75@@Z PROC ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::polymorphic::cross::cast<boost::archive::detail::basic_oarchive>, COMDAT

; 79   :                 static T cast(U & u){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 80   :                     return dynamic_cast< T >(u);

  0001e	6a 01		 push	 1
  00020	68 00 00 00 00	 push	 OFFSET ??_R0?AVtext_oarchive@archive@boost@@@8
  00025	68 00 00 00 00	 push	 OFFSET ??_R0?AVbasic_oarchive@detail@archive@boost@@@8
  0002a	6a 00		 push	 0
  0002c	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ___RTDynamicCast
  00035	83 c4 14	 add	 esp, 20			; 00000014H

; 81   :                 }

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00041	3b ec		 cmp	 ebp, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
??$cast@Vbasic_oarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@5@AAVbasic_oarchive@detail@75@@Z ENDP ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::polymorphic::cross::cast<boost::archive::detail::basic_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iprimitive.hpp
;	COMDAT ??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z
_TEXT	SEGMENT
tv91 = -400						; size = 4
tv92 = -396						; size = 4
$T2 = -388						; size = 152
$T3 = -228						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z PROC ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<unsigned int>, COMDAT
; _this$ = ecx

; 88   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 84 01 00
	00		 sub	 esp, 388		; 00000184H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 70 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-400]
  00021	b9 61 00 00 00	 mov	 ecx, 97			; 00000061H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 89   :         if(is >> t)

  00045	8b f4		 mov	 esi, esp
  00047	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  0004a	50		 push	 eax
  0004b	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00050	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAI@Z
  00056	3b f4		 cmp	 esi, esp
  00058	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005d	89 85 1c ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00063	8b 95 1c ff ff
	ff		 mov	 edx, DWORD PTR $T3[ebp]
  00069	8b 02		 mov	 eax, DWORD PTR [edx]
  0006b	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  00071	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  00074	8b f4		 mov	 esi, esp
  00076	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??Bios_base@std@@QBE_NXZ
  0007c	3b f4		 cmp	 esi, esp
  0007e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00083	0f b6 c8	 movzx	 ecx, al
  00086	85 c9		 test	 ecx, ecx
  00088	74 02		 je	 SHORT $LN2@load

; 90   :             return;

  0008a	eb 4d		 jmp	 SHORT $LN1@load
$LN2@load:

; 91   :         boost::serialization::throw_exception(

  0008c	6a 01		 push	 1
  0008e	6a 00		 push	 0
  00090	6a 00		 push	 0
  00092	6a 08		 push	 8
  00094	8d 8d 7c fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  0009a	e8 00 00 00 00	 call	 ??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z ; boost::archive::archive_exception::archive_exception
  0009f	89 85 74 fe ff
	ff		 mov	 DWORD PTR tv92[ebp], eax
  000a5	8b 85 74 fe ff
	ff		 mov	 eax, DWORD PTR tv92[ebp]
  000ab	89 85 70 fe ff
	ff		 mov	 DWORD PTR tv91[ebp], eax
  000b1	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000b8	8b 8d 70 fe ff
	ff		 mov	 ecx, DWORD PTR tv91[ebp]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 ??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
  000c4	83 c4 04	 add	 esp, 4
  000c7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ce	8d 8d 7c fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  000d4	e8 00 00 00 00	 call	 ??_Darchive_exception@archive@boost@@QAEXXZ
$LN1@load:

; 92   :             archive_exception(archive_exception::input_stream_error)
; 93   :         );
; 94   :     }

  000d9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000dc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e3	59		 pop	 ecx
  000e4	5f		 pop	 edi
  000e5	5e		 pop	 esi
  000e6	5b		 pop	 ebx
  000e7	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ea	33 cd		 xor	 ecx, ebp
  000ec	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f1	81 c4 90 01 00
	00		 add	 esp, 400		; 00000190H
  000f7	3b ec		 cmp	 ebp, esp
  000f9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000fe	8b e5		 mov	 esp, ebp
  00100	5d		 pop	 ebp
  00101	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z$0:
  00000	8d 8d 7c fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00006	e9 00 00 00 00	 jmp	 ??_Darchive_exception@archive@boost@@QAEXXZ
__ehhandler$??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 6c fe ff
	ff		 mov	 ecx, DWORD PTR [edx-404]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z ENDP ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<unsigned int>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z
_TEXT	SEGMENT
tv92 = -388						; size = 4
tv93 = -384						; size = 4
tv72 = -384						; size = 4
$T2 = -376						; size = 152
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
___formal$ = 12						; size = 4
??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<unsigned int>, COMDAT
; _this$ = ecx

; 125  :     void save_impl(const T &t, boost::mpl::bool_<false> &){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 78 01 00
	00		 sub	 esp, 376		; 00000178H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 7c fe ff
	ff		 lea	 edi, DWORD PTR [ebp-388]
  00021	b9 5e 00 00 00	 mov	 ecx, 94			; 0000005eH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 126  :         if(os.fail())

  00045	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004a	89 8d 80 fe ff
	ff		 mov	 DWORD PTR tv72[ebp], ecx
  00050	8b 95 80 fe ff
	ff		 mov	 edx, DWORD PTR tv72[ebp]
  00056	8b 02		 mov	 eax, DWORD PTR [edx]
  00058	8b 8d 80 fe ff
	ff		 mov	 ecx, DWORD PTR tv72[ebp]
  0005e	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  00061	8b f4		 mov	 esi, esp
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?fail@ios_base@std@@QBE_NXZ
  00069	3b f4		 cmp	 esi, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	0f b6 c8	 movzx	 ecx, al
  00073	85 c9		 test	 ecx, ecx
  00075	74 4d		 je	 SHORT $LN2@save_impl

; 127  :             boost::serialization::throw_exception(

  00077	6a 01		 push	 1
  00079	6a 00		 push	 0
  0007b	6a 00		 push	 0
  0007d	6a 0d		 push	 13			; 0000000dH
  0007f	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00085	e8 00 00 00 00	 call	 ??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z ; boost::archive::archive_exception::archive_exception
  0008a	89 85 80 fe ff
	ff		 mov	 DWORD PTR tv93[ebp], eax
  00090	8b 85 80 fe ff
	ff		 mov	 eax, DWORD PTR tv93[ebp]
  00096	89 85 7c fe ff
	ff		 mov	 DWORD PTR tv92[ebp], eax
  0009c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000a3	8b 8d 7c fe ff
	ff		 mov	 ecx, DWORD PTR tv92[ebp]
  000a9	51		 push	 ecx
  000aa	e8 00 00 00 00	 call	 ??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
  000af	83 c4 04	 add	 esp, 4
  000b2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b9	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  000bf	e8 00 00 00 00	 call	 ??_Darchive_exception@archive@boost@@QAEXXZ
$LN2@save_impl:

; 128  :                 archive_exception(archive_exception::output_stream_error)
; 129  :             );
; 130  :         os << t;

  000c4	8b f4		 mov	 esi, esp
  000c6	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  000c9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000cb	51		 push	 ecx
  000cc	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000cf	8b 0a		 mov	 ecx, DWORD PTR [edx]
  000d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z
  000d7	3b f4		 cmp	 esi, esp
  000d9	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 131  :     }

  000de	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e8	59		 pop	 ecx
  000e9	5f		 pop	 edi
  000ea	5e		 pop	 esi
  000eb	5b		 pop	 ebx
  000ec	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ef	33 cd		 xor	 ecx, ebp
  000f1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f6	81 c4 84 01 00
	00		 add	 esp, 388		; 00000184H
  000fc	3b ec		 cmp	 ebp, esp
  000fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00103	8b e5		 mov	 esp, ebp
  00105	5d		 pop	 ebp
  00106	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z$0:
  00000	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00006	e9 00 00 00 00	 jmp	 ??_Darchive_exception@archive@boost@@QAEXXZ
__ehhandler$??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 78 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-392]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<unsigned int>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\throw_exception.hpp
;	COMDAT ??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z
_TEXT	SEGMENT
$T1 = -352						; size = 152
__$ArrayPad$ = -4					; size = 4
_e$ = 8							; size = 4
??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z PROC ; boost::serialization::throw_exception<boost::archive::archive_exception>, COMDAT

; 35   : template<class E> inline void throw_exception(E const & e){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 64 01 00
	00		 sub	 esp, 356		; 00000164H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 9c fe ff
	ff		 lea	 edi, DWORD PTR [ebp-356]
  00012	b9 59 00 00 00	 mov	 ecx, 89			; 00000059H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 36   :     throw e;

  00028	6a 01		 push	 1
  0002a	8b 45 08	 mov	 eax, DWORD PTR _e$[ebp]
  0002d	50		 push	 eax
  0002e	8d 8d a0 fe ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00034	e8 00 00 00 00	 call	 ??0archive_exception@archive@boost@@QAE@ABV012@@Z ; boost::archive::archive_exception::archive_exception
  00039	68 00 00 00 00	 push	 OFFSET __TI2?AVarchive_exception@archive@boost@@
  0003e	8d 8d a0 fe ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00044	51		 push	 ecx
  00045	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@throw_exce:

; 37   : }

  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00050	33 cd		 xor	 ecx, ebp
  00052	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00057	81 c4 64 01 00
	00		 add	 esp, 356		; 00000164H
  0005d	3b ec		 cmp	 ebp, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c3		 ret	 0
??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ENDP ; boost::serialization::throw_exception<boost::archive::archive_exception>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iprimitive.hpp
;	COMDAT ??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z
_TEXT	SEGMENT
tv93 = -400						; size = 4
tv94 = -396						; size = 4
$T2 = -388						; size = 152
$T3 = -228						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z PROC ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::archive::object_id_type>, COMDAT
; _this$ = ecx

; 88   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 84 01 00
	00		 sub	 esp, 388		; 00000184H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 70 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-400]
  00021	b9 61 00 00 00	 mov	 ecx, 97			; 00000061H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 89   :         if(is >> t)

  00045	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00048	e8 00 00 00 00	 call	 ??Bobject_id_type@archive@boost@@QAEAAIXZ ; boost::archive::object_id_type::operator unsigned int &
  0004d	8b f4		 mov	 esi, esp
  0004f	50		 push	 eax
  00050	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAI@Z
  0005b	3b f4		 cmp	 esi, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00062	89 85 1c ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00068	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  0006e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00070	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  00076	03 4a 04	 add	 ecx, DWORD PTR [edx+4]
  00079	8b f4		 mov	 esi, esp
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??Bios_base@std@@QBE_NXZ
  00081	3b f4		 cmp	 esi, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00088	0f b6 c0	 movzx	 eax, al
  0008b	85 c0		 test	 eax, eax
  0008d	74 02		 je	 SHORT $LN2@load

; 90   :             return;

  0008f	eb 4d		 jmp	 SHORT $LN1@load
$LN2@load:

; 91   :         boost::serialization::throw_exception(

  00091	6a 01		 push	 1
  00093	6a 00		 push	 0
  00095	6a 00		 push	 0
  00097	6a 08		 push	 8
  00099	8d 8d 7c fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  0009f	e8 00 00 00 00	 call	 ??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z ; boost::archive::archive_exception::archive_exception
  000a4	89 85 74 fe ff
	ff		 mov	 DWORD PTR tv94[ebp], eax
  000aa	8b 85 74 fe ff
	ff		 mov	 eax, DWORD PTR tv94[ebp]
  000b0	89 85 70 fe ff
	ff		 mov	 DWORD PTR tv93[ebp], eax
  000b6	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000bd	8b 8d 70 fe ff
	ff		 mov	 ecx, DWORD PTR tv93[ebp]
  000c3	51		 push	 ecx
  000c4	e8 00 00 00 00	 call	 ??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
  000c9	83 c4 04	 add	 esp, 4
  000cc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000d3	8d 8d 7c fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  000d9	e8 00 00 00 00	 call	 ??_Darchive_exception@archive@boost@@QAEXXZ
$LN1@load:

; 92   :             archive_exception(archive_exception::input_stream_error)
; 93   :         );
; 94   :     }

  000de	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e8	59		 pop	 ecx
  000e9	5f		 pop	 edi
  000ea	5e		 pop	 esi
  000eb	5b		 pop	 ebx
  000ec	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ef	33 cd		 xor	 ecx, ebp
  000f1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f6	81 c4 90 01 00
	00		 add	 esp, 400		; 00000190H
  000fc	3b ec		 cmp	 ebp, esp
  000fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00103	8b e5		 mov	 esp, ebp
  00105	5d		 pop	 ebp
  00106	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z$0:
  00000	8d 8d 7c fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00006	e9 00 00 00 00	 jmp	 ??_Darchive_exception@archive@boost@@QAEXXZ
__ehhandler$??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 6c fe ff
	ff		 mov	 ecx, DWORD PTR [edx-404]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z ENDP ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::archive::object_id_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iprimitive.hpp
;	COMDAT ??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z
_TEXT	SEGMENT
tv93 = -400						; size = 4
tv94 = -396						; size = 4
$T2 = -388						; size = 152
$T3 = -228						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z PROC ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::archive::class_id_type>, COMDAT
; _this$ = ecx

; 88   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 84 01 00
	00		 sub	 esp, 388		; 00000184H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 70 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-400]
  00021	b9 61 00 00 00	 mov	 ecx, 97			; 00000061H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 89   :         if(is >> t)

  00045	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00048	e8 00 00 00 00	 call	 ??Bclass_id_type@archive@boost@@QAEAAFXZ ; boost::archive::class_id_type::operator short &
  0004d	8b f4		 mov	 esi, esp
  0004f	50		 push	 eax
  00050	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAF@Z
  0005b	3b f4		 cmp	 esi, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00062	89 85 1c ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00068	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  0006e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00070	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  00076	03 4a 04	 add	 ecx, DWORD PTR [edx+4]
  00079	8b f4		 mov	 esi, esp
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??Bios_base@std@@QBE_NXZ
  00081	3b f4		 cmp	 esi, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00088	0f b6 c0	 movzx	 eax, al
  0008b	85 c0		 test	 eax, eax
  0008d	74 02		 je	 SHORT $LN2@load

; 90   :             return;

  0008f	eb 4d		 jmp	 SHORT $LN1@load
$LN2@load:

; 91   :         boost::serialization::throw_exception(

  00091	6a 01		 push	 1
  00093	6a 00		 push	 0
  00095	6a 00		 push	 0
  00097	6a 08		 push	 8
  00099	8d 8d 7c fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  0009f	e8 00 00 00 00	 call	 ??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z ; boost::archive::archive_exception::archive_exception
  000a4	89 85 74 fe ff
	ff		 mov	 DWORD PTR tv94[ebp], eax
  000aa	8b 85 74 fe ff
	ff		 mov	 eax, DWORD PTR tv94[ebp]
  000b0	89 85 70 fe ff
	ff		 mov	 DWORD PTR tv93[ebp], eax
  000b6	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000bd	8b 8d 70 fe ff
	ff		 mov	 ecx, DWORD PTR tv93[ebp]
  000c3	51		 push	 ecx
  000c4	e8 00 00 00 00	 call	 ??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
  000c9	83 c4 04	 add	 esp, 4
  000cc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000d3	8d 8d 7c fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  000d9	e8 00 00 00 00	 call	 ??_Darchive_exception@archive@boost@@QAEXXZ
$LN1@load:

; 92   :             archive_exception(archive_exception::input_stream_error)
; 93   :         );
; 94   :     }

  000de	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e8	59		 pop	 ecx
  000e9	5f		 pop	 edi
  000ea	5e		 pop	 esi
  000eb	5b		 pop	 ebx
  000ec	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ef	33 cd		 xor	 ecx, ebp
  000f1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f6	81 c4 90 01 00
	00		 add	 esp, 400		; 00000190H
  000fc	3b ec		 cmp	 ebp, esp
  000fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00103	8b e5		 mov	 esp, ebp
  00105	5d		 pop	 ebp
  00106	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z$0:
  00000	8d 8d 7c fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00006	e9 00 00 00 00	 jmp	 ??_Darchive_exception@archive@boost@@QAEXXZ
__ehhandler$??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 6c fe ff
	ff		 mov	 ecx, DWORD PTR [edx-404]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z ENDP ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::archive::class_id_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iprimitive.hpp
;	COMDAT ??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z
_TEXT	SEGMENT
tv93 = -400						; size = 4
tv94 = -396						; size = 4
$T2 = -388						; size = 152
$T3 = -228						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z PROC ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::archive::tracking_type>, COMDAT
; _this$ = ecx

; 88   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 84 01 00
	00		 sub	 esp, 388		; 00000184H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 70 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-400]
  00021	b9 61 00 00 00	 mov	 ecx, 97			; 00000061H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 89   :         if(is >> t)

  00045	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00048	e8 00 00 00 00	 call	 ??Btracking_type@archive@boost@@QAEAA_NXZ ; boost::archive::tracking_type::operator bool &
  0004d	8b f4		 mov	 esi, esp
  0004f	50		 push	 eax
  00050	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_N@Z
  0005b	3b f4		 cmp	 esi, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00062	89 85 1c ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00068	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  0006e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00070	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  00076	03 4a 04	 add	 ecx, DWORD PTR [edx+4]
  00079	8b f4		 mov	 esi, esp
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??Bios_base@std@@QBE_NXZ
  00081	3b f4		 cmp	 esi, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00088	0f b6 c0	 movzx	 eax, al
  0008b	85 c0		 test	 eax, eax
  0008d	74 02		 je	 SHORT $LN2@load

; 90   :             return;

  0008f	eb 4d		 jmp	 SHORT $LN1@load
$LN2@load:

; 91   :         boost::serialization::throw_exception(

  00091	6a 01		 push	 1
  00093	6a 00		 push	 0
  00095	6a 00		 push	 0
  00097	6a 08		 push	 8
  00099	8d 8d 7c fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  0009f	e8 00 00 00 00	 call	 ??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z ; boost::archive::archive_exception::archive_exception
  000a4	89 85 74 fe ff
	ff		 mov	 DWORD PTR tv94[ebp], eax
  000aa	8b 85 74 fe ff
	ff		 mov	 eax, DWORD PTR tv94[ebp]
  000b0	89 85 70 fe ff
	ff		 mov	 DWORD PTR tv93[ebp], eax
  000b6	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000bd	8b 8d 70 fe ff
	ff		 mov	 ecx, DWORD PTR tv93[ebp]
  000c3	51		 push	 ecx
  000c4	e8 00 00 00 00	 call	 ??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
  000c9	83 c4 04	 add	 esp, 4
  000cc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000d3	8d 8d 7c fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  000d9	e8 00 00 00 00	 call	 ??_Darchive_exception@archive@boost@@QAEXXZ
$LN1@load:

; 92   :             archive_exception(archive_exception::input_stream_error)
; 93   :         );
; 94   :     }

  000de	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e8	59		 pop	 ecx
  000e9	5f		 pop	 edi
  000ea	5e		 pop	 esi
  000eb	5b		 pop	 ebx
  000ec	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ef	33 cd		 xor	 ecx, ebp
  000f1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f6	81 c4 90 01 00
	00		 add	 esp, 400		; 00000190H
  000fc	3b ec		 cmp	 ebp, esp
  000fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00103	8b e5		 mov	 esp, ebp
  00105	5d		 pop	 ebp
  00106	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z$0:
  00000	8d 8d 7c fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00006	e9 00 00 00 00	 jmp	 ??_Darchive_exception@archive@boost@@QAEXXZ
__ehhandler$??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 6c fe ff
	ff		 mov	 ecx, DWORD PTR [edx-404]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z ENDP ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::archive::tracking_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z
_TEXT	SEGMENT
tv130 = -388						; size = 4
tv131 = -384						; size = 4
tv72 = -384						; size = 4
$T2 = -376						; size = 152
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
___formal$ = 12						; size = 4
??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::object_reference_type>, COMDAT
; _this$ = ecx

; 125  :     void save_impl(const T &t, boost::mpl::bool_<false> &){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 78 01 00
	00		 sub	 esp, 376		; 00000178H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 7c fe ff
	ff		 lea	 edi, DWORD PTR [ebp-388]
  00021	b9 5e 00 00 00	 mov	 ecx, 94			; 0000005eH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 126  :         if(os.fail())

  00045	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004a	89 8d 80 fe ff
	ff		 mov	 DWORD PTR tv72[ebp], ecx
  00050	8b 95 80 fe ff
	ff		 mov	 edx, DWORD PTR tv72[ebp]
  00056	8b 02		 mov	 eax, DWORD PTR [edx]
  00058	8b 8d 80 fe ff
	ff		 mov	 ecx, DWORD PTR tv72[ebp]
  0005e	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  00061	8b f4		 mov	 esi, esp
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?fail@ios_base@std@@QBE_NXZ
  00069	3b f4		 cmp	 esi, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	0f b6 c8	 movzx	 ecx, al
  00073	85 c9		 test	 ecx, ecx
  00075	74 4d		 je	 SHORT $LN2@save_impl

; 127  :             boost::serialization::throw_exception(

  00077	6a 01		 push	 1
  00079	6a 00		 push	 0
  0007b	6a 00		 push	 0
  0007d	6a 0d		 push	 13			; 0000000dH
  0007f	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00085	e8 00 00 00 00	 call	 ??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z ; boost::archive::archive_exception::archive_exception
  0008a	89 85 80 fe ff
	ff		 mov	 DWORD PTR tv131[ebp], eax
  00090	8b 85 80 fe ff
	ff		 mov	 eax, DWORD PTR tv131[ebp]
  00096	89 85 7c fe ff
	ff		 mov	 DWORD PTR tv130[ebp], eax
  0009c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000a3	8b 8d 7c fe ff
	ff		 mov	 ecx, DWORD PTR tv130[ebp]
  000a9	51		 push	 ecx
  000aa	e8 00 00 00 00	 call	 ??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
  000af	83 c4 04	 add	 esp, 4
  000b2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b9	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  000bf	e8 00 00 00 00	 call	 ??_Darchive_exception@archive@boost@@QAEXXZ
$LN2@save_impl:

; 128  :                 archive_exception(archive_exception::output_stream_error)
; 129  :             );
; 130  :         os << t;

  000c4	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  000c7	e8 00 00 00 00	 call	 ??Bobject_id_type@archive@boost@@QBEIXZ ; boost::archive::object_id_type::operator unsigned int
  000cc	8b f4		 mov	 esi, esp
  000ce	50		 push	 eax
  000cf	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z
  000da	3b f4		 cmp	 esi, esp
  000dc	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 131  :     }

  000e1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000eb	59		 pop	 ecx
  000ec	5f		 pop	 edi
  000ed	5e		 pop	 esi
  000ee	5b		 pop	 ebx
  000ef	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f2	33 cd		 xor	 ecx, ebp
  000f4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f9	81 c4 84 01 00
	00		 add	 esp, 388		; 00000184H
  000ff	3b ec		 cmp	 ebp, esp
  00101	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z$0:
  00000	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00006	e9 00 00 00 00	 jmp	 ??_Darchive_exception@archive@boost@@QAEXXZ
__ehhandler$??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 78 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-392]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::object_reference_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z
_TEXT	SEGMENT
tv94 = -388						; size = 4
tv95 = -384						; size = 4
tv72 = -384						; size = 4
$T2 = -376						; size = 152
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
___formal$ = 12						; size = 4
??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::class_id_type>, COMDAT
; _this$ = ecx

; 125  :     void save_impl(const T &t, boost::mpl::bool_<false> &){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 78 01 00
	00		 sub	 esp, 376		; 00000178H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 7c fe ff
	ff		 lea	 edi, DWORD PTR [ebp-388]
  00021	b9 5e 00 00 00	 mov	 ecx, 94			; 0000005eH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 126  :         if(os.fail())

  00045	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004a	89 8d 80 fe ff
	ff		 mov	 DWORD PTR tv72[ebp], ecx
  00050	8b 95 80 fe ff
	ff		 mov	 edx, DWORD PTR tv72[ebp]
  00056	8b 02		 mov	 eax, DWORD PTR [edx]
  00058	8b 8d 80 fe ff
	ff		 mov	 ecx, DWORD PTR tv72[ebp]
  0005e	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  00061	8b f4		 mov	 esi, esp
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?fail@ios_base@std@@QBE_NXZ
  00069	3b f4		 cmp	 esi, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	0f b6 c8	 movzx	 ecx, al
  00073	85 c9		 test	 ecx, ecx
  00075	74 4d		 je	 SHORT $LN2@save_impl

; 127  :             boost::serialization::throw_exception(

  00077	6a 01		 push	 1
  00079	6a 00		 push	 0
  0007b	6a 00		 push	 0
  0007d	6a 0d		 push	 13			; 0000000dH
  0007f	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00085	e8 00 00 00 00	 call	 ??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z ; boost::archive::archive_exception::archive_exception
  0008a	89 85 80 fe ff
	ff		 mov	 DWORD PTR tv95[ebp], eax
  00090	8b 85 80 fe ff
	ff		 mov	 eax, DWORD PTR tv95[ebp]
  00096	89 85 7c fe ff
	ff		 mov	 DWORD PTR tv94[ebp], eax
  0009c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000a3	8b 8d 7c fe ff
	ff		 mov	 ecx, DWORD PTR tv94[ebp]
  000a9	51		 push	 ecx
  000aa	e8 00 00 00 00	 call	 ??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
  000af	83 c4 04	 add	 esp, 4
  000b2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b9	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  000bf	e8 00 00 00 00	 call	 ??_Darchive_exception@archive@boost@@QAEXXZ
$LN2@save_impl:

; 128  :                 archive_exception(archive_exception::output_stream_error)
; 129  :             );
; 130  :         os << t;

  000c4	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  000c7	e8 00 00 00 00	 call	 ??Bclass_id_type@archive@boost@@QBEHXZ ; boost::archive::class_id_type::operator int
  000cc	8b f4		 mov	 esi, esp
  000ce	50		 push	 eax
  000cf	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
  000da	3b f4		 cmp	 esi, esp
  000dc	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 131  :     }

  000e1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000eb	59		 pop	 ecx
  000ec	5f		 pop	 edi
  000ed	5e		 pop	 esi
  000ee	5b		 pop	 ebx
  000ef	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f2	33 cd		 xor	 ecx, ebp
  000f4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f9	81 c4 84 01 00
	00		 add	 esp, 388		; 00000184H
  000ff	3b ec		 cmp	 ebp, esp
  00101	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z$0:
  00000	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00006	e9 00 00 00 00	 jmp	 ??_Darchive_exception@archive@boost@@QAEXXZ
__ehhandler$??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 78 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-392]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::class_id_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z
_TEXT	SEGMENT
tv130 = -388						; size = 4
tv131 = -384						; size = 4
tv72 = -384						; size = 4
$T2 = -376						; size = 152
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
___formal$ = 12						; size = 4
??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::class_id_reference_type>, COMDAT
; _this$ = ecx

; 125  :     void save_impl(const T &t, boost::mpl::bool_<false> &){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 78 01 00
	00		 sub	 esp, 376		; 00000178H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 7c fe ff
	ff		 lea	 edi, DWORD PTR [ebp-388]
  00021	b9 5e 00 00 00	 mov	 ecx, 94			; 0000005eH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 126  :         if(os.fail())

  00045	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004a	89 8d 80 fe ff
	ff		 mov	 DWORD PTR tv72[ebp], ecx
  00050	8b 95 80 fe ff
	ff		 mov	 edx, DWORD PTR tv72[ebp]
  00056	8b 02		 mov	 eax, DWORD PTR [edx]
  00058	8b 8d 80 fe ff
	ff		 mov	 ecx, DWORD PTR tv72[ebp]
  0005e	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  00061	8b f4		 mov	 esi, esp
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?fail@ios_base@std@@QBE_NXZ
  00069	3b f4		 cmp	 esi, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	0f b6 c8	 movzx	 ecx, al
  00073	85 c9		 test	 ecx, ecx
  00075	74 4d		 je	 SHORT $LN2@save_impl

; 127  :             boost::serialization::throw_exception(

  00077	6a 01		 push	 1
  00079	6a 00		 push	 0
  0007b	6a 00		 push	 0
  0007d	6a 0d		 push	 13			; 0000000dH
  0007f	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00085	e8 00 00 00 00	 call	 ??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z ; boost::archive::archive_exception::archive_exception
  0008a	89 85 80 fe ff
	ff		 mov	 DWORD PTR tv131[ebp], eax
  00090	8b 85 80 fe ff
	ff		 mov	 eax, DWORD PTR tv131[ebp]
  00096	89 85 7c fe ff
	ff		 mov	 DWORD PTR tv130[ebp], eax
  0009c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000a3	8b 8d 7c fe ff
	ff		 mov	 ecx, DWORD PTR tv130[ebp]
  000a9	51		 push	 ecx
  000aa	e8 00 00 00 00	 call	 ??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
  000af	83 c4 04	 add	 esp, 4
  000b2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b9	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  000bf	e8 00 00 00 00	 call	 ??_Darchive_exception@archive@boost@@QAEXXZ
$LN2@save_impl:

; 128  :                 archive_exception(archive_exception::output_stream_error)
; 129  :             );
; 130  :         os << t;

  000c4	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  000c7	e8 00 00 00 00	 call	 ??Bclass_id_type@archive@boost@@QBEHXZ ; boost::archive::class_id_type::operator int
  000cc	8b f4		 mov	 esi, esp
  000ce	50		 push	 eax
  000cf	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
  000da	3b f4		 cmp	 esi, esp
  000dc	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 131  :     }

  000e1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000eb	59		 pop	 ecx
  000ec	5f		 pop	 edi
  000ed	5e		 pop	 esi
  000ee	5b		 pop	 ebx
  000ef	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f2	33 cd		 xor	 ecx, ebp
  000f4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f9	81 c4 84 01 00
	00		 add	 esp, 388		; 00000184H
  000ff	3b ec		 cmp	 ebp, esp
  00101	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z$0:
  00000	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00006	e9 00 00 00 00	 jmp	 ??_Darchive_exception@archive@boost@@QAEXXZ
__ehhandler$??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 78 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-392]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::class_id_reference_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z
_TEXT	SEGMENT
tv94 = -388						; size = 4
tv95 = -384						; size = 4
tv72 = -384						; size = 4
$T2 = -376						; size = 152
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
___formal$ = 12						; size = 4
??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::tracking_type>, COMDAT
; _this$ = ecx

; 125  :     void save_impl(const T &t, boost::mpl::bool_<false> &){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 78 01 00
	00		 sub	 esp, 376		; 00000178H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 7c fe ff
	ff		 lea	 edi, DWORD PTR [ebp-388]
  00021	b9 5e 00 00 00	 mov	 ecx, 94			; 0000005eH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 126  :         if(os.fail())

  00045	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004a	89 8d 80 fe ff
	ff		 mov	 DWORD PTR tv72[ebp], ecx
  00050	8b 95 80 fe ff
	ff		 mov	 edx, DWORD PTR tv72[ebp]
  00056	8b 02		 mov	 eax, DWORD PTR [edx]
  00058	8b 8d 80 fe ff
	ff		 mov	 ecx, DWORD PTR tv72[ebp]
  0005e	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  00061	8b f4		 mov	 esi, esp
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?fail@ios_base@std@@QBE_NXZ
  00069	3b f4		 cmp	 esi, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	0f b6 c8	 movzx	 ecx, al
  00073	85 c9		 test	 ecx, ecx
  00075	74 4d		 je	 SHORT $LN2@save_impl

; 127  :             boost::serialization::throw_exception(

  00077	6a 01		 push	 1
  00079	6a 00		 push	 0
  0007b	6a 00		 push	 0
  0007d	6a 0d		 push	 13			; 0000000dH
  0007f	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00085	e8 00 00 00 00	 call	 ??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z ; boost::archive::archive_exception::archive_exception
  0008a	89 85 80 fe ff
	ff		 mov	 DWORD PTR tv95[ebp], eax
  00090	8b 85 80 fe ff
	ff		 mov	 eax, DWORD PTR tv95[ebp]
  00096	89 85 7c fe ff
	ff		 mov	 DWORD PTR tv94[ebp], eax
  0009c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000a3	8b 8d 7c fe ff
	ff		 mov	 ecx, DWORD PTR tv94[ebp]
  000a9	51		 push	 ecx
  000aa	e8 00 00 00 00	 call	 ??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
  000af	83 c4 04	 add	 esp, 4
  000b2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b9	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  000bf	e8 00 00 00 00	 call	 ??_Darchive_exception@archive@boost@@QAEXXZ
$LN2@save_impl:

; 128  :                 archive_exception(archive_exception::output_stream_error)
; 129  :             );
; 130  :         os << t;

  000c4	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  000c7	e8 00 00 00 00	 call	 ??Btracking_type@archive@boost@@QBE_NXZ ; boost::archive::tracking_type::operator bool
  000cc	8b f4		 mov	 esi, esp
  000ce	0f b6 c0	 movzx	 eax, al
  000d1	50		 push	 eax
  000d2	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d5	8b 09		 mov	 ecx, DWORD PTR [ecx]
  000d7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_N@Z
  000dd	3b f4		 cmp	 esi, esp
  000df	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 131  :     }

  000e4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ee	59		 pop	 ecx
  000ef	5f		 pop	 edi
  000f0	5e		 pop	 esi
  000f1	5b		 pop	 ebx
  000f2	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f5	33 cd		 xor	 ecx, ebp
  000f7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000fc	81 c4 84 01 00
	00		 add	 esp, 388		; 00000184H
  00102	3b ec		 cmp	 ebp, esp
  00104	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00109	8b e5		 mov	 esp, ebp
  0010b	5d		 pop	 ebp
  0010c	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z$0:
  00000	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00006	e9 00 00 00 00	 jmp	 ??_Darchive_exception@archive@boost@@QAEXXZ
__ehhandler$??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 78 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-392]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::tracking_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??$serialize@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z PROC ; boost::serialization::serialize<boost::archive::text_iarchive,CContact>, COMDAT

; 67   : ){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 68   :     access::serialize(ar, t, static_cast<unsigned int>(file_version));

  0001e	8b 45 10	 mov	 eax, DWORD PTR _file_version$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 0c	 mov	 ecx, DWORD PTR _t$[ebp]
  00025	51		 push	 ecx
  00026	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00029	52		 push	 edx
  0002a	e8 00 00 00 00	 call	 ??$serialize@Vtext_iarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_iarchive@archive@2@AAVCContact@@I@Z ; boost::serialization::access::serialize<boost::archive::text_iarchive,CContact>
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 69   : }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
??$serialize@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z ENDP ; boost::serialization::serialize<boost::archive::text_iarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\smart_cast.hpp
;	COMDAT ??$cast@Vbasic_iarchive@detail@archive@boost@@@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@3@AAVbasic_iarchive@detail@53@@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??$cast@Vbasic_iarchive@detail@archive@boost@@@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@3@AAVbasic_iarchive@detail@53@@Z PROC ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::cast<boost::archive::detail::basic_iarchive>, COMDAT

; 125  :         static T cast(U & u){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 126  :             typedef typename mpl::eval_if<
; 127  :                 boost::is_polymorphic<U>,
; 128  :                 mpl::identity<polymorphic>,
; 129  :                 mpl::identity<non_polymorphic>
; 130  :             >::type typex;
; 131  :             return typex::cast(u);

  0001e	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$cast@Vbasic_iarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@4@AAVbasic_iarchive@detail@64@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::polymorphic::cast<boost::archive::detail::basic_iarchive>
  00027	83 c4 04	 add	 esp, 4

; 132  :         }

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??$cast@Vbasic_iarchive@detail@archive@boost@@@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@3@AAVbasic_iarchive@detail@53@@Z ENDP ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::cast<boost::archive::detail::basic_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\access.hpp
;	COMDAT ??$serialize@Vtext_oarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@AAVCContact@@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize@Vtext_oarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@AAVCContact@@I@Z PROC ; boost::serialization::access::serialize<boost::archive::text_oarchive,CContact>, COMDAT

; 106  :     ){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 107  :         // note: if you get a compile time error here with a
; 108  :         // message something like:
; 109  :         // cannot convert parameter 1 from <file type 1> to <file type 2 &>
; 110  :         // a likely possible cause is that the class T contains a 
; 111  :         // serialize function - but that serialize function isn't 
; 112  :         // a template and corresponds to a file type different than
; 113  :         // the class Archive.  To resolve this, don't include an
; 114  :         // archive type other than that for which the serialization
; 115  :         // function is defined!!!
; 116  :         t.serialize(ar, file_version);

  0001e	8b 45 10	 mov	 eax, DWORD PTR _file_version$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00025	51		 push	 ecx
  00026	8b 4d 0c	 mov	 ecx, DWORD PTR _t$[ebp]
  00029	e8 00 00 00 00	 call	 ??$serialize@Vtext_oarchive@archive@boost@@@CContact@@IAEXAAVtext_oarchive@archive@boost@@I@Z ; CContact::serialize<boost::archive::text_oarchive>

; 117  :     }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??$serialize@Vtext_oarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@AAVCContact@@I@Z ENDP ; boost::serialization::access::serialize<boost::archive::text_oarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\smart_cast.hpp
;	COMDAT ??$cast@Vbasic_oarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@4@AAVbasic_oarchive@detail@64@@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??$cast@Vbasic_oarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@4@AAVbasic_oarchive@detail@64@@Z PROC ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::polymorphic::cast<boost::archive::detail::basic_oarchive>, COMDAT

; 85   :             static T cast(U & u){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 86   :                 // if we're in debug mode
; 87   :                 #if ! defined(NDEBUG)                               \
; 88   :                 || defined(__MWERKS__)
; 89   :                     // do a checked dynamic cast
; 90   :                     return cross::cast(u);

  0001e	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$cast@Vbasic_oarchive@detail@archive@boost@@@cross@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@5@AAVbasic_oarchive@detail@75@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::polymorphic::cross::cast<boost::archive::detail::basic_oarchive>
  00027	83 c4 04	 add	 esp, 4

; 91   :                 #else
; 92   :                     // borland 5.51 chokes here so we can't use it
; 93   :                     // note: if remove_reference isn't function for these types
; 94   :                     // cross casting will be selected this will work but will
; 95   :                     // not be the most efficient method. This will conflict with
; 96   :                     // the original smart_cast motivation.
; 97   :                     typedef typename mpl::eval_if<
; 98   :                             typename mpl::and_<
; 99   :                                 mpl::not_<is_base_and_derived<
; 100  :                                     typename remove_reference< T >::type,
; 101  :                                     U
; 102  :                                 > >,
; 103  :                                 mpl::not_<is_base_and_derived<
; 104  :                                     U,
; 105  :                                     typename remove_reference< T >::type
; 106  :                                 > >
; 107  :                             >,
; 108  :                             // borland chokes w/o full qualification here
; 109  :                             mpl::identity<cross>,
; 110  :                             mpl::identity<linear>
; 111  :                     >::type typex;
; 112  :                     // typex works around gcc 2.95 issue
; 113  :                     return typex::cast(u);
; 114  :                 #endif
; 115  :             }

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??$cast@Vbasic_oarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@4@AAVbasic_oarchive@detail@64@@Z ENDP ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::polymorphic::cast<boost::archive::detail::basic_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load@I@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load@I@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAI@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<unsigned int>, COMDAT
; _this$ = ecx

; 55   :     void load(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 56   :         basic_text_iprimitive<std::istream>::load(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ??$load@I@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAI@Z ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<unsigned int>

; 57   :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??$load@I@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAI@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z
_TEXT	SEGMENT
tv94 = -276						; size = 4
tv76 = -276						; size = 4
tv129 = -272						; size = 4
tv79 = -272						; size = 4
_tf$ = -69						; size = 1
_ps$ = -60						; size = 16
_fs$ = -36						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<unsigned int>, COMDAT
; _this$ = ecx

; 177  :     void save(const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd ec fe ff
	ff		 lea	 edi, DWORD PTR [ebp-276]
  00021	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 178  :         boost::io::ios_flags_saver fs(os);

  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	83 38 00	 cmp	 DWORD PTR [eax], 0
  00048	75 0c		 jne	 SHORT $LN3@save
  0004a	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv79[ebp], 0
  00054	eb 22		 jmp	 SHORT $LN4@save
$LN3@save:
  00056	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005b	89 95 ec fe ff
	ff		 mov	 DWORD PTR tv76[ebp], edx
  00061	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR tv76[ebp]
  00067	8b 08		 mov	 ecx, DWORD PTR [eax]
  00069	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR tv76[ebp]
  0006f	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00072	89 95 f0 fe ff
	ff		 mov	 DWORD PTR tv79[ebp], edx
$LN4@save:
  00078	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv79[ebp]
  0007e	50		 push	 eax
  0007f	8d 4d dc	 lea	 ecx, DWORD PTR _fs$[ebp]
  00082	e8 00 00 00 00	 call	 ??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_flags_saver::ios_flags_saver
  00087	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 179  :         boost::io::ios_precision_saver ps(os);

  0008e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00091	83 38 00	 cmp	 DWORD PTR [eax], 0
  00094	75 0c		 jne	 SHORT $LN5@save
  00096	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv129[ebp], 0
  000a0	eb 22		 jmp	 SHORT $LN6@save
$LN5@save:
  000a2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a7	89 95 ec fe ff
	ff		 mov	 DWORD PTR tv94[ebp], edx
  000ad	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR tv94[ebp]
  000b3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b5	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR tv94[ebp]
  000bb	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  000be	89 95 f0 fe ff
	ff		 mov	 DWORD PTR tv129[ebp], edx
$LN6@save:
  000c4	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv129[ebp]
  000ca	50		 push	 eax
  000cb	8d 4d c4	 lea	 ecx, DWORD PTR _ps$[ebp]
  000ce	e8 00 00 00 00	 call	 ??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_precision_saver::ios_precision_saver
  000d3	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 180  :         typename is_float<T>::type tf;
; 181  :         save_impl(t, tf);

  000d7	8d 45 bb	 lea	 eax, DWORD PTR _tf$[ebp]
  000da	50		 push	 eax
  000db	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  000de	51		 push	 ecx
  000df	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e2	e8 00 00 00 00	 call	 ??$save_impl@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABIAAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<unsigned int>

; 182  :     }

  000e7	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000eb	8d 4d c4	 lea	 ecx, DWORD PTR _ps$[ebp]
  000ee	e8 00 00 00 00	 call	 ??1ios_precision_saver@io@boost@@QAE@XZ ; boost::io::ios_precision_saver::~ios_precision_saver
  000f3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000fa	8d 4d dc	 lea	 ecx, DWORD PTR _fs$[ebp]
  000fd	e8 00 00 00 00	 call	 ??1ios_flags_saver@io@boost@@QAE@XZ ; boost::io::ios_flags_saver::~ios_flags_saver
  00102	52		 push	 edx
  00103	8b cd		 mov	 ecx, ebp
  00105	50		 push	 eax
  00106	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN14@save
  0010c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00111	58		 pop	 eax
  00112	5a		 pop	 edx
  00113	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00116	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011d	59		 pop	 ecx
  0011e	5f		 pop	 edi
  0011f	5e		 pop	 esi
  00120	5b		 pop	 ebx
  00121	81 c4 14 01 00
	00		 add	 esp, 276		; 00000114H
  00127	3b ec		 cmp	 ebp, esp
  00129	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012e	8b e5		 mov	 esp, ebp
  00130	5d		 pop	 ebp
  00131	c2 04 00	 ret	 4
$LN14@save:
  00134	03 00 00 00	 DD	 3
  00138	00 00 00 00	 DD	 $LN13@save
$LN13@save:
  0013c	dc ff ff ff	 DD	 -36			; ffffffdcH
  00140	08 00 00 00	 DD	 8
  00144	00 00 00 00	 DD	 $LN9@save
  00148	c4 ff ff ff	 DD	 -60			; ffffffc4H
  0014c	10 00 00 00	 DD	 16			; 00000010H
  00150	00 00 00 00	 DD	 $LN10@save
  00154	bb ff ff ff	 DD	 -69			; ffffffbbH
  00158	01 00 00 00	 DD	 1
  0015c	00 00 00 00	 DD	 $LN11@save
$LN11@save:
  00160	74		 DB	 116			; 00000074H
  00161	66		 DB	 102			; 00000066H
  00162	00		 DB	 0
$LN10@save:
  00163	70		 DB	 112			; 00000070H
  00164	73		 DB	 115			; 00000073H
  00165	00		 DB	 0
$LN9@save:
  00166	66		 DB	 102			; 00000066H
  00167	73		 DB	 115			; 00000073H
  00168	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _fs$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ios_flags_saver@io@boost@@QAE@XZ ; boost::io::ios_flags_saver::~ios_flags_saver
__unwindfunclet$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z$1:
  00008	8d 4d c4	 lea	 ecx, DWORD PTR _ps$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1ios_precision_saver@io@boost@@QAE@XZ ; boost::io::ios_precision_saver::~ios_precision_saver
__ehhandler$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 8a e8 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-280]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<unsigned int>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z
_TEXT	SEGMENT
tv94 = -388						; size = 4
tv95 = -384						; size = 4
tv72 = -384						; size = 4
$T2 = -376						; size = 152
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
___formal$ = 12						; size = 4
??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::object_id_type>, COMDAT
; _this$ = ecx

; 125  :     void save_impl(const T &t, boost::mpl::bool_<false> &){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 78 01 00
	00		 sub	 esp, 376		; 00000178H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 7c fe ff
	ff		 lea	 edi, DWORD PTR [ebp-388]
  00021	b9 5e 00 00 00	 mov	 ecx, 94			; 0000005eH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 126  :         if(os.fail())

  00045	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004a	89 8d 80 fe ff
	ff		 mov	 DWORD PTR tv72[ebp], ecx
  00050	8b 95 80 fe ff
	ff		 mov	 edx, DWORD PTR tv72[ebp]
  00056	8b 02		 mov	 eax, DWORD PTR [edx]
  00058	8b 8d 80 fe ff
	ff		 mov	 ecx, DWORD PTR tv72[ebp]
  0005e	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  00061	8b f4		 mov	 esi, esp
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?fail@ios_base@std@@QBE_NXZ
  00069	3b f4		 cmp	 esi, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	0f b6 c8	 movzx	 ecx, al
  00073	85 c9		 test	 ecx, ecx
  00075	74 4d		 je	 SHORT $LN2@save_impl

; 127  :             boost::serialization::throw_exception(

  00077	6a 01		 push	 1
  00079	6a 00		 push	 0
  0007b	6a 00		 push	 0
  0007d	6a 0d		 push	 13			; 0000000dH
  0007f	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00085	e8 00 00 00 00	 call	 ??0archive_exception@archive@boost@@QAE@W4_exception_code@012@PBD1@Z ; boost::archive::archive_exception::archive_exception
  0008a	89 85 80 fe ff
	ff		 mov	 DWORD PTR tv95[ebp], eax
  00090	8b 85 80 fe ff
	ff		 mov	 eax, DWORD PTR tv95[ebp]
  00096	89 85 7c fe ff
	ff		 mov	 DWORD PTR tv94[ebp], eax
  0009c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000a3	8b 8d 7c fe ff
	ff		 mov	 ecx, DWORD PTR tv94[ebp]
  000a9	51		 push	 ecx
  000aa	e8 00 00 00 00	 call	 ??$throw_exception@Varchive_exception@archive@boost@@@serialization@boost@@YAXABVarchive_exception@archive@1@@Z ; boost::serialization::throw_exception<boost::archive::archive_exception>
  000af	83 c4 04	 add	 esp, 4
  000b2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b9	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  000bf	e8 00 00 00 00	 call	 ??_Darchive_exception@archive@boost@@QAEXXZ
$LN2@save_impl:

; 128  :                 archive_exception(archive_exception::output_stream_error)
; 129  :             );
; 130  :         os << t;

  000c4	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  000c7	e8 00 00 00 00	 call	 ??Bobject_id_type@archive@boost@@QBEIXZ ; boost::archive::object_id_type::operator unsigned int
  000cc	8b f4		 mov	 esi, esp
  000ce	50		 push	 eax
  000cf	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z
  000da	3b f4		 cmp	 esi, esp
  000dc	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 131  :     }

  000e1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000eb	59		 pop	 ecx
  000ec	5f		 pop	 edi
  000ed	5e		 pop	 esi
  000ee	5b		 pop	 ebx
  000ef	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f2	33 cd		 xor	 ecx, ebp
  000f4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f9	81 c4 84 01 00
	00		 add	 esp, 388		; 00000184H
  000ff	3b ec		 cmp	 ebp, esp
  00101	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z$0:
  00000	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00006	e9 00 00 00 00	 jmp	 ??_Darchive_exception@archive@boost@@QAEXXZ
__ehhandler$??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 78 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-392]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::object_id_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load@Vobject_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load@Vobject_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::archive::object_id_type>, COMDAT
; _this$ = ecx

; 55   :     void load(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 56   :         basic_text_iprimitive<std::istream>::load(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ??$load@Vobject_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVobject_id_type@12@@Z ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::archive::object_id_type>

; 57   :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??$load@Vobject_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load@Vclass_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load@Vclass_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::archive::class_id_type>, COMDAT
; _this$ = ecx

; 55   :     void load(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 56   :         basic_text_iprimitive<std::istream>::load(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ??$load@Vclass_id_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAVclass_id_type@12@@Z ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::archive::class_id_type>

; 57   :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??$load@Vclass_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load@Utracking_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load@Utracking_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::archive::tracking_type>, COMDAT
; _this$ = ecx

; 55   :     void load(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 56   :         basic_text_iprimitive<std::istream>::load(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ??$load@Utracking_type@archive@boost@@@?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXAAUtracking_type@12@@Z ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::load<boost::archive::tracking_type>

; 57   :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??$load@Utracking_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z
_TEXT	SEGMENT
tv94 = -276						; size = 4
tv76 = -276						; size = 4
tv129 = -272						; size = 4
tv79 = -272						; size = 4
_tf$ = -69						; size = 1
_ps$ = -60						; size = 16
_fs$ = -36						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::object_reference_type>, COMDAT
; _this$ = ecx

; 177  :     void save(const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd ec fe ff
	ff		 lea	 edi, DWORD PTR [ebp-276]
  00021	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 178  :         boost::io::ios_flags_saver fs(os);

  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	83 38 00	 cmp	 DWORD PTR [eax], 0
  00048	75 0c		 jne	 SHORT $LN3@save
  0004a	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv79[ebp], 0
  00054	eb 22		 jmp	 SHORT $LN4@save
$LN3@save:
  00056	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005b	89 95 ec fe ff
	ff		 mov	 DWORD PTR tv76[ebp], edx
  00061	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR tv76[ebp]
  00067	8b 08		 mov	 ecx, DWORD PTR [eax]
  00069	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR tv76[ebp]
  0006f	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00072	89 95 f0 fe ff
	ff		 mov	 DWORD PTR tv79[ebp], edx
$LN4@save:
  00078	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv79[ebp]
  0007e	50		 push	 eax
  0007f	8d 4d dc	 lea	 ecx, DWORD PTR _fs$[ebp]
  00082	e8 00 00 00 00	 call	 ??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_flags_saver::ios_flags_saver
  00087	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 179  :         boost::io::ios_precision_saver ps(os);

  0008e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00091	83 38 00	 cmp	 DWORD PTR [eax], 0
  00094	75 0c		 jne	 SHORT $LN5@save
  00096	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv129[ebp], 0
  000a0	eb 22		 jmp	 SHORT $LN6@save
$LN5@save:
  000a2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a7	89 95 ec fe ff
	ff		 mov	 DWORD PTR tv94[ebp], edx
  000ad	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR tv94[ebp]
  000b3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b5	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR tv94[ebp]
  000bb	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  000be	89 95 f0 fe ff
	ff		 mov	 DWORD PTR tv129[ebp], edx
$LN6@save:
  000c4	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv129[ebp]
  000ca	50		 push	 eax
  000cb	8d 4d c4	 lea	 ecx, DWORD PTR _ps$[ebp]
  000ce	e8 00 00 00 00	 call	 ??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_precision_saver::ios_precision_saver
  000d3	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 180  :         typename is_float<T>::type tf;
; 181  :         save_impl(t, tf);

  000d7	8d 45 bb	 lea	 eax, DWORD PTR _tf$[ebp]
  000da	50		 push	 eax
  000db	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  000de	51		 push	 ecx
  000df	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e2	e8 00 00 00 00	 call	 ??$save_impl@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::object_reference_type>

; 182  :     }

  000e7	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000eb	8d 4d c4	 lea	 ecx, DWORD PTR _ps$[ebp]
  000ee	e8 00 00 00 00	 call	 ??1ios_precision_saver@io@boost@@QAE@XZ ; boost::io::ios_precision_saver::~ios_precision_saver
  000f3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000fa	8d 4d dc	 lea	 ecx, DWORD PTR _fs$[ebp]
  000fd	e8 00 00 00 00	 call	 ??1ios_flags_saver@io@boost@@QAE@XZ ; boost::io::ios_flags_saver::~ios_flags_saver
  00102	52		 push	 edx
  00103	8b cd		 mov	 ecx, ebp
  00105	50		 push	 eax
  00106	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN14@save
  0010c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00111	58		 pop	 eax
  00112	5a		 pop	 edx
  00113	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00116	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011d	59		 pop	 ecx
  0011e	5f		 pop	 edi
  0011f	5e		 pop	 esi
  00120	5b		 pop	 ebx
  00121	81 c4 14 01 00
	00		 add	 esp, 276		; 00000114H
  00127	3b ec		 cmp	 ebp, esp
  00129	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012e	8b e5		 mov	 esp, ebp
  00130	5d		 pop	 ebp
  00131	c2 04 00	 ret	 4
$LN14@save:
  00134	03 00 00 00	 DD	 3
  00138	00 00 00 00	 DD	 $LN13@save
$LN13@save:
  0013c	dc ff ff ff	 DD	 -36			; ffffffdcH
  00140	08 00 00 00	 DD	 8
  00144	00 00 00 00	 DD	 $LN9@save
  00148	c4 ff ff ff	 DD	 -60			; ffffffc4H
  0014c	10 00 00 00	 DD	 16			; 00000010H
  00150	00 00 00 00	 DD	 $LN10@save
  00154	bb ff ff ff	 DD	 -69			; ffffffbbH
  00158	01 00 00 00	 DD	 1
  0015c	00 00 00 00	 DD	 $LN11@save
$LN11@save:
  00160	74		 DB	 116			; 00000074H
  00161	66		 DB	 102			; 00000066H
  00162	00		 DB	 0
$LN10@save:
  00163	70		 DB	 112			; 00000070H
  00164	73		 DB	 115			; 00000073H
  00165	00		 DB	 0
$LN9@save:
  00166	66		 DB	 102			; 00000066H
  00167	73		 DB	 115			; 00000073H
  00168	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _fs$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ios_flags_saver@io@boost@@QAE@XZ ; boost::io::ios_flags_saver::~ios_flags_saver
__unwindfunclet$??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z$1:
  00008	8d 4d c4	 lea	 ecx, DWORD PTR _ps$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1ios_precision_saver@io@boost@@QAE@XZ ; boost::io::ios_precision_saver::~ios_precision_saver
__ehhandler$??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 8a e8 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-280]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::object_reference_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z
_TEXT	SEGMENT
tv94 = -276						; size = 4
tv76 = -276						; size = 4
tv129 = -272						; size = 4
tv79 = -272						; size = 4
_tf$ = -69						; size = 1
_ps$ = -60						; size = 16
_fs$ = -36						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::class_id_type>, COMDAT
; _this$ = ecx

; 177  :     void save(const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd ec fe ff
	ff		 lea	 edi, DWORD PTR [ebp-276]
  00021	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 178  :         boost::io::ios_flags_saver fs(os);

  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	83 38 00	 cmp	 DWORD PTR [eax], 0
  00048	75 0c		 jne	 SHORT $LN3@save
  0004a	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv79[ebp], 0
  00054	eb 22		 jmp	 SHORT $LN4@save
$LN3@save:
  00056	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005b	89 95 ec fe ff
	ff		 mov	 DWORD PTR tv76[ebp], edx
  00061	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR tv76[ebp]
  00067	8b 08		 mov	 ecx, DWORD PTR [eax]
  00069	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR tv76[ebp]
  0006f	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00072	89 95 f0 fe ff
	ff		 mov	 DWORD PTR tv79[ebp], edx
$LN4@save:
  00078	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv79[ebp]
  0007e	50		 push	 eax
  0007f	8d 4d dc	 lea	 ecx, DWORD PTR _fs$[ebp]
  00082	e8 00 00 00 00	 call	 ??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_flags_saver::ios_flags_saver
  00087	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 179  :         boost::io::ios_precision_saver ps(os);

  0008e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00091	83 38 00	 cmp	 DWORD PTR [eax], 0
  00094	75 0c		 jne	 SHORT $LN5@save
  00096	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv129[ebp], 0
  000a0	eb 22		 jmp	 SHORT $LN6@save
$LN5@save:
  000a2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a7	89 95 ec fe ff
	ff		 mov	 DWORD PTR tv94[ebp], edx
  000ad	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR tv94[ebp]
  000b3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b5	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR tv94[ebp]
  000bb	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  000be	89 95 f0 fe ff
	ff		 mov	 DWORD PTR tv129[ebp], edx
$LN6@save:
  000c4	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv129[ebp]
  000ca	50		 push	 eax
  000cb	8d 4d c4	 lea	 ecx, DWORD PTR _ps$[ebp]
  000ce	e8 00 00 00 00	 call	 ??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_precision_saver::ios_precision_saver
  000d3	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 180  :         typename is_float<T>::type tf;
; 181  :         save_impl(t, tf);

  000d7	8d 45 bb	 lea	 eax, DWORD PTR _tf$[ebp]
  000da	50		 push	 eax
  000db	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  000de	51		 push	 ecx
  000df	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e2	e8 00 00 00 00	 call	 ??$save_impl@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::class_id_type>

; 182  :     }

  000e7	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000eb	8d 4d c4	 lea	 ecx, DWORD PTR _ps$[ebp]
  000ee	e8 00 00 00 00	 call	 ??1ios_precision_saver@io@boost@@QAE@XZ ; boost::io::ios_precision_saver::~ios_precision_saver
  000f3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000fa	8d 4d dc	 lea	 ecx, DWORD PTR _fs$[ebp]
  000fd	e8 00 00 00 00	 call	 ??1ios_flags_saver@io@boost@@QAE@XZ ; boost::io::ios_flags_saver::~ios_flags_saver
  00102	52		 push	 edx
  00103	8b cd		 mov	 ecx, ebp
  00105	50		 push	 eax
  00106	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN14@save
  0010c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00111	58		 pop	 eax
  00112	5a		 pop	 edx
  00113	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00116	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011d	59		 pop	 ecx
  0011e	5f		 pop	 edi
  0011f	5e		 pop	 esi
  00120	5b		 pop	 ebx
  00121	81 c4 14 01 00
	00		 add	 esp, 276		; 00000114H
  00127	3b ec		 cmp	 ebp, esp
  00129	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012e	8b e5		 mov	 esp, ebp
  00130	5d		 pop	 ebp
  00131	c2 04 00	 ret	 4
$LN14@save:
  00134	03 00 00 00	 DD	 3
  00138	00 00 00 00	 DD	 $LN13@save
$LN13@save:
  0013c	dc ff ff ff	 DD	 -36			; ffffffdcH
  00140	08 00 00 00	 DD	 8
  00144	00 00 00 00	 DD	 $LN9@save
  00148	c4 ff ff ff	 DD	 -60			; ffffffc4H
  0014c	10 00 00 00	 DD	 16			; 00000010H
  00150	00 00 00 00	 DD	 $LN10@save
  00154	bb ff ff ff	 DD	 -69			; ffffffbbH
  00158	01 00 00 00	 DD	 1
  0015c	00 00 00 00	 DD	 $LN11@save
$LN11@save:
  00160	74		 DB	 116			; 00000074H
  00161	66		 DB	 102			; 00000066H
  00162	00		 DB	 0
$LN10@save:
  00163	70		 DB	 112			; 00000070H
  00164	73		 DB	 115			; 00000073H
  00165	00		 DB	 0
$LN9@save:
  00166	66		 DB	 102			; 00000066H
  00167	73		 DB	 115			; 00000073H
  00168	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _fs$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ios_flags_saver@io@boost@@QAE@XZ ; boost::io::ios_flags_saver::~ios_flags_saver
__unwindfunclet$??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z$1:
  00008	8d 4d c4	 lea	 ecx, DWORD PTR _ps$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1ios_precision_saver@io@boost@@QAE@XZ ; boost::io::ios_precision_saver::~ios_precision_saver
__ehhandler$??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 8a e8 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-280]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::class_id_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z
_TEXT	SEGMENT
tv94 = -276						; size = 4
tv76 = -276						; size = 4
tv129 = -272						; size = 4
tv79 = -272						; size = 4
_tf$ = -69						; size = 1
_ps$ = -60						; size = 16
_fs$ = -36						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::class_id_reference_type>, COMDAT
; _this$ = ecx

; 177  :     void save(const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd ec fe ff
	ff		 lea	 edi, DWORD PTR [ebp-276]
  00021	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 178  :         boost::io::ios_flags_saver fs(os);

  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	83 38 00	 cmp	 DWORD PTR [eax], 0
  00048	75 0c		 jne	 SHORT $LN3@save
  0004a	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv79[ebp], 0
  00054	eb 22		 jmp	 SHORT $LN4@save
$LN3@save:
  00056	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005b	89 95 ec fe ff
	ff		 mov	 DWORD PTR tv76[ebp], edx
  00061	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR tv76[ebp]
  00067	8b 08		 mov	 ecx, DWORD PTR [eax]
  00069	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR tv76[ebp]
  0006f	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00072	89 95 f0 fe ff
	ff		 mov	 DWORD PTR tv79[ebp], edx
$LN4@save:
  00078	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv79[ebp]
  0007e	50		 push	 eax
  0007f	8d 4d dc	 lea	 ecx, DWORD PTR _fs$[ebp]
  00082	e8 00 00 00 00	 call	 ??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_flags_saver::ios_flags_saver
  00087	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 179  :         boost::io::ios_precision_saver ps(os);

  0008e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00091	83 38 00	 cmp	 DWORD PTR [eax], 0
  00094	75 0c		 jne	 SHORT $LN5@save
  00096	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv129[ebp], 0
  000a0	eb 22		 jmp	 SHORT $LN6@save
$LN5@save:
  000a2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a7	89 95 ec fe ff
	ff		 mov	 DWORD PTR tv94[ebp], edx
  000ad	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR tv94[ebp]
  000b3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b5	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR tv94[ebp]
  000bb	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  000be	89 95 f0 fe ff
	ff		 mov	 DWORD PTR tv129[ebp], edx
$LN6@save:
  000c4	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv129[ebp]
  000ca	50		 push	 eax
  000cb	8d 4d c4	 lea	 ecx, DWORD PTR _ps$[ebp]
  000ce	e8 00 00 00 00	 call	 ??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_precision_saver::ios_precision_saver
  000d3	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 180  :         typename is_float<T>::type tf;
; 181  :         save_impl(t, tf);

  000d7	8d 45 bb	 lea	 eax, DWORD PTR _tf$[ebp]
  000da	50		 push	 eax
  000db	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  000de	51		 push	 ecx
  000df	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e2	e8 00 00 00 00	 call	 ??$save_impl@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@AAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::class_id_reference_type>

; 182  :     }

  000e7	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000eb	8d 4d c4	 lea	 ecx, DWORD PTR _ps$[ebp]
  000ee	e8 00 00 00 00	 call	 ??1ios_precision_saver@io@boost@@QAE@XZ ; boost::io::ios_precision_saver::~ios_precision_saver
  000f3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000fa	8d 4d dc	 lea	 ecx, DWORD PTR _fs$[ebp]
  000fd	e8 00 00 00 00	 call	 ??1ios_flags_saver@io@boost@@QAE@XZ ; boost::io::ios_flags_saver::~ios_flags_saver
  00102	52		 push	 edx
  00103	8b cd		 mov	 ecx, ebp
  00105	50		 push	 eax
  00106	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN14@save
  0010c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00111	58		 pop	 eax
  00112	5a		 pop	 edx
  00113	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00116	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011d	59		 pop	 ecx
  0011e	5f		 pop	 edi
  0011f	5e		 pop	 esi
  00120	5b		 pop	 ebx
  00121	81 c4 14 01 00
	00		 add	 esp, 276		; 00000114H
  00127	3b ec		 cmp	 ebp, esp
  00129	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012e	8b e5		 mov	 esp, ebp
  00130	5d		 pop	 ebp
  00131	c2 04 00	 ret	 4
$LN14@save:
  00134	03 00 00 00	 DD	 3
  00138	00 00 00 00	 DD	 $LN13@save
$LN13@save:
  0013c	dc ff ff ff	 DD	 -36			; ffffffdcH
  00140	08 00 00 00	 DD	 8
  00144	00 00 00 00	 DD	 $LN9@save
  00148	c4 ff ff ff	 DD	 -60			; ffffffc4H
  0014c	10 00 00 00	 DD	 16			; 00000010H
  00150	00 00 00 00	 DD	 $LN10@save
  00154	bb ff ff ff	 DD	 -69			; ffffffbbH
  00158	01 00 00 00	 DD	 1
  0015c	00 00 00 00	 DD	 $LN11@save
$LN11@save:
  00160	74		 DB	 116			; 00000074H
  00161	66		 DB	 102			; 00000066H
  00162	00		 DB	 0
$LN10@save:
  00163	70		 DB	 112			; 00000070H
  00164	73		 DB	 115			; 00000073H
  00165	00		 DB	 0
$LN9@save:
  00166	66		 DB	 102			; 00000066H
  00167	73		 DB	 115			; 00000073H
  00168	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _fs$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ios_flags_saver@io@boost@@QAE@XZ ; boost::io::ios_flags_saver::~ios_flags_saver
__unwindfunclet$??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z$1:
  00008	8d 4d c4	 lea	 ecx, DWORD PTR _ps$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1ios_precision_saver@io@boost@@QAE@XZ ; boost::io::ios_precision_saver::~ios_precision_saver
__ehhandler$??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 8a e8 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-280]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::class_id_reference_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z
_TEXT	SEGMENT
tv94 = -276						; size = 4
tv76 = -276						; size = 4
tv129 = -272						; size = 4
tv79 = -272						; size = 4
_tf$ = -69						; size = 1
_ps$ = -60						; size = 16
_fs$ = -36						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::tracking_type>, COMDAT
; _this$ = ecx

; 177  :     void save(const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd ec fe ff
	ff		 lea	 edi, DWORD PTR [ebp-276]
  00021	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 178  :         boost::io::ios_flags_saver fs(os);

  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	83 38 00	 cmp	 DWORD PTR [eax], 0
  00048	75 0c		 jne	 SHORT $LN3@save
  0004a	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv79[ebp], 0
  00054	eb 22		 jmp	 SHORT $LN4@save
$LN3@save:
  00056	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005b	89 95 ec fe ff
	ff		 mov	 DWORD PTR tv76[ebp], edx
  00061	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR tv76[ebp]
  00067	8b 08		 mov	 ecx, DWORD PTR [eax]
  00069	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR tv76[ebp]
  0006f	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00072	89 95 f0 fe ff
	ff		 mov	 DWORD PTR tv79[ebp], edx
$LN4@save:
  00078	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv79[ebp]
  0007e	50		 push	 eax
  0007f	8d 4d dc	 lea	 ecx, DWORD PTR _fs$[ebp]
  00082	e8 00 00 00 00	 call	 ??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_flags_saver::ios_flags_saver
  00087	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 179  :         boost::io::ios_precision_saver ps(os);

  0008e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00091	83 38 00	 cmp	 DWORD PTR [eax], 0
  00094	75 0c		 jne	 SHORT $LN5@save
  00096	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv129[ebp], 0
  000a0	eb 22		 jmp	 SHORT $LN6@save
$LN5@save:
  000a2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a7	89 95 ec fe ff
	ff		 mov	 DWORD PTR tv94[ebp], edx
  000ad	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR tv94[ebp]
  000b3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b5	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR tv94[ebp]
  000bb	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  000be	89 95 f0 fe ff
	ff		 mov	 DWORD PTR tv129[ebp], edx
$LN6@save:
  000c4	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv129[ebp]
  000ca	50		 push	 eax
  000cb	8d 4d c4	 lea	 ecx, DWORD PTR _ps$[ebp]
  000ce	e8 00 00 00 00	 call	 ??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_precision_saver::ios_precision_saver
  000d3	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 180  :         typename is_float<T>::type tf;
; 181  :         save_impl(t, tf);

  000d7	8d 45 bb	 lea	 eax, DWORD PTR _tf$[ebp]
  000da	50		 push	 eax
  000db	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  000de	51		 push	 ecx
  000df	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e2	e8 00 00 00 00	 call	 ??$save_impl@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@AAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::tracking_type>

; 182  :     }

  000e7	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000eb	8d 4d c4	 lea	 ecx, DWORD PTR _ps$[ebp]
  000ee	e8 00 00 00 00	 call	 ??1ios_precision_saver@io@boost@@QAE@XZ ; boost::io::ios_precision_saver::~ios_precision_saver
  000f3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000fa	8d 4d dc	 lea	 ecx, DWORD PTR _fs$[ebp]
  000fd	e8 00 00 00 00	 call	 ??1ios_flags_saver@io@boost@@QAE@XZ ; boost::io::ios_flags_saver::~ios_flags_saver
  00102	52		 push	 edx
  00103	8b cd		 mov	 ecx, ebp
  00105	50		 push	 eax
  00106	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN14@save
  0010c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00111	58		 pop	 eax
  00112	5a		 pop	 edx
  00113	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00116	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011d	59		 pop	 ecx
  0011e	5f		 pop	 edi
  0011f	5e		 pop	 esi
  00120	5b		 pop	 ebx
  00121	81 c4 14 01 00
	00		 add	 esp, 276		; 00000114H
  00127	3b ec		 cmp	 ebp, esp
  00129	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012e	8b e5		 mov	 esp, ebp
  00130	5d		 pop	 ebp
  00131	c2 04 00	 ret	 4
$LN14@save:
  00134	03 00 00 00	 DD	 3
  00138	00 00 00 00	 DD	 $LN13@save
$LN13@save:
  0013c	dc ff ff ff	 DD	 -36			; ffffffdcH
  00140	08 00 00 00	 DD	 8
  00144	00 00 00 00	 DD	 $LN9@save
  00148	c4 ff ff ff	 DD	 -60			; ffffffc4H
  0014c	10 00 00 00	 DD	 16			; 00000010H
  00150	00 00 00 00	 DD	 $LN10@save
  00154	bb ff ff ff	 DD	 -69			; ffffffbbH
  00158	01 00 00 00	 DD	 1
  0015c	00 00 00 00	 DD	 $LN11@save
$LN11@save:
  00160	74		 DB	 116			; 00000074H
  00161	66		 DB	 102			; 00000066H
  00162	00		 DB	 0
$LN10@save:
  00163	70		 DB	 112			; 00000070H
  00164	73		 DB	 115			; 00000073H
  00165	00		 DB	 0
$LN9@save:
  00166	66		 DB	 102			; 00000066H
  00167	73		 DB	 115			; 00000073H
  00168	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _fs$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ios_flags_saver@io@boost@@QAE@XZ ; boost::io::ios_flags_saver::~ios_flags_saver
__unwindfunclet$??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z$1:
  00008	8d 4d c4	 lea	 ecx, DWORD PTR _ps$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1ios_precision_saver@io@boost@@QAE@XZ ; boost::io::ios_precision_saver::~ios_precision_saver
__ehhandler$??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 8a e8 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-280]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::tracking_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ??__E?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@A@@YAXXZ
text$di	SEGMENT
??__E?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@A@@YAXXZ PROC ; `dynamic initializer for 'boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::instance'', COMDAT

; 143  : BOOST_DLLEXPORT T & singleton< T >::instance = singleton< T >::get_instance();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	e8 00 00 00 00	 call	 ?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance
  00023	a3 00 00 00 00	 mov	 DWORD PTR ?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@A, eax ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::instance
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??__E?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@A@@YAXXZ ENDP ; `dynamic initializer for 'boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::instance''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??$serialize_adl@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z
_TEXT	SEGMENT
_v$ = -8						; size = 4
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize_adl@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z PROC ; boost::serialization::serialize_adl<boost::archive::text_iarchive,CContact>, COMDAT

; 116  : ){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 117  :     // note usage of function overloading to delay final resolution
; 118  :     // until the point of instantiation.  This works around the two-phase
; 119  :     // lookup "feature" which inhibits redefintion of a default function
; 120  :     // template implementation. Due to Robert Ramey
; 121  :     //
; 122  :     // Note that this trick generates problems for compiles which don't support
; 123  :     // PFTO, suppress it here.  As far as we know, there are no compilers
; 124  :     // which fail to support PFTO while supporting two-phase lookup.
; 125  :     const version_type v(file_version);

  0001e	8b 45 10	 mov	 eax, DWORD PTR _file_version$[ebp]
  00021	50		 push	 eax
  00022	8d 4d f8	 lea	 ecx, DWORD PTR _v$[ebp]
  00025	e8 00 00 00 00	 call	 ??0version_type@serialization@boost@@QAE@I@Z ; boost::serialization::version_type::version_type

; 126  :     serialize(ar, t, v);

  0002a	8d 4d f8	 lea	 ecx, DWORD PTR _v$[ebp]
  0002d	e8 00 00 00 00	 call	 ??Bversion_type@serialization@boost@@QBEABIXZ ; boost::serialization::version_type::operator unsigned int const &
  00032	8b 00		 mov	 eax, DWORD PTR [eax]
  00034	50		 push	 eax
  00035	8b 4d 0c	 mov	 ecx, DWORD PTR _t$[ebp]
  00038	51		 push	 ecx
  00039	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  0003c	52		 push	 edx
  0003d	e8 00 00 00 00	 call	 ??$serialize@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z ; boost::serialization::serialize<boost::archive::text_iarchive,CContact>
  00042	83 c4 0c	 add	 esp, 12			; 0000000cH

; 127  : }

  00045	52		 push	 edx
  00046	8b cd		 mov	 ecx, ebp
  00048	50		 push	 eax
  00049	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@serialize_
  0004f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00054	58		 pop	 eax
  00055	5a		 pop	 edx
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0005f	3b ec		 cmp	 ebp, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
  0006a	66 90		 npad	 2
$LN5@serialize_:
  0006c	01 00 00 00	 DD	 1
  00070	00 00 00 00	 DD	 $LN4@serialize_
$LN4@serialize_:
  00074	f8 ff ff ff	 DD	 -8			; fffffff8H
  00078	04 00 00 00	 DD	 4
  0007c	00 00 00 00	 DD	 $LN3@serialize_
$LN3@serialize_:
  00080	76		 DB	 118			; 00000076H
  00081	00		 DB	 0
??$serialize_adl@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z ENDP ; boost::serialization::serialize_adl<boost::archive::text_iarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\smart_cast.hpp
;	COMDAT ??$smart_cast_reference@AAVtext_iarchive@archive@boost@@Vbasic_iarchive@detail@23@@serialization@boost@@YAAAVtext_iarchive@archive@1@AAVbasic_iarchive@detail@31@@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??$smart_cast_reference@AAVtext_iarchive@archive@boost@@Vbasic_iarchive@detail@23@@serialization@boost@@YAAAVtext_iarchive@archive@1@AAVbasic_iarchive@detail@31@@Z PROC ; boost::serialization::smart_cast_reference<boost::archive::text_iarchive &,boost::archive::detail::basic_iarchive>, COMDAT

; 268  : T smart_cast_reference(U & u) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 269  :     return smart_cast_impl::reference< T >::cast(u);

  0001e	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$cast@Vbasic_iarchive@detail@archive@boost@@@?$reference@AAVtext_iarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_iarchive@archive@3@AAVbasic_iarchive@detail@53@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_iarchive &>::cast<boost::archive::detail::basic_iarchive>
  00027	83 c4 04	 add	 esp, 4

; 270  : }

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??$smart_cast_reference@AAVtext_iarchive@archive@boost@@Vbasic_iarchive@detail@23@@serialization@boost@@YAAAVtext_iarchive@archive@1@AAVbasic_iarchive@detail@31@@Z ENDP ; boost::serialization::smart_cast_reference<boost::archive::text_iarchive &,boost::archive::detail::basic_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??$serialize@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z PROC ; boost::serialization::serialize<boost::archive::text_oarchive,CContact>, COMDAT

; 67   : ){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 68   :     access::serialize(ar, t, static_cast<unsigned int>(file_version));

  0001e	8b 45 10	 mov	 eax, DWORD PTR _file_version$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 0c	 mov	 ecx, DWORD PTR _t$[ebp]
  00025	51		 push	 ecx
  00026	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00029	52		 push	 edx
  0002a	e8 00 00 00 00	 call	 ??$serialize@Vtext_oarchive@archive@boost@@VCContact@@@access@serialization@boost@@SAXAAVtext_oarchive@archive@2@AAVCContact@@I@Z ; boost::serialization::access::serialize<boost::archive::text_oarchive,CContact>
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 69   : }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
??$serialize@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z ENDP ; boost::serialization::serialize<boost::archive::text_oarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\smart_cast.hpp
;	COMDAT ??$cast@Vbasic_oarchive@detail@archive@boost@@@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@3@AAVbasic_oarchive@detail@53@@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??$cast@Vbasic_oarchive@detail@archive@boost@@@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@3@AAVbasic_oarchive@detail@53@@Z PROC ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::cast<boost::archive::detail::basic_oarchive>, COMDAT

; 125  :         static T cast(U & u){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 126  :             typedef typename mpl::eval_if<
; 127  :                 boost::is_polymorphic<U>,
; 128  :                 mpl::identity<polymorphic>,
; 129  :                 mpl::identity<non_polymorphic>
; 130  :             >::type typex;
; 131  :             return typex::cast(u);

  0001e	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$cast@Vbasic_oarchive@detail@archive@boost@@@polymorphic@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@4@AAVbasic_oarchive@detail@64@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::polymorphic::cast<boost::archive::detail::basic_oarchive>
  00027	83 c4 04	 add	 esp, 4

; 132  :         }

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??$cast@Vbasic_oarchive@detail@archive@boost@@@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@3@AAVbasic_oarchive@detail@53@@Z ENDP ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::cast<boost::archive::detail::basic_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__Ft@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ@YAXXZ
text$yd	SEGMENT
??__Ft@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ@YAXXZ PROC ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance'::`2'::`dynamic atexit destructor for 't'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET ?t@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@634@A ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance'::`2'::t
  00023	e8 00 00 00 00	 call	 ??1?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::~singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??__Ft@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ@YAXXZ ENDP ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance'::`2'::`dynamic atexit destructor for 't''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z PROC ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::~singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0e		 je	 SHORT $LN2@scalar
  00033	6a 0c		 push	 12			; 0000000cH
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003e	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
??_G?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z ENDP ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ PROC ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@IAE@XZ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::iserializer<boost::archive::text_iarchive,CContact>
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@
  00034	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??0?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ ENDP ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ??1?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ PROC ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::~singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >, COMDAT
; _this$ = ecx

; 104  :     ~singleton_wrapper(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@

; 105  :         m_is_destroyed = true;

  0002c	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?m_is_destroyed@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@2_NA, 1 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::m_is_destroyed

; 106  :     }

  00033	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	e8 00 00 00 00	 call	 ??1?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAE@XZ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::~iserializer<boost::archive::text_iarchive,CContact>
  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??1?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ ENDP ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::~singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_oarchive.hpp
;	COMDAT ??$save@I@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save@I@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABI@Z PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<unsigned int>, COMDAT
; _this$ = ecx

; 63   :     void save(const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 64   :         this->newtoken();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?newtoken@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::newtoken

; 65   :         basic_text_oprimitive<std::ostream>::save(t);

  0002b	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  0002e	50		 push	 eax
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	83 c1 20	 add	 ecx, 32			; 00000020H
  00035	e8 00 00 00 00	 call	 ??$save@I@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABI@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<unsigned int>

; 66   :     }

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c2 04 00	 ret	 4
??$save@I@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABI@Z ENDP ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\extended_type_info.hpp
;	COMDAT ?call@?$guid_impl@VCContact@@@ext@serialization@boost@@SAPBDXZ
_TEXT	SEGMENT
?call@?$guid_impl@VCContact@@@ext@serialization@boost@@SAPBDXZ PROC ; boost::serialization::ext::guid_impl<CContact>::call, COMDAT

; 96   :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 97   :             return NULL;

  0001e	33 c0		 xor	 eax, eax

; 98   :         }

  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?call@?$guid_impl@VCContact@@@ext@serialization@boost@@SAPBDXZ ENDP ; boost::serialization::ext::guid_impl<CContact>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ??__E?instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@VCContact@@@23@A@@YAXXZ
text$di	SEGMENT
??__E?instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@VCContact@@@23@A@@YAXXZ PROC ; `dynamic initializer for 'boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::instance'', COMDAT

; 143  : BOOST_DLLEXPORT T & singleton< T >::instance = singleton< T >::get_instance();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	e8 00 00 00 00	 call	 ?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance
  00023	a3 00 00 00 00	 mov	 DWORD PTR ?instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@VCContact@@@23@A, eax ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::instance
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??__E?instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@VCContact@@@23@A@@YAXXZ ENDP ; `dynamic initializer for 'boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::instance''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oprimitive.hpp
;	COMDAT ??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z
_TEXT	SEGMENT
tv94 = -276						; size = 4
tv76 = -276						; size = 4
tv129 = -272						; size = 4
tv79 = -272						; size = 4
_tf$ = -69						; size = 1
_ps$ = -60						; size = 16
_fs$ = -36						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z PROC ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::object_id_type>, COMDAT
; _this$ = ecx

; 177  :     void save(const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd ec fe ff
	ff		 lea	 edi, DWORD PTR [ebp-276]
  00021	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 178  :         boost::io::ios_flags_saver fs(os);

  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	83 38 00	 cmp	 DWORD PTR [eax], 0
  00048	75 0c		 jne	 SHORT $LN3@save
  0004a	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv79[ebp], 0
  00054	eb 22		 jmp	 SHORT $LN4@save
$LN3@save:
  00056	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005b	89 95 ec fe ff
	ff		 mov	 DWORD PTR tv76[ebp], edx
  00061	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR tv76[ebp]
  00067	8b 08		 mov	 ecx, DWORD PTR [eax]
  00069	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR tv76[ebp]
  0006f	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00072	89 95 f0 fe ff
	ff		 mov	 DWORD PTR tv79[ebp], edx
$LN4@save:
  00078	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv79[ebp]
  0007e	50		 push	 eax
  0007f	8d 4d dc	 lea	 ecx, DWORD PTR _fs$[ebp]
  00082	e8 00 00 00 00	 call	 ??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_flags_saver::ios_flags_saver
  00087	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 179  :         boost::io::ios_precision_saver ps(os);

  0008e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00091	83 38 00	 cmp	 DWORD PTR [eax], 0
  00094	75 0c		 jne	 SHORT $LN5@save
  00096	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv129[ebp], 0
  000a0	eb 22		 jmp	 SHORT $LN6@save
$LN5@save:
  000a2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a7	89 95 ec fe ff
	ff		 mov	 DWORD PTR tv94[ebp], edx
  000ad	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR tv94[ebp]
  000b3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b5	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR tv94[ebp]
  000bb	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  000be	89 95 f0 fe ff
	ff		 mov	 DWORD PTR tv129[ebp], edx
$LN6@save:
  000c4	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv129[ebp]
  000ca	50		 push	 eax
  000cb	8d 4d c4	 lea	 ecx, DWORD PTR _ps$[ebp]
  000ce	e8 00 00 00 00	 call	 ??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z ; boost::io::ios_precision_saver::ios_precision_saver
  000d3	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 180  :         typename is_float<T>::type tf;
; 181  :         save_impl(t, tf);

  000d7	8d 45 bb	 lea	 eax, DWORD PTR _tf$[ebp]
  000da	50		 push	 eax
  000db	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  000de	51		 push	 ecx
  000df	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e2	e8 00 00 00 00	 call	 ??$save_impl@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@AAU?$bool_@$0A@@mpl@2@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save_impl<boost::archive::object_id_type>

; 182  :     }

  000e7	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000eb	8d 4d c4	 lea	 ecx, DWORD PTR _ps$[ebp]
  000ee	e8 00 00 00 00	 call	 ??1ios_precision_saver@io@boost@@QAE@XZ ; boost::io::ios_precision_saver::~ios_precision_saver
  000f3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000fa	8d 4d dc	 lea	 ecx, DWORD PTR _fs$[ebp]
  000fd	e8 00 00 00 00	 call	 ??1ios_flags_saver@io@boost@@QAE@XZ ; boost::io::ios_flags_saver::~ios_flags_saver
  00102	52		 push	 edx
  00103	8b cd		 mov	 ecx, ebp
  00105	50		 push	 eax
  00106	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN14@save
  0010c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00111	58		 pop	 eax
  00112	5a		 pop	 edx
  00113	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00116	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011d	59		 pop	 ecx
  0011e	5f		 pop	 edi
  0011f	5e		 pop	 esi
  00120	5b		 pop	 ebx
  00121	81 c4 14 01 00
	00		 add	 esp, 276		; 00000114H
  00127	3b ec		 cmp	 ebp, esp
  00129	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012e	8b e5		 mov	 esp, ebp
  00130	5d		 pop	 ebp
  00131	c2 04 00	 ret	 4
$LN14@save:
  00134	03 00 00 00	 DD	 3
  00138	00 00 00 00	 DD	 $LN13@save
$LN13@save:
  0013c	dc ff ff ff	 DD	 -36			; ffffffdcH
  00140	08 00 00 00	 DD	 8
  00144	00 00 00 00	 DD	 $LN9@save
  00148	c4 ff ff ff	 DD	 -60			; ffffffc4H
  0014c	10 00 00 00	 DD	 16			; 00000010H
  00150	00 00 00 00	 DD	 $LN10@save
  00154	bb ff ff ff	 DD	 -69			; ffffffbbH
  00158	01 00 00 00	 DD	 1
  0015c	00 00 00 00	 DD	 $LN11@save
$LN11@save:
  00160	74		 DB	 116			; 00000074H
  00161	66		 DB	 102			; 00000066H
  00162	00		 DB	 0
$LN10@save:
  00163	70		 DB	 112			; 00000070H
  00164	73		 DB	 115			; 00000073H
  00165	00		 DB	 0
$LN9@save:
  00166	66		 DB	 102			; 00000066H
  00167	73		 DB	 115			; 00000073H
  00168	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _fs$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ios_flags_saver@io@boost@@QAE@XZ ; boost::io::ios_flags_saver::~ios_flags_saver
__unwindfunclet$??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z$1:
  00008	8d 4d c4	 lea	 ecx, DWORD PTR _ps$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1ios_precision_saver@io@boost@@QAE@XZ ; boost::io::ios_precision_saver::~ios_precision_saver
__ehhandler$??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 8a e8 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-280]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z ENDP ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::object_id_type>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save_primitive@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save_primitive@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 87   :     static void save_primitive(Archive & ar, const  T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 88   :         ar.end_preamble();

  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00021	e8 00 00 00 00	 call	 ?end_preamble@basic_oarchive@detail@archive@boost@@QAEXXZ ; boost::archive::detail::basic_oarchive::end_preamble

; 89   :         ar.save(t);

  00026	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002d	e8 00 00 00 00	 call	 ?save@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save

; 90   :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
??$save_primitive@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load_primitive@Vtext_iarchive@archive@boost@@Vversion_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVversion_type@12@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load_primitive@Vtext_iarchive@archive@boost@@Vversion_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVversion_type@12@@Z PROC ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::version_type>, COMDAT

; 106  :     static void load_primitive(Archive &ar, T &t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 107  :         ar.load(t);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00025	e8 00 00 00 00	 call	 ?load@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@23@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load

; 108  :     }

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??$load_primitive@Vtext_iarchive@archive@boost@@Vversion_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVversion_type@12@@Z ENDP ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load_primitive@Vtext_iarchive@archive@boost@@Vobject_id_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVobject_id_type@12@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load_primitive@Vtext_iarchive@archive@boost@@Vobject_id_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVobject_id_type@12@@Z PROC ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::object_id_type>, COMDAT

; 106  :     static void load_primitive(Archive &ar, T &t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 107  :         ar.load(t);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00025	e8 00 00 00 00	 call	 ??$load@Vobject_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::archive::object_id_type>

; 108  :     }

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??$load_primitive@Vtext_iarchive@archive@boost@@Vobject_id_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVobject_id_type@12@@Z ENDP ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load_primitive@Vtext_iarchive@archive@boost@@Vclass_id_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVclass_id_type@12@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load_primitive@Vtext_iarchive@archive@boost@@Vclass_id_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVclass_id_type@12@@Z PROC ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::class_id_type>, COMDAT

; 106  :     static void load_primitive(Archive &ar, T &t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 107  :         ar.load(t);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00025	e8 00 00 00 00	 call	 ??$load@Vclass_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::archive::class_id_type>

; 108  :     }

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??$load_primitive@Vtext_iarchive@archive@boost@@Vclass_id_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVclass_id_type@12@@Z ENDP ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load_primitive@Vtext_iarchive@archive@boost@@Utracking_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAUtracking_type@12@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load_primitive@Vtext_iarchive@archive@boost@@Utracking_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAUtracking_type@12@@Z PROC ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::tracking_type>, COMDAT

; 106  :     static void load_primitive(Archive &ar, T &t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 107  :         ar.load(t);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00025	e8 00 00 00 00	 call	 ??$load@Utracking_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<boost::archive::tracking_type>

; 108  :     }

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??$load_primitive@Vtext_iarchive@archive@boost@@Utracking_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAUtracking_type@12@@Z ENDP ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_oarchive.hpp
;	COMDAT ??$save@Vobject_reference_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_reference_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save@Vobject_reference_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_reference_type@12@@Z PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::object_reference_type>, COMDAT
; _this$ = ecx

; 63   :     void save(const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 64   :         this->newtoken();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?newtoken@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::newtoken

; 65   :         basic_text_oprimitive<std::ostream>::save(t);

  0002b	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  0002e	50		 push	 eax
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	83 c1 20	 add	 ecx, 32			; 00000020H
  00035	e8 00 00 00 00	 call	 ??$save@Vobject_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_reference_type@12@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::object_reference_type>

; 66   :     }

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c2 04 00	 ret	 4
??$save@Vobject_reference_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_reference_type@12@@Z ENDP ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::object_reference_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_oarchive.hpp
;	COMDAT ??$save@Vclass_id_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save@Vclass_id_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_type@12@@Z PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::class_id_type>, COMDAT
; _this$ = ecx

; 63   :     void save(const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 64   :         this->newtoken();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?newtoken@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::newtoken

; 65   :         basic_text_oprimitive<std::ostream>::save(t);

  0002b	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  0002e	50		 push	 eax
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	83 c1 20	 add	 ecx, 32			; 00000020H
  00035	e8 00 00 00 00	 call	 ??$save@Vclass_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_type@12@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::class_id_type>

; 66   :     }

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c2 04 00	 ret	 4
??$save@Vclass_id_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_type@12@@Z ENDP ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_oarchive.hpp
;	COMDAT ??$save@Vclass_id_reference_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save@Vclass_id_reference_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::class_id_reference_type>, COMDAT
; _this$ = ecx

; 63   :     void save(const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 64   :         this->newtoken();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?newtoken@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::newtoken

; 65   :         basic_text_oprimitive<std::ostream>::save(t);

  0002b	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  0002e	50		 push	 eax
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	83 c1 20	 add	 ecx, 32			; 00000020H
  00035	e8 00 00 00 00	 call	 ??$save@Vclass_id_reference_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::class_id_reference_type>

; 66   :     }

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c2 04 00	 ret	 4
??$save@Vclass_id_reference_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z ENDP ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::class_id_reference_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_oarchive.hpp
;	COMDAT ??$save@Utracking_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUtracking_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save@Utracking_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUtracking_type@12@@Z PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::tracking_type>, COMDAT
; _this$ = ecx

; 63   :     void save(const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 64   :         this->newtoken();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?newtoken@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::newtoken

; 65   :         basic_text_oprimitive<std::ostream>::save(t);

  0002b	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  0002e	50		 push	 eax
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	83 c1 20	 add	 ecx, 32			; 00000020H
  00035	e8 00 00 00 00	 call	 ??$save@Utracking_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABUtracking_type@12@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::tracking_type>

; 66   :     }

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c2 04 00	 ret	 4
??$save@Utracking_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUtracking_type@12@@Z ENDP ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAEPAXI@Z PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAE@XZ ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::~iserializer<boost::archive::text_iarchive,CContact>
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0e		 je	 SHORT $LN2@scalar
  00033	6a 0c		 push	 12			; 0000000cH
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003e	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
??_G?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAEPAXI@Z ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??1?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAE@XZ PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::~iserializer<boost::archive::text_iarchive,CContact>, COMDAT
; _this$ = ecx

; 158  :     virtual ~iserializer(){};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ??1basic_iserializer@detail@archive@boost@@MAE@XZ ; boost::archive::detail::basic_iserializer::~basic_iserializer
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
??1?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAE@XZ ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::~iserializer<boost::archive::text_iarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ?is_polymorphic@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?is_polymorphic@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::is_polymorphic, COMDAT
; _this$ = ecx

; 155  :     virtual bool is_polymorphic() const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 156  :         return boost::is_polymorphic< T >::value;

  00023	b0 01		 mov	 al, 1

; 157  :     }

  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?is_polymorphic@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::is_polymorphic
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ?version@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE?AVversion_type@34@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?version@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE?AVversion_type@34@XZ PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::version, COMDAT
; _this$ = ecx

; 152  :     virtual version_type version() const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 153  :         return version_type(::boost::serialization::version< T >::value);

  00023	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T1[ebp], 0
  0002d	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00033	50		 push	 eax
  00034	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00037	e8 00 00 00 00	 call	 ??0version_type@archive@boost@@QAE@ABI@Z ; boost::archive::version_type::version_type
  0003c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 154  :     }

  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
?version@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE?AVversion_type@34@XZ ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::version
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ?tracking@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NI@Z
_TEXT	SEGMENT
tv74 = -208						; size = 4
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?tracking@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NI@Z PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::tracking, COMDAT
; _this$ = ecx

; 145  :     virtual bool tracking(const unsigned int /* flags */) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 146  :         return boost::serialization::tracking_level< T >::value 

  00023	33 c0		 xor	 eax, eax
  00025	75 24		 jne	 SHORT $LN4@tracking
  00027	b9 01 00 00 00	 mov	 ecx, 1
  0002c	85 c9		 test	 ecx, ecx
  0002e	74 0f		 je	 SHORT $LN3@tracking
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?serialized_as_pointer@basic_iserializer@detail@archive@boost@@QBE_NXZ ; boost::archive::detail::basic_iserializer::serialized_as_pointer
  00038	0f b6 d0	 movzx	 edx, al
  0003b	85 d2		 test	 edx, edx
  0003d	75 0c		 jne	 SHORT $LN4@tracking
$LN3@tracking:
  0003f	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
  00049	eb 0a		 jmp	 SHORT $LN5@tracking
$LN4@tracking:
  0004b	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv74[ebp], 1
$LN5@tracking:
  00055	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv74[ebp]

; 147  :                 == boost::serialization::track_always
; 148  :             || ( boost::serialization::tracking_level< T >::value 
; 149  :                 == boost::serialization::track_selectively
; 150  :                 && serialized_as_pointer());
; 151  :     }

  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi
  0005d	5b		 pop	 ebx
  0005e	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c2 04 00	 ret	 4
?tracking@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NI@Z ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::tracking
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ?class_info@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?class_info@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::class_info, COMDAT
; _this$ = ecx

; 141  :     virtual bool class_info() const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 142  :         return boost::serialization::implementation_level< T >::value 

  00023	b0 01		 mov	 al, 1

; 143  :             >= boost::serialization::object_class_info;
; 144  :     }

  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?class_info@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::class_info
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ?load_object_data@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBEXAAVbasic_iarchive@234@PAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ar$ = 8						; size = 4
_x$ = 12						; size = 4
_file_version$ = 16					; size = 4
?load_object_data@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBEXAAVbasic_iarchive@234@PAXI@Z PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::load_object_data, COMDAT
; _this$ = ecx

; 170  : ) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 171  :     // note: we now comment this out. Before we permited archive
; 172  :     // version # to be very large.  Now we don't.  To permit
; 173  :     // readers of these old archives, we have to suppress this 
; 174  :     // code.  Perhaps in the future we might re-enable it but
; 175  :     // permit its suppression with a runtime switch.
; 176  :     #if 0
; 177  :     // trap case where the program cannot handle the current version
; 178  :     if(file_version > static_cast<const unsigned int>(version()))
; 179  :         boost::serialization::throw_exception(
; 180  :             archive::archive_exception(
; 181  :                 boost::archive::archive_exception::unsupported_class_version,
; 182  :                 get_debug_info()
; 183  :             )
; 184  :         );
; 185  :     #endif
; 186  :     // make sure call is routed through the higest interface that might
; 187  :     // be specialized by the user.
; 188  :     boost::serialization::serialize_adl(

  00023	8b 45 10	 mov	 eax, DWORD PTR _file_version$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 0c	 mov	 ecx, DWORD PTR _x$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ??$smart_cast_reference@AAVtext_iarchive@archive@boost@@Vbasic_iarchive@detail@23@@serialization@boost@@YAAAVtext_iarchive@archive@1@AAVbasic_iarchive@detail@31@@Z ; boost::serialization::smart_cast_reference<boost::archive::text_iarchive &,boost::archive::detail::basic_iarchive>
  00034	83 c4 04	 add	 esp, 4
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ??$serialize_adl@Vtext_iarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_iarchive@archive@1@AAVCContact@@I@Z ; boost::serialization::serialize_adl<boost::archive::text_iarchive,CContact>
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 189  :         boost::serialization::smart_cast_reference<Archive &>(ar),
; 190  :         * static_cast<T *>(x), 
; 191  :         file_version
; 192  :     );
; 193  : }

  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 0c 00	 ret	 12			; 0000000cH
?load_object_data@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBEXAAVbasic_iarchive@234@PAXI@Z ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::load_object_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??0?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@IAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@IAE@XZ PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::iserializer<boost::archive::text_iarchive,CContact>, COMDAT
; _this$ = ecx

; 134  :     {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 128  :         basic_iserializer(

  00023	e8 00 00 00 00	 call	 ?get_const_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@SAABV?$extended_type_info_typeid@VCContact@@@23@XZ ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_const_instance
  00028	50		 push	 eax
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ??0basic_iserializer@detail@archive@boost@@IAE@ABVextended_type_info@serialization@3@@Z ; boost::archive::detail::basic_iserializer::basic_iserializer

; 134  :     {}

  00031	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00034	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@
  0003a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
??0?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@IAE@XZ ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::iserializer<boost::archive::text_iarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ?destroy@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@EBEXPAX@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_address$ = 8						; size = 4
?destroy@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@EBEXPAX@Z PROC ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::destroy, COMDAT
; _this$ = ecx

; 122  :     virtual void destroy(/*const*/ void *address) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 123  :         boost::serialization::access::destroy(static_cast<T *>(address));

  00023	8b 45 08	 mov	 eax, DWORD PTR _address$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$destroy@VCContact@@@access@serialization@boost@@SAXPBVCContact@@@Z ; boost::serialization::access::destroy<CContact>
  0002c	83 c4 04	 add	 esp, 4

; 124  :     }

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?destroy@?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@EBEXPAX@Z ENDP ; boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact>::destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?get_const_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@SAABV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ
_TEXT	SEGMENT
?get_const_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@SAABV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ PROC ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_const_instance, COMDAT

; 134  :     BOOST_DLLEXPORT static const T & get_const_instance(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 135  :         return get_instance();

  0001e	e8 00 00 00 00	 call	 ?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance

; 136  :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
?get_const_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@SAABV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ENDP ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_const_instance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ PROC ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance, COMDAT

; 121  :     BOOST_DLLEXPORT static T & get_instance() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00020	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00031	33 c5		 xor	 eax, ebp
  00033	50		 push	 eax
  00034	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00037	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 122  :         static detail::singleton_wrapper< T > t;

  0003d	a1 00 00 00 00	 mov	 eax, DWORD PTR __tls_index
  00042	64 8b 0d 00 00
	00 00		 mov	 ecx, DWORD PTR fs:__tls_array
  00049	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_iarchive::erializer,CContact>
  00051	3b 82 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[edx]
  00057	7e 48		 jle	 SHORT $LN2@get_instan
  00059	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_iarchive::erializer,CContact>
  0005e	e8 00 00 00 00	 call	 __Init_thread_header
  00063	83 c4 04	 add	 esp, 4
  00066	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA, -1 ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_iarchive::erializer,CContact>
  0006d	75 32		 jne	 SHORT $LN2@get_instan
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	b9 00 00 00 00	 mov	 ecx, OFFSET ?t@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@634@A ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance'::`2'::t
  0007b	e8 00 00 00 00	 call	 ??0?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ
  00080	68 00 00 00 00	 push	 OFFSET ??__Ft@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ@YAXXZ ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance'::`2'::`dynamic atexit destructor for 't''
  00085	e8 00 00 00 00	 call	 _atexit
  0008a	83 c4 04	 add	 esp, 4
  0008d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00094	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_iarchive::erializer,CContact>
  00099	e8 00 00 00 00	 call	 __Init_thread_footer
  0009e	83 c4 04	 add	 esp, 4
$LN2@get_instan:

; 123  :         // refer to instance, causing it to be instantiated (and
; 124  :         // initialized at startup on working compilers)
; 125  :         BOOST_ASSERT(! detail::singleton_wrapper< T >::m_is_destroyed);

  000a1	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?m_is_destroyed@?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@2_NA ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::m_is_destroyed
  000a8	85 c0		 test	 eax, eax
  000aa	74 1e		 je	 SHORT $LN4@get_instan
  000ac	8b f4		 mov	 esi, esp
  000ae	6a 7d		 push	 125			; 0000007dH
  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_1JC@GIHFICPP@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
  000b5	68 00 00 00 00	 push	 OFFSET ??_C@_1GC@KKEDEOBO@?$AA?$CB?$AA?5?$AAd?$AAe?$AAt?$AAa?$AAi?$AAl?$AA?3?$AA?3?$AAs?$AAi?$AAn?$AAg?$AAl?$AAe?$AAt?$AAo?$AAn?$AA_?$AAw?$AAr?$AAa?$AAp?$AAp?$AAe?$AAr?$AA?$DM?$AA?5?$AAT?$AA?5?$AA?$DO@
  000ba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  000c0	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c3	3b f4		 cmp	 esi, esp
  000c5	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@get_instan:

; 126  :         use(& instance);

  000ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@A ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::instance
  000cf	50		 push	 eax
  000d0	e8 00 00 00 00	 call	 ?use@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@@Z ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::use
  000d5	83 c4 04	 add	 esp, 4

; 127  :         return static_cast<T &>(t);

  000d8	b8 00 00 00 00	 mov	 eax, OFFSET ?t@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@634@A ; `boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance'::`2'::t

; 128  :     }

  000dd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e7	59		 pop	 ecx
  000e8	5f		 pop	 edi
  000e9	5e		 pop	 esi
  000ea	5b		 pop	 ebx
  000eb	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000f1	3b ec		 cmp	 ebp, esp
  000f3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f8	8b e5		 mov	 esp, ebp
  000fa	5d		 pop	 ebp
  000fb	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_iarchive::erializer,CContact>
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
__ehhandler$?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ:
  0000c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00010	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00013	8b 8a 30 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-208]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?get_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ENDP ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_instance
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?use@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?use@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@@Z PROC ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::use, COMDAT

; 120  :     static void use(T const *) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?use@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@@Z ENDP ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::use
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ??__E?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@A@@YAXXZ
text$di	SEGMENT
??__E?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@A@@YAXXZ PROC ; `dynamic initializer for 'boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::instance'', COMDAT

; 143  : BOOST_DLLEXPORT T & singleton< T >::instance = singleton< T >::get_instance();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	e8 00 00 00 00	 call	 ?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance
  00023	a3 00 00 00 00	 mov	 DWORD PTR ?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@A, eax ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::instance
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??__E?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@A@@YAXXZ ENDP ; `dynamic initializer for 'boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::instance''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??$serialize_adl@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z
_TEXT	SEGMENT
_v$ = -8						; size = 4
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
_file_version$ = 16					; size = 4
??$serialize_adl@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z PROC ; boost::serialization::serialize_adl<boost::archive::text_oarchive,CContact>, COMDAT

; 116  : ){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 117  :     // note usage of function overloading to delay final resolution
; 118  :     // until the point of instantiation.  This works around the two-phase
; 119  :     // lookup "feature" which inhibits redefintion of a default function
; 120  :     // template implementation. Due to Robert Ramey
; 121  :     //
; 122  :     // Note that this trick generates problems for compiles which don't support
; 123  :     // PFTO, suppress it here.  As far as we know, there are no compilers
; 124  :     // which fail to support PFTO while supporting two-phase lookup.
; 125  :     const version_type v(file_version);

  0001e	8b 45 10	 mov	 eax, DWORD PTR _file_version$[ebp]
  00021	50		 push	 eax
  00022	8d 4d f8	 lea	 ecx, DWORD PTR _v$[ebp]
  00025	e8 00 00 00 00	 call	 ??0version_type@serialization@boost@@QAE@I@Z ; boost::serialization::version_type::version_type

; 126  :     serialize(ar, t, v);

  0002a	8d 4d f8	 lea	 ecx, DWORD PTR _v$[ebp]
  0002d	e8 00 00 00 00	 call	 ??Bversion_type@serialization@boost@@QBEABIXZ ; boost::serialization::version_type::operator unsigned int const &
  00032	8b 00		 mov	 eax, DWORD PTR [eax]
  00034	50		 push	 eax
  00035	8b 4d 0c	 mov	 ecx, DWORD PTR _t$[ebp]
  00038	51		 push	 ecx
  00039	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  0003c	52		 push	 edx
  0003d	e8 00 00 00 00	 call	 ??$serialize@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z ; boost::serialization::serialize<boost::archive::text_oarchive,CContact>
  00042	83 c4 0c	 add	 esp, 12			; 0000000cH

; 127  : }

  00045	52		 push	 edx
  00046	8b cd		 mov	 ecx, ebp
  00048	50		 push	 eax
  00049	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@serialize_
  0004f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00054	58		 pop	 eax
  00055	5a		 pop	 edx
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0005f	3b ec		 cmp	 ebp, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
  0006a	66 90		 npad	 2
$LN5@serialize_:
  0006c	01 00 00 00	 DD	 1
  00070	00 00 00 00	 DD	 $LN4@serialize_
$LN4@serialize_:
  00074	f8 ff ff ff	 DD	 -8			; fffffff8H
  00078	04 00 00 00	 DD	 4
  0007c	00 00 00 00	 DD	 $LN3@serialize_
$LN3@serialize_:
  00080	76		 DB	 118			; 00000076H
  00081	00		 DB	 0
??$serialize_adl@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z ENDP ; boost::serialization::serialize_adl<boost::archive::text_oarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\smart_cast.hpp
;	COMDAT ??$smart_cast_reference@AAVtext_oarchive@archive@boost@@Vbasic_oarchive@detail@23@@serialization@boost@@YAAAVtext_oarchive@archive@1@AAVbasic_oarchive@detail@31@@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??$smart_cast_reference@AAVtext_oarchive@archive@boost@@Vbasic_oarchive@detail@23@@serialization@boost@@YAAAVtext_oarchive@archive@1@AAVbasic_oarchive@detail@31@@Z PROC ; boost::serialization::smart_cast_reference<boost::archive::text_oarchive &,boost::archive::detail::basic_oarchive>, COMDAT

; 268  : T smart_cast_reference(U & u) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 269  :     return smart_cast_impl::reference< T >::cast(u);

  0001e	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$cast@Vbasic_oarchive@detail@archive@boost@@@?$reference@AAVtext_oarchive@archive@boost@@@smart_cast_impl@serialization@boost@@SAAAVtext_oarchive@archive@3@AAVbasic_oarchive@detail@53@@Z ; boost::serialization::smart_cast_impl::reference<boost::archive::text_oarchive &>::cast<boost::archive::detail::basic_oarchive>
  00027	83 c4 04	 add	 esp, 4

; 270  : }

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??$smart_cast_reference@AAVtext_oarchive@archive@boost@@Vbasic_oarchive@detail@23@@serialization@boost@@YAAAVtext_oarchive@archive@1@AAVbasic_oarchive@detail@31@@Z ENDP ; boost::serialization::smart_cast_reference<boost::archive::text_oarchive &,boost::archive::detail::basic_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\extended_type_info.hpp
;	COMDAT ??$guid@VCContact@@@serialization@boost@@YAPBDXZ
_TEXT	SEGMENT
??$guid@VCContact@@@serialization@boost@@YAPBDXZ PROC	; boost::serialization::guid<CContact>, COMDAT

; 103  : inline const char * guid(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 104  :     return ext::guid_impl<T>::call();

  0001e	e8 00 00 00 00	 call	 ?call@?$guid_impl@VCContact@@@ext@serialization@boost@@SAPBDXZ ; boost::serialization::ext::guid_impl<CContact>::call

; 105  : }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
??$guid@VCContact@@@serialization@boost@@YAPBDXZ ENDP	; boost::serialization::guid<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__Ft@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ@YAXXZ
text$yd	SEGMENT
??__Ft@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ@YAXXZ PROC ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance'::`2'::`dynamic atexit destructor for 't'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET ?t@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4V?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@34@A ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance'::`2'::t
  00023	e8 00 00 00 00	 call	 ??1?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::~singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??__Ft@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ@YAXXZ ENDP ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance'::`2'::`dynamic atexit destructor for 't''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@UAEPAXI@Z PROC ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::~singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0e		 je	 SHORT $LN2@scalar
  00033	6a 14		 push	 20			; 00000014H
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003e	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
??_G?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@UAEPAXI@Z ENDP ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@QAE@XZ PROC ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ ; boost::serialization::extended_type_info_typeid<CContact>::extended_type_info_typeid<CContact>
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@6B@
  00034	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??0?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@QAE@XZ ENDP ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ??1?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@UAE@XZ PROC ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::~singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >, COMDAT
; _this$ = ecx

; 104  :     ~singleton_wrapper(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@6B@

; 105  :         m_is_destroyed = true;

  0002c	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?m_is_destroyed@?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@2_NA, 1 ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::m_is_destroyed

; 106  :     }

  00033	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	e8 00 00 00 00	 call	 ??1?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAE@XZ ; boost::serialization::extended_type_info_typeid<CContact>::~extended_type_info_typeid<CContact>
  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??1?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@UAE@XZ ENDP ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::~singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\factory.hpp
;	COMDAT ??$factory@VCContact@@$03@serialization@boost@@YAPAVCContact@@PAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$factory@VCContact@@$03@serialization@boost@@YAPAVCContact@@PAD@Z PROC ; boost::serialization::factory<CContact,4>, COMDAT

; 36   : T * factory(std::va_list){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 37   :     BOOST_ASSERT(false);

  0001e	33 c0		 xor	 eax, eax
  00020	75 1e		 jne	 SHORT $LN3@factory
  00022	8b f4		 mov	 esi, esp
  00024	6a 25		 push	 37			; 00000025H
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@PLLJMNBK@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
  00039	3b f4		 cmp	 esi, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@factory:

; 38   :     // throw exception here?
; 39   :     return NULL;

  00040	33 c0		 xor	 eax, eax

; 40   : }

  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??$factory@VCContact@@$03@serialization@boost@@YAPAVCContact@@PAD@Z ENDP ; boost::serialization::factory<CContact,4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\factory.hpp
;	COMDAT ??$factory@VCContact@@$02@serialization@boost@@YAPAVCContact@@PAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$factory@VCContact@@$02@serialization@boost@@YAPAVCContact@@PAD@Z PROC ; boost::serialization::factory<CContact,3>, COMDAT

; 36   : T * factory(std::va_list){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 37   :     BOOST_ASSERT(false);

  0001e	33 c0		 xor	 eax, eax
  00020	75 1e		 jne	 SHORT $LN3@factory
  00022	8b f4		 mov	 esi, esp
  00024	6a 25		 push	 37			; 00000025H
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@PLLJMNBK@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
  00039	3b f4		 cmp	 esi, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@factory:

; 38   :     // throw exception here?
; 39   :     return NULL;

  00040	33 c0		 xor	 eax, eax

; 40   : }

  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??$factory@VCContact@@$02@serialization@boost@@YAPAVCContact@@PAD@Z ENDP ; boost::serialization::factory<CContact,3>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\factory.hpp
;	COMDAT ??$factory@VCContact@@$01@serialization@boost@@YAPAVCContact@@PAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$factory@VCContact@@$01@serialization@boost@@YAPAVCContact@@PAD@Z PROC ; boost::serialization::factory<CContact,2>, COMDAT

; 36   : T * factory(std::va_list){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 37   :     BOOST_ASSERT(false);

  0001e	33 c0		 xor	 eax, eax
  00020	75 1e		 jne	 SHORT $LN3@factory
  00022	8b f4		 mov	 esi, esp
  00024	6a 25		 push	 37			; 00000025H
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@PLLJMNBK@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
  00039	3b f4		 cmp	 esi, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@factory:

; 38   :     // throw exception here?
; 39   :     return NULL;

  00040	33 c0		 xor	 eax, eax

; 40   : }

  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??$factory@VCContact@@$01@serialization@boost@@YAPAVCContact@@PAD@Z ENDP ; boost::serialization::factory<CContact,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\factory.hpp
;	COMDAT ??$factory@VCContact@@$00@serialization@boost@@YAPAVCContact@@PAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$factory@VCContact@@$00@serialization@boost@@YAPAVCContact@@PAD@Z PROC ; boost::serialization::factory<CContact,1>, COMDAT

; 36   : T * factory(std::va_list){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 37   :     BOOST_ASSERT(false);

  0001e	33 c0		 xor	 eax, eax
  00020	75 1e		 jne	 SHORT $LN3@factory
  00022	8b f4		 mov	 esi, esp
  00024	6a 25		 push	 37			; 00000025H
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@PLLJMNBK@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
  00039	3b f4		 cmp	 esi, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@factory:

; 38   :     // throw exception here?
; 39   :     return NULL;

  00040	33 c0		 xor	 eax, eax

; 40   : }

  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??$factory@VCContact@@$00@serialization@boost@@YAPAVCContact@@PAD@Z ENDP ; boost::serialization::factory<CContact,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\factory.hpp
;	COMDAT ??$factory@VCContact@@$0A@@serialization@boost@@YAPAVCContact@@PAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$factory@VCContact@@$0A@@serialization@boost@@YAPAVCContact@@PAD@Z PROC ; boost::serialization::factory<CContact,0>, COMDAT

; 36   : T * factory(std::va_list){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 37   :     BOOST_ASSERT(false);

  0001e	33 c0		 xor	 eax, eax
  00020	75 1e		 jne	 SHORT $LN3@factory
  00022	8b f4		 mov	 esi, esp
  00024	6a 25		 push	 37			; 00000025H
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@PLLJMNBK@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
  00039	3b f4		 cmp	 esi, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@factory:

; 38   :     // throw exception here?
; 39   :     return NULL;

  00040	33 c0		 xor	 eax, eax

; 40   : }

  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??$factory@VCContact@@$0A@@serialization@boost@@YAPAVCContact@@PAD@Z ENDP ; boost::serialization::factory<CContact,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vadefs.h
;	COMDAT ??$__vcrt_va_start_verify_argument_type@I@@YAXXZ
_TEXT	SEGMENT
??$__vcrt_va_start_verify_argument_type@I@@YAXXZ PROC	; __vcrt_va_start_verify_argument_type<unsigned int>, COMDAT

; 144  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 145  :             static_assert(!__vcrt_va_list_is_reference<_Ty>::__the_value, "va_start argument must not have reference type and must not be parenthesized");
; 146  :         }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$__vcrt_va_start_verify_argument_type@I@@YAXXZ ENDP	; __vcrt_va_start_verify_argument_type<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\access.hpp
;	COMDAT ??$destroy@VCContact@@@access@serialization@boost@@SAXPBVCContact@@@Z
_TEXT	SEGMENT
tv70 = -220						; size = 4
$T1 = -212						; size = 4
$T2 = -200						; size = 4
_t$ = 8							; size = 4
??$destroy@VCContact@@@access@serialization@boost@@SAXPBVCContact@@@Z PROC ; boost::serialization::access::destroy<CContact>, COMDAT

; 120  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00012	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 121  :         // the const business is an MSVC 6.0 hack that should be
; 122  :         // benign on everything else
; 123  :         delete const_cast<T *>(t);

  0001e	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00021	89 85 2c ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  00027	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  0002d	89 8d 38 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  00033	83 bd 38 ff ff
	ff 00		 cmp	 DWORD PTR $T2[ebp], 0
  0003a	74 25		 je	 SHORT $LN3@destroy
  0003c	8b f4		 mov	 esi, esp
  0003e	6a 01		 push	 1
  00040	8b 95 38 ff ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  00046	8b 02		 mov	 eax, DWORD PTR [edx]
  00048	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  0004e	8b 10		 mov	 edx, DWORD PTR [eax]
  00050	ff d2		 call	 edx
  00052	3b f4		 cmp	 esi, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	89 85 24 ff ff
	ff		 mov	 DWORD PTR tv70[ebp], eax
  0005f	eb 0a		 jmp	 SHORT $LN1@destroy
$LN3@destroy:
  00061	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv70[ebp], 0
$LN1@destroy:

; 124  :     }

  0006b	5f		 pop	 edi
  0006c	5e		 pop	 esi
  0006d	5b		 pop	 ebx
  0006e	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00074	3b ec		 cmp	 ebp, esp
  00076	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c3		 ret	 0
??$destroy@VCContact@@@access@serialization@boost@@SAXPBVCContact@@@Z ENDP ; boost::serialization::access::destroy<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAEPAXI@Z PROC ; boost::serialization::extended_type_info_typeid<CContact>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAE@XZ ; boost::serialization::extended_type_info_typeid<CContact>::~extended_type_info_typeid<CContact>
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0e		 je	 SHORT $LN2@scalar
  00033	6a 14		 push	 20			; 00000014H
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003e	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
??_G?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAEPAXI@Z ENDP ; boost::serialization::extended_type_info_typeid<CContact>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\extended_type_info_typeid.hpp
;	COMDAT ?destroy@?$extended_type_info_typeid@VCContact@@@serialization@boost@@UBEXQBX@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
?destroy@?$extended_type_info_typeid@VCContact@@@serialization@boost@@UBEXQBX@Z PROC ; boost::serialization::extended_type_info_typeid<CContact>::destroy, COMDAT
; _this$ = ecx

; 134  :     virtual void destroy(void const * const p) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 135  :         boost::serialization::access::destroy(

  00023	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$destroy@VCContact@@@access@serialization@boost@@SAXPBVCContact@@@Z ; boost::serialization::access::destroy<CContact>
  0002c	83 c4 04	 add	 esp, 4

; 136  :             static_cast<T const *>(p)
; 137  :         );
; 138  :         //delete static_cast<T const * const>(p);
; 139  :     }

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?destroy@?$extended_type_info_typeid@VCContact@@@serialization@boost@@UBEXQBX@Z ENDP ; boost::serialization::extended_type_info_typeid<CContact>::destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\extended_type_info_typeid.hpp
;	COMDAT ?construct@?$extended_type_info_typeid@VCContact@@@serialization@boost@@UBAPAXIZZ
_TEXT	SEGMENT
tv65 = -208						; size = 4
_ap$ = -8						; size = 4
_this$ = 8						; size = 4
_count$ = 12						; size = 4
?construct@?$extended_type_info_typeid@VCContact@@@serialization@boost@@UBAPAXIZZ PROC ; boost::serialization::extended_type_info_typeid<CContact>::construct, COMDAT

; 113  :     virtual void * construct(unsigned int count, ...) const{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00012	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 114  :         // count up the arguments
; 115  :         std::va_list ap;
; 116  :         va_start(ap, count);

  0001e	e8 00 00 00 00	 call	 ??$__vcrt_va_start_verify_argument_type@I@@YAXXZ ; __vcrt_va_start_verify_argument_type<unsigned int>
  00023	8d 45 10	 lea	 eax, DWORD PTR _count$[ebp+4]
  00026	89 45 f8	 mov	 DWORD PTR _ap$[ebp], eax

; 117  :         switch(count){

  00029	8b 45 0c	 mov	 eax, DWORD PTR _count$[ebp]
  0002c	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  00032	83 bd 30 ff ff
	ff 04		 cmp	 DWORD PTR tv65[ebp], 4
  00039	77 53		 ja	 SHORT $LN9@construct
  0003b	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv65[ebp]
  00041	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN12@construct[ecx*4]
$LN4@construct:

; 118  :         case 0:
; 119  :             return factory<typename boost::remove_const< T >::type, 0>(ap);

  00048	8b 45 f8	 mov	 eax, DWORD PTR _ap$[ebp]
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ??$factory@VCContact@@$0A@@serialization@boost@@YAPAVCContact@@PAD@Z ; boost::serialization::factory<CContact,0>
  00051	83 c4 04	 add	 esp, 4
  00054	eb 5f		 jmp	 SHORT $LN1@construct
$LN5@construct:

; 120  :         case 1:
; 121  :             return factory<typename boost::remove_const< T >::type, 1>(ap);

  00056	8b 45 f8	 mov	 eax, DWORD PTR _ap$[ebp]
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??$factory@VCContact@@$00@serialization@boost@@YAPAVCContact@@PAD@Z ; boost::serialization::factory<CContact,1>
  0005f	83 c4 04	 add	 esp, 4
  00062	eb 51		 jmp	 SHORT $LN1@construct
$LN6@construct:

; 122  :         case 2:
; 123  :             return factory<typename boost::remove_const< T >::type, 2>(ap);

  00064	8b 45 f8	 mov	 eax, DWORD PTR _ap$[ebp]
  00067	50		 push	 eax
  00068	e8 00 00 00 00	 call	 ??$factory@VCContact@@$01@serialization@boost@@YAPAVCContact@@PAD@Z ; boost::serialization::factory<CContact,2>
  0006d	83 c4 04	 add	 esp, 4
  00070	eb 43		 jmp	 SHORT $LN1@construct
$LN7@construct:

; 124  :         case 3:
; 125  :             return factory<typename boost::remove_const< T >::type, 3>(ap);

  00072	8b 45 f8	 mov	 eax, DWORD PTR _ap$[ebp]
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ??$factory@VCContact@@$02@serialization@boost@@YAPAVCContact@@PAD@Z ; boost::serialization::factory<CContact,3>
  0007b	83 c4 04	 add	 esp, 4
  0007e	eb 35		 jmp	 SHORT $LN1@construct
$LN8@construct:

; 126  :         case 4:
; 127  :             return factory<typename boost::remove_const< T >::type, 4>(ap);

  00080	8b 45 f8	 mov	 eax, DWORD PTR _ap$[ebp]
  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ??$factory@VCContact@@$03@serialization@boost@@YAPAVCContact@@PAD@Z ; boost::serialization::factory<CContact,4>
  00089	83 c4 04	 add	 esp, 4
  0008c	eb 27		 jmp	 SHORT $LN1@construct
$LN9@construct:

; 128  :         default:
; 129  :             BOOST_ASSERT(false); // too many arguments

  0008e	33 c0		 xor	 eax, eax
  00090	75 21		 jne	 SHORT $LN11@construct
  00092	8b f4		 mov	 esi, esp
  00094	68 81 00 00 00	 push	 129			; 00000081H
  00099	68 00 00 00 00	 push	 OFFSET ??_C@_1LC@ILBAKICL@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
  000a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  000a9	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ac	3b f4		 cmp	 esi, esp
  000ae	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN11@construct:

; 130  :             // throw exception here?
; 131  :             return NULL;

  000b3	33 c0		 xor	 eax, eax
$LN1@construct:

; 132  :         }
; 133  :     }

  000b5	5f		 pop	 edi
  000b6	5e		 pop	 esi
  000b7	5b		 pop	 ebx
  000b8	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  000be	3b ec		 cmp	 ebp, esp
  000c0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c5	8b e5		 mov	 esp, ebp
  000c7	5d		 pop	 ebp
  000c8	c3		 ret	 0
  000c9	0f 1f 00	 npad	 3
$LN12@construct:
  000cc	00 00 00 00	 DD	 $LN4@construct
  000d0	00 00 00 00	 DD	 $LN5@construct
  000d4	00 00 00 00	 DD	 $LN6@construct
  000d8	00 00 00 00	 DD	 $LN7@construct
  000dc	00 00 00 00	 DD	 $LN8@construct
?construct@?$extended_type_info_typeid@VCContact@@@serialization@boost@@UBAPAXIZZ ENDP ; boost::serialization::extended_type_info_typeid<CContact>::construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\extended_type_info_typeid.hpp
;	COMDAT ??1?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAE@XZ PROC ; boost::serialization::extended_type_info_typeid<CContact>::~extended_type_info_typeid<CContact>, COMDAT
; _this$ = ecx

; 94   :     ~extended_type_info_typeid(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$extended_type_info_typeid@VCContact@@@serialization@boost@@6B@

; 95   :         key_unregister();

  0004b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?key_unregister@extended_type_info@serialization@boost@@IBEXXZ ; boost::serialization::extended_type_info::key_unregister

; 96   :         type_unregister();

  00053	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?type_unregister@extended_type_info_typeid_0@typeid_system@serialization@boost@@IAEXXZ ; boost::serialization::typeid_system::extended_type_info_typeid_0::type_unregister

; 97   :     }

  0005b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	e8 00 00 00 00	 call	 ??1extended_type_info_typeid_0@typeid_system@serialization@boost@@MAE@XZ ; boost::serialization::typeid_system::extended_type_info_typeid_0::~extended_type_info_typeid_0
  00063	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00066	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006d	59		 pop	 ecx
  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00077	3b ec		 cmp	 ebp, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$extended_type_info_typeid@VCContact@@@serialization@boost@@UAE@XZ ENDP ; boost::serialization::extended_type_info_typeid<CContact>::~extended_type_info_typeid<CContact>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\extended_type_info_typeid.hpp
;	COMDAT ??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ PROC ; boost::serialization::extended_type_info_typeid<CContact>::extended_type_info_typeid<CContact>, COMDAT
; _this$ = ecx

; 90   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 87   :         typeid_system::extended_type_info_typeid_0(

  00042	e8 00 00 00 00	 call	 ??$guid@VCContact@@@serialization@boost@@YAPBDXZ ; boost::serialization::guid<CContact>
  00047	50		 push	 eax
  00048	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ??0extended_type_info_typeid_0@typeid_system@serialization@boost@@IAE@PBD@Z ; boost::serialization::typeid_system::extended_type_info_typeid_0::extended_type_info_typeid_0
  00050	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 90   :     {

  00057	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$extended_type_info_typeid@VCContact@@@serialization@boost@@6B@

; 91   :         type_register(typeid(T));

  00060	68 00 00 00 00	 push	 OFFSET ??_R0?AVCContact@@@8
  00065	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	e8 00 00 00 00	 call	 ?type_register@extended_type_info_typeid_0@typeid_system@serialization@boost@@IAEXABVtype_info@@@Z ; boost::serialization::typeid_system::extended_type_info_typeid_0::type_register

; 92   :         key_register();

  0006d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	e8 00 00 00 00	 call	 ?key_register@extended_type_info@serialization@boost@@IBEXXZ ; boost::serialization::extended_type_info::key_register

; 93   :     }

  00075	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00082	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00089	59		 pop	 ecx
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	5b		 pop	 ebx
  0008d	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00093	3b ec		 cmp	 ebp, esp
  00095	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1extended_type_info_typeid_0@typeid_system@serialization@boost@@MAE@XZ ; boost::serialization::typeid_system::extended_type_info_typeid_0::~extended_type_info_typeid_0
__ehhandler$??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$extended_type_info_typeid@VCContact@@@serialization@boost@@QAE@XZ ENDP ; boost::serialization::extended_type_info_typeid<CContact>::extended_type_info_typeid<CContact>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?get_const_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@SAABV?$extended_type_info_typeid@VCContact@@@23@XZ
_TEXT	SEGMENT
?get_const_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@SAABV?$extended_type_info_typeid@VCContact@@@23@XZ PROC ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_const_instance, COMDAT

; 134  :     BOOST_DLLEXPORT static const T & get_const_instance(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 135  :         return get_instance();

  0001e	e8 00 00 00 00	 call	 ?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance

; 136  :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
?get_const_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@SAABV?$extended_type_info_typeid@VCContact@@@23@XZ ENDP ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_const_instance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ PROC ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance, COMDAT

; 121  :     BOOST_DLLEXPORT static T & get_instance() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00020	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00031	33 c5		 xor	 eax, ebp
  00033	50		 push	 eax
  00034	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00037	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 122  :         static detail::singleton_wrapper< T > t;

  0003d	a1 00 00 00 00	 mov	 eax, DWORD PTR __tls_index
  00042	64 8b 0d 00 00
	00 00		 mov	 ecx, DWORD PTR fs:__tls_array
  00049	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::et_instance,signed char,VCContact::tended_type_info_typeid>
  00051	3b 82 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[edx]
  00057	7e 48		 jle	 SHORT $LN2@get_instan
  00059	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::et_instance,signed char,VCContact::tended_type_info_typeid>
  0005e	e8 00 00 00 00	 call	 __Init_thread_header
  00063	83 c4 04	 add	 esp, 4
  00066	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4HA, -1 ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::et_instance,signed char,VCContact::tended_type_info_typeid>
  0006d	75 32		 jne	 SHORT $LN2@get_instan
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	b9 00 00 00 00	 mov	 ecx, OFFSET ?t@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4V?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@34@A ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance'::`2'::t
  0007b	e8 00 00 00 00	 call	 ??0?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@QAE@XZ
  00080	68 00 00 00 00	 push	 OFFSET ??__Ft@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ@YAXXZ ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance'::`2'::`dynamic atexit destructor for 't''
  00085	e8 00 00 00 00	 call	 _atexit
  0008a	83 c4 04	 add	 esp, 4
  0008d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00094	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::et_instance,signed char,VCContact::tended_type_info_typeid>
  00099	e8 00 00 00 00	 call	 __Init_thread_footer
  0009e	83 c4 04	 add	 esp, 4
$LN2@get_instan:

; 123  :         // refer to instance, causing it to be instantiated (and
; 124  :         // initialized at startup on working compilers)
; 125  :         BOOST_ASSERT(! detail::singleton_wrapper< T >::m_is_destroyed);

  000a1	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?m_is_destroyed@?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@serialization@boost@@2_NA ; boost::serialization::detail::singleton_wrapper<boost::serialization::extended_type_info_typeid<CContact> >::m_is_destroyed
  000a8	85 c0		 test	 eax, eax
  000aa	74 1e		 je	 SHORT $LN4@get_instan
  000ac	8b f4		 mov	 esi, esp
  000ae	6a 7d		 push	 125			; 0000007dH
  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_1JC@GIHFICPP@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
  000b5	68 00 00 00 00	 push	 OFFSET ??_C@_1GC@KKEDEOBO@?$AA?$CB?$AA?5?$AAd?$AAe?$AAt?$AAa?$AAi?$AAl?$AA?3?$AA?3?$AAs?$AAi?$AAn?$AAg?$AAl?$AAe?$AAt?$AAo?$AAn?$AA_?$AAw?$AAr?$AAa?$AAp?$AAp?$AAe?$AAr?$AA?$DM?$AA?5?$AAT?$AA?5?$AA?$DO@
  000ba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  000c0	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c3	3b f4		 cmp	 esi, esp
  000c5	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@get_instan:

; 126  :         use(& instance);

  000ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@0AAV?$extended_type_info_typeid@VCContact@@@23@A ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::instance
  000cf	50		 push	 eax
  000d0	e8 00 00 00 00	 call	 ?use@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAXPBV?$extended_type_info_typeid@VCContact@@@23@@Z ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::use
  000d5	83 c4 04	 add	 esp, 4

; 127  :         return static_cast<T &>(t);

  000d8	b8 00 00 00 00	 mov	 eax, OFFSET ?t@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4V?$singleton_wrapper@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@detail@34@A ; `boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance'::`2'::t

; 128  :     }

  000dd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e7	59		 pop	 ecx
  000e8	5f		 pop	 edi
  000e9	5e		 pop	 esi
  000ea	5b		 pop	 ebx
  000eb	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000f1	3b ec		 cmp	 ebp, esp
  000f3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f8	8b e5		 mov	 esp, ebp
  000fa	5d		 pop	 ebp
  000fb	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@34@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::et_instance,signed char,VCContact::tended_type_info_typeid>
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
__ehhandler$?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ:
  0000c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00010	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00013	8b 8a 30 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-208]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?get_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAAAV?$extended_type_info_typeid@VCContact@@@23@XZ ENDP ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_instance
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?use@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAXPBV?$extended_type_info_typeid@VCContact@@@23@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?use@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAXPBV?$extended_type_info_typeid@VCContact@@@23@@Z PROC ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::use, COMDAT

; 120  :     static void use(T const *) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?use@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@CAXPBV?$extended_type_info_typeid@VCContact@@@23@@Z ENDP ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::use
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__Ft@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ@YAXXZ
text$yd	SEGMENT
??__Ft@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ@YAXXZ PROC ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance'::`2'::`dynamic atexit destructor for 't'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET ?t@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@634@A ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance'::`2'::t
  00023	e8 00 00 00 00	 call	 ??1?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::~singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??__Ft@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ@YAXXZ ENDP ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance'::`2'::`dynamic atexit destructor for 't''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z PROC ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::~singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0e		 je	 SHORT $LN2@scalar
  00033	6a 0c		 push	 12			; 0000000cH
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003e	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
??_G?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAEPAXI@Z ENDP ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ PROC ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@QAE@XZ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::oserializer<boost::archive::text_oarchive,CContact>
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@
  00034	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??0?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ ENDP ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ??1?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ PROC ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::~singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >, COMDAT
; _this$ = ecx

; 104  :     ~singleton_wrapper(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@6B@

; 105  :         m_is_destroyed = true;

  0002c	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?m_is_destroyed@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@2_NA, 1 ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::m_is_destroyed

; 106  :     }

  00033	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	e8 00 00 00 00	 call	 ??1?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAE@XZ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::~oserializer<boost::archive::text_oarchive,CContact>
  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??1?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@UAE@XZ ENDP ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::~singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_oarchive.hpp
;	COMDAT ??$save@Vobject_id_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_id_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save@Vobject_id_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_id_type@12@@Z PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::object_id_type>, COMDAT
; _this$ = ecx

; 63   :     void save(const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 64   :         this->newtoken();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?newtoken@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::newtoken

; 65   :         basic_text_oprimitive<std::ostream>::save(t);

  0002b	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  0002e	50		 push	 eax
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	83 c1 20	 add	 ecx, 32			; 00000020H
  00035	e8 00 00 00 00	 call	 ??$save@Vobject_id_type@archive@boost@@@?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAEXABVobject_id_type@12@@Z ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::save<boost::archive::object_id_type>

; 66   :     }

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c2 04 00	 ret	 4
??$save@Vobject_id_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_id_type@12@@Z ENDP ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 232  :         static void invoke(Archive & ar, const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 233  :             save_access::save_primitive(ar, t);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$save_primitive@Vtext_oarchive@archive@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0002b	83 c4 08	 add	 esp, 8

; 234  :         }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 64   : inline void check_object_versioning(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$check_object_versioning@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@Vversion_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVversion_type@34@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vversion_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVversion_type@34@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::version_type>, COMDAT

; 384  :         static void invoke(Archive & ar, T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 385  :             load_access::load_primitive(ar, t);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$load_primitive@Vtext_iarchive@archive@boost@@Vversion_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVversion_type@12@@Z ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::version_type>
  0002b	83 c4 08	 add	 esp, 8

; 386  :         }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??$invoke@Vversion_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVversion_type@34@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_level@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_level@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_level<boost::archive::version_type>, COMDAT

; 51   : inline void check_object_level(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 52   :     typedef 
; 53   :         typename mpl::greater_equal<
; 54   :             serialization::implementation_level< T >,
; 55   :             mpl::int_<serialization::primitive_type>
; 56   :         >::type typex;
; 57   : 
; 58   :     // trap attempts to serialize objects marked
; 59   :     // not_serializable
; 60   :     BOOST_STATIC_ASSERT(typex::value);
; 61   : }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$check_object_level@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_level<boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@Vobject_id_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVobject_id_type@34@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vobject_id_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVobject_id_type@34@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::object_id_type>, COMDAT

; 384  :         static void invoke(Archive & ar, T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 385  :             load_access::load_primitive(ar, t);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$load_primitive@Vtext_iarchive@archive@boost@@Vobject_id_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVobject_id_type@12@@Z ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::object_id_type>
  0002b	83 c4 08	 add	 esp, 8

; 386  :         }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??$invoke@Vobject_id_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVobject_id_type@34@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_level@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_level@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_level<boost::archive::object_id_type>, COMDAT

; 51   : inline void check_object_level(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 52   :     typedef 
; 53   :         typename mpl::greater_equal<
; 54   :             serialization::implementation_level< T >,
; 55   :             mpl::int_<serialization::primitive_type>
; 56   :         >::type typex;
; 57   : 
; 58   :     // trap attempts to serialize objects marked
; 59   :     // not_serializable
; 60   :     BOOST_STATIC_ASSERT(typex::value);
; 61   : }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$check_object_level@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_level<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@Vclass_id_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVclass_id_type@34@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vclass_id_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVclass_id_type@34@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::class_id_type>, COMDAT

; 384  :         static void invoke(Archive & ar, T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 385  :             load_access::load_primitive(ar, t);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$load_primitive@Vtext_iarchive@archive@boost@@Vclass_id_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAVclass_id_type@12@@Z ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::class_id_type>
  0002b	83 c4 08	 add	 esp, 8

; 386  :         }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??$invoke@Vclass_id_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVclass_id_type@34@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_level@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_level@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_level<boost::archive::class_id_type>, COMDAT

; 51   : inline void check_object_level(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 52   :     typedef 
; 53   :         typename mpl::greater_equal<
; 54   :             serialization::implementation_level< T >,
; 55   :             mpl::int_<serialization::primitive_type>
; 56   :         >::type typex;
; 57   : 
; 58   :     // trap attempts to serialize objects marked
; 59   :     // not_serializable
; 60   :     BOOST_STATIC_ASSERT(typex::value);
; 61   : }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$check_object_level@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_level<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@Utracking_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAUtracking_type@34@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Utracking_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAUtracking_type@34@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::tracking_type>, COMDAT

; 384  :         static void invoke(Archive & ar, T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 385  :             load_access::load_primitive(ar, t);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$load_primitive@Vtext_iarchive@archive@boost@@Utracking_type@23@@load_access@archive@boost@@SAXAAVtext_iarchive@12@AAUtracking_type@12@@Z ; boost::archive::load_access::load_primitive<boost::archive::text_iarchive,boost::archive::tracking_type>
  0002b	83 c4 08	 add	 esp, 8

; 386  :         }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??$invoke@Utracking_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAUtracking_type@34@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_level@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_level@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_level<boost::archive::tracking_type>, COMDAT

; 51   : inline void check_object_level(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 52   :     typedef 
; 53   :         typename mpl::greater_equal<
; 54   :             serialization::implementation_level< T >,
; 55   :             mpl::int_<serialization::primitive_type>
; 56   :         >::type typex;
; 57   : 
; 58   :     // trap attempts to serialize objects marked
; 59   :     // not_serializable
; 60   :     BOOST_STATIC_ASSERT(typex::value);
; 61   : }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$check_object_level@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_level<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save_primitive@Vtext_oarchive@archive@boost@@Vversion_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVversion_type@12@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save_primitive@Vtext_oarchive@archive@boost@@Vversion_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVversion_type@12@@Z PROC ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::version_type>, COMDAT

; 87   :     static void save_primitive(Archive & ar, const  T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 88   :         ar.end_preamble();

  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00021	e8 00 00 00 00	 call	 ?end_preamble@basic_oarchive@detail@archive@boost@@QAEXXZ ; boost::archive::detail::basic_oarchive::end_preamble

; 89   :         ar.save(t);

  00026	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002d	e8 00 00 00 00	 call	 ?save@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVversion_type@23@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save

; 90   :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
??$save_primitive@Vtext_oarchive@archive@boost@@Vversion_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVversion_type@12@@Z ENDP ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save_primitive@Vtext_oarchive@archive@boost@@Vobject_reference_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVobject_reference_type@12@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save_primitive@Vtext_oarchive@archive@boost@@Vobject_reference_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVobject_reference_type@12@@Z PROC ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::object_reference_type>, COMDAT

; 87   :     static void save_primitive(Archive & ar, const  T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 88   :         ar.end_preamble();

  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00021	e8 00 00 00 00	 call	 ?end_preamble@basic_oarchive@detail@archive@boost@@QAEXXZ ; boost::archive::detail::basic_oarchive::end_preamble

; 89   :         ar.save(t);

  00026	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002d	e8 00 00 00 00	 call	 ??$save@Vobject_reference_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_reference_type@12@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::object_reference_type>

; 90   :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
??$save_primitive@Vtext_oarchive@archive@boost@@Vobject_reference_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVobject_reference_type@12@@Z ENDP ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::object_reference_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save_primitive@Vtext_oarchive@archive@boost@@Vclass_id_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVclass_id_type@12@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save_primitive@Vtext_oarchive@archive@boost@@Vclass_id_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVclass_id_type@12@@Z PROC ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::class_id_type>, COMDAT

; 87   :     static void save_primitive(Archive & ar, const  T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 88   :         ar.end_preamble();

  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00021	e8 00 00 00 00	 call	 ?end_preamble@basic_oarchive@detail@archive@boost@@QAEXXZ ; boost::archive::detail::basic_oarchive::end_preamble

; 89   :         ar.save(t);

  00026	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002d	e8 00 00 00 00	 call	 ??$save@Vclass_id_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_type@12@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::class_id_type>

; 90   :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
??$save_primitive@Vtext_oarchive@archive@boost@@Vclass_id_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVclass_id_type@12@@Z ENDP ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save_primitive@Vtext_oarchive@archive@boost@@Vclass_id_reference_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVclass_id_reference_type@12@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save_primitive@Vtext_oarchive@archive@boost@@Vclass_id_reference_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVclass_id_reference_type@12@@Z PROC ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::class_id_reference_type>, COMDAT

; 87   :     static void save_primitive(Archive & ar, const  T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 88   :         ar.end_preamble();

  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00021	e8 00 00 00 00	 call	 ?end_preamble@basic_oarchive@detail@archive@boost@@QAEXXZ ; boost::archive::detail::basic_oarchive::end_preamble

; 89   :         ar.save(t);

  00026	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002d	e8 00 00 00 00	 call	 ??$save@Vclass_id_reference_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::class_id_reference_type>

; 90   :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
??$save_primitive@Vtext_oarchive@archive@boost@@Vclass_id_reference_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVclass_id_reference_type@12@@Z ENDP ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::class_id_reference_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save_primitive@Vtext_oarchive@archive@boost@@Utracking_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABUtracking_type@12@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save_primitive@Vtext_oarchive@archive@boost@@Utracking_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABUtracking_type@12@@Z PROC ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::tracking_type>, COMDAT

; 87   :     static void save_primitive(Archive & ar, const  T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 88   :         ar.end_preamble();

  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00021	e8 00 00 00 00	 call	 ?end_preamble@basic_oarchive@detail@archive@boost@@QAEXXZ ; boost::archive::detail::basic_oarchive::end_preamble

; 89   :         ar.save(t);

  00026	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002d	e8 00 00 00 00	 call	 ??$save@Utracking_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUtracking_type@12@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::tracking_type>

; 90   :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
??$save_primitive@Vtext_oarchive@archive@boost@@Utracking_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABUtracking_type@12@@Z ENDP ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@VCContact@@@load_standard@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABVCContact@@@Z
_TEXT	SEGMENT
_x$ = -8						; size = 4
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@VCContact@@@load_standard@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABVCContact@@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_standard::invoke<CContact>, COMDAT

; 408  :         static void invoke(Archive &ar, const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 409  :             void * x = & const_cast<T &>(t);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00021	89 45 f8	 mov	 DWORD PTR _x$[ebp], eax

; 410  :             ar.load_object(

  00024	e8 00 00 00 00	 call	 ?get_const_instance@?$singleton@V?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@SAABV?$iserializer@Vtext_iarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::iserializer<boost::archive::text_iarchive,CContact> >::get_const_instance
  00029	50		 push	 eax
  0002a	8b 45 f8	 mov	 eax, DWORD PTR _x$[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00031	e8 00 00 00 00	 call	 ?load_object@basic_iarchive@detail@archive@boost@@QAEXPAXABVbasic_iserializer@234@@Z ; boost::archive::detail::basic_iarchive::load_object

; 411  :                 x, 
; 412  :                 boost::serialization::singleton<
; 413  :                     iserializer<Archive, T>
; 414  :                 >::get_const_instance()
; 415  :             );
; 416  :         }

  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003f	3b ec		 cmp	 ebp, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
??$invoke@VCContact@@@load_standard@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABVCContact@@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_standard::invoke<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_level@VCContact@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_level@VCContact@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_level<CContact>, COMDAT

; 51   : inline void check_object_level(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 52   :     typedef 
; 53   :         typename mpl::greater_equal<
; 54   :             serialization::implementation_level< T >,
; 55   :             mpl::int_<serialization::primitive_type>
; 56   :         >::type typex;
; 57   : 
; 58   :     // trap attempts to serialize objects marked
; 59   :     // not_serializable
; 60   :     BOOST_STATIC_ASSERT(typex::value);
; 61   : }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$check_object_level@VCContact@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_level<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAEPAXI@Z PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAE@XZ ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::~oserializer<boost::archive::text_oarchive,CContact>
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0e		 je	 SHORT $LN2@scalar
  00033	6a 0c		 push	 12			; 0000000cH
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003e	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
??_G?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAEPAXI@Z ENDP ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??1?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAE@XZ PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::~oserializer<boost::archive::text_oarchive,CContact>, COMDAT
; _this$ = ecx

; 134  :     virtual ~oserializer(){}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ??1basic_oserializer@detail@archive@boost@@MAE@XZ ; boost::archive::detail::basic_oserializer::~basic_oserializer
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
??1?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UAE@XZ ENDP ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::~oserializer<boost::archive::text_oarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ?is_polymorphic@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?is_polymorphic@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::is_polymorphic, COMDAT
; _this$ = ecx

; 131  :     virtual bool is_polymorphic() const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 132  :         return boost::is_polymorphic< T >::value;

  00023	b0 01		 mov	 al, 1

; 133  :     }

  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?is_polymorphic@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ ENDP ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::is_polymorphic
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ?version@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE?AVversion_type@34@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?version@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE?AVversion_type@34@XZ PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::version, COMDAT
; _this$ = ecx

; 128  :     virtual version_type version() const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 129  :         return version_type(::boost::serialization::version< T >::value);

  00023	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T1[ebp], 0
  0002d	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00033	50		 push	 eax
  00034	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00037	e8 00 00 00 00	 call	 ??0version_type@archive@boost@@QAE@ABI@Z ; boost::archive::version_type::version_type
  0003c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 130  :     }

  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
?version@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE?AVversion_type@34@XZ ENDP ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::version
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ?tracking@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NI@Z
_TEXT	SEGMENT
tv74 = -208						; size = 4
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?tracking@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NI@Z PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::tracking, COMDAT
; _this$ = ecx

; 123  :     virtual bool tracking(const unsigned int /* flags */) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 124  :         return boost::serialization::tracking_level< T >::value == boost::serialization::track_always

  00023	33 c0		 xor	 eax, eax
  00025	75 24		 jne	 SHORT $LN4@tracking
  00027	b9 01 00 00 00	 mov	 ecx, 1
  0002c	85 c9		 test	 ecx, ecx
  0002e	74 0f		 je	 SHORT $LN3@tracking
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?serialized_as_pointer@basic_oserializer@detail@archive@boost@@QBE_NXZ ; boost::archive::detail::basic_oserializer::serialized_as_pointer
  00038	0f b6 d0	 movzx	 edx, al
  0003b	85 d2		 test	 edx, edx
  0003d	75 0c		 jne	 SHORT $LN4@tracking
$LN3@tracking:
  0003f	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
  00049	eb 0a		 jmp	 SHORT $LN5@tracking
$LN4@tracking:
  0004b	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv74[ebp], 1
$LN5@tracking:
  00055	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv74[ebp]

; 125  :             || (boost::serialization::tracking_level< T >::value == boost::serialization::track_selectively
; 126  :                 && serialized_as_pointer());
; 127  :     }

  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi
  0005d	5b		 pop	 ebx
  0005e	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c2 04 00	 ret	 4
?tracking@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NI@Z ENDP ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::tracking
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ?class_info@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?class_info@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::class_info, COMDAT
; _this$ = ecx

; 119  :     virtual bool class_info() const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 120  :         return boost::serialization::implementation_level< T >::value 

  00023	b0 01		 mov	 al, 1

; 121  :             >= boost::serialization::object_class_info;
; 122  :     }

  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?class_info@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBE_NXZ ENDP ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::class_info
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ?save_object_data@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBEXAAVbasic_oarchive@234@PBX@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
_ar$ = 8						; size = 4
_x$ = 12						; size = 4
?save_object_data@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBEXAAVbasic_oarchive@234@PBX@Z PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::save_object_data, COMDAT
; _this$ = ecx

; 145  : ) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 146  :     // make sure call is routed through the highest interface that might
; 147  :     // be specialized by the user.
; 148  :     BOOST_STATIC_ASSERT(boost::is_const< T >::value == false);
; 149  :     boost::serialization::serialize_adl(

  00023	8b f4		 mov	 esi, esp
  00025	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  0002b	50		 push	 eax
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00031	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00037	ff d0		 call	 eax
  00039	3b f4		 cmp	 esi, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	8b c8		 mov	 ecx, eax
  00042	e8 00 00 00 00	 call	 ??Bversion_type@archive@boost@@QAEAAIXZ ; boost::archive::version_type::operator unsigned int &
  00047	8b 08		 mov	 ecx, DWORD PTR [eax]
  00049	51		 push	 ecx
  0004a	8b 55 0c	 mov	 edx, DWORD PTR _x$[ebp]
  0004d	52		 push	 edx
  0004e	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ??$smart_cast_reference@AAVtext_oarchive@archive@boost@@Vbasic_oarchive@detail@23@@serialization@boost@@YAAAVtext_oarchive@archive@1@AAVbasic_oarchive@detail@31@@Z ; boost::serialization::smart_cast_reference<boost::archive::text_oarchive &,boost::archive::detail::basic_oarchive>
  00057	83 c4 04	 add	 esp, 4
  0005a	50		 push	 eax
  0005b	e8 00 00 00 00	 call	 ??$serialize_adl@Vtext_oarchive@archive@boost@@VCContact@@@serialization@boost@@YAXAAVtext_oarchive@archive@1@AAVCContact@@I@Z ; boost::serialization::serialize_adl<boost::archive::text_oarchive,CContact>
  00060	83 c4 0c	 add	 esp, 12			; 0000000cH

; 150  :         boost::serialization::smart_cast_reference<Archive &>(ar),
; 151  :         * static_cast<T *>(const_cast<void *>(x)),
; 152  :         version()
; 153  :     );
; 154  : }

  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
  00066	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c2 08 00	 ret	 8
?save_object_data@?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@UBEXAAVbasic_oarchive@234@PBX@Z ENDP ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::save_object_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??0?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@QAE@XZ PROC ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::oserializer<boost::archive::text_oarchive,CContact>, COMDAT
; _this$ = ecx

; 114  :     {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 108  :         basic_oserializer(

  00023	e8 00 00 00 00	 call	 ?get_const_instance@?$singleton@V?$extended_type_info_typeid@VCContact@@@serialization@boost@@@serialization@boost@@SAABV?$extended_type_info_typeid@VCContact@@@23@XZ ; boost::serialization::singleton<boost::serialization::extended_type_info_typeid<CContact> >::get_const_instance
  00028	50		 push	 eax
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ??0basic_oserializer@detail@archive@boost@@IAE@ABVextended_type_info@serialization@3@@Z ; boost::archive::detail::basic_oserializer::basic_oserializer

; 114  :     {}

  00031	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00034	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@6B@
  0003a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
??0?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@QAE@XZ ENDP ; boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact>::oserializer<boost::archive::text_oarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?get_const_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@SAABV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ
_TEXT	SEGMENT
?get_const_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@SAABV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ PROC ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_const_instance, COMDAT

; 134  :     BOOST_DLLEXPORT static const T & get_const_instance(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 135  :         return get_instance();

  0001e	e8 00 00 00 00	 call	 ?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance

; 136  :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
?get_const_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@SAABV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ENDP ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_const_instance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ PROC ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance, COMDAT

; 121  :     BOOST_DLLEXPORT static T & get_instance() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00020	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00031	33 c5		 xor	 eax, ebp
  00033	50		 push	 eax
  00034	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00037	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 122  :         static detail::singleton_wrapper< T > t;

  0003d	a1 00 00 00 00	 mov	 eax, DWORD PTR __tls_index
  00042	64 8b 0d 00 00
	00 00		 mov	 ecx, DWORD PTR fs:__tls_array
  00049	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_oarchive::erializer,CContact>
  00051	3b 82 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[edx]
  00057	7e 48		 jle	 SHORT $LN2@get_instan
  00059	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_oarchive::erializer,CContact>
  0005e	e8 00 00 00 00	 call	 __Init_thread_header
  00063	83 c4 04	 add	 esp, 4
  00066	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA, -1 ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_oarchive::erializer,CContact>
  0006d	75 32		 jne	 SHORT $LN2@get_instan
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	b9 00 00 00 00	 mov	 ecx, OFFSET ?t@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@634@A ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance'::`2'::t
  0007b	e8 00 00 00 00	 call	 ??0?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@QAE@XZ
  00080	68 00 00 00 00	 push	 OFFSET ??__Ft@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ@YAXXZ ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance'::`2'::`dynamic atexit destructor for 't''
  00085	e8 00 00 00 00	 call	 _atexit
  0008a	83 c4 04	 add	 esp, 4
  0008d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00094	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_oarchive::erializer,CContact>
  00099	e8 00 00 00 00	 call	 __Init_thread_footer
  0009e	83 c4 04	 add	 esp, 4
$LN2@get_instan:

; 123  :         // refer to instance, causing it to be instantiated (and
; 124  :         // initialized at startup on working compilers)
; 125  :         BOOST_ASSERT(! detail::singleton_wrapper< T >::m_is_destroyed);

  000a1	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?m_is_destroyed@?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@detail@serialization@boost@@2_NA ; boost::serialization::detail::singleton_wrapper<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::m_is_destroyed
  000a8	85 c0		 test	 eax, eax
  000aa	74 1e		 je	 SHORT $LN4@get_instan
  000ac	8b f4		 mov	 esi, esp
  000ae	6a 7d		 push	 125			; 0000007dH
  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_1JC@GIHFICPP@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
  000b5	68 00 00 00 00	 push	 OFFSET ??_C@_1GC@KKEDEOBO@?$AA?$CB?$AA?5?$AAd?$AAe?$AAt?$AAa?$AAi?$AAl?$AA?3?$AA?3?$AAs?$AAi?$AAn?$AAg?$AAl?$AAe?$AAt?$AAo?$AAn?$AA_?$AAw?$AAr?$AAa?$AAp?$AAp?$AAe?$AAr?$AA?$DM?$AA?5?$AAT?$AA?5?$AA?$DO@
  000ba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  000c0	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c3	3b f4		 cmp	 esi, esp
  000c5	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@get_instan:

; 126  :         use(& instance);

  000ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@0AAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@A ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::instance
  000cf	50		 push	 eax
  000d0	e8 00 00 00 00	 call	 ?use@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@@Z ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::use
  000d5	83 c4 04	 add	 esp, 4

; 127  :         return static_cast<T &>(t);

  000d8	b8 00 00 00 00	 mov	 eax, OFFSET ?t@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4V?$singleton_wrapper@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@634@A ; `boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance'::`2'::t

; 128  :     }

  000dd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e7	59		 pop	 ecx
  000e8	5f		 pop	 edi
  000e9	5e		 pop	 esi
  000ea	5b		 pop	 ebx
  000eb	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000f1	3b ec		 cmp	 ebp, esp
  000f3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f8	8b e5		 mov	 esp, ebp
  000fa	5d		 pop	 ebp
  000fb	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@4@XZ@4HA ; TSS0<`template-parameter-2',boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::et_instance,signed char,boost::archive::Vtext_oarchive::erializer,CContact>
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
__ehhandler$?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ:
  0000c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00010	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00013	8b 8a 30 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-208]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?get_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAAAV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ENDP ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_instance
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\singleton.hpp
;	COMDAT ?use@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?use@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@@Z PROC ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::use, COMDAT

; 120  :     static void use(T const *) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?use@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@CAXPBV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@@Z ENDP ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::use
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save_primitive@Vtext_oarchive@archive@boost@@Vobject_id_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVobject_id_type@12@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save_primitive@Vtext_oarchive@archive@boost@@Vobject_id_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVobject_id_type@12@@Z PROC ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::object_id_type>, COMDAT

; 87   :     static void save_primitive(Archive & ar, const  T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 88   :         ar.end_preamble();

  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00021	e8 00 00 00 00	 call	 ?end_preamble@basic_oarchive@detail@archive@boost@@QAEXXZ ; boost::archive::detail::basic_oarchive::end_preamble

; 89   :         ar.save(t);

  00026	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002d	e8 00 00 00 00	 call	 ??$save@Vobject_id_type@archive@boost@@@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_id_type@12@@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<boost::archive::object_id_type>

; 90   :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
??$save_primitive@Vtext_oarchive@archive@boost@@Vobject_id_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVobject_id_type@12@@Z ENDP ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 277  :     static void invoke(Archive & ar, const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 278  :         typedef 
; 279  :             typename mpl::eval_if<
; 280  :             // if its primitive
; 281  :                 mpl::equal_to<
; 282  :                     boost::serialization::implementation_level< T >,
; 283  :                     mpl::int_<boost::serialization::primitive_type>
; 284  :                 >,
; 285  :                 mpl::identity<save_primitive>,
; 286  :             // else
; 287  :             typename mpl::eval_if<
; 288  :                 // class info / version
; 289  :                 mpl::greater_equal<
; 290  :                     boost::serialization::implementation_level< T >,
; 291  :                     mpl::int_<boost::serialization::object_class_info>
; 292  :                 >,
; 293  :                 // do standard save
; 294  :                 mpl::identity<save_standard>,
; 295  :             // else
; 296  :             typename mpl::eval_if<
; 297  :                     // no tracking
; 298  :                 mpl::equal_to<
; 299  :                     boost::serialization::tracking_level< T >,
; 300  :                     mpl::int_<boost::serialization::track_never>
; 301  :                 >,
; 302  :                 // do a fast save
; 303  :                 mpl::identity<save_only>,
; 304  :             // else
; 305  :                 // do a fast save only tracking is turned off
; 306  :                 mpl::identity<save_conditional>
; 307  :             > > >::type typex; 
; 308  :         check_object_versioning< T >();

  0001e	e8 00 00 00 00	 call	 ??$check_object_versioning@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 309  :         typex::invoke(ar, t);

  00023	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00030	83 c4 08	 add	 esp, 8

; 310  :     }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@Vversion_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVversion_type@23@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vversion_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVversion_type@23@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::version_type>, COMDAT

; 430  :     static void invoke(Archive & ar, T &t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 431  :         typedef typename mpl::eval_if<
; 432  :                 // if its primitive
; 433  :                 mpl::equal_to<
; 434  :                     boost::serialization::implementation_level< T >,
; 435  :                     mpl::int_<boost::serialization::primitive_type>
; 436  :                 >,
; 437  :                 mpl::identity<load_primitive>,
; 438  :             // else
; 439  :             typename mpl::eval_if<
; 440  :             // class info / version
; 441  :             mpl::greater_equal<
; 442  :                         boost::serialization::implementation_level< T >,
; 443  :                         mpl::int_<boost::serialization::object_class_info>
; 444  :                     >,
; 445  :             // do standard load
; 446  :             mpl::identity<load_standard>,
; 447  :         // else
; 448  :         typename mpl::eval_if<
; 449  :             // no tracking
; 450  :                     mpl::equal_to<
; 451  :                         boost::serialization::tracking_level< T >,
; 452  :                         mpl::int_<boost::serialization::track_never>
; 453  :                 >,
; 454  :                 // do a fast load
; 455  :                 mpl::identity<load_only>,
; 456  :             // else
; 457  :             // do a fast load only tracking is turned off
; 458  :             mpl::identity<load_conditional>
; 459  :         > > >::type typex;
; 460  :         check_object_versioning< T >();

  0001e	e8 00 00 00 00	 call	 ??$check_object_versioning@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::version_type>

; 461  :         check_object_level< T >();

  00023	e8 00 00 00 00	 call	 ??$check_object_level@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::archive::version_type>

; 462  :         typex::invoke(ar, t);

  00028	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  0002b	50		 push	 eax
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002f	51		 push	 ecx
  00030	e8 00 00 00 00	 call	 ??$invoke@Vversion_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVversion_type@34@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::version_type>
  00035	83 c4 08	 add	 esp, 8

; 463  :     }

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00041	3b ec		 cmp	 ebp, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
??$invoke@Vversion_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVversion_type@23@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_const_loading@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_const_loading@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_const_loading<boost::archive::version_type>, COMDAT

; 152  : inline void check_const_loading(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 153  :     typedef
; 154  :         typename mpl::or_<
; 155  :             typename boost::serialization::is_wrapper< T >,
; 156  :             typename mpl::not_<
; 157  :                 typename boost::is_const< T >
; 158  :             >
; 159  :         >::type typex;
; 160  :     // cannot load data into a "const" object unless it's a
; 161  :     // wrapper around some other non-const object.
; 162  :     BOOST_STATIC_ASSERT(typex::value);
; 163  : }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$check_const_loading@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_const_loading<boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@Vobject_id_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVobject_id_type@23@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vobject_id_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVobject_id_type@23@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::object_id_type>, COMDAT

; 430  :     static void invoke(Archive & ar, T &t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 431  :         typedef typename mpl::eval_if<
; 432  :                 // if its primitive
; 433  :                 mpl::equal_to<
; 434  :                     boost::serialization::implementation_level< T >,
; 435  :                     mpl::int_<boost::serialization::primitive_type>
; 436  :                 >,
; 437  :                 mpl::identity<load_primitive>,
; 438  :             // else
; 439  :             typename mpl::eval_if<
; 440  :             // class info / version
; 441  :             mpl::greater_equal<
; 442  :                         boost::serialization::implementation_level< T >,
; 443  :                         mpl::int_<boost::serialization::object_class_info>
; 444  :                     >,
; 445  :             // do standard load
; 446  :             mpl::identity<load_standard>,
; 447  :         // else
; 448  :         typename mpl::eval_if<
; 449  :             // no tracking
; 450  :                     mpl::equal_to<
; 451  :                         boost::serialization::tracking_level< T >,
; 452  :                         mpl::int_<boost::serialization::track_never>
; 453  :                 >,
; 454  :                 // do a fast load
; 455  :                 mpl::identity<load_only>,
; 456  :             // else
; 457  :             // do a fast load only tracking is turned off
; 458  :             mpl::identity<load_conditional>
; 459  :         > > >::type typex;
; 460  :         check_object_versioning< T >();

  0001e	e8 00 00 00 00	 call	 ??$check_object_versioning@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::object_id_type>

; 461  :         check_object_level< T >();

  00023	e8 00 00 00 00	 call	 ??$check_object_level@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::archive::object_id_type>

; 462  :         typex::invoke(ar, t);

  00028	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  0002b	50		 push	 eax
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002f	51		 push	 ecx
  00030	e8 00 00 00 00	 call	 ??$invoke@Vobject_id_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVobject_id_type@34@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::object_id_type>
  00035	83 c4 08	 add	 esp, 8

; 463  :     }

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00041	3b ec		 cmp	 ebp, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
??$invoke@Vobject_id_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVobject_id_type@23@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_const_loading@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_const_loading@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_const_loading<boost::archive::object_id_type>, COMDAT

; 152  : inline void check_const_loading(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 153  :     typedef
; 154  :         typename mpl::or_<
; 155  :             typename boost::serialization::is_wrapper< T >,
; 156  :             typename mpl::not_<
; 157  :                 typename boost::is_const< T >
; 158  :             >
; 159  :         >::type typex;
; 160  :     // cannot load data into a "const" object unless it's a
; 161  :     // wrapper around some other non-const object.
; 162  :     BOOST_STATIC_ASSERT(typex::value);
; 163  : }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$check_const_loading@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_const_loading<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@Vclass_id_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVclass_id_type@23@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vclass_id_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVclass_id_type@23@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::class_id_type>, COMDAT

; 430  :     static void invoke(Archive & ar, T &t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 431  :         typedef typename mpl::eval_if<
; 432  :                 // if its primitive
; 433  :                 mpl::equal_to<
; 434  :                     boost::serialization::implementation_level< T >,
; 435  :                     mpl::int_<boost::serialization::primitive_type>
; 436  :                 >,
; 437  :                 mpl::identity<load_primitive>,
; 438  :             // else
; 439  :             typename mpl::eval_if<
; 440  :             // class info / version
; 441  :             mpl::greater_equal<
; 442  :                         boost::serialization::implementation_level< T >,
; 443  :                         mpl::int_<boost::serialization::object_class_info>
; 444  :                     >,
; 445  :             // do standard load
; 446  :             mpl::identity<load_standard>,
; 447  :         // else
; 448  :         typename mpl::eval_if<
; 449  :             // no tracking
; 450  :                     mpl::equal_to<
; 451  :                         boost::serialization::tracking_level< T >,
; 452  :                         mpl::int_<boost::serialization::track_never>
; 453  :                 >,
; 454  :                 // do a fast load
; 455  :                 mpl::identity<load_only>,
; 456  :             // else
; 457  :             // do a fast load only tracking is turned off
; 458  :             mpl::identity<load_conditional>
; 459  :         > > >::type typex;
; 460  :         check_object_versioning< T >();

  0001e	e8 00 00 00 00	 call	 ??$check_object_versioning@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::class_id_type>

; 461  :         check_object_level< T >();

  00023	e8 00 00 00 00	 call	 ??$check_object_level@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::archive::class_id_type>

; 462  :         typex::invoke(ar, t);

  00028	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  0002b	50		 push	 eax
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002f	51		 push	 ecx
  00030	e8 00 00 00 00	 call	 ??$invoke@Vclass_id_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAVclass_id_type@34@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::class_id_type>
  00035	83 c4 08	 add	 esp, 8

; 463  :     }

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00041	3b ec		 cmp	 ebp, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
??$invoke@Vclass_id_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVclass_id_type@23@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_const_loading@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_const_loading@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_const_loading<boost::archive::class_id_type>, COMDAT

; 152  : inline void check_const_loading(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 153  :     typedef
; 154  :         typename mpl::or_<
; 155  :             typename boost::serialization::is_wrapper< T >,
; 156  :             typename mpl::not_<
; 157  :                 typename boost::is_const< T >
; 158  :             >
; 159  :         >::type typex;
; 160  :     // cannot load data into a "const" object unless it's a
; 161  :     // wrapper around some other non-const object.
; 162  :     BOOST_STATIC_ASSERT(typex::value);
; 163  : }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$check_const_loading@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_const_loading<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@Utracking_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAUtracking_type@23@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Utracking_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAUtracking_type@23@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::tracking_type>, COMDAT

; 430  :     static void invoke(Archive & ar, T &t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 431  :         typedef typename mpl::eval_if<
; 432  :                 // if its primitive
; 433  :                 mpl::equal_to<
; 434  :                     boost::serialization::implementation_level< T >,
; 435  :                     mpl::int_<boost::serialization::primitive_type>
; 436  :                 >,
; 437  :                 mpl::identity<load_primitive>,
; 438  :             // else
; 439  :             typename mpl::eval_if<
; 440  :             // class info / version
; 441  :             mpl::greater_equal<
; 442  :                         boost::serialization::implementation_level< T >,
; 443  :                         mpl::int_<boost::serialization::object_class_info>
; 444  :                     >,
; 445  :             // do standard load
; 446  :             mpl::identity<load_standard>,
; 447  :         // else
; 448  :         typename mpl::eval_if<
; 449  :             // no tracking
; 450  :                     mpl::equal_to<
; 451  :                         boost::serialization::tracking_level< T >,
; 452  :                         mpl::int_<boost::serialization::track_never>
; 453  :                 >,
; 454  :                 // do a fast load
; 455  :                 mpl::identity<load_only>,
; 456  :             // else
; 457  :             // do a fast load only tracking is turned off
; 458  :             mpl::identity<load_conditional>
; 459  :         > > >::type typex;
; 460  :         check_object_versioning< T >();

  0001e	e8 00 00 00 00	 call	 ??$check_object_versioning@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::tracking_type>

; 461  :         check_object_level< T >();

  00023	e8 00 00 00 00	 call	 ??$check_object_level@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<boost::archive::tracking_type>

; 462  :         typex::invoke(ar, t);

  00028	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  0002b	50		 push	 eax
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002f	51		 push	 ecx
  00030	e8 00 00 00 00	 call	 ??$invoke@Utracking_type@archive@boost@@@load_primitive@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@AAUtracking_type@34@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_primitive::invoke<boost::archive::tracking_type>
  00035	83 c4 08	 add	 esp, 8

; 463  :     }

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00041	3b ec		 cmp	 ebp, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
??$invoke@Utracking_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAUtracking_type@23@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_const_loading@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_const_loading@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_const_loading<boost::archive::tracking_type>, COMDAT

; 152  : inline void check_const_loading(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 153  :     typedef
; 154  :         typename mpl::or_<
; 155  :             typename boost::serialization::is_wrapper< T >,
; 156  :             typename mpl::not_<
; 157  :                 typename boost::is_const< T >
; 158  :             >
; 159  :         >::type typex;
; 160  :     // cannot load data into a "const" object unless it's a
; 161  :     // wrapper around some other non-const object.
; 162  :     BOOST_STATIC_ASSERT(typex::value);
; 163  : }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$check_const_loading@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_const_loading<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Vversion_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVversion_type@34@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vversion_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVversion_type@34@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::version_type>, COMDAT

; 232  :         static void invoke(Archive & ar, const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 233  :             save_access::save_primitive(ar, t);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$save_primitive@Vtext_oarchive@archive@boost@@Vversion_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVversion_type@12@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::version_type>
  0002b	83 c4 08	 add	 esp, 8

; 234  :         }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??$invoke@Vversion_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVversion_type@34@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<boost::archive::version_type>, COMDAT

; 64   : inline void check_object_versioning(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$check_object_versioning@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Vobject_reference_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVobject_reference_type@34@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vobject_reference_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVobject_reference_type@34@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::object_reference_type>, COMDAT

; 232  :         static void invoke(Archive & ar, const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 233  :             save_access::save_primitive(ar, t);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$save_primitive@Vtext_oarchive@archive@boost@@Vobject_reference_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVobject_reference_type@12@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::object_reference_type>
  0002b	83 c4 08	 add	 esp, 8

; 234  :         }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??$invoke@Vobject_reference_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVobject_reference_type@34@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::object_reference_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@Vobject_reference_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@Vobject_reference_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<boost::archive::object_reference_type>, COMDAT

; 64   : inline void check_object_versioning(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$check_object_versioning@Vobject_reference_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<boost::archive::object_reference_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Vclass_id_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVclass_id_type@34@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vclass_id_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVclass_id_type@34@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::class_id_type>, COMDAT

; 232  :         static void invoke(Archive & ar, const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 233  :             save_access::save_primitive(ar, t);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$save_primitive@Vtext_oarchive@archive@boost@@Vclass_id_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVclass_id_type@12@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::class_id_type>
  0002b	83 c4 08	 add	 esp, 8

; 234  :         }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??$invoke@Vclass_id_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVclass_id_type@34@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<boost::archive::class_id_type>, COMDAT

; 64   : inline void check_object_versioning(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$check_object_versioning@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Vclass_id_reference_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVclass_id_reference_type@34@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vclass_id_reference_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVclass_id_reference_type@34@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::class_id_reference_type>, COMDAT

; 232  :         static void invoke(Archive & ar, const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 233  :             save_access::save_primitive(ar, t);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$save_primitive@Vtext_oarchive@archive@boost@@Vclass_id_reference_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVclass_id_reference_type@12@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::class_id_reference_type>
  0002b	83 c4 08	 add	 esp, 8

; 234  :         }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??$invoke@Vclass_id_reference_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVclass_id_reference_type@34@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::class_id_reference_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@Vclass_id_reference_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@Vclass_id_reference_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<boost::archive::class_id_reference_type>, COMDAT

; 64   : inline void check_object_versioning(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$check_object_versioning@Vclass_id_reference_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<boost::archive::class_id_reference_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Utracking_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABUtracking_type@34@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Utracking_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABUtracking_type@34@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::tracking_type>, COMDAT

; 232  :         static void invoke(Archive & ar, const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 233  :             save_access::save_primitive(ar, t);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$save_primitive@Vtext_oarchive@archive@boost@@Utracking_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABUtracking_type@12@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::tracking_type>
  0002b	83 c4 08	 add	 esp, 8

; 234  :         }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??$invoke@Utracking_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABUtracking_type@34@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<boost::archive::tracking_type>, COMDAT

; 64   : inline void check_object_versioning(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$check_object_versioning@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Arg$ = 8						; size = 4
??$?0AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT
; _this$ = ecx

; 164  : 		{	// construct with argument

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 163  : 		: _Val(_STD forward<_Other>(_Arg))

  00023	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 165  : 		}

  00038	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??$?0AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z PROC ; std::tuple<>::tuple<><std::_Exact_args_t,0>, COMDAT
; _this$ = ecx

; 255  : 		{	// construct from one arg per element

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 256  : 		}

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z ENDP ; std::tuple<>::tuple<><std::_Exact_args_t,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$invoke@VCContact@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVCContact@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@VCContact@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVCContact@@@Z PROC ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<CContact>, COMDAT

; 430  :     static void invoke(Archive & ar, T &t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 431  :         typedef typename mpl::eval_if<
; 432  :                 // if its primitive
; 433  :                 mpl::equal_to<
; 434  :                     boost::serialization::implementation_level< T >,
; 435  :                     mpl::int_<boost::serialization::primitive_type>
; 436  :                 >,
; 437  :                 mpl::identity<load_primitive>,
; 438  :             // else
; 439  :             typename mpl::eval_if<
; 440  :             // class info / version
; 441  :             mpl::greater_equal<
; 442  :                         boost::serialization::implementation_level< T >,
; 443  :                         mpl::int_<boost::serialization::object_class_info>
; 444  :                     >,
; 445  :             // do standard load
; 446  :             mpl::identity<load_standard>,
; 447  :         // else
; 448  :         typename mpl::eval_if<
; 449  :             // no tracking
; 450  :                     mpl::equal_to<
; 451  :                         boost::serialization::tracking_level< T >,
; 452  :                         mpl::int_<boost::serialization::track_never>
; 453  :                 >,
; 454  :                 // do a fast load
; 455  :                 mpl::identity<load_only>,
; 456  :             // else
; 457  :             // do a fast load only tracking is turned off
; 458  :             mpl::identity<load_conditional>
; 459  :         > > >::type typex;
; 460  :         check_object_versioning< T >();

  0001e	e8 00 00 00 00	 call	 ??$check_object_versioning@VCContact@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<CContact>

; 461  :         check_object_level< T >();

  00023	e8 00 00 00 00	 call	 ??$check_object_level@VCContact@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_level<CContact>

; 462  :         typex::invoke(ar, t);

  00028	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  0002b	50		 push	 eax
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002f	51		 push	 ecx
  00030	e8 00 00 00 00	 call	 ??$invoke@VCContact@@@load_standard@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@34@ABVCContact@@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::load_standard::invoke<CContact>
  00035	83 c4 08	 add	 esp, 8

; 463  :     }

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00041	3b ec		 cmp	 ebp, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
??$invoke@VCContact@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVCContact@@@Z ENDP ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_const_loading@VCContact@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_const_loading@VCContact@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_const_loading<CContact>, COMDAT

; 152  : inline void check_const_loading(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 153  :     typedef
; 154  :         typename mpl::or_<
; 155  :             typename boost::serialization::is_wrapper< T >,
; 156  :             typename mpl::not_<
; 157  :                 typename boost::is_const< T >
; 158  :             >
; 159  :         >::type typex;
; 160  :     // cannot load data into a "const" object unless it's a
; 161  :     // wrapper around some other non-const object.
; 162  :     BOOST_STATIC_ASSERT(typex::value);
; 163  : }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$check_const_loading@VCContact@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_const_loading<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@VCContact@@@save_standard@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVCContact@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@VCContact@@@save_standard@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVCContact@@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_standard::invoke<CContact>, COMDAT

; 253  :         static void invoke(Archive &ar, const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 254  :             ar.save_object(

  0001e	e8 00 00 00 00	 call	 ?get_const_instance@?$singleton@V?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@boost@@@serialization@boost@@SAABV?$oserializer@Vtext_oarchive@archive@boost@@VCContact@@@detail@archive@3@XZ ; boost::serialization::singleton<boost::archive::detail::oserializer<boost::archive::text_oarchive,CContact> >::get_const_instance
  00023	50		 push	 eax
  00024	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00027	50		 push	 eax
  00028	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002b	e8 00 00 00 00	 call	 ?save_object@basic_oarchive@detail@archive@boost@@QAEXPBXABVbasic_oserializer@234@@Z ; boost::archive::detail::basic_oarchive::save_object

; 255  :                 & t, 
; 256  :                 boost::serialization::singleton<
; 257  :                     oserializer<Archive, T>
; 258  :                 >::get_const_instance()
; 259  :             );
; 260  :         }

  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00039	3b ec		 cmp	 ebp, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
??$invoke@VCContact@@@save_standard@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVCContact@@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_standard::invoke<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@VCContact@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@VCContact@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<CContact>, COMDAT

; 64   : inline void check_object_versioning(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$check_object_versioning@VCContact@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@YAAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@AAPAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@YAAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@AAPAV10@@Z PROC ; std::forward<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@YAAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@AAPAV10@@Z ENDP ; std::forward<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Vobject_id_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVobject_id_type@34@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vobject_id_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVobject_id_type@34@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::object_id_type>, COMDAT

; 232  :         static void invoke(Archive & ar, const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 233  :             save_access::save_primitive(ar, t);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$save_primitive@Vtext_oarchive@archive@boost@@Vobject_id_type@23@@save_access@archive@boost@@SAXAAVtext_oarchive@12@ABVobject_id_type@12@@Z ; boost::archive::save_access::save_primitive<boost::archive::text_oarchive,boost::archive::object_id_type>
  0002b	83 c4 08	 add	 esp, 8

; 234  :         }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??$invoke@Vobject_id_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVobject_id_type@34@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\check.hpp
;	COMDAT ??$check_object_versioning@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ
_TEXT	SEGMENT
??$check_object_versioning@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ PROC ; boost::archive::detail::check_object_versioning<boost::archive::object_id_type>, COMDAT

; 64   : inline void check_object_versioning(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 65   :     typedef 
; 66   :         typename mpl::or_<
; 67   :             typename mpl::greater<
; 68   :                 serialization::implementation_level< T >,
; 69   :                 mpl::int_<serialization::object_serializable>
; 70   :             >,
; 71   :             typename mpl::equal_to<
; 72   :                 serialization::version< T >,
; 73   :                 mpl::int_<0>
; 74   :             >
; 75   :         > typex;
; 76   :     // trap attempts to serialize with objects that don't
; 77   :     // save class information in the archive with versioning.
; 78   :     BOOST_STATIC_ASSERT(typex::value);
; 79   : }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$check_object_versioning@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ENDP ; boost::archive::detail::check_object_versioning<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@archive@boost@@YAXAAVtext_oarchive@01@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@archive@boost@@YAXAAVtext_oarchive@01@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::save<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >, COMDAT

; 511  : inline void save(Archive & ar, /*const*/ T &t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 512  :     typedef 
; 513  :         typename mpl::eval_if<is_pointer< T >,
; 514  :             mpl::identity<detail::save_pointer_type<Archive> >,
; 515  :         //else
; 516  :         typename mpl::eval_if<is_enum< T >,
; 517  :             mpl::identity<detail::save_enum_type<Archive> >,
; 518  :         //else
; 519  :         typename mpl::eval_if<is_array< T >,
; 520  :             mpl::identity<detail::save_array_type<Archive> >,
; 521  :         //else
; 522  :             mpl::identity<detail::save_non_pointer_type<Archive> >
; 523  :         >
; 524  :         >
; 525  :         >::type typex;
; 526  :     typex::invoke(ar, t);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$invoke@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0002b	83 c4 08	 add	 esp, 8

; 527  : }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??$save@Vtext_oarchive@archive@boost@@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@archive@boost@@YAXAAVtext_oarchive@01@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::save<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@V?$shared_ptr@VCContact@@@std@@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$shared_ptr@VCContact@@@std@@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@@Z PROC ; std::allocator<std::shared_ptr<CContact> >::destroy<std::shared_ptr<CContact> >, COMDAT
; _this$ = ecx

; 743  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 744  : 		_Ptr->~_Uty();

  00023	6a 00		 push	 0
  00025	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00028	e8 00 00 00 00	 call	 ??_G?$shared_ptr@VCContact@@@std@@QAEPAXI@Z

; 745  : 		}

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
??$destroy@V?$shared_ptr@VCContact@@@std@@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@@Z ENDP ; std::allocator<std::shared_ptr<CContact> >::destroy<std::shared_ptr<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load@Vtext_iarchive@archive@boost@@Vversion_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVversion_type@01@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load@Vtext_iarchive@archive@boost@@Vversion_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVversion_type@01@@Z PROC ; boost::archive::load<boost::archive::text_iarchive,boost::archive::version_type>, COMDAT

; 598  : inline void load(Archive & ar, T &t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 599  :     // if this assertion trips. It means we're trying to load a
; 600  :     // const object with a compiler that doesn't have correct
; 601  :     // funtion template ordering.  On other compilers, this is
; 602  :     // handled below.
; 603  :     detail::check_const_loading< T >();

  0001e	e8 00 00 00 00	 call	 ??$check_const_loading@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::archive::version_type>

; 604  :     typedef
; 605  :         typename mpl::eval_if<is_pointer< T >,
; 606  :             mpl::identity<detail::load_pointer_type<Archive> >
; 607  :         ,//else
; 608  :         typename mpl::eval_if<is_array< T >,
; 609  :             mpl::identity<detail::load_array_type<Archive> >
; 610  :         ,//else
; 611  :         typename mpl::eval_if<is_enum< T >,
; 612  :             mpl::identity<detail::load_enum_type<Archive> >
; 613  :         ,//else
; 614  :             mpl::identity<detail::load_non_pointer_type<Archive> >
; 615  :         >
; 616  :         >
; 617  :         >::type typex;
; 618  :     typex::invoke(ar, t);

  00023	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$invoke@Vversion_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVversion_type@23@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::version_type>
  00030	83 c4 08	 add	 esp, 8

; 619  : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$load@Vtext_iarchive@archive@boost@@Vversion_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVversion_type@01@@Z ENDP ; boost::archive::load<boost::archive::text_iarchive,boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load@Vtext_iarchive@archive@boost@@Vobject_id_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVobject_id_type@01@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load@Vtext_iarchive@archive@boost@@Vobject_id_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVobject_id_type@01@@Z PROC ; boost::archive::load<boost::archive::text_iarchive,boost::archive::object_id_type>, COMDAT

; 598  : inline void load(Archive & ar, T &t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 599  :     // if this assertion trips. It means we're trying to load a
; 600  :     // const object with a compiler that doesn't have correct
; 601  :     // funtion template ordering.  On other compilers, this is
; 602  :     // handled below.
; 603  :     detail::check_const_loading< T >();

  0001e	e8 00 00 00 00	 call	 ??$check_const_loading@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::archive::object_id_type>

; 604  :     typedef
; 605  :         typename mpl::eval_if<is_pointer< T >,
; 606  :             mpl::identity<detail::load_pointer_type<Archive> >
; 607  :         ,//else
; 608  :         typename mpl::eval_if<is_array< T >,
; 609  :             mpl::identity<detail::load_array_type<Archive> >
; 610  :         ,//else
; 611  :         typename mpl::eval_if<is_enum< T >,
; 612  :             mpl::identity<detail::load_enum_type<Archive> >
; 613  :         ,//else
; 614  :             mpl::identity<detail::load_non_pointer_type<Archive> >
; 615  :         >
; 616  :         >
; 617  :         >::type typex;
; 618  :     typex::invoke(ar, t);

  00023	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$invoke@Vobject_id_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVobject_id_type@23@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::object_id_type>
  00030	83 c4 08	 add	 esp, 8

; 619  : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$load@Vtext_iarchive@archive@boost@@Vobject_id_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVobject_id_type@01@@Z ENDP ; boost::archive::load<boost::archive::text_iarchive,boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load@Vtext_iarchive@archive@boost@@Vclass_id_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVclass_id_type@01@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load@Vtext_iarchive@archive@boost@@Vclass_id_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVclass_id_type@01@@Z PROC ; boost::archive::load<boost::archive::text_iarchive,boost::archive::class_id_type>, COMDAT

; 598  : inline void load(Archive & ar, T &t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 599  :     // if this assertion trips. It means we're trying to load a
; 600  :     // const object with a compiler that doesn't have correct
; 601  :     // funtion template ordering.  On other compilers, this is
; 602  :     // handled below.
; 603  :     detail::check_const_loading< T >();

  0001e	e8 00 00 00 00	 call	 ??$check_const_loading@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::archive::class_id_type>

; 604  :     typedef
; 605  :         typename mpl::eval_if<is_pointer< T >,
; 606  :             mpl::identity<detail::load_pointer_type<Archive> >
; 607  :         ,//else
; 608  :         typename mpl::eval_if<is_array< T >,
; 609  :             mpl::identity<detail::load_array_type<Archive> >
; 610  :         ,//else
; 611  :         typename mpl::eval_if<is_enum< T >,
; 612  :             mpl::identity<detail::load_enum_type<Archive> >
; 613  :         ,//else
; 614  :             mpl::identity<detail::load_non_pointer_type<Archive> >
; 615  :         >
; 616  :         >
; 617  :         >::type typex;
; 618  :     typex::invoke(ar, t);

  00023	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$invoke@Vclass_id_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVclass_id_type@23@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::class_id_type>
  00030	83 c4 08	 add	 esp, 8

; 619  : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$load@Vtext_iarchive@archive@boost@@Vclass_id_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVclass_id_type@01@@Z ENDP ; boost::archive::load<boost::archive::text_iarchive,boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load@Vtext_iarchive@archive@boost@@Utracking_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAUtracking_type@01@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load@Vtext_iarchive@archive@boost@@Utracking_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAUtracking_type@01@@Z PROC ; boost::archive::load<boost::archive::text_iarchive,boost::archive::tracking_type>, COMDAT

; 598  : inline void load(Archive & ar, T &t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 599  :     // if this assertion trips. It means we're trying to load a
; 600  :     // const object with a compiler that doesn't have correct
; 601  :     // funtion template ordering.  On other compilers, this is
; 602  :     // handled below.
; 603  :     detail::check_const_loading< T >();

  0001e	e8 00 00 00 00	 call	 ??$check_const_loading@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<boost::archive::tracking_type>

; 604  :     typedef
; 605  :         typename mpl::eval_if<is_pointer< T >,
; 606  :             mpl::identity<detail::load_pointer_type<Archive> >
; 607  :         ,//else
; 608  :         typename mpl::eval_if<is_array< T >,
; 609  :             mpl::identity<detail::load_array_type<Archive> >
; 610  :         ,//else
; 611  :         typename mpl::eval_if<is_enum< T >,
; 612  :             mpl::identity<detail::load_enum_type<Archive> >
; 613  :         ,//else
; 614  :             mpl::identity<detail::load_non_pointer_type<Archive> >
; 615  :         >
; 616  :         >
; 617  :         >::type typex;
; 618  :     typex::invoke(ar, t);

  00023	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$invoke@Utracking_type@archive@boost@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAUtracking_type@23@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<boost::archive::tracking_type>
  00030	83 c4 08	 add	 esp, 8

; 619  : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$load@Vtext_iarchive@archive@boost@@Utracking_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAUtracking_type@01@@Z ENDP ; boost::archive::load<boost::archive::text_iarchive,boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Vversion_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVversion_type@23@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vversion_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVversion_type@23@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::version_type>, COMDAT

; 277  :     static void invoke(Archive & ar, const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 278  :         typedef 
; 279  :             typename mpl::eval_if<
; 280  :             // if its primitive
; 281  :                 mpl::equal_to<
; 282  :                     boost::serialization::implementation_level< T >,
; 283  :                     mpl::int_<boost::serialization::primitive_type>
; 284  :                 >,
; 285  :                 mpl::identity<save_primitive>,
; 286  :             // else
; 287  :             typename mpl::eval_if<
; 288  :                 // class info / version
; 289  :                 mpl::greater_equal<
; 290  :                     boost::serialization::implementation_level< T >,
; 291  :                     mpl::int_<boost::serialization::object_class_info>
; 292  :                 >,
; 293  :                 // do standard save
; 294  :                 mpl::identity<save_standard>,
; 295  :             // else
; 296  :             typename mpl::eval_if<
; 297  :                     // no tracking
; 298  :                 mpl::equal_to<
; 299  :                     boost::serialization::tracking_level< T >,
; 300  :                     mpl::int_<boost::serialization::track_never>
; 301  :                 >,
; 302  :                 // do a fast save
; 303  :                 mpl::identity<save_only>,
; 304  :             // else
; 305  :                 // do a fast save only tracking is turned off
; 306  :                 mpl::identity<save_conditional>
; 307  :             > > >::type typex; 
; 308  :         check_object_versioning< T >();

  0001e	e8 00 00 00 00	 call	 ??$check_object_versioning@Vversion_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::version_type>

; 309  :         typex::invoke(ar, t);

  00023	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$invoke@Vversion_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVversion_type@34@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::version_type>
  00030	83 c4 08	 add	 esp, 8

; 310  :     }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$invoke@Vversion_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVversion_type@23@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Vobject_reference_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVobject_reference_type@23@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vobject_reference_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVobject_reference_type@23@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::object_reference_type>, COMDAT

; 277  :     static void invoke(Archive & ar, const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 278  :         typedef 
; 279  :             typename mpl::eval_if<
; 280  :             // if its primitive
; 281  :                 mpl::equal_to<
; 282  :                     boost::serialization::implementation_level< T >,
; 283  :                     mpl::int_<boost::serialization::primitive_type>
; 284  :                 >,
; 285  :                 mpl::identity<save_primitive>,
; 286  :             // else
; 287  :             typename mpl::eval_if<
; 288  :                 // class info / version
; 289  :                 mpl::greater_equal<
; 290  :                     boost::serialization::implementation_level< T >,
; 291  :                     mpl::int_<boost::serialization::object_class_info>
; 292  :                 >,
; 293  :                 // do standard save
; 294  :                 mpl::identity<save_standard>,
; 295  :             // else
; 296  :             typename mpl::eval_if<
; 297  :                     // no tracking
; 298  :                 mpl::equal_to<
; 299  :                     boost::serialization::tracking_level< T >,
; 300  :                     mpl::int_<boost::serialization::track_never>
; 301  :                 >,
; 302  :                 // do a fast save
; 303  :                 mpl::identity<save_only>,
; 304  :             // else
; 305  :                 // do a fast save only tracking is turned off
; 306  :                 mpl::identity<save_conditional>
; 307  :             > > >::type typex; 
; 308  :         check_object_versioning< T >();

  0001e	e8 00 00 00 00	 call	 ??$check_object_versioning@Vobject_reference_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::object_reference_type>

; 309  :         typex::invoke(ar, t);

  00023	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$invoke@Vobject_reference_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVobject_reference_type@34@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::object_reference_type>
  00030	83 c4 08	 add	 esp, 8

; 310  :     }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$invoke@Vobject_reference_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVobject_reference_type@23@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::object_reference_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Vclass_id_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVclass_id_type@23@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vclass_id_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVclass_id_type@23@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::class_id_type>, COMDAT

; 277  :     static void invoke(Archive & ar, const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 278  :         typedef 
; 279  :             typename mpl::eval_if<
; 280  :             // if its primitive
; 281  :                 mpl::equal_to<
; 282  :                     boost::serialization::implementation_level< T >,
; 283  :                     mpl::int_<boost::serialization::primitive_type>
; 284  :                 >,
; 285  :                 mpl::identity<save_primitive>,
; 286  :             // else
; 287  :             typename mpl::eval_if<
; 288  :                 // class info / version
; 289  :                 mpl::greater_equal<
; 290  :                     boost::serialization::implementation_level< T >,
; 291  :                     mpl::int_<boost::serialization::object_class_info>
; 292  :                 >,
; 293  :                 // do standard save
; 294  :                 mpl::identity<save_standard>,
; 295  :             // else
; 296  :             typename mpl::eval_if<
; 297  :                     // no tracking
; 298  :                 mpl::equal_to<
; 299  :                     boost::serialization::tracking_level< T >,
; 300  :                     mpl::int_<boost::serialization::track_never>
; 301  :                 >,
; 302  :                 // do a fast save
; 303  :                 mpl::identity<save_only>,
; 304  :             // else
; 305  :                 // do a fast save only tracking is turned off
; 306  :                 mpl::identity<save_conditional>
; 307  :             > > >::type typex; 
; 308  :         check_object_versioning< T >();

  0001e	e8 00 00 00 00	 call	 ??$check_object_versioning@Vclass_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::class_id_type>

; 309  :         typex::invoke(ar, t);

  00023	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$invoke@Vclass_id_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVclass_id_type@34@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::class_id_type>
  00030	83 c4 08	 add	 esp, 8

; 310  :     }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$invoke@Vclass_id_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVclass_id_type@23@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Vclass_id_reference_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVclass_id_reference_type@23@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vclass_id_reference_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVclass_id_reference_type@23@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::class_id_reference_type>, COMDAT

; 277  :     static void invoke(Archive & ar, const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 278  :         typedef 
; 279  :             typename mpl::eval_if<
; 280  :             // if its primitive
; 281  :                 mpl::equal_to<
; 282  :                     boost::serialization::implementation_level< T >,
; 283  :                     mpl::int_<boost::serialization::primitive_type>
; 284  :                 >,
; 285  :                 mpl::identity<save_primitive>,
; 286  :             // else
; 287  :             typename mpl::eval_if<
; 288  :                 // class info / version
; 289  :                 mpl::greater_equal<
; 290  :                     boost::serialization::implementation_level< T >,
; 291  :                     mpl::int_<boost::serialization::object_class_info>
; 292  :                 >,
; 293  :                 // do standard save
; 294  :                 mpl::identity<save_standard>,
; 295  :             // else
; 296  :             typename mpl::eval_if<
; 297  :                     // no tracking
; 298  :                 mpl::equal_to<
; 299  :                     boost::serialization::tracking_level< T >,
; 300  :                     mpl::int_<boost::serialization::track_never>
; 301  :                 >,
; 302  :                 // do a fast save
; 303  :                 mpl::identity<save_only>,
; 304  :             // else
; 305  :                 // do a fast save only tracking is turned off
; 306  :                 mpl::identity<save_conditional>
; 307  :             > > >::type typex; 
; 308  :         check_object_versioning< T >();

  0001e	e8 00 00 00 00	 call	 ??$check_object_versioning@Vclass_id_reference_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::class_id_reference_type>

; 309  :         typex::invoke(ar, t);

  00023	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$invoke@Vclass_id_reference_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVclass_id_reference_type@34@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::class_id_reference_type>
  00030	83 c4 08	 add	 esp, 8

; 310  :     }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$invoke@Vclass_id_reference_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVclass_id_reference_type@23@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::class_id_reference_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Utracking_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABUtracking_type@23@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Utracking_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABUtracking_type@23@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::tracking_type>, COMDAT

; 277  :     static void invoke(Archive & ar, const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 278  :         typedef 
; 279  :             typename mpl::eval_if<
; 280  :             // if its primitive
; 281  :                 mpl::equal_to<
; 282  :                     boost::serialization::implementation_level< T >,
; 283  :                     mpl::int_<boost::serialization::primitive_type>
; 284  :                 >,
; 285  :                 mpl::identity<save_primitive>,
; 286  :             // else
; 287  :             typename mpl::eval_if<
; 288  :                 // class info / version
; 289  :                 mpl::greater_equal<
; 290  :                     boost::serialization::implementation_level< T >,
; 291  :                     mpl::int_<boost::serialization::object_class_info>
; 292  :                 >,
; 293  :                 // do standard save
; 294  :                 mpl::identity<save_standard>,
; 295  :             // else
; 296  :             typename mpl::eval_if<
; 297  :                     // no tracking
; 298  :                 mpl::equal_to<
; 299  :                     boost::serialization::tracking_level< T >,
; 300  :                     mpl::int_<boost::serialization::track_never>
; 301  :                 >,
; 302  :                 // do a fast save
; 303  :                 mpl::identity<save_only>,
; 304  :             // else
; 305  :                 // do a fast save only tracking is turned off
; 306  :                 mpl::identity<save_conditional>
; 307  :             > > >::type typex; 
; 308  :         check_object_versioning< T >();

  0001e	e8 00 00 00 00	 call	 ??$check_object_versioning@Utracking_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::tracking_type>

; 309  :         typex::invoke(ar, t);

  00023	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$invoke@Utracking_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABUtracking_type@34@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::tracking_type>
  00030	83 c4 08	 add	 esp, 8

; 310  :     }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$invoke@Utracking_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABUtracking_type@23@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@?$_Tuple_val@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Arg$ = 8						; size = 4
??$?0PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@?$_Tuple_val@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@@Z PROC ; std::_Tuple_val<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>::_Tuple_val<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *><std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>, COMDAT
; _this$ = ecx

; 164  : 		{	// construct with argument

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 163  : 		: _Val(_STD forward<_Other>(_Arg))

  00023	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z ; std::forward<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>
  0002c	83 c4 04	 add	 esp, 4
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	8b 10		 mov	 edx, DWORD PTR [eax]
  00034	89 11		 mov	 DWORD PTR [ecx], edx

; 165  : 		}

  00036	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4
??$?0PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@?$_Tuple_val@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@@Z ENDP ; std::_Tuple_val<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>::_Tuple_val<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *><std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$V$0A@@?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@U_Exact_args_t@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__This_arg$ = 12					; size = 4
??$?0U_Exact_args_t@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$V$0A@@?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@U_Exact_args_t@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::_Exact_args_t,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>, COMDAT
; _this$ = ecx

; 304  : 		{	// construct from one arg per element

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 302  : 		: _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

  00023	33 c0		 xor	 eax, eax
  00025	88 85 2f ff ff
	ff		 mov	 BYTE PTR $T1[ebp], al
  0002b	0f b6 8d 2f ff
	ff ff		 movzx	 ecx, BYTE PTR $T1[ebp]
  00032	51		 push	 ecx
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>

; 303  : 			_Myfirst(_STD forward<_This2>(_This_arg))

  0003b	8b 45 0c	 mov	 eax, DWORD PTR __This_arg$[ebp]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ??$?0AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>

; 305  : 		}

  00050	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 08 00	 ret	 8
??$?0U_Exact_args_t@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$V$0A@@?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@U_Exact_args_t@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::_Exact_args_t,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\iserializer.hpp
;	COMDAT ??$load@Vtext_iarchive@archive@boost@@VCContact@@@archive@boost@@YAXAAVtext_iarchive@01@AAVCContact@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$load@Vtext_iarchive@archive@boost@@VCContact@@@archive@boost@@YAXAAVtext_iarchive@01@AAVCContact@@@Z PROC ; boost::archive::load<boost::archive::text_iarchive,CContact>, COMDAT

; 598  : inline void load(Archive & ar, T &t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 599  :     // if this assertion trips. It means we're trying to load a
; 600  :     // const object with a compiler that doesn't have correct
; 601  :     // funtion template ordering.  On other compilers, this is
; 602  :     // handled below.
; 603  :     detail::check_const_loading< T >();

  0001e	e8 00 00 00 00	 call	 ??$check_const_loading@VCContact@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_const_loading<CContact>

; 604  :     typedef
; 605  :         typename mpl::eval_if<is_pointer< T >,
; 606  :             mpl::identity<detail::load_pointer_type<Archive> >
; 607  :         ,//else
; 608  :         typename mpl::eval_if<is_array< T >,
; 609  :             mpl::identity<detail::load_array_type<Archive> >
; 610  :         ,//else
; 611  :         typename mpl::eval_if<is_enum< T >,
; 612  :             mpl::identity<detail::load_enum_type<Archive> >
; 613  :         ,//else
; 614  :             mpl::identity<detail::load_non_pointer_type<Archive> >
; 615  :         >
; 616  :         >
; 617  :         >::type typex;
; 618  :     typex::invoke(ar, t);

  00023	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$invoke@VCContact@@@?$load_non_pointer_type@Vtext_iarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_iarchive@23@AAVCContact@@@Z ; boost::archive::detail::load_non_pointer_type<boost::archive::text_iarchive>::invoke<CContact>
  00030	83 c4 08	 add	 esp, 8

; 619  : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$load@Vtext_iarchive@archive@boost@@VCContact@@@archive@boost@@YAXAAVtext_iarchive@01@AAVCContact@@@Z ENDP ; boost::archive::load<boost::archive::text_iarchive,CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@VCContact@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVCContact@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@VCContact@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVCContact@@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<CContact>, COMDAT

; 277  :     static void invoke(Archive & ar, const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 278  :         typedef 
; 279  :             typename mpl::eval_if<
; 280  :             // if its primitive
; 281  :                 mpl::equal_to<
; 282  :                     boost::serialization::implementation_level< T >,
; 283  :                     mpl::int_<boost::serialization::primitive_type>
; 284  :                 >,
; 285  :                 mpl::identity<save_primitive>,
; 286  :             // else
; 287  :             typename mpl::eval_if<
; 288  :                 // class info / version
; 289  :                 mpl::greater_equal<
; 290  :                     boost::serialization::implementation_level< T >,
; 291  :                     mpl::int_<boost::serialization::object_class_info>
; 292  :                 >,
; 293  :                 // do standard save
; 294  :                 mpl::identity<save_standard>,
; 295  :             // else
; 296  :             typename mpl::eval_if<
; 297  :                     // no tracking
; 298  :                 mpl::equal_to<
; 299  :                     boost::serialization::tracking_level< T >,
; 300  :                     mpl::int_<boost::serialization::track_never>
; 301  :                 >,
; 302  :                 // do a fast save
; 303  :                 mpl::identity<save_only>,
; 304  :             // else
; 305  :                 // do a fast save only tracking is turned off
; 306  :                 mpl::identity<save_conditional>
; 307  :             > > >::type typex; 
; 308  :         check_object_versioning< T >();

  0001e	e8 00 00 00 00	 call	 ??$check_object_versioning@VCContact@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<CContact>

; 309  :         typex::invoke(ar, t);

  00023	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$invoke@VCContact@@@save_standard@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVCContact@@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_standard::invoke<CContact>
  00030	83 c4 08	 add	 esp, 8

; 310  :     }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$invoke@VCContact@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVCContact@@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
_<_Val2_0>$ = 16					; size = 4
??$?0U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1><std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>, COMDAT
; _this$ = ecx

; 289  : 		{	// construct from forwarded values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 287  : 		: _Ty1(_STD forward<_Other1>(_Val1)),

  00023	8b 45 0c	 mov	 eax, DWORD PTR __Val1$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@0@AAU10@@Z ; std::forward<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  0002c	83 c4 04	 add	 esp, 4

; 288  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

  0002f	8b 45 10	 mov	 eax, DWORD PTR _<_Val2_0>$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$forward@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@YAAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@AAPAV10@@Z ; std::forward<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 10		 mov	 edx, DWORD PTR [eax]
  00040	89 11		 mov	 DWORD PTR [ecx], edx

; 290  : 		}

  00042	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 0c 00	 ret	 12			; 0000000cH
??$?0U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1><std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$invoke@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAX$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV10@$$QAV20@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
??$invoke@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAX$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV10@$$QAV20@@Z PROC ; std::invoke<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 1442 : 	{	// INVOKE a callable object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1443 : 	return (_Invoker<_Callable, _Types...>::_Call(

  0001e	8b 45 10	 mov	 eax, DWORD PTR _<_Args_1>$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0002e	51		 push	 ecx
  0002f	e8 00 00 00 00	 call	 ??$forward@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z ; std::forward<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>
  00034	83 c4 04	 add	 esp, 4
  00037	50		 push	 eax
  00038	8b 55 08	 mov	 edx, DWORD PTR __Obj$[ebp]
  0003b	52		 push	 edx
  0003c	e8 00 00 00 00	 call	 ??$forward@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YA$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAP6AX01@Z@Z ; std::forward<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
  00041	83 c4 04	 add	 esp, 4
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ??$_Call@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@_Invoker_functor@std@@SAX$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@$$QAV31@@Z ; std::_Invoker_functor::_Call<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0004a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1444 : 		_STD forward<_Callable>(_Obj), _STD forward<_Types>(_Args)...));
; 1445 : 	}

  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00056	3b ec		 cmp	 ebp, esp
  00058	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
??$invoke@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAX$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV10@$$QAV20@@Z ENDP ; std::invoke<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$_Call@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@_Invoker_functor@std@@SAX$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@$$QAV31@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
??$_Call@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@_Invoker_functor@std@@SAX$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@$$QAV31@@Z PROC ; std::_Invoker_functor::_Call<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 1374 : 		{	// INVOKE a function object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1375 : 		return (_STD forward<_Callable>(_Obj)(

  0001e	8b 45 10	 mov	 eax, DWORD PTR _<_Args_1>$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00027	83 c4 04	 add	 esp, 4
  0002a	8b f4		 mov	 esi, esp
  0002c	50		 push	 eax
  0002d	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00030	51		 push	 ecx
  00031	e8 00 00 00 00	 call	 ??$forward@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z ; std::forward<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>
  00036	83 c4 04	 add	 esp, 4
  00039	8b 10		 mov	 edx, DWORD PTR [eax]
  0003b	52		 push	 edx
  0003c	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??$forward@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YA$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAP6AX01@Z@Z ; std::forward<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
  00045	83 c4 04	 add	 esp, 4
  00048	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004a	ff d1		 call	 ecx
  0004c	83 c4 08	 add	 esp, 8
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1376 : 			_STD forward<_Types>(_Args)...));
; 1377 : 		}

  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0005f	3b ec		 cmp	 ebp, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
??$_Call@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@_Invoker_functor@std@@SAX$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@$$QAV31@@Z ENDP ; std::_Invoker_functor::_Call<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YA$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAP6AX01@Z@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YA$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAP6AX01@Z@Z PROC ; std::forward<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YA$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAP6AX01@Z@Z ENDP ; std::forward<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$get@$01P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z
_TEXT	SEGMENT
__Tuple$ = 8						; size = 4
??$get@$01P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z PROC ; std::get<2,void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 883  : 	{	// get reference to _Index element of tuple

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 884  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::_Ttype
; 885  : 		_Ttype;
; 886  : 	return (((_Ttype&)_Tuple)._Myfirst._Val);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Tuple$[ebp]

; 887  : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$get@$01P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z ENDP ; std::get<2,void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z PROC ; std::move<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > * &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$move@AAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z ENDP ; std::move<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$get@$00P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z
_TEXT	SEGMENT
__Tuple$ = 8						; size = 4
??$get@$00P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z PROC ; std::get<1,void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 883  : 	{	// get reference to _Index element of tuple

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 884  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::_Ttype
; 885  : 		_Ttype;
; 886  : 	return (((_Ttype&)_Tuple)._Myfirst._Val);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Tuple$[ebp]
  00021	83 c0 1c	 add	 eax, 28			; 0000001cH

; 887  : 	}

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
??$get@$00P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z ENDP ; std::get<1,void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YA$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAP6AX01@Z@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YA$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAP6AX01@Z@Z PROC ; std::move<void (__cdecl*&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>, COMDAT

; 1291 : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$move@AAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YA$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAP6AX01@Z@Z ENDP ; std::move<void (__cdecl*&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$get@$0A@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z
_TEXT	SEGMENT
__Tuple$ = 8						; size = 4
??$get@$0A@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z PROC ; std::get<0,void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 883  : 	{	// get reference to _Index element of tuple

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 884  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::_Ttype
; 885  : 		_Ttype;
; 886  : 	return (((_Ttype&)_Tuple)._Myfirst._Val);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Tuple$[ebp]
  00021	83 c0 20	 add	 eax, 32			; 00000020H

; 887  : 	}

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
??$get@$0A@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z ENDP ; std::get<0,void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
_<_Val2_0>$ = 12					; size = 4
??$?0AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1><std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>, COMDAT
; _this$ = ecx

; 280  : 		{	// construct from forwarded values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 279  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

  00023	8b 45 0c	 mov	 eax, DWORD PTR _<_Val2_0>$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@YAAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@AAPAV10@@Z ; std::forward<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>
  0002c	83 c4 04	 add	 esp, 4
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	8b 10		 mov	 edx, DWORD PTR [eax]
  00034	89 11		 mov	 DWORD PTR [ecx], edx

; 281  : 		}

  00036	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 08 00	 ret	 8
??$?0AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1><std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$invoke@Vobject_id_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVobject_id_type@23@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$invoke@Vobject_id_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVobject_id_type@23@@Z PROC ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::object_id_type>, COMDAT

; 277  :     static void invoke(Archive & ar, const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 278  :         typedef 
; 279  :             typename mpl::eval_if<
; 280  :             // if its primitive
; 281  :                 mpl::equal_to<
; 282  :                     boost::serialization::implementation_level< T >,
; 283  :                     mpl::int_<boost::serialization::primitive_type>
; 284  :                 >,
; 285  :                 mpl::identity<save_primitive>,
; 286  :             // else
; 287  :             typename mpl::eval_if<
; 288  :                 // class info / version
; 289  :                 mpl::greater_equal<
; 290  :                     boost::serialization::implementation_level< T >,
; 291  :                     mpl::int_<boost::serialization::object_class_info>
; 292  :                 >,
; 293  :                 // do standard save
; 294  :                 mpl::identity<save_standard>,
; 295  :             // else
; 296  :             typename mpl::eval_if<
; 297  :                     // no tracking
; 298  :                 mpl::equal_to<
; 299  :                     boost::serialization::tracking_level< T >,
; 300  :                     mpl::int_<boost::serialization::track_never>
; 301  :                 >,
; 302  :                 // do a fast save
; 303  :                 mpl::identity<save_only>,
; 304  :             // else
; 305  :                 // do a fast save only tracking is turned off
; 306  :                 mpl::identity<save_conditional>
; 307  :             > > >::type typex; 
; 308  :         check_object_versioning< T >();

  0001e	e8 00 00 00 00	 call	 ??$check_object_versioning@Vobject_id_type@archive@boost@@@detail@archive@boost@@YAXXZ ; boost::archive::detail::check_object_versioning<boost::archive::object_id_type>

; 309  :         typex::invoke(ar, t);

  00023	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$invoke@Vobject_id_type@archive@boost@@@save_primitive@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@34@ABVobject_id_type@34@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::save_primitive::invoke<boost::archive::object_id_type>
  00030	83 c4 08	 add	 esp, 8

; 310  :     }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$invoke@Vobject_id_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVobject_id_type@23@@Z ENDP ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >, COMDAT
; _this$ = ecx

; 69   :     void save_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 70   :         archive::save(* this->This(), t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$save@Vtext_oarchive@archive@boost@@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@archive@boost@@YAXAAVtext_oarchive@01@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::save<boost::archive::text_oarchive,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
  00038	83 c4 08	 add	 esp, 8

; 71   :     }

  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0U?$integral_constant@_N$00@std@@@_Any_tag@std@@QAE@$$QAU?$integral_constant@_N$00@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0U?$integral_constant@_N$00@std@@@_Any_tag@std@@QAE@$$QAU?$integral_constant@_N$00@1@@Z PROC ; std::_Any_tag::_Any_tag<std::integral_constant<bool,1> >, COMDAT
; _this$ = ecx

; 554  : 		constexpr _Any_tag(_Ty&&) _NOEXCEPT {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
??$?0U?$integral_constant@_N$00@std@@@_Any_tag@std@@QAE@$$QAU?$integral_constant@_N$00@1@@Z ENDP ; std::_Any_tag::_Any_tag<std::integral_constant<bool,1> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
_TEXT	SEGMENT
tv80 = -224						; size = 4
__Next$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z PROC ; std::_Uninitialized_move_al_unchecked1<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *,std::allocator<std::shared_ptr<CContact> > >, COMDAT

; 273  : 	{	// move [_First, _Last) to raw _Dest, using _Al, no special optimization

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8d bd 20 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-224]
  00021	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	50		 push	 eax
  00035	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00038	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp

; 274  : 	_FwdIt _Next = _Dest;

  00041	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00044	89 45 e8	 mov	 DWORD PTR __Next$[ebp], eax

; 275  : 
; 276  : 	_TRY_BEGIN

  00047	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 277  : 	for (; _First != _Last; ++_Dest, (void)++_First)

  0004e	eb 12		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  00050	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00053	83 c0 08	 add	 eax, 8
  00056	89 45 10	 mov	 DWORD PTR __Dest$[ebp], eax
  00059	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0005c	83 c1 08	 add	 ecx, 8
  0005f	89 4d 08	 mov	 DWORD PTR __First$[ebp], ecx
$LN4@Uninitiali:
  00062	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00065	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00068	74 30		 je	 SHORT $LN3@Uninitiali

; 278  : 		_Al.construct(_Unfancy(_Dest), _STD move(*_First));

  0006a	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unfancy<std::shared_ptr<CContact> >
  00073	83 c4 04	 add	 esp, 4
  00076	89 85 20 ff ff
	ff		 mov	 DWORD PTR tv80[ebp], eax
  0007c	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0007f	51		 push	 ecx
  00080	e8 00 00 00 00	 call	 ??$move@AAV?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::move<std::shared_ptr<CContact> &>
  00085	83 c4 04	 add	 esp, 4
  00088	50		 push	 eax
  00089	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR tv80[ebp]
  0008f	52		 push	 edx
  00090	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00093	e8 00 00 00 00	 call	 ??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >
  00098	eb b6		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:
  0009a	eb 23		 jmp	 SHORT $LN7@Uninitiali
__catch$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z$0:

; 279  : 	_CATCH_ALL
; 280  : 	_Destroy_range(_Next, _Dest, _Al);

  0009c	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  0009f	50		 push	 eax
  000a0	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  000a3	51		 push	 ecx
  000a4	8b 55 e8	 mov	 edx, DWORD PTR __Next$[ebp]
  000a7	52		 push	 edx
  000a8	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@PAV?$shared_ptr@VCContact@@@2@@std@@YAXPAV?$shared_ptr@VCContact@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::shared_ptr<CContact> >,std::shared_ptr<CContact> *>
  000ad	83 c4 0c	 add	 esp, 12			; 0000000cH

; 281  : 	_RERAISE;

  000b0	6a 00		 push	 0
  000b2	6a 00		 push	 0
  000b4	e8 00 00 00 00	 call	 __CxxThrowException@8

; 282  : 	_CATCH_END

  000b9	b8 00 00 00 00	 mov	 eax, $LN10@Uninitiali
  000be	c3		 ret	 0
$LN7@Uninitiali:
  000bf	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000c6	eb 07		 jmp	 SHORT __tryend$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z$1
$LN10@Uninitiali:
  000c8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z$1:

; 283  : 
; 284  : 	return (_Dest);

  000cf	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
$LN6@Uninitiali:

; 285  : 	}

  000d2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000d5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000dc	59		 pop	 ecx
  000dd	5f		 pop	 edi
  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx
  000e0	81 c4 e0 00 00
	00		 add	 esp, 224		; 000000e0H
  000e6	3b ec		 cmp	 ebp, esp
  000e8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ed	8b e5		 mov	 esp, ebp
  000ef	5d		 pop	 ebp
  000f0	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 1c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-228]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked1<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *,std::allocator<std::shared_ptr<CContact> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@V?$shared_ptr@VCContact@@@std@@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@V?$shared_ptr@VCContact@@@std@@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::destroy<std::shared_ptr<CContact> >, COMDAT

; 863  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 864  : 		_Al.destroy(_Ptr);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00025	e8 00 00 00 00	 call	 ??$destroy@V?$shared_ptr@VCContact@@@std@@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@@Z ; std::allocator<std::shared_ptr<CContact> >::destroy<std::shared_ptr<CContact> >

; 865  : 		}

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??$destroy@V?$shared_ptr@VCContact@@@std@@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::destroy<std::shared_ptr<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ??$load_override@Vversion_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVversion_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vversion_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVversion_type@23@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::version_type>, COMDAT
; _this$ = ecx

; 65   :     void load_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 66   :         archive::load(* this->This(), t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$load@Vtext_iarchive@archive@boost@@Vversion_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVversion_type@01@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::archive::version_type>
  00038	83 c4 08	 add	 esp, 8

; 67   :     }

  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??$load_override@Vversion_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVversion_type@23@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ??$load_override@Vobject_id_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVobject_id_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vobject_id_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVobject_id_type@23@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::object_id_type>, COMDAT
; _this$ = ecx

; 65   :     void load_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 66   :         archive::load(* this->This(), t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$load@Vtext_iarchive@archive@boost@@Vobject_id_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVobject_id_type@01@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::archive::object_id_type>
  00038	83 c4 08	 add	 esp, 8

; 67   :     }

  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??$load_override@Vobject_id_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVobject_id_type@23@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ??$load_override@Vclass_id_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVclass_id_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vclass_id_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVclass_id_type@23@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::class_id_type>, COMDAT
; _this$ = ecx

; 65   :     void load_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 66   :         archive::load(* this->This(), t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$load@Vtext_iarchive@archive@boost@@Vclass_id_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAVclass_id_type@01@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::archive::class_id_type>
  00038	83 c4 08	 add	 esp, 8

; 67   :     }

  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??$load_override@Vclass_id_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVclass_id_type@23@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ??$load_override@Utracking_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAUtracking_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Utracking_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAUtracking_type@23@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::tracking_type>, COMDAT
; _this$ = ecx

; 65   :     void load_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 66   :         archive::load(* this->This(), t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$load@Vtext_iarchive@archive@boost@@Utracking_type@23@@archive@boost@@YAXAAVtext_iarchive@01@AAUtracking_type@01@@Z ; boost::archive::load<boost::archive::text_iarchive,boost::archive::tracking_type>
  00038	83 c4 08	 add	 esp, 8

; 67   :     }

  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??$load_override@Utracking_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAUtracking_type@23@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@$$CBVversion_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVversion_type@01@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@$$CBVversion_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVversion_type@01@@Z PROC ; boost::archive::save<boost::archive::text_oarchive,boost::archive::version_type const >, COMDAT

; 511  : inline void save(Archive & ar, /*const*/ T &t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 512  :     typedef 
; 513  :         typename mpl::eval_if<is_pointer< T >,
; 514  :             mpl::identity<detail::save_pointer_type<Archive> >,
; 515  :         //else
; 516  :         typename mpl::eval_if<is_enum< T >,
; 517  :             mpl::identity<detail::save_enum_type<Archive> >,
; 518  :         //else
; 519  :         typename mpl::eval_if<is_array< T >,
; 520  :             mpl::identity<detail::save_array_type<Archive> >,
; 521  :         //else
; 522  :             mpl::identity<detail::save_non_pointer_type<Archive> >
; 523  :         >
; 524  :         >
; 525  :         >::type typex;
; 526  :     typex::invoke(ar, t);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$invoke@Vversion_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVversion_type@23@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::version_type>
  0002b	83 c4 08	 add	 esp, 8

; 527  : }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??$save@Vtext_oarchive@archive@boost@@$$CBVversion_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVversion_type@01@@Z ENDP ; boost::archive::save<boost::archive::text_oarchive,boost::archive::version_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@$$CBVobject_reference_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVobject_reference_type@01@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@$$CBVobject_reference_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVobject_reference_type@01@@Z PROC ; boost::archive::save<boost::archive::text_oarchive,boost::archive::object_reference_type const >, COMDAT

; 511  : inline void save(Archive & ar, /*const*/ T &t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 512  :     typedef 
; 513  :         typename mpl::eval_if<is_pointer< T >,
; 514  :             mpl::identity<detail::save_pointer_type<Archive> >,
; 515  :         //else
; 516  :         typename mpl::eval_if<is_enum< T >,
; 517  :             mpl::identity<detail::save_enum_type<Archive> >,
; 518  :         //else
; 519  :         typename mpl::eval_if<is_array< T >,
; 520  :             mpl::identity<detail::save_array_type<Archive> >,
; 521  :         //else
; 522  :             mpl::identity<detail::save_non_pointer_type<Archive> >
; 523  :         >
; 524  :         >
; 525  :         >::type typex;
; 526  :     typex::invoke(ar, t);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$invoke@Vobject_reference_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVobject_reference_type@23@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::object_reference_type>
  0002b	83 c4 08	 add	 esp, 8

; 527  : }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??$save@Vtext_oarchive@archive@boost@@$$CBVobject_reference_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVobject_reference_type@01@@Z ENDP ; boost::archive::save<boost::archive::text_oarchive,boost::archive::object_reference_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@$$CBVclass_id_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVclass_id_type@01@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@$$CBVclass_id_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVclass_id_type@01@@Z PROC ; boost::archive::save<boost::archive::text_oarchive,boost::archive::class_id_type const >, COMDAT

; 511  : inline void save(Archive & ar, /*const*/ T &t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 512  :     typedef 
; 513  :         typename mpl::eval_if<is_pointer< T >,
; 514  :             mpl::identity<detail::save_pointer_type<Archive> >,
; 515  :         //else
; 516  :         typename mpl::eval_if<is_enum< T >,
; 517  :             mpl::identity<detail::save_enum_type<Archive> >,
; 518  :         //else
; 519  :         typename mpl::eval_if<is_array< T >,
; 520  :             mpl::identity<detail::save_array_type<Archive> >,
; 521  :         //else
; 522  :             mpl::identity<detail::save_non_pointer_type<Archive> >
; 523  :         >
; 524  :         >
; 525  :         >::type typex;
; 526  :     typex::invoke(ar, t);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$invoke@Vclass_id_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVclass_id_type@23@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::class_id_type>
  0002b	83 c4 08	 add	 esp, 8

; 527  : }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??$save@Vtext_oarchive@archive@boost@@$$CBVclass_id_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVclass_id_type@01@@Z ENDP ; boost::archive::save<boost::archive::text_oarchive,boost::archive::class_id_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@$$CBVclass_id_reference_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVclass_id_reference_type@01@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@$$CBVclass_id_reference_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVclass_id_reference_type@01@@Z PROC ; boost::archive::save<boost::archive::text_oarchive,boost::archive::class_id_reference_type const >, COMDAT

; 511  : inline void save(Archive & ar, /*const*/ T &t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 512  :     typedef 
; 513  :         typename mpl::eval_if<is_pointer< T >,
; 514  :             mpl::identity<detail::save_pointer_type<Archive> >,
; 515  :         //else
; 516  :         typename mpl::eval_if<is_enum< T >,
; 517  :             mpl::identity<detail::save_enum_type<Archive> >,
; 518  :         //else
; 519  :         typename mpl::eval_if<is_array< T >,
; 520  :             mpl::identity<detail::save_array_type<Archive> >,
; 521  :         //else
; 522  :             mpl::identity<detail::save_non_pointer_type<Archive> >
; 523  :         >
; 524  :         >
; 525  :         >::type typex;
; 526  :     typex::invoke(ar, t);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$invoke@Vclass_id_reference_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVclass_id_reference_type@23@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::class_id_reference_type>
  0002b	83 c4 08	 add	 esp, 8

; 527  : }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??$save@Vtext_oarchive@archive@boost@@$$CBVclass_id_reference_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVclass_id_reference_type@01@@Z ENDP ; boost::archive::save<boost::archive::text_oarchive,boost::archive::class_id_reference_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@$$CBUtracking_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABUtracking_type@01@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@$$CBUtracking_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABUtracking_type@01@@Z PROC ; boost::archive::save<boost::archive::text_oarchive,boost::archive::tracking_type const >, COMDAT

; 511  : inline void save(Archive & ar, /*const*/ T &t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 512  :     typedef 
; 513  :         typename mpl::eval_if<is_pointer< T >,
; 514  :             mpl::identity<detail::save_pointer_type<Archive> >,
; 515  :         //else
; 516  :         typename mpl::eval_if<is_enum< T >,
; 517  :             mpl::identity<detail::save_enum_type<Archive> >,
; 518  :         //else
; 519  :         typename mpl::eval_if<is_array< T >,
; 520  :             mpl::identity<detail::save_array_type<Archive> >,
; 521  :         //else
; 522  :             mpl::identity<detail::save_non_pointer_type<Archive> >
; 523  :         >
; 524  :         >
; 525  :         >::type typex;
; 526  :     typex::invoke(ar, t);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$invoke@Utracking_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABUtracking_type@23@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::tracking_type>
  0002b	83 c4 08	 add	 esp, 8

; 527  : }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??$save@Vtext_oarchive@archive@boost@@$$CBUtracking_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABUtracking_type@01@@Z ENDP ; boost::archive::save<boost::archive::text_oarchive,boost::archive::tracking_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@?$_Tuple_val@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Arg$ = 8						; size = 4
??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@?$_Tuple_val@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@Z PROC ; std::_Tuple_val<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>::_Tuple_val<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)><void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>, COMDAT
; _this$ = ecx

; 164  : 		{	// construct with argument

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 163  : 		: _Val(_STD forward<_Other>(_Arg))

  00023	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YAA6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZA6AX01@Z@Z ; std::forward<void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
  0002c	83 c4 04	 add	 esp, 4
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	89 01		 mov	 DWORD PTR [ecx], eax

; 165  : 		}

  00034	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@?$_Tuple_val@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@Z ENDP ; std::_Tuple_val<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>::_Tuple_val<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)><void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 1
__This_arg$ = 12					; size = 4
_<_Rest_arg_0>$ = 16					; size = 4
??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::_Exact_args_t,std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>, COMDAT
; _this$ = ecx

; 304  : 		{	// construct from one arg per element

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00021	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 302  : 		: _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

  00042	33 c0		 xor	 eax, eax
  00044	88 85 23 ff ff
	ff		 mov	 BYTE PTR $T2[ebp], al
  0004a	8b 4d 10	 mov	 ecx, DWORD PTR _<_Rest_arg_0>$[ebp]
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 ??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  00053	83 c4 04	 add	 esp, 4
  00056	50		 push	 eax
  00057	0f b6 95 23 ff
	ff ff		 movzx	 edx, BYTE PTR $T2[ebp]
  0005e	52		 push	 edx
  0005f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$V$0A@@?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@U_Exact_args_t@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::_Exact_args_t,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>
  00067	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 303  : 			_Myfirst(_STD forward<_This2>(_This_arg))

  0006e	8b 45 0c	 mov	 eax, DWORD PTR __This_arg$[ebp]
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ??$forward@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z ; std::forward<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>
  00077	83 c4 04	 add	 esp, 4
  0007a	50		 push	 eax
  0007b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00081	e8 00 00 00 00	 call	 ??$?0PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@?$_Tuple_val@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@@Z ; std::_Tuple_val<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>::_Tuple_val<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *><std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>

; 305  : 		}

  00086	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0008d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00090	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00093	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009a	59		 pop	 ecx
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	5b		 pop	 ebx
  0009e	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  000a4	3b ec		 cmp	 ebp, esp
  000a6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ab	8b e5		 mov	 esp, ebp
  000ad	5d		 pop	 ebp
  000ae	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ
__ehhandler$??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 18 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-232]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::_Exact_args_t,std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ??$load_override@VCContact@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVCContact@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@VCContact@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVCContact@@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<CContact>, COMDAT
; _this$ = ecx

; 65   :     void load_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 66   :         archive::load(* this->This(), t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$load@Vtext_iarchive@archive@boost@@VCContact@@@archive@boost@@YAXAAVtext_iarchive@01@AAVCContact@@@Z ; boost::archive::load<boost::archive::text_iarchive,CContact>
  00038	83 c4 08	 add	 esp, 8

; 67   :     }

  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??$load_override@VCContact@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVCContact@@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@$$CBVCContact@@@archive@boost@@YAXAAVtext_oarchive@01@ABVCContact@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@$$CBVCContact@@@archive@boost@@YAXAAVtext_oarchive@01@ABVCContact@@@Z PROC ; boost::archive::save<boost::archive::text_oarchive,CContact const >, COMDAT

; 511  : inline void save(Archive & ar, /*const*/ T &t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 512  :     typedef 
; 513  :         typename mpl::eval_if<is_pointer< T >,
; 514  :             mpl::identity<detail::save_pointer_type<Archive> >,
; 515  :         //else
; 516  :         typename mpl::eval_if<is_enum< T >,
; 517  :             mpl::identity<detail::save_enum_type<Archive> >,
; 518  :         //else
; 519  :         typename mpl::eval_if<is_array< T >,
; 520  :             mpl::identity<detail::save_array_type<Archive> >,
; 521  :         //else
; 522  :             mpl::identity<detail::save_non_pointer_type<Archive> >
; 523  :         >
; 524  :         >
; 525  :         >::type typex;
; 526  :     typex::invoke(ar, t);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$invoke@VCContact@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVCContact@@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<CContact>
  0002b	83 c4 08	 add	 esp, 8

; 527  : }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??$save@Vtext_oarchive@archive@boost@@$$CBVCContact@@@archive@boost@@YAXAAVtext_oarchive@01@ABVCContact@@@Z ENDP ; boost::archive::save<boost::archive::text_oarchive,CContact const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$?0PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Dt$ = 12						; size = 4
??$?0PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@@Z PROC ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 1242 : 		{	// construct with compatible pointer and deleter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1241 : 		: _Mypair(_One_then_variadic_args_t(), _STD forward<_Dx2>(_Dt), _Ptr)

  00023	8d 45 08	 lea	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 0c	 mov	 ecx, DWORD PTR __Dt$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$forward@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@0@AAU10@@Z ; std::forward<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  00030	83 c4 04	 add	 esp, 4
  00033	50		 push	 eax
  00034	0f b6 95 2f ff
	ff ff		 movzx	 edx, BYTE PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ??$?0U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1><std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>

; 1243 : 		}

  00044	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 08 00	 ret	 8
??$?0PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@@Z ENDP ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@0@AAU10@@Z PROC ; std::forward<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@0@AAU10@@Z ENDP ; std::forward<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??$_Execute@$0A@$00$01@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@U?$integer_sequence@I$0A@$00$01@1@@Z
_TEXT	SEGMENT
__Tup$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Execute@$0A@$00$01@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@U?$integer_sequence@I$0A@$00$01@1@@Z PROC ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Execute<0,1,2>, COMDAT

; 239  : 		{	// invoke function object packed in tuple

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 240  : 		_STD invoke(_STD move(_STD get<_Idxs>(_Tup))...);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Tup$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$get@$01P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z ; std::get<2,void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  00030	83 c4 04	 add	 esp, 4
  00033	50		 push	 eax
  00034	8b 4d 08	 mov	 ecx, DWORD PTR __Tup$[ebp]
  00037	51		 push	 ecx
  00038	e8 00 00 00 00	 call	 ??$get@$00P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z ; std::get<1,void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0003d	83 c4 04	 add	 esp, 4
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 ??$move@AAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z ; std::move<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > * &>
  00046	83 c4 04	 add	 esp, 4
  00049	50		 push	 eax
  0004a	8b 55 08	 mov	 edx, DWORD PTR __Tup$[ebp]
  0004d	52		 push	 edx
  0004e	e8 00 00 00 00	 call	 ??$get@$0A@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAAAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@0@@Z ; std::get<0,void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00053	83 c4 04	 add	 esp, 4
  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 ??$move@AAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YA$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZAAP6AX01@Z@Z ; std::move<void (__cdecl*&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
  0005c	83 c4 04	 add	 esp, 4
  0005f	50		 push	 eax
  00060	e8 00 00 00 00	 call	 ??$invoke@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@YAX$$QAP6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV10@$$QAV20@@Z ; std::invoke<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00065	83 c4 0c	 add	 esp, 12			; 0000000cH

; 241  : 		}

  00068	5f		 pop	 edi
  00069	5e		 pop	 esi
  0006a	5b		 pop	 ebx
  0006b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
??$_Execute@$0A@$00$01@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@U?$integer_sequence@I$0A@$00$01@1@@Z ENDP ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Execute<0,1,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$?0PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$?0PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z PROC ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *>, COMDAT
; _this$ = ecx

; 1248 : 		{	// construct with compatible pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1247 : 		: _Mypair(_Zero_then_variadic_args_t(), _Ptr)

  00023	8d 45 08	 lea	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	0f b6 8d 2f ff
	ff ff		 movzx	 ecx, BYTE PTR $T1[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ??$?0AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1><std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > * &>

; 1249 : 		}

  00037	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c2 04 00	 ret	 4
??$?0PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ENDP ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\oserializer.hpp
;	COMDAT ??$save@Vtext_oarchive@archive@boost@@$$CBVobject_id_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVobject_id_type@01@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_t$ = 12						; size = 4
??$save@Vtext_oarchive@archive@boost@@$$CBVobject_id_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVobject_id_type@01@@Z PROC ; boost::archive::save<boost::archive::text_oarchive,boost::archive::object_id_type const >, COMDAT

; 511  : inline void save(Archive & ar, /*const*/ T &t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 512  :     typedef 
; 513  :         typename mpl::eval_if<is_pointer< T >,
; 514  :             mpl::identity<detail::save_pointer_type<Archive> >,
; 515  :         //else
; 516  :         typename mpl::eval_if<is_enum< T >,
; 517  :             mpl::identity<detail::save_enum_type<Archive> >,
; 518  :         //else
; 519  :         typename mpl::eval_if<is_array< T >,
; 520  :             mpl::identity<detail::save_array_type<Archive> >,
; 521  :         //else
; 522  :             mpl::identity<detail::save_non_pointer_type<Archive> >
; 523  :         >
; 524  :         >
; 525  :         >::type typex;
; 526  :     typex::invoke(ar, t);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$invoke@Vobject_id_type@archive@boost@@@?$save_non_pointer_type@Vtext_oarchive@archive@boost@@@detail@archive@boost@@SAXAAVtext_oarchive@23@ABVobject_id_type@23@@Z ; boost::archive::detail::save_non_pointer_type<boost::archive::text_oarchive>::invoke<boost::archive::object_id_type>
  0002b	83 c4 08	 add	 esp, 8

; 527  : }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??$save@Vtext_oarchive@archive@boost@@$$CBVobject_id_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVobject_id_type@01@@Z ENDP ; boost::archive::save<boost::archive::text_oarchive,boost::archive::object_id_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >, COMDAT
; _this$ = ecx

; 82   :     void save_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 83   :         this->detail_common_oarchive::save_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >

; 84   :     }

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Rechecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAAAPAV?$shared_ptr@VCContact@@@0@AAPAV10@PAV10@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAAAPAV?$shared_ptr@VCContact@@@0@AAPAV10@PAV10@@Z PROC ; std::_Rechecked<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *>, COMDAT

; 457  : 	{	// reset checked from unchecked, generic

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 458  : 	_Dest = _Src;

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR __Src$[ebp]
  00024	89 08		 mov	 DWORD PTR [eax], ecx

; 459  : 	return (_Dest);

  00026	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]

; 460  : 	}

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??$_Rechecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAAAPAV?$shared_ptr@VCContact@@@0@AAPAV10@PAV10@@Z ENDP ; std::_Rechecked<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -221						; size = 1
$T2 = -209						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move_al_unchecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move_al_unchecked<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *,std::allocator<std::shared_ptr<CContact> > >, COMDAT

; 301  : 	{	// move [_First, _Last) to raw _Dest, using _Al, choose optimization

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00012	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 302  : 	typedef decltype(_STD move(*_First)) _Src_type; // TRANSITION MODULES VSO#222794
; 303  : 	return (_Uninitialized_move_al_unchecked1(_First, _Last, _Dest, _Al,

  0001e	8d 45 10	 lea	 eax, DWORD PTR __Dest$[ebp]
  00021	50		 push	 eax
  00022	8d 4d 08	 lea	 ecx, DWORD PTR __First$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Ptr_move_cat@V?$shared_ptr@VCContact@@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAV?$shared_ptr@VCContact@@@0@0@Z ; std::_Ptr_move_cat<std::shared_ptr<CContact>,std::shared_ptr<CContact> >
  0002b	83 c4 08	 add	 esp, 8
  0002e	88 85 23 ff ff
	ff		 mov	 BYTE PTR $T1[ebp], al
  00034	51		 push	 ecx
  00035	8b cc		 mov	 ecx, esp
  00037	8d 95 2f ff ff
	ff		 lea	 edx, DWORD PTR $T2[ebp]
  0003d	52		 push	 edx
  0003e	e8 00 00 00 00	 call	 ??$?0U?$integral_constant@_N$00@std@@@_Any_tag@std@@QAE@$$QAU?$integral_constant@_N$00@1@@Z ; std::_Any_tag::_Any_tag<std::integral_constant<bool,1> >
  00043	0f b6 85 23 ff
	ff ff		 movzx	 eax, BYTE PTR $T1[ebp]
  0004a	50		 push	 eax
  0004b	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  0004e	51		 push	 ecx
  0004f	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00052	52		 push	 edx
  00053	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00056	50		 push	 eax
  00057	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 ??$_Uninitialized_move_al_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked1<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *,std::allocator<std::shared_ptr<CContact> > >
  00060	83 c4 18	 add	 esp, 24			; 00000018H

; 304  : 		_Ptr_move_cat(_First, _Dest),
; 305  : 		_Uses_default_construct_t<_Alloc, decltype(_Unfancy(_Dest)), _Src_type>()));
; 306  : 	}

  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
  00066	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
??$_Uninitialized_move_al_unchecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *,std::allocator<std::shared_ptr<CContact> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Unchecked@PAV?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAV?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z PROC ; std::_Unchecked<std::shared_ptr<CContact> *>, COMDAT

; 427  : 	{	// construct unchecked from checked, generic

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 428  : 	return (_Src);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]

; 429  : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$_Unchecked@PAV?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ENDP ; std::_Unchecked<std::shared_ptr<CContact> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
tv74 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	6a 08		 push	 8
  00029	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0002e	83 c4 08	 add	 esp, 8
  00031	89 85 2c ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  00037	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR $T1[ebp], 0
  0003e	74 2a		 je	 SHORT $LN3@construct
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
  00049	83 c4 04	 add	 esp, 4
  0004c	8b 10		 mov	 edx, DWORD PTR [eax]
  0004e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00051	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  00057	89 11		 mov	 DWORD PTR [ecx], edx
  00059	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0005c	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  00062	89 95 24 ff ff
	ff		 mov	 DWORD PTR tv74[ebp], edx
  00068	eb 0a		 jmp	 SHORT $LN1@construct
$LN3@construct:
  0006a	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
$LN1@construct:

; 738  : 		}

  00074	5f		 pop	 edi
  00075	5e		 pop	 esi
  00076	5b		 pop	 ebx
  00077	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  0007d	3b ec		 cmp	 ebp, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 08 00	 ret	 8
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx

; 743  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 744  : 		_Ptr->~_Uty();
; 745  : 		}

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	6a 04		 push	 4
  00029	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0002e	83 c4 08	 add	 esp, 8
  00031	89 85 2c ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  00037	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR $T1[ebp], 0
  0003e	74 24		 je	 SHORT $LN3@construct
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ??$forward@AAPAD@std@@YAAAPADAAPAD@Z ; std::forward<char * &>
  00049	83 c4 04	 add	 esp, 4
  0004c	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  00052	8b 00		 mov	 eax, DWORD PTR [eax]
  00054	89 02		 mov	 DWORD PTR [edx], eax
  00056	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  0005c	89 8d 24 ff ff
	ff		 mov	 DWORD PTR tv73[ebp], ecx
  00062	eb 0a		 jmp	 SHORT $LN1@construct
$LN3@construct:
  00064	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv73[ebp], 0
$LN1@construct:

; 738  : 		}

  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00077	3b ec		 cmp	 ebp, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 08 00	 ret	 8
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 743  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 744  : 		_Ptr->~_Uty();
; 745  : 		}

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@V?$shared_ptr@VCContact@@@std@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$shared_ptr@VCContact@@@std@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::destroy<std::shared_ptr<CContact> >, COMDAT
; _this$ = ecx

; 1002 : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1003 : 		_Mytraits::destroy(*this, _Ptr);

  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$destroy@V?$shared_ptr@VCContact@@@std@@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::destroy<std::shared_ptr<CContact> >
  00030	83 c4 08	 add	 esp, 8

; 1004 : 		}

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??$destroy@V?$shared_ptr@VCContact@@@std@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::destroy<std::shared_ptr<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iarchive.hpp
;	COMDAT ??$load_override@Vversion_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vversion_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@12@@Z PROC ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::version_type>, COMDAT
; _this$ = ecx

; 69   :     void load_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 70   :         this->detail_common_iarchive::load_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??$load_override@Vversion_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVversion_type@23@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::version_type>

; 71   :     }

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??$load_override@Vversion_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@12@@Z ENDP ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iarchive.hpp
;	COMDAT ??$load_override@Vobject_id_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vobject_id_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z PROC ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::object_id_type>, COMDAT
; _this$ = ecx

; 69   :     void load_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 70   :         this->detail_common_iarchive::load_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??$load_override@Vobject_id_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVobject_id_type@23@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::object_id_type>

; 71   :     }

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??$load_override@Vobject_id_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z ENDP ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iarchive.hpp
;	COMDAT ??$load_override@Vclass_id_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vclass_id_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z PROC ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::class_id_type>, COMDAT
; _this$ = ecx

; 69   :     void load_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 70   :         this->detail_common_iarchive::load_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??$load_override@Vclass_id_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVclass_id_type@23@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::class_id_type>

; 71   :     }

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??$load_override@Vclass_id_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z ENDP ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iarchive.hpp
;	COMDAT ??$load_override@Utracking_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Utracking_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z PROC ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::tracking_type>, COMDAT
; _this$ = ecx

; 69   :     void load_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 70   :         this->detail_common_iarchive::load_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??$load_override@Utracking_type@archive@boost@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAUtracking_type@23@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::tracking_type>

; 71   :     }

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??$load_override@Utracking_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z ENDP ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ??$save_override@$$CBVversion_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVversion_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVversion_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVversion_type@23@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::version_type const >, COMDAT
; _this$ = ecx

; 69   :     void save_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 70   :         archive::save(* this->This(), t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$save@Vtext_oarchive@archive@boost@@$$CBVversion_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVversion_type@01@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::archive::version_type const >
  00038	83 c4 08	 add	 esp, 8

; 71   :     }

  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??$save_override@$$CBVversion_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVversion_type@23@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::version_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ??$save_override@$$CBVobject_reference_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVobject_reference_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVobject_reference_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVobject_reference_type@23@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::object_reference_type const >, COMDAT
; _this$ = ecx

; 69   :     void save_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 70   :         archive::save(* this->This(), t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$save@Vtext_oarchive@archive@boost@@$$CBVobject_reference_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVobject_reference_type@01@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::archive::object_reference_type const >
  00038	83 c4 08	 add	 esp, 8

; 71   :     }

  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??$save_override@$$CBVobject_reference_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVobject_reference_type@23@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::object_reference_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ??$save_override@$$CBVclass_id_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVclass_id_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVclass_id_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVclass_id_type@23@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_type const >, COMDAT
; _this$ = ecx

; 69   :     void save_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 70   :         archive::save(* this->This(), t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$save@Vtext_oarchive@archive@boost@@$$CBVclass_id_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVclass_id_type@01@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::archive::class_id_type const >
  00038	83 c4 08	 add	 esp, 8

; 71   :     }

  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??$save_override@$$CBVclass_id_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVclass_id_type@23@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ??$save_override@$$CBVclass_id_reference_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVclass_id_reference_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVclass_id_reference_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVclass_id_reference_type@23@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_reference_type const >, COMDAT
; _this$ = ecx

; 69   :     void save_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 70   :         archive::save(* this->This(), t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$save@Vtext_oarchive@archive@boost@@$$CBVclass_id_reference_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVclass_id_reference_type@01@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::archive::class_id_reference_type const >
  00038	83 c4 08	 add	 esp, 8

; 71   :     }

  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??$save_override@$$CBVclass_id_reference_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVclass_id_reference_type@23@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_reference_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ??$save_override@$$CBUtracking_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABUtracking_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBUtracking_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABUtracking_type@23@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::tracking_type const >, COMDAT
; _this$ = ecx

; 69   :     void save_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 70   :         archive::save(* this->This(), t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$save@Vtext_oarchive@archive@boost@@$$CBUtracking_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABUtracking_type@01@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::archive::tracking_type const >
  00038	83 c4 08	 add	 esp, 8

; 71   :     }

  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??$save_override@$$CBUtracking_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABUtracking_type@23@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::tracking_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@$$QAV21@@Z
_TEXT	SEGMENT
tv76 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@$$QAV21@@Z PROC ; std::allocator<std::shared_ptr<CContact> >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >, COMDAT
; _this$ = ecx

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	6a 08		 push	 8
  00029	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0002e	83 c4 08	 add	 esp, 8
  00031	89 85 2c ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  00037	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR $T1[ebp], 0
  0003e	74 20		 je	 SHORT $LN3@construct
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ??$forward@V?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::forward<std::shared_ptr<CContact> >
  00049	83 c4 04	 add	 esp, 4
  0004c	50		 push	 eax
  0004d	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  00053	e8 00 00 00 00	 call	 ??0?$shared_ptr@VCContact@@@std@@QAE@$$QAV01@@Z ; std::shared_ptr<CContact>::shared_ptr<CContact>
  00058	89 85 24 ff ff
	ff		 mov	 DWORD PTR tv76[ebp], eax
  0005e	eb 0a		 jmp	 SHORT $LN1@construct
$LN3@construct:
  00060	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv76[ebp], 0
$LN1@construct:

; 738  : 		}

  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00073	3b ec		 cmp	 ebp, esp
  00075	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c2 08 00	 ret	 8
??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@$$QAV21@@Z ENDP ; std::allocator<std::shared_ptr<CContact> >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@ABV21@@Z
_TEXT	SEGMENT
tv76 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@ABV21@@Z PROC ; std::allocator<std::shared_ptr<CContact> >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> const &>, COMDAT
; _this$ = ecx

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	6a 08		 push	 8
  00029	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0002e	83 c4 08	 add	 esp, 8
  00031	89 85 2c ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  00037	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR $T1[ebp], 0
  0003e	74 20		 je	 SHORT $LN3@construct
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ??$forward@ABV?$shared_ptr@VCContact@@@std@@@std@@YAABV?$shared_ptr@VCContact@@@0@ABV10@@Z ; std::forward<std::shared_ptr<CContact> const &>
  00049	83 c4 04	 add	 esp, 4
  0004c	50		 push	 eax
  0004d	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  00053	e8 00 00 00 00	 call	 ??0?$shared_ptr@VCContact@@@std@@QAE@ABV01@@Z ; std::shared_ptr<CContact>::shared_ptr<CContact>
  00058	89 85 24 ff ff
	ff		 mov	 DWORD PTR tv76[ebp], eax
  0005e	eb 0a		 jmp	 SHORT $LN1@construct
$LN3@construct:
  00060	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv76[ebp], 0
$LN1@construct:

; 738  : 		}

  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00073	3b ec		 cmp	 ebp, esp
  00075	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c2 08 00	 ret	 8
??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@ABV21@@Z ENDP ; std::allocator<std::shared_ptr<CContact> >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@AAV21@@Z
_TEXT	SEGMENT
tv76 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@AAV21@@Z PROC ; std::allocator<std::shared_ptr<CContact> >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> &>, COMDAT
; _this$ = ecx

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	6a 08		 push	 8
  00029	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0002e	83 c4 08	 add	 esp, 8
  00031	89 85 2c ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  00037	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR $T1[ebp], 0
  0003e	74 20		 je	 SHORT $LN3@construct
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ??$forward@AAV?$shared_ptr@VCContact@@@std@@@std@@YAAAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::forward<std::shared_ptr<CContact> &>
  00049	83 c4 04	 add	 esp, 4
  0004c	50		 push	 eax
  0004d	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  00053	e8 00 00 00 00	 call	 ??0?$shared_ptr@VCContact@@@std@@QAE@ABV01@@Z ; std::shared_ptr<CContact>::shared_ptr<CContact>
  00058	89 85 24 ff ff
	ff		 mov	 DWORD PTR tv76[ebp], eax
  0005e	eb 0a		 jmp	 SHORT $LN1@construct
$LN3@construct:
  00060	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv76[ebp], 0
$LN1@construct:

; 738  : 		}

  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00073	3b ec		 cmp	 ebp, esp
  00075	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c2 08 00	 ret	 8
??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@AAV21@@Z ENDP ; std::allocator<std::shared_ptr<CContact> >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAV?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z PROC ; std::move<std::shared_ptr<CContact> &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$move@AAV?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ENDP ; std::move<std::shared_ptr<CContact> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_istream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_istream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\istream
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ PROC ; std::basic_istream<char,std::char_traits<char> >::sentry::operator bool, COMDAT
; _this$ = ecx

; 122  : 			{	// test if _Ipfx succeeded

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 123  : 			return (_Ok);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8a 40 04	 mov	 al, BYTE PTR [eax+4]

; 124  : 			}

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ ENDP ; std::basic_istream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\istream
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Istr$ = 8						; size = 4
__Noskip$ = 12						; size = 1
??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z PROC ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; _this$ = ecx

; 117  : 			{	// construct locking and calling _Ipfx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 116  : 			: _Sentry_base(_Istr)

  00042	8b 45 08	 mov	 eax, DWORD PTR __Istr$[ebp]
  00045	50		 push	 eax
  00046	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
  0004e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 118  : 			_Ok = this->_Myistr._Ipfx(_Noskip);

  00055	8b f4		 mov	 esi, esp
  00057	0f b6 45 0c	 movzx	 eax, BYTE PTR __Noskip$[ebp]
  0005b	50		 push	 eax
  0005c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z
  00067	3b f4		 cmp	 esi, esp
  00069	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006e	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00071	88 42 04	 mov	 BYTE PTR [edx+4], al

; 119  : 			}

  00074	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00081	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00088	59		 pop	 ecx
  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
  0008b	5b		 pop	 ebx
  0008c	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00092	3b ec		 cmp	 ebp, esp
  00094	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00099	8b e5		 mov	 esp, ebp
  0009b	5d		 pop	 ebp
  0009c	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\istream
;	COMDAT ??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv92 = -224						; size = 4
tv86 = -220						; size = 4
tv72 = -220						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = ecx

; 100  : 			{	// destroy after unlocking

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d4 00 00
	00		 sub	 esp, 212		; 000000d4H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 20 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-224]
  00021	b9 35 00 00 00	 mov	 ecx, 53			; 00000035H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 101  : 			if (_Myistr.rdbuf() != 0)

  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	8b 08		 mov	 ecx, DWORD PTR [eax]
  00047	89 8d 24 ff ff
	ff		 mov	 DWORD PTR tv72[ebp], ecx
  0004d	8b 95 24 ff ff
	ff		 mov	 edx, DWORD PTR tv72[ebp]
  00053	8b 02		 mov	 eax, DWORD PTR [edx]
  00055	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR tv72[ebp]
  0005b	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  0005e	8b f4		 mov	 esi, esp
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00066	3b f4		 cmp	 esi, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	85 c0		 test	 eax, eax
  0006f	74 4d		 je	 SHORT $LN3@Sentry_bas

; 102  : 				_Myistr.rdbuf()->_Unlock();

  00071	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00074	8b 08		 mov	 ecx, DWORD PTR [eax]
  00076	89 8d 24 ff ff
	ff		 mov	 DWORD PTR tv86[ebp], ecx
  0007c	8b 95 24 ff ff
	ff		 mov	 edx, DWORD PTR tv86[ebp]
  00082	8b 02		 mov	 eax, DWORD PTR [edx]
  00084	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR tv86[ebp]
  0008a	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  0008d	8b f4		 mov	 esi, esp
  0008f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00095	3b f4		 cmp	 esi, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	89 85 20 ff ff
	ff		 mov	 DWORD PTR tv92[ebp], eax
  000a2	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR tv92[ebp]
  000a8	8b 11		 mov	 edx, DWORD PTR [ecx]
  000aa	8b f4		 mov	 esi, esp
  000ac	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR tv92[ebp]
  000b2	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000b5	ff d0		 call	 eax
  000b7	3b f4		 cmp	 esi, esp
  000b9	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Sentry_bas:

; 103  : 			}

  000be	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c8	59		 pop	 ecx
  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	81 c4 e0 00 00
	00		 add	 esp, 224		; 000000e0H
  000d2	3b ec		 cmp	 ebp, esp
  000d4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d9	8b e5		 mov	 esp, ebp
  000db	5d		 pop	 ebp
  000dc	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 1c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-228]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\istream
;	COMDAT ??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
tv93 = -212						; size = 4
tv87 = -208						; size = 4
tv73 = -208						; size = 4
_this$ = -8						; size = 4
__Istr$ = 8						; size = 4
??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = ecx

; 94   : 			{	// lock the stream buffer, if there

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d4 00 00
	00		 sub	 esp, 212		; 000000d4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 2c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-212]
  00013	b9 35 00 00 00	 mov	 ecx, 53			; 00000035H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 93   : 			: _Myistr(_Istr)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR __Istr$[ebp]
  00029	89 08		 mov	 DWORD PTR [eax], ecx

; 95   : 			if (_Myistr.rdbuf() != 0)

  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	89 8d 30 ff ff
	ff		 mov	 DWORD PTR tv73[ebp], ecx
  00036	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR tv73[ebp]
  0003c	8b 02		 mov	 eax, DWORD PTR [edx]
  0003e	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv73[ebp]
  00044	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  00047	8b f4		 mov	 esi, esp
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	85 c0		 test	 eax, eax
  00058	74 4d		 je	 SHORT $LN1@Sentry_bas

; 96   : 				_Myistr.rdbuf()->_Lock();

  0005a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005f	89 8d 30 ff ff
	ff		 mov	 DWORD PTR tv87[ebp], ecx
  00065	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR tv87[ebp]
  0006b	8b 02		 mov	 eax, DWORD PTR [edx]
  0006d	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv87[ebp]
  00073	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  00076	8b f4		 mov	 esi, esp
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  0007e	3b f4		 cmp	 esi, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00085	89 85 2c ff ff
	ff		 mov	 DWORD PTR tv93[ebp], eax
  0008b	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR tv93[ebp]
  00091	8b 11		 mov	 edx, DWORD PTR [ecx]
  00093	8b f4		 mov	 esi, esp
  00095	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR tv93[ebp]
  0009b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0009e	ff d0		 call	 eax
  000a0	3b f4		 cmp	 esi, esp
  000a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@Sentry_bas:

; 97   : 			}

  000a7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	5f		 pop	 edi
  000ab	5e		 pop	 esi
  000ac	5b		 pop	 ebx
  000ad	81 c4 d4 00 00
	00		 add	 esp, 212		; 000000d4H
  000b3	3b ec		 cmp	 ebp, esp
  000b5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ba	8b e5		 mov	 esp, ebp
  000bc	5d		 pop	 ebp
  000bd	c2 04 00	 ret	 4
??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??$?0V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@QAE@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Tgt$ = 8						; size = 4
??$?0V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@QAE@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@1@@Z PROC ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > ><std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT
; _this$ = ecx

; 227  : 		{	// construct from target

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0_Pad@std@@QAE@XZ	; std::_Pad::_Pad
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@6B@

; 226  : 		: _MyTarget(_STD forward<_Other>(_Tgt))

  00034	8b 45 08	 mov	 eax, DWORD PTR __Tgt$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ??$forward@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YA$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@AAV10@@Z ; std::forward<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
  0003d	83 c4 04	 add	 esp, 4
  00040	50		 push	 eax
  00041	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	83 c1 10	 add	 ecx, 16			; 00000010H
  00047	e8 00 00 00 00	 call	 ??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@$$QAV01@@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >

; 228  : 		}

  0004c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 04 00	 ret	 4
??$?0V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@QAE@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@1@@Z ENDP ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > ><std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@QAE@XZ PROC ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	83 c1 10	 add	 ecx, 16			; 00000010H
  00029	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ??1_Pad@std@@QAE@XZ	; std::_Pad::~_Pad
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003f	3b ec		 cmp	 ebp, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
??1?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXPAV12@@Z
_TEXT	SEGMENT
$T2 = -221						; size = 1
__Local$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ln$ = 8						; size = 4
?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXPAV12@@Z PROC ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Run, COMDAT

; 244  : 		{	// construct local unique_ptr and call function object within

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXPAV12@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00020	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00031	33 c5		 xor	 eax, ebp
  00033	50		 push	 eax
  00034	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00037	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 245  : 		_Target _Local(_STD forward<_Target>(_Ln->_MyTarget));

  0003d	8b 45 08	 mov	 eax, DWORD PTR __Ln$[ebp]
  00040	83 c0 10	 add	 eax, 16			; 00000010H
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ??$forward@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YA$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@AAV10@@Z ; std::forward<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
  00049	83 c4 04	 add	 esp, 4
  0004c	50		 push	 eax
  0004d	8d 4d ec	 lea	 ecx, DWORD PTR __Local$[ebp]
  00050	e8 00 00 00 00	 call	 ??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@$$QAV01@@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >

; 246  : 		_Ln->_Release();

  00055	8b 4d 08	 mov	 ecx, DWORD PTR __Ln$[ebp]
  00058	e8 00 00 00 00	 call	 ?_Release@_Pad@std@@QAEXXZ ; std::_Pad::_Release

; 247  : 		_Execute(*_Local,

  0005d	0f b6 85 23 ff
	ff ff		 movzx	 eax, BYTE PTR $T2[ebp]
  00064	50		 push	 eax
  00065	8d 4d ec	 lea	 ecx, DWORD PTR __Local$[ebp]
  00068	e8 00 00 00 00	 call	 ??D?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ??$_Execute@$0A@$00$01@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@U?$integer_sequence@I$0A@$00$01@1@@Z ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Execute<0,1,2>
  00073	83 c4 08	 add	 esp, 8

; 248  : 			make_integer_sequence<size_t,
; 249  : 				tuple_size<typename _Target::element_type>::value>());
; 250  : 		}

  00076	8d 4d ec	 lea	 ecx, DWORD PTR __Local$[ebp]
  00079	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  0007e	52		 push	 edx
  0007f	8b cd		 mov	 ecx, ebp
  00081	50		 push	 eax
  00082	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@Run
  00088	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0008d	58		 pop	 eax
  0008e	5a		 pop	 edx
  0008f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00092	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00099	59		 pop	 ecx
  0009a	5f		 pop	 edi
  0009b	5e		 pop	 esi
  0009c	5b		 pop	 ebx
  0009d	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  000a3	3b ec		 cmp	 ebp, esp
  000a5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000aa	8b e5		 mov	 esp, ebp
  000ac	5d		 pop	 ebp
  000ad	c3		 ret	 0
  000ae	66 90		 npad	 2
$LN6@Run:
  000b0	01 00 00 00	 DD	 1
  000b4	00 00 00 00	 DD	 $LN5@Run
$LN5@Run:
  000b8	ec ff ff ff	 DD	 -20			; ffffffecH
  000bc	04 00 00 00	 DD	 4
  000c0	00 00 00 00	 DD	 $LN3@Run
$LN3@Run:
  000c4	5f		 DB	 95			; 0000005fH
  000c5	4c		 DB	 76			; 0000004cH
  000c6	6f		 DB	 111			; 0000006fH
  000c7	63		 DB	 99			; 00000063H
  000c8	61		 DB	 97			; 00000061H
  000c9	6c		 DB	 108			; 0000006cH
  000ca	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXPAV12@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 18 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-232]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXPAV12@@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXPAV12@@Z ENDP ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Run
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Go@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Go@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@UAEXXZ PROC ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Go, COMDAT
; _this$ = ecx

; 231  : 		{	// run the thread function object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 232  : 		_Run(this);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@CAXPAV12@@Z ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Run
  0002c	83 c4 04	 add	 esp, 4

; 233  : 		}

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
?_Go@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@UAEXXZ ENDP ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Go
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YA$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YA$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@AAV10@@Z PROC ; std::forward<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YA$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@AAV10@@Z ENDP ; std::forward<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__This_arg$ = 8						; size = 4
_<_Rest_arg_0>$ = 12					; size = 4
_<_Rest_arg_1>$ = 16					; size = 4
??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z PROC ; std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>, COMDAT
; _this$ = ecx

; 469  : 		{	// construct from one or more moved elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00021	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 467  : 		: _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

  00042	33 c0		 xor	 eax, eax
  00044	88 85 23 ff ff
	ff		 mov	 BYTE PTR $T2[ebp], al
  0004a	8b 4d 10	 mov	 ecx, DWORD PTR _<_Rest_arg_1>$[ebp]
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 ??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  00053	83 c4 04	 add	 esp, 4
  00056	50		 push	 eax
  00057	8b 55 0c	 mov	 edx, DWORD PTR _<_Rest_arg_0>$[ebp]
  0005a	52		 push	 edx
  0005b	e8 00 00 00 00	 call	 ??$forward@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z ; std::forward<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>
  00060	83 c4 04	 add	 esp, 4
  00063	50		 push	 eax
  00064	0f b6 85 23 ff
	ff ff		 movzx	 eax, BYTE PTR $T2[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$0A@@?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@U_Exact_args_t@1@$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::_Exact_args_t,std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>
  00074	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 468  : 			_Myfirst(_STD forward<_This2>(_This_arg))

  0007b	8b 45 08	 mov	 eax, DWORD PTR __This_arg$[ebp]
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ??$forward@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YAA6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZA6AX01@Z@Z ; std::forward<void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
  00084	83 c4 04	 add	 esp, 4
  00087	50		 push	 eax
  00088	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	83 c1 20	 add	 ecx, 32			; 00000020H
  0008e	e8 00 00 00 00	 call	 ??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@?$_Tuple_val@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@Z ; std::_Tuple_val<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>::_Tuple_val<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)><void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>

; 470  : 		}

  00093	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0009d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a7	59		 pop	 ecx
  000a8	5f		 pop	 edi
  000a9	5e		 pop	 esi
  000aa	5b		 pop	 ebx
  000ab	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  000b1	3b ec		 cmp	 ebp, esp
  000b3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b8	8b e5		 mov	 esp, ebp
  000ba	5d		 pop	 ebp
  000bb	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ
__ehhandler$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 18 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-232]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z ENDP ; std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iarchive.hpp
;	COMDAT ??$load_override@VCContact@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVCContact@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@VCContact@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVCContact@@@Z PROC ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<CContact>, COMDAT
; _this$ = ecx

; 69   :     void load_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 70   :         this->detail_common_iarchive::load_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??$load_override@VCContact@@@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@IAEXAAVCContact@@@Z ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::load_override<CContact>

; 71   :     }

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??$load_override@VCContact@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVCContact@@@Z ENDP ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ??$save_override@$$CBVCContact@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVCContact@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVCContact@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVCContact@@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<CContact const >, COMDAT
; _this$ = ecx

; 69   :     void save_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 70   :         archive::save(* this->This(), t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$save@Vtext_oarchive@archive@boost@@$$CBVCContact@@@archive@boost@@YAXAAVtext_oarchive@01@ABVCContact@@@Z ; boost::archive::save<boost::archive::text_oarchive,CContact const >
  00038	83 c4 08	 add	 esp, 8

; 71   :     }

  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??$save_override@$$CBVCContact@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVCContact@@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<CContact const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ??$save_override@$$CBVobject_id_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVobject_id_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVobject_id_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVobject_id_type@23@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::object_id_type const >, COMDAT
; _this$ = ecx

; 69   :     void save_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 70   :         archive::save(* this->This(), t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$save@Vtext_oarchive@archive@boost@@$$CBVobject_id_type@23@@archive@boost@@YAXAAVtext_oarchive@01@ABVobject_id_type@01@@Z ; boost::archive::save<boost::archive::text_oarchive,boost::archive::object_id_type const >
  00038	83 c4 08	 add	 esp, 8

; 71   :     }

  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??$save_override@$$CBVobject_id_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVobject_id_type@23@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::object_id_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  0002f	8b c8		 mov	 ecx, eax
  00031	e8 00 00 00 00	 call	 ??$save_override@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >

; 71   :         return * this->This();

  00036	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??$?6V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT
; _this$ = ecx

; 709  : 		{	// construct from a related allocator (do nothing)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 710  : 		}

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<char> > &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *,std::allocator<std::shared_ptr<CContact> > >, COMDAT

; 313  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 314  : 		// note: only called internally from elsewhere in the STL, debug checks
; 315  : 		// and deprecation warnings omitted
; 316  : 	return (_Rechecked(_Dest,

  0001e	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Unchecked@PAV?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unchecked<std::shared_ptr<CContact> *>
  0002b	83 c4 04	 add	 esp, 4
  0002e	50		 push	 eax
  0002f	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00032	52		 push	 edx
  00033	e8 00 00 00 00	 call	 ??$_Unchecked@PAV?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unchecked<std::shared_ptr<CContact> *>
  00038	83 c4 04	 add	 esp, 4
  0003b	50		 push	 eax
  0003c	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??$_Unchecked@PAV?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unchecked<std::shared_ptr<CContact> *>
  00045	83 c4 04	 add	 esp, 4
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move_al_unchecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z ; std::_Uninitialized_move_al_unchecked<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *,std::allocator<std::shared_ptr<CContact> > >
  0004e	83 c4 10	 add	 esp, 16			; 00000010H
  00051	50		 push	 eax
  00052	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  00055	51		 push	 ecx
  00056	e8 00 00 00 00	 call	 ??$_Rechecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAAAPAV?$shared_ptr@VCContact@@@0@AAPAV10@PAV10@@Z ; std::_Rechecked<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *>
  0005b	83 c4 08	 add	 esp, 8
  0005e	8b 00		 mov	 eax, DWORD PTR [eax]

; 317  : 		_Uninitialized_move_al_unchecked(_Unchecked(_First), _Unchecked(_Last),
; 318  : 			_Unchecked(_Dest), _Al)));
; 319  : 	}

  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
??$_Uninitialized_move@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *,std::allocator<std::shared_ptr<CContact> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

  0001e	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00032	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>

; 858  : 		}

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT

; 863  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 864  : 		_Al.destroy(_Ptr);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00025	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>

; 865  : 		}

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0V?$shared_ptr@VCContact@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0V?$shared_ptr@VCContact@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::shared_ptr<CContact> >, COMDAT
; _this$ = ecx

; 709  : 		{	// construct from a related allocator (do nothing)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 710  : 		}

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
??$?0V?$shared_ptr@VCContact@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::shared_ptr<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@AAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > > &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@AAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAPAVCContact@@@std@@YA$$QAPAVCContact@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAPAVCContact@@@std@@YA$$QAPAVCContact@@AAPAV1@@Z PROC ; std::move<CContact * &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$move@AAPAVCContact@@@std@@YA$$QAPAVCContact@@AAPAV1@@Z ENDP ; std::move<CContact * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAPAV_Ref_count_base@std@@@std@@YA$$QAPAV_Ref_count_base@0@AAPAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAPAV_Ref_count_base@std@@@std@@YA$$QAPAV_Ref_count_base@0@AAPAV10@@Z PROC ; std::move<std::_Ref_count_base * &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$move@AAPAV_Ref_count_base@std@@@std@@YA$$QAPAV_Ref_count_base@0@AAPAV10@@Z ENDP ; std::move<std::_Ref_count_base * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

  0001e	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$forward@AAPAD@std@@YAAAPADAAPAD@Z ; std::forward<char * &>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00032	e8 00 00 00 00	 call	 ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>

; 858  : 		}

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 863  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 864  : 		_Al.destroy(_Ptr);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00025	e8 00 00 00 00	 call	 ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 865  : 		}

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ENDP ; std::forward<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@PAV?$shared_ptr@VCContact@@@2@@std@@YAXPAV?$shared_ptr@VCContact@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range1@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@PAV?$shared_ptr@VCContact@@@2@@std@@YAXPAV?$shared_ptr@VCContact@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Destroy_range1<std::allocator<std::shared_ptr<CContact> >,std::shared_ptr<CContact> *>, COMDAT

; 1099 : 	{	// destroy [_First, _Last), no special optimization

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1100 : 	for (; _First != _Last; ++_First)

  0001e	eb 09		 jmp	 SHORT $LN4@Destroy_ra
$LN2@Destroy_ra:
  00020	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00023	83 c0 08	 add	 eax, 8
  00026	89 45 08	 mov	 DWORD PTR __First$[ebp], eax
$LN4@Destroy_ra:
  00029	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0002c	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0002f	74 17		 je	 SHORT $LN1@Destroy_ra

; 1101 : 		_Al.destroy(_Unfancy(_First));

  00031	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unfancy<std::shared_ptr<CContact> >
  0003a	83 c4 04	 add	 esp, 4
  0003d	50		 push	 eax
  0003e	8b 4d 10	 mov	 ecx, DWORD PTR __Al$[ebp]
  00041	e8 00 00 00 00	 call	 ??$destroy@V?$shared_ptr@VCContact@@@std@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::destroy<std::shared_ptr<CContact> >
  00046	eb d8		 jmp	 SHORT $LN2@Destroy_ra
$LN1@Destroy_ra:

; 1102 : 	}

  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
??$_Destroy_range1@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@PAV?$shared_ptr@VCContact@@@2@@std@@YAXPAV?$shared_ptr@VCContact@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Destroy_range1<std::allocator<std::shared_ptr<CContact> >,std::shared_ptr<CContact> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >, COMDAT
; _this$ = ecx

; 289  : 		{	// construct from forwarded values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 287  : 		: _Ty1(_STD forward<_Other1>(_Val1)),

  00023	8b 45 0c	 mov	 eax, DWORD PTR __Val1$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAU01@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >

; 288  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

  00038	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 290  : 		}

  00040	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 08 00	 ret	 8
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<char> > >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load_override@Vversion_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vversion_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@12@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::version_type>, COMDAT
; _this$ = ecx

; 81   :     void load_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 82   :         basic_text_iarchive<Archive>::load_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??$load_override@Vversion_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@12@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::version_type>

; 83   :     }

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??$load_override@Vversion_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@12@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load_override@Vobject_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vobject_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::object_id_type>, COMDAT
; _this$ = ecx

; 81   :     void load_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 82   :         basic_text_iarchive<Archive>::load_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??$load_override@Vobject_id_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::object_id_type>

; 83   :     }

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??$load_override@Vobject_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load_override@Vclass_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vclass_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::class_id_type>, COMDAT
; _this$ = ecx

; 81   :     void load_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 82   :         basic_text_iarchive<Archive>::load_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??$load_override@Vclass_id_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::class_id_type>

; 83   :     }

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??$load_override@Vclass_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load_override@Vclass_id_optional_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_optional_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Vclass_id_optional_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_optional_type@12@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::class_id_optional_type>, COMDAT
; _this$ = ecx

; 81   :     void load_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 82   :         basic_text_iarchive<Archive>::load_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?load_override@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_optional_type@23@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override

; 83   :     }

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??$load_override@Vclass_id_optional_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_optional_type@12@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::class_id_optional_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load_override@Utracking_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@Utracking_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::tracking_type>, COMDAT
; _this$ = ecx

; 81   :     void load_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 82   :         basic_text_iarchive<Archive>::load_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??$load_override@Utracking_type@archive@boost@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<boost::archive::tracking_type>

; 83   :     }

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??$load_override@Utracking_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ??$save_override@$$CBVversion_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVversion_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVversion_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVversion_type@12@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::version_type const >, COMDAT
; _this$ = ecx

; 82   :     void save_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 83   :         this->detail_common_oarchive::save_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??$save_override@$$CBVversion_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVversion_type@23@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::version_type const >

; 84   :     }

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??$save_override@$$CBVversion_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVversion_type@12@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::version_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ??$save_override@$$CBVobject_reference_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_reference_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVobject_reference_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_reference_type@12@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::object_reference_type const >, COMDAT
; _this$ = ecx

; 82   :     void save_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 83   :         this->detail_common_oarchive::save_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??$save_override@$$CBVobject_reference_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVobject_reference_type@23@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::object_reference_type const >

; 84   :     }

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??$save_override@$$CBVobject_reference_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_reference_type@12@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::object_reference_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ??$save_override@$$CBVclass_id_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVclass_id_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_type@12@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_type const >, COMDAT
; _this$ = ecx

; 82   :     void save_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 83   :         this->detail_common_oarchive::save_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??$save_override@$$CBVclass_id_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVclass_id_type@23@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_type const >

; 84   :     }

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??$save_override@$$CBVclass_id_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_type@12@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ??$save_override@$$CBVclass_id_reference_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVclass_id_reference_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_reference_type const >, COMDAT
; _this$ = ecx

; 82   :     void save_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 83   :         this->detail_common_oarchive::save_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??$save_override@$$CBVclass_id_reference_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVclass_id_reference_type@23@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_reference_type const >

; 84   :     }

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??$save_override@$$CBVclass_id_reference_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_reference_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ??$save_override@$$CBUtracking_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUtracking_type@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBUtracking_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUtracking_type@12@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::tracking_type const >, COMDAT
; _this$ = ecx

; 82   :     void save_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 83   :         this->detail_common_oarchive::save_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??$save_override@$$CBUtracking_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABUtracking_type@23@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::tracking_type const >

; 84   :     }

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??$save_override@$$CBUtracking_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUtracking_type@12@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::tracking_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@$$QAV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@$$QAV31@@Z PROC ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

  0001e	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$forward@V?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::forward<std::shared_ptr<CContact> >
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00032	e8 00 00 00 00	 call	 ??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@$$QAV21@@Z ; std::allocator<std::shared_ptr<CContact> >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >

; 858  : 		}

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@$$QAV31@@Z ENDP ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@ABV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@ABV31@@Z PROC ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> const &>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

  0001e	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$forward@ABV?$shared_ptr@VCContact@@@std@@@std@@YAABV?$shared_ptr@VCContact@@@0@ABV10@@Z ; std::forward<std::shared_ptr<CContact> const &>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00032	e8 00 00 00 00	 call	 ??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@ABV21@@Z ; std::allocator<std::shared_ptr<CContact> >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> const &>

; 858  : 		}

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@ABV31@@Z ENDP ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@ABV?$shared_ptr@VCContact@@@std@@@std@@YAABV?$shared_ptr@VCContact@@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$shared_ptr@VCContact@@@std@@@std@@YAABV?$shared_ptr@VCContact@@@0@ABV10@@Z PROC ; std::forward<std::shared_ptr<CContact> const &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@ABV?$shared_ptr@VCContact@@@std@@@std@@YAABV?$shared_ptr@VCContact@@@0@ABV10@@Z ENDP ; std::forward<std::shared_ptr<CContact> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@AAV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@AAV31@@Z PROC ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> &>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

  0001e	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$forward@AAV?$shared_ptr@VCContact@@@std@@@std@@YAAAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::forward<std::shared_ptr<CContact> &>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00032	e8 00 00 00 00	 call	 ??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@AAV21@@Z ; std::allocator<std::shared_ptr<CContact> >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> &>

; 858  : 		}

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@AAV31@@Z ENDP ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAV?$shared_ptr@VCContact@@@std@@@std@@YAAAV?$shared_ptr@VCContact@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$shared_ptr@VCContact@@@std@@@std@@YAAAV?$shared_ptr@VCContact@@@0@AAV10@@Z PROC ; std::forward<std::shared_ptr<CContact> &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@AAV?$shared_ptr@VCContact@@@std@@@std@@YAAAV?$shared_ptr@VCContact@@@0@AAV10@@Z ENDP ; std::forward<std::shared_ptr<CContact> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Move_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00U_General_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00U_General_ptr_iterator_tag@0@@Z PROC ; std::_Move_unchecked1<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *>, COMDAT

; 2579 : 	{	// move [_First, _Last) to [_Dest, ...), no special optimization

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 2580 : 	for (; _First != _Last; ++_Dest, (void)++_First)

  0001e	eb 12		 jmp	 SHORT $LN4@Move_unche
$LN2@Move_unche:
  00020	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00023	83 c0 08	 add	 eax, 8
  00026	89 45 10	 mov	 DWORD PTR __Dest$[ebp], eax
  00029	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0002c	83 c1 08	 add	 ecx, 8
  0002f	89 4d 08	 mov	 DWORD PTR __First$[ebp], ecx
$LN4@Move_unche:
  00032	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00035	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00038	74 17		 je	 SHORT $LN3@Move_unche

; 2581 : 		*_Dest = _STD move(*_First);

  0003a	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??$move@AAV?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::move<std::shared_ptr<CContact> &>
  00043	83 c4 04	 add	 esp, 4
  00046	50		 push	 eax
  00047	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0004a	e8 00 00 00 00	 call	 ??4?$shared_ptr@VCContact@@@std@@QAEAAV01@$$QAV01@@Z ; std::shared_ptr<CContact>::operator=
  0004f	eb cf		 jmp	 SHORT $LN2@Move_unche
$LN3@Move_unche:

; 2582 : 	return (_Dest);

  00051	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 2583 : 	}

  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx
  00057	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0005d	3b ec		 cmp	 ebp, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c3		 ret	 0
??$_Move_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00U_General_ptr_iterator_tag@0@@Z ENDP ; std::_Move_unchecked1<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Ptr_move_cat@V?$shared_ptr@VCContact@@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAV?$shared_ptr@VCContact@@@0@0@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_move_cat@V?$shared_ptr@VCContact@@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAV?$shared_ptr@VCContact@@@0@0@Z PROC ; std::_Ptr_move_cat<std::shared_ptr<CContact>,std::shared_ptr<CContact> >, COMDAT

; 809  : 	{	// return pointer move optimization category for pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 810  : 	return {};

  0001e	33 c0		 xor	 eax, eax
  00020	88 85 3b ff ff
	ff		 mov	 BYTE PTR $T1[ebp], al
  00026	8a 85 3b ff ff
	ff		 mov	 al, BYTE PTR $T1[ebp]

; 811  : 	}

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_Ptr_move_cat@V?$shared_ptr@VCContact@@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAV?$shared_ptr@VCContact@@@0@0@Z ENDP ; std::_Ptr_move_cat<std::shared_ptr<CContact>,std::shared_ptr<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string
;	COMDAT ??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
_TEXT	SEGMENT
tv201 = -304						; size = 4
tv199 = -304						; size = 4
tv202 = -300						; size = 4
tv200 = -300						; size = 4
tv65 = -300						; size = 4
$T2 = -292						; size = 4
$T3 = -280						; size = 4
__Meta$4 = -76						; size = 4
__Metadelim$5 = -64					; size = 4
__Ok$ = -52						; size = 8
__Changed$ = -33					; size = 1
__State$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Istr$ = 8						; size = 4
__Str$ = 12						; size = 4
__Delim$ = 16						; size = 1
??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z PROC ; std::getline<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 77   : 	{	// get characters into string, discard delimiter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 20 01 00
	00		 sub	 esp, 288		; 00000120H
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8d bd d0 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-304]
  00021	b9 48 00 00 00	 mov	 ecx, 72			; 00000048H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	50		 push	 eax
  00035	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00038	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp

; 78   : 	typedef basic_istream<_Elem, _Traits> _Myis;
; 79   : 
; 80   : 	ios_base::iostate _State = ios_base::goodbit;

  00041	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR __State$[ebp], 0

; 81   : 	bool _Changed = false;

  00048	c6 45 df 00	 mov	 BYTE PTR __Changed$[ebp], 0

; 82   : 	const typename _Myis::sentry _Ok(_Istr, true);

  0004c	6a 01		 push	 1
  0004e	8b 45 08	 mov	 eax, DWORD PTR __Istr$[ebp]
  00051	50		 push	 eax
  00052	8d 4d cc	 lea	 ecx, DWORD PTR __Ok$[ebp]
  00055	e8 00 00 00 00	 call	 ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 83   : 
; 84   : 	if (_Ok)

  00061	8d 4d cc	 lea	 ecx, DWORD PTR __Ok$[ebp]
  00064	e8 00 00 00 00	 call	 ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_istream<char,std::char_traits<char> >::sentry::operator bool
  00069	0f b6 c0	 movzx	 eax, al
  0006c	85 c0		 test	 eax, eax
  0006e	0f 84 b5 01 00
	00		 je	 $LN5@getline

; 85   : 		{	// state okay, extract characters
; 86   : 		_TRY_IO_BEGIN

  00074	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1

; 87   : 		_Str.erase();

  00078	6a 00		 push	 0
  0007a	8b 4d 0c	 mov	 ecx, DWORD PTR __Str$[ebp]
  0007d	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase

; 88   : 		const typename _Traits::int_type _Metadelim =
; 89   : 			_Traits::to_int_type(_Delim);

  00082	8d 45 10	 lea	 eax, DWORD PTR __Delim$[ebp]
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
  0008b	83 c4 04	 add	 esp, 4
  0008e	89 45 c0	 mov	 DWORD PTR __Metadelim$5[ebp], eax

; 90   : 		typename _Traits::int_type _Meta = _Istr.rdbuf()->sgetc();

  00091	8b 45 08	 mov	 eax, DWORD PTR __Istr$[ebp]
  00094	8b 08		 mov	 ecx, DWORD PTR [eax]
  00096	8b 55 08	 mov	 edx, DWORD PTR __Istr$[ebp]
  00099	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  0009c	8b f4		 mov	 esi, esp
  0009e	8b ca		 mov	 ecx, edx
  000a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  000a6	3b f4		 cmp	 esi, esp
  000a8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ad	89 85 d4 fe ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  000b3	8b f4		 mov	 esi, esp
  000b5	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR tv65[ebp]
  000bb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
  000c1	3b f4		 cmp	 esi, esp
  000c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c8	89 85 d0 fe ff
	ff		 mov	 DWORD PTR tv199[ebp], eax
  000ce	8b 85 d0 fe ff
	ff		 mov	 eax, DWORD PTR tv199[ebp]
  000d4	89 45 b4	 mov	 DWORD PTR __Meta$4[ebp], eax
  000d7	eb 46		 jmp	 SHORT $LN4@getline
$LN2@getline:

; 91   : 
; 92   : 		for (; ; _Meta = _Istr.rdbuf()->snextc())

  000d9	8b 45 08	 mov	 eax, DWORD PTR __Istr$[ebp]
  000dc	8b 08		 mov	 ecx, DWORD PTR [eax]
  000de	8b 55 08	 mov	 edx, DWORD PTR __Istr$[ebp]
  000e1	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  000e4	8b f4		 mov	 esi, esp
  000e6	8b ca		 mov	 ecx, edx
  000e8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  000ee	3b f4		 cmp	 esi, esp
  000f0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f5	89 85 d4 fe ff
	ff		 mov	 DWORD PTR tv200[ebp], eax
  000fb	8b f4		 mov	 esi, esp
  000fd	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR tv200[ebp]
  00103	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
  00109	3b f4		 cmp	 esi, esp
  0010b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00110	89 85 d0 fe ff
	ff		 mov	 DWORD PTR tv201[ebp], eax
  00116	8b 85 d0 fe ff
	ff		 mov	 eax, DWORD PTR tv201[ebp]
  0011c	89 45 b4	 mov	 DWORD PTR __Meta$4[ebp], eax
$LN4@getline:

; 93   : 			if (_Traits::eq_int_type(_Traits::eof(), _Meta))

  0011f	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00124	89 85 e8 fe ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  0012a	8d 45 b4	 lea	 eax, DWORD PTR __Meta$4[ebp]
  0012d	50		 push	 eax
  0012e	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00134	51		 push	 ecx
  00135	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  0013a	83 c4 08	 add	 esp, 8
  0013d	0f b6 d0	 movzx	 edx, al
  00140	85 d2		 test	 edx, edx
  00142	74 13		 je	 SHORT $LN7@getline

; 94   : 				{	// end of file, quit
; 95   : 				_State |= ios_base::eofbit;

  00144	8b 45 e8	 mov	 eax, DWORD PTR __State$[ebp]
  00147	83 c8 01	 or	 eax, 1
  0014a	89 45 e8	 mov	 DWORD PTR __State$[ebp], eax

; 96   : 				break;

  0014d	e9 9f 00 00 00	 jmp	 $LN3@getline
  00152	e9 95 00 00 00	 jmp	 $LN8@getline
$LN7@getline:

; 97   : 				}
; 98   : 			else if (_Traits::eq_int_type(_Meta, _Metadelim))

  00157	8d 45 c0	 lea	 eax, DWORD PTR __Metadelim$5[ebp]
  0015a	50		 push	 eax
  0015b	8d 4d b4	 lea	 ecx, DWORD PTR __Meta$4[ebp]
  0015e	51		 push	 ecx
  0015f	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  00164	83 c4 08	 add	 esp, 8
  00167	0f b6 d0	 movzx	 edx, al
  0016a	85 d2		 test	 edx, edx
  0016c	74 3f		 je	 SHORT $LN9@getline

; 99   : 				{	// got a delimiter, discard it and quit
; 100  : 				_Changed = true;

  0016e	c6 45 df 01	 mov	 BYTE PTR __Changed$[ebp], 1

; 101  : 				_Istr.rdbuf()->sbumpc();

  00172	8b 45 08	 mov	 eax, DWORD PTR __Istr$[ebp]
  00175	8b 08		 mov	 ecx, DWORD PTR [eax]
  00177	8b 55 08	 mov	 edx, DWORD PTR __Istr$[ebp]
  0017a	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  0017d	8b f4		 mov	 esi, esp
  0017f	8b ca		 mov	 ecx, edx
  00181	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00187	3b f4		 cmp	 esi, esp
  00189	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018e	89 85 d4 fe ff
	ff		 mov	 DWORD PTR tv202[ebp], eax
  00194	8b f4		 mov	 esi, esp
  00196	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR tv202[ebp]
  0019c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
  001a2	3b f4		 cmp	 esi, esp
  001a4	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 102  : 				break;

  001a9	eb 46		 jmp	 SHORT $LN3@getline
  001ab	eb 3f		 jmp	 SHORT $LN8@getline
$LN9@getline:

; 103  : 				}
; 104  : 			else if (_Str.max_size() <= _Str.size())

  001ad	8b 4d 0c	 mov	 ecx, DWORD PTR __Str$[ebp]
  001b0	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  001b5	8b f0		 mov	 esi, eax
  001b7	8b 4d 0c	 mov	 ecx, DWORD PTR __Str$[ebp]
  001ba	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  001bf	3b c6		 cmp	 eax, esi
  001c1	77 0d		 ja	 SHORT $LN11@getline

; 105  : 				{	// string too large, quit
; 106  : 				_State |= ios_base::failbit;

  001c3	8b 45 e8	 mov	 eax, DWORD PTR __State$[ebp]
  001c6	83 c8 02	 or	 eax, 2
  001c9	89 45 e8	 mov	 DWORD PTR __State$[ebp], eax

; 107  : 				break;

  001cc	eb 23		 jmp	 SHORT $LN3@getline

; 108  : 				}
; 109  : 			else

  001ce	eb 1c		 jmp	 SHORT $LN8@getline
$LN11@getline:

; 110  : 				{	// got a character, add it to string
; 111  : 				_Str += _Traits::to_char_type(_Meta);

  001d0	8d 45 b4	 lea	 eax, DWORD PTR __Meta$4[ebp]
  001d3	50		 push	 eax
  001d4	e8 00 00 00 00	 call	 ?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
  001d9	83 c4 04	 add	 esp, 4
  001dc	0f b6 c8	 movzx	 ecx, al
  001df	51		 push	 ecx
  001e0	8b 4d 0c	 mov	 ecx, DWORD PTR __Str$[ebp]
  001e3	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 112  : 				_Changed = true;

  001e8	c6 45 df 01	 mov	 BYTE PTR __Changed$[ebp], 1
$LN8@getline:

; 113  : 				}

  001ec	e9 e8 fe ff ff	 jmp	 $LN2@getline
$LN3@getline:
  001f1	eb 26		 jmp	 SHORT $LN15@getline
__catch$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$0:

; 114  : 		_CATCH_IO_(_Istr)

  001f3	8b f4		 mov	 esi, esp
  001f5	6a 01		 push	 1
  001f7	6a 04		 push	 4
  001f9	8b 45 08	 mov	 eax, DWORD PTR __Istr$[ebp]
  001fc	8b 08		 mov	 ecx, DWORD PTR [eax]
  001fe	8b 55 08	 mov	 edx, DWORD PTR __Istr$[ebp]
  00201	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00204	8b ca		 mov	 ecx, edx
  00206	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
  0020c	3b f4		 cmp	 esi, esp
  0020e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00213	b8 00 00 00 00	 mov	 eax, $LN19@getline
  00218	c3		 ret	 0
$LN15@getline:
  00219	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00220	eb 07		 jmp	 SHORT $LN5@getline
$LN19@getline:
  00222	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
$LN5@getline:

; 115  : 		}
; 116  : 
; 117  : 	if (!_Changed)

  00229	0f b6 45 df	 movzx	 eax, BYTE PTR __Changed$[ebp]
  0022d	85 c0		 test	 eax, eax
  0022f	75 09		 jne	 SHORT $LN13@getline

; 118  : 		_State |= ios_base::failbit;

  00231	8b 45 e8	 mov	 eax, DWORD PTR __State$[ebp]
  00234	83 c8 02	 or	 eax, 2
  00237	89 45 e8	 mov	 DWORD PTR __State$[ebp], eax
$LN13@getline:

; 119  : 	_Istr.setstate(_State);

  0023a	8b f4		 mov	 esi, esp
  0023c	6a 00		 push	 0
  0023e	8b 45 e8	 mov	 eax, DWORD PTR __State$[ebp]
  00241	50		 push	 eax
  00242	8b 4d 08	 mov	 ecx, DWORD PTR __Istr$[ebp]
  00245	8b 11		 mov	 edx, DWORD PTR [ecx]
  00247	8b 4d 08	 mov	 ecx, DWORD PTR __Istr$[ebp]
  0024a	03 4a 04	 add	 ecx, DWORD PTR [edx+4]
  0024d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
  00253	3b f4		 cmp	 esi, esp
  00255	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 120  : 	return (_Istr);

  0025a	8b 45 08	 mov	 eax, DWORD PTR __Istr$[ebp]
  0025d	89 85 dc fe ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  00263	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0026a	8d 4d cc	 lea	 ecx, DWORD PTR __Ok$[ebp]
  0026d	e8 00 00 00 00	 call	 ??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
  00272	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]

; 121  : 	}

  00278	52		 push	 edx
  00279	8b cd		 mov	 ecx, ebp
  0027b	50		 push	 eax
  0027c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN25@getline
  00282	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00287	58		 pop	 eax
  00288	5a		 pop	 edx
  00289	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0028c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00293	59		 pop	 ecx
  00294	5f		 pop	 edi
  00295	5e		 pop	 esi
  00296	5b		 pop	 ebx
  00297	81 c4 30 01 00
	00		 add	 esp, 304		; 00000130H
  0029d	3b ec		 cmp	 ebp, esp
  0029f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002a4	8b e5		 mov	 esp, ebp
  002a6	5d		 pop	 ebp
  002a7	c3		 ret	 0
$LN25@getline:
  002a8	03 00 00 00	 DD	 3
  002ac	00 00 00 00	 DD	 $LN24@getline
$LN24@getline:
  002b0	cc ff ff ff	 DD	 -52			; ffffffccH
  002b4	08 00 00 00	 DD	 8
  002b8	00 00 00 00	 DD	 $LN20@getline
  002bc	c0 ff ff ff	 DD	 -64			; ffffffc0H
  002c0	04 00 00 00	 DD	 4
  002c4	00 00 00 00	 DD	 $LN21@getline
  002c8	b4 ff ff ff	 DD	 -76			; ffffffb4H
  002cc	04 00 00 00	 DD	 4
  002d0	00 00 00 00	 DD	 $LN22@getline
$LN22@getline:
  002d4	5f		 DB	 95			; 0000005fH
  002d5	4d		 DB	 77			; 0000004dH
  002d6	65		 DB	 101			; 00000065H
  002d7	74		 DB	 116			; 00000074H
  002d8	61		 DB	 97			; 00000061H
  002d9	00		 DB	 0
$LN21@getline:
  002da	5f		 DB	 95			; 0000005fH
  002db	4d		 DB	 77			; 0000004dH
  002dc	65		 DB	 101			; 00000065H
  002dd	74		 DB	 116			; 00000074H
  002de	61		 DB	 97			; 00000061H
  002df	64		 DB	 100			; 00000064H
  002e0	65		 DB	 101			; 00000065H
  002e1	6c		 DB	 108			; 0000006cH
  002e2	69		 DB	 105			; 00000069H
  002e3	6d		 DB	 109			; 0000006dH
  002e4	00		 DB	 0
$LN20@getline:
  002e5	5f		 DB	 95			; 0000005fH
  002e6	4f		 DB	 79			; 0000004fH
  002e7	6b		 DB	 107			; 0000006bH
  002e8	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$2:
  00000	8d 4d cc	 lea	 ecx, DWORD PTR __Ok$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
__ehhandler$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a cc fe ff
	ff		 mov	 ecx, DWORD PTR [edx-308]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z ENDP ; std::getline<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@@Z PROC ; std::move<std::basic_istream<char,std::char_traits<char> > &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$move@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@@Z ENDP ; std::move<std::basic_istream<char,std::char_traits<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT
; _this$ = ecx

; 141  : 			{	// test if stream state okay

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 142  : 			return (_Ok);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8a 40 04	 mov	 al, BYTE PTR [eax+4]

; 143  : 			}

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; _this$ = ecx

; 130  : 			{	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 131  :  #if _HAS_EXCEPTIONS
; 132  : 			if (!_XSTD uncaught_exception())

  00042	8b f4		 mov	 esi, esp
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?uncaught_exception@std@@YA_NXZ
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	0f b6 c0	 movzx	 eax, al
  00054	85 c0		 test	 eax, eax
  00056	75 14		 jne	 SHORT $LN1@sentry

; 133  : 				this->_Myostr._Osfx();

  00058	8b f4		 mov	 esi, esp
  0005a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
  00065	3b f4		 cmp	 esi, esp
  00067	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@sentry:

; 134  : 
; 135  :  #else /* _HAS_EXCEPTIONS */
; 136  : 			this->_Myostr._Osfx();
; 137  :  #endif /* _HAS_EXCEPTIONS */
; 138  : 			}

  0006c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  00074	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00077	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007e	59		 pop	 ecx
  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00088	3b ec		 cmp	 ebp, esp
  0008a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ostr$ = 8						; size = 4
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; _this$ = ecx

; 123  : 			{	// construct locking and testing stream

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 122  : 			: _Sentry_base(_Ostr)

  00042	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00045	50		 push	 eax
  00046	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
  0004e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  00055	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00058	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005a	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  0005d	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00060	8b f4		 mov	 esi, esp
  00062	8b ca		 mov	 ecx, edx
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
  0006a	3b f4		 cmp	 esi, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	0f b6 c0	 movzx	 eax, al
  00074	85 c0		 test	 eax, eax
  00076	74 6e		 je	 SHORT $LN2@sentry
  00078	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0007b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007d	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00080	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00083	8b f4		 mov	 esi, esp
  00085	8b ca		 mov	 ecx, edx
  00087	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
  0008d	3b f4		 cmp	 esi, esp
  0008f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00094	85 c0		 test	 eax, eax
  00096	74 4e		 je	 SHORT $LN2@sentry
  00098	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0009b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009d	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  000a0	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  000a3	8b f4		 mov	 esi, esp
  000a5	8b ca		 mov	 ecx, edx
  000a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
  000ad	3b f4		 cmp	 esi, esp
  000af	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b4	3b 45 08	 cmp	 eax, DWORD PTR __Ostr$[ebp]
  000b7	74 2d		 je	 SHORT $LN2@sentry

; 125  : 				_Ostr.tie()->flush();

  000b9	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  000bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  000be	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  000c1	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  000c4	8b f4		 mov	 esi, esp
  000c6	8b ca		 mov	 ecx, edx
  000c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
  000ce	3b f4		 cmp	 esi, esp
  000d0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d5	8b f4		 mov	 esi, esp
  000d7	8b c8		 mov	 ecx, eax
  000d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
  000df	3b f4		 cmp	 esi, esp
  000e1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@sentry:

; 126  : 			_Ok = _Ostr.good();	// store test only after flushing tie

  000e6	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  000e9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000eb	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  000ee	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  000f1	8b f4		 mov	 esi, esp
  000f3	8b ca		 mov	 ecx, edx
  000f5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
  000fb	3b f4		 cmp	 esi, esp
  000fd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00102	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00105	88 41 04	 mov	 BYTE PTR [ecx+4], al

; 127  : 			}

  00108	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0010f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00112	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00115	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011c	59		 pop	 ecx
  0011d	5f		 pop	 edi
  0011e	5e		 pop	 esi
  0011f	5b		 pop	 ebx
  00120	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00126	3b ec		 cmp	 ebp, esp
  00128	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012d	8b e5		 mov	 esp, ebp
  0012f	5d		 pop	 ebp
  00130	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv92 = -224						; size = 4
tv86 = -220						; size = 4
tv72 = -220						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = ecx

; 106  : 			{	// destroy after unlocking

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d4 00 00
	00		 sub	 esp, 212		; 000000d4H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 20 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-224]
  00021	b9 35 00 00 00	 mov	 ecx, 53			; 00000035H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 107  : 			if (_Myostr.rdbuf() != 0)

  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	8b 08		 mov	 ecx, DWORD PTR [eax]
  00047	89 8d 24 ff ff
	ff		 mov	 DWORD PTR tv72[ebp], ecx
  0004d	8b 95 24 ff ff
	ff		 mov	 edx, DWORD PTR tv72[ebp]
  00053	8b 02		 mov	 eax, DWORD PTR [edx]
  00055	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR tv72[ebp]
  0005b	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  0005e	8b f4		 mov	 esi, esp
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00066	3b f4		 cmp	 esi, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	85 c0		 test	 eax, eax
  0006f	74 4d		 je	 SHORT $LN3@Sentry_bas

; 108  : 				_Myostr.rdbuf()->_Unlock();

  00071	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00074	8b 08		 mov	 ecx, DWORD PTR [eax]
  00076	89 8d 24 ff ff
	ff		 mov	 DWORD PTR tv86[ebp], ecx
  0007c	8b 95 24 ff ff
	ff		 mov	 edx, DWORD PTR tv86[ebp]
  00082	8b 02		 mov	 eax, DWORD PTR [edx]
  00084	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR tv86[ebp]
  0008a	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  0008d	8b f4		 mov	 esi, esp
  0008f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00095	3b f4		 cmp	 esi, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	89 85 20 ff ff
	ff		 mov	 DWORD PTR tv92[ebp], eax
  000a2	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR tv92[ebp]
  000a8	8b 11		 mov	 edx, DWORD PTR [ecx]
  000aa	8b f4		 mov	 esi, esp
  000ac	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR tv92[ebp]
  000b2	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000b5	ff d0		 call	 eax
  000b7	3b f4		 cmp	 esi, esp
  000b9	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Sentry_bas:

; 109  : 			}

  000be	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c8	59		 pop	 ecx
  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	81 c4 e0 00 00
	00		 add	 esp, 224		; 000000e0H
  000d2	3b ec		 cmp	 ebp, esp
  000d4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d9	8b e5		 mov	 esp, ebp
  000db	5d		 pop	 ebp
  000dc	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 1c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-228]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
tv93 = -212						; size = 4
tv87 = -208						; size = 4
tv73 = -208						; size = 4
_this$ = -8						; size = 4
__Ostr$ = 8						; size = 4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = ecx

; 100  : 			{	// lock the stream buffer, if there

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d4 00 00
	00		 sub	 esp, 212		; 000000d4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 2c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-212]
  00013	b9 35 00 00 00	 mov	 ecx, 53			; 00000035H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 			: _Myostr(_Ostr)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  00029	89 08		 mov	 DWORD PTR [eax], ecx

; 101  : 			if (_Myostr.rdbuf() != 0)

  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	89 8d 30 ff ff
	ff		 mov	 DWORD PTR tv73[ebp], ecx
  00036	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR tv73[ebp]
  0003c	8b 02		 mov	 eax, DWORD PTR [edx]
  0003e	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv73[ebp]
  00044	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  00047	8b f4		 mov	 esi, esp
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	85 c0		 test	 eax, eax
  00058	74 4d		 je	 SHORT $LN1@Sentry_bas

; 102  : 				_Myostr.rdbuf()->_Lock();

  0005a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005f	89 8d 30 ff ff
	ff		 mov	 DWORD PTR tv87[ebp], ecx
  00065	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR tv87[ebp]
  0006b	8b 02		 mov	 eax, DWORD PTR [edx]
  0006d	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv87[ebp]
  00073	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  00076	8b f4		 mov	 esi, esp
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  0007e	3b f4		 cmp	 esi, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00085	89 85 2c ff ff
	ff		 mov	 DWORD PTR tv93[ebp], eax
  0008b	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR tv93[ebp]
  00091	8b 11		 mov	 edx, DWORD PTR [ecx]
  00093	8b f4		 mov	 esi, esp
  00095	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR tv93[ebp]
  0009b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0009e	ff d0		 call	 eax
  000a0	3b f4		 cmp	 esi, esp
  000a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@Sentry_bas:

; 103  : 			}

  000a7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	5f		 pop	 edi
  000ab	5e		 pop	 esi
  000ac	5b		 pop	 ebx
  000ad	81 c4 d4 00 00
	00		 add	 esp, 212		; 000000d4H
  000b3	3b ec		 cmp	 ebp, esp
  000b5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ba	8b e5		 mov	 esp, ebp
  000bc	5d		 pop	 ebp
  000bd	c2 04 00	 ret	 4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ
_TEXT	SEGMENT
tv94 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ PROC	; std::_Ref_count_obj<CCompany>::_Ref_count_obj<CCompany><>, COMDAT
; _this$ = ecx

; 900  : 		{	// construct from argument list

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 899  : 		: _Ref_count_base()

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0_Ref_count_base@std@@IAE@XZ ; std::_Ref_count_base::_Ref_count_base
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 900  : 		{	// construct from argument list

  00051	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00054	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$_Ref_count_obj@VCCompany@@@std@@6B@

; 901  : 		::new ((void *)&_Storage) _Ty(_STD forward<_Types>(_Args)...);

  0005a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	83 c0 0c	 add	 eax, 12			; 0000000cH
  00060	50		 push	 eax
  00061	68 e4 00 00 00	 push	 228			; 000000e4H
  00066	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0006b	83 c4 08	 add	 esp, 8
  0006e	89 85 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  00074	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00078	83 bd 14 ff ff
	ff 00		 cmp	 DWORD PTR $T2[ebp], 0
  0007f	74 13		 je	 SHORT $LN3@Ref_count_
  00081	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  00087	e8 00 00 00 00	 call	 ??0CCompany@@QAE@XZ	; CCompany::CCompany
  0008c	89 85 0c ff ff
	ff		 mov	 DWORD PTR tv94[ebp], eax
  00092	eb 0a		 jmp	 SHORT $LN4@Ref_count_
$LN3@Ref_count_:
  00094	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv94[ebp], 0
$LN4@Ref_count_:
  0009e	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR tv94[ebp]
  000a4	89 8d 20 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], ecx
  000aa	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0

; 902  : 		}

  000ae	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b5	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000b8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c2	59		 pop	 ecx
  000c3	5f		 pop	 edi
  000c4	5e		 pop	 esi
  000c5	5b		 pop	 ebx
  000c6	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  000cc	3b ec		 cmp	 ebp, esp
  000ce	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d3	8b e5		 mov	 esp, ebp
  000d5	5d		 pop	 ebp
  000d6	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_Ref_count_base@std@@UAE@XZ ; std::_Ref_count_base::~_Ref_count_base
__unwindfunclet$??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ$1:
  00008	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0000b	83 c0 0c	 add	 eax, 12			; 0000000cH
  0000e	50		 push	 eax
  0000f	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0001b	83 c4 08	 add	 esp, 8
  0001e	c3		 ret	 0
__ehhandler$??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ:
  0001f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00023	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00026	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  0002c	33 c8		 xor	 ecx, eax
  0002e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00033	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ
  00038	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ ENDP	; std::_Ref_count_obj<CCompany>::_Ref_count_obj<CCompany><>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ
_TEXT	SEGMENT
tv94 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ PROC	; std::_Ref_count_obj<CPerson>::_Ref_count_obj<CPerson><>, COMDAT
; _this$ = ecx

; 900  : 		{	// construct from argument list

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 899  : 		: _Ref_count_base()

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0_Ref_count_base@std@@IAE@XZ ; std::_Ref_count_base::_Ref_count_base
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 900  : 		{	// construct from argument list

  00051	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00054	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$_Ref_count_obj@VCPerson@@@std@@6B@

; 901  : 		::new ((void *)&_Storage) _Ty(_STD forward<_Types>(_Args)...);

  0005a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	83 c0 0c	 add	 eax, 12			; 0000000cH
  00060	50		 push	 eax
  00061	68 20 01 00 00	 push	 288			; 00000120H
  00066	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0006b	83 c4 08	 add	 esp, 8
  0006e	89 85 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  00074	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00078	83 bd 14 ff ff
	ff 00		 cmp	 DWORD PTR $T2[ebp], 0
  0007f	74 13		 je	 SHORT $LN3@Ref_count_
  00081	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  00087	e8 00 00 00 00	 call	 ??0CPerson@@QAE@XZ	; CPerson::CPerson
  0008c	89 85 0c ff ff
	ff		 mov	 DWORD PTR tv94[ebp], eax
  00092	eb 0a		 jmp	 SHORT $LN4@Ref_count_
$LN3@Ref_count_:
  00094	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv94[ebp], 0
$LN4@Ref_count_:
  0009e	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR tv94[ebp]
  000a4	89 8d 20 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], ecx
  000aa	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0

; 902  : 		}

  000ae	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b5	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000b8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c2	59		 pop	 ecx
  000c3	5f		 pop	 edi
  000c4	5e		 pop	 esi
  000c5	5b		 pop	 ebx
  000c6	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  000cc	3b ec		 cmp	 ebp, esp
  000ce	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d3	8b e5		 mov	 esp, ebp
  000d5	5d		 pop	 ebp
  000d6	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_Ref_count_base@std@@UAE@XZ ; std::_Ref_count_base::~_Ref_count_base
__unwindfunclet$??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ$1:
  00008	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0000b	83 c0 0c	 add	 eax, 12			; 0000000cH
  0000e	50		 push	 eax
  0000f	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0001b	83 c4 08	 add	 esp, 8
  0001e	c3		 ret	 0
__ehhandler$??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ:
  0001f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00023	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00026	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  0002c	33 c8		 xor	 ecx, eax
  0002e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00033	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ
  00038	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ ENDP	; std::_Ref_count_obj<CPerson>::_Ref_count_obj<CPerson><>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z
_TEXT	SEGMENT
__Launcher$ = -36					; size = 20
__$EHRec$ = -12						; size = 12
__Thr$ = 8						; size = 4
__Tg$ = 12						; size = 4
??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z PROC ; std::_Launch<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT

; 258  : 	{	// launch a new thread

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00020	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00031	33 c5		 xor	 eax, ebp
  00033	50		 push	 eax
  00034	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00037	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 259  : 	_LaunchPad<_Target> _Launcher(_STD forward<_Target>(_Tg));

  0003d	8b 45 0c	 mov	 eax, DWORD PTR __Tg$[ebp]
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 ??$forward@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YA$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@AAV10@@Z ; std::forward<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
  00046	83 c4 04	 add	 esp, 4
  00049	50		 push	 eax
  0004a	8d 4d dc	 lea	 ecx, DWORD PTR __Launcher$[ebp]
  0004d	e8 00 00 00 00	 call	 ??$?0V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@QAE@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@1@@Z ; std::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_LaunchPad<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > ><std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
  00052	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 260  : 	_Launcher._Launch(_Thr);

  00059	8b 45 08	 mov	 eax, DWORD PTR __Thr$[ebp]
  0005c	50		 push	 eax
  0005d	8d 4d dc	 lea	 ecx, DWORD PTR __Launcher$[ebp]
  00060	e8 00 00 00 00	 call	 ?_Launch@_Pad@std@@QAEXPAU_Thrd_imp_t@@@Z ; std::_Pad::_Launch

; 261  : 	}

  00065	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006c	8d 4d dc	 lea	 ecx, DWORD PTR __Launcher$[ebp]
  0006f	e8 00 00 00 00	 call	 ??1?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@QAE@XZ
  00074	52		 push	 edx
  00075	8b cd		 mov	 ecx, ebp
  00077	50		 push	 eax
  00078	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@Launch
  0007e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00083	58		 pop	 eax
  00084	5a		 pop	 edx
  00085	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008f	59		 pop	 ecx
  00090	5f		 pop	 edi
  00091	5e		 pop	 esi
  00092	5b		 pop	 ebx
  00093	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  00099	3b ec		 cmp	 ebp, esp
  0009b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c3		 ret	 0
$LN7@Launch:
  000a4	01 00 00 00	 DD	 1
  000a8	00 00 00 00	 DD	 $LN6@Launch
$LN6@Launch:
  000ac	dc ff ff ff	 DD	 -36			; ffffffdcH
  000b0	14 00 00 00	 DD	 20			; 00000014H
  000b4	00 00 00 00	 DD	 $LN4@Launch
$LN4@Launch:
  000b8	5f		 DB	 95			; 0000005fH
  000b9	4c		 DB	 76			; 0000004cH
  000ba	61		 DB	 97			; 00000061H
  000bb	75		 DB	 117			; 00000075H
  000bc	6e		 DB	 110			; 0000006eH
  000bd	63		 DB	 99			; 00000063H
  000be	68		 DB	 104			; 00000068H
  000bf	65		 DB	 101			; 00000065H
  000c0	72		 DB	 114			; 00000072H
  000c1	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR __Launcher$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_LaunchPad@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@QAE@XZ
__ehhandler$??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 14 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-236]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z ENDP ; std::_Launch<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAEPAXI@Z PROC ; std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@XZ
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0e		 je	 SHORT $LN2@scalar
  00033	6a 24		 push	 36			; 00000024H
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003e	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
??_G?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAEPAXI@Z ENDP ; std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@XZ PROC ; std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@XZ ENDP ; std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ PROC ; std::tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1?$tuple@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ ENDP ; std::tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ PROC ; std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ENDP ; std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ PROC ; std::_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ENDP ; std::_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~_Tuple_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?release@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ
_TEXT	SEGMENT
__Ans$ = -20						; size = 4
_this$ = -8						; size = 4
?release@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::release, COMDAT
; _this$ = ecx

; 1421 : 		{	// yield ownership of pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1422 : 		pointer _Ans = get();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?get@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::get
  0002b	89 45 ec	 mov	 DWORD PTR __Ans$[ebp], eax

; 1423 : 		this->_Myptr() = pointer();

  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Myptr@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myptr
  00036	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1424 : 		return (_Ans);

  0003c	8b 45 ec	 mov	 eax, DWORD PTR __Ans$[ebp]

; 1425 : 		}

  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
?release@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?get@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::get, COMDAT
; _this$ = ecx

; 1411 : 		{	// return pointer to object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1412 : 		return (this->_Myptr());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Myptr@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEABQAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myptr
  0002b	8b 00		 mov	 eax, DWORD PTR [eax]

; 1413 : 		}

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
?get@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??D?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*, COMDAT
; _this$ = ecx

; 1401 : 		{	// return reference to object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1402 : 		return (*get());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?get@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::get

; 1403 : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??D?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEAAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??1?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 1395 : 		{	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1396 : 		if (get() != pointer())

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?get@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::get
  0002b	85 c0		 test	 eax, eax
  0002d	74 18		 je	 SHORT $LN3@unique_ptr

; 1397 : 			this->get_deleter()(get());

  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?get@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::get
  00037	50		 push	 eax
  00038	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ?get_deleter@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEAAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@XZ ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::get_deleter
  00040	8b c8		 mov	 ecx, eax
  00042	e8 00 00 00 00	 call	 ??R?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@QBEXPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ; std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator()
$LN3@unique_ptr:

; 1398 : 		}

  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
??1?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@$$QAV01@@Z PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 1334 : 		{	// construct by moving _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@$$QAV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1332 : 		: _Mybase(_Right.release(),

  00042	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00045	e8 00 00 00 00	 call	 ?get_deleter@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEAAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@XZ ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::get_deleter
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ??$forward@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@0@AAU10@@Z ; std::forward<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  00050	83 c4 04	 add	 esp, 4
  00053	50		 push	 eax
  00054	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00057	e8 00 00 00 00	 call	 ?release@?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::release
  0005c	50		 push	 eax
  0005d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ??$?0PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@$$QAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@1@@Z ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >

; 1335 : 		}

  00065	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00068	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00072	59		 pop	 ecx
  00073	5f		 pop	 edi
  00074	5e		 pop	 esi
  00075	5b		 pop	 ebx
  00076	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0007c	3b ec		 cmp	 ebp, esp
  0007e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@$$QAV01@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@$$QAV01@@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@$$QAV01@@Z ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 1311 : 		{	// construct with pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1310 : 		: _Mybase(_Ptr)

  00042	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00045	50		 push	 eax
  00046	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ??$?0PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *>

; 1312 : 		static_assert(!is_pointer<_Dx>::value,
; 1313 : 			"unique_ptr constructed with null deleter pointer");
; 1314 : 		}

  0004e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00054	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005b	59		 pop	 ecx
  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00065	3b ec		 cmp	 ebp, esp
  00067	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QBEABQAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QBEABQAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Get_second, COMDAT
; _this$ = ecx

; 319  : 		{	// return const reference to second

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 320  : 		return (_Myval2);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 321  : 		}

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QBEABQAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAEAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAEAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Get_second, COMDAT
; _this$ = ecx

; 314  : 		{	// return reference to second

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 315  : 		return (_Myval2);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 316  : 		}

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAEAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAEAAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAEAAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Get_first, COMDAT
; _this$ = ecx

; 294  : 		{	// return reference to first

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 295  : 		return (*this);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 296  : 		}

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAEAAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Myptr@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEABQAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myptr@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEABQAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ PROC ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myptr, COMDAT
; _this$ = ecx

; 1267 : 		{	// return const reference to pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1268 : 		return (_Mypair._Get_second());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QBEABQAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Get_second

; 1269 : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?_Myptr@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QBEABQAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ENDP ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Myptr@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myptr@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ PROC ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myptr, COMDAT
; _this$ = ecx

; 1262 : 		{	// return reference to pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1263 : 		return (_Mypair._Get_second());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAEAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Get_second

; 1264 : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?_Myptr@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEAAPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@XZ ENDP ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?get_deleter@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEAAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get_deleter@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEAAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@XZ PROC ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::get_deleter, COMDAT
; _this$ = ecx

; 1252 : 		{	// return reference to deleter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1253 : 		return (_Mypair._Get_first());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@2@$00@std@@QAEAAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,1>::_Get_first

; 1254 : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?get_deleter@?$_Unique_ptr_base@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAEAAU?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@XZ ENDP ; std::_Unique_ptr_base<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??R?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@QBEXPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z
_TEXT	SEGMENT
tv68 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??R?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@QBEXPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z PROC ; std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator(), COMDAT
; _this$ = ecx

; 1192 : 		{	// delete a pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00013	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1193 : 		static_assert(0 < sizeof (_Ty),
; 1194 : 			"can't delete an incomplete type");
; 1195 : 		delete _Ptr;

  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  0002c	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  00032	89 8d 2c ff ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  00038	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR $T2[ebp], 0
  0003f	74 15		 je	 SHORT $LN3@operator
  00041	6a 01		 push	 1
  00043	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  00049	e8 00 00 00 00	 call	 ??_G?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAEPAXI@Z
  0004e	89 85 18 ff ff
	ff		 mov	 DWORD PTR tv68[ebp], eax
  00054	eb 0a		 jmp	 SHORT $LN2@operator
$LN3@operator:
  00056	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv68[ebp], 0
$LN2@operator:

; 1196 : 		}

  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c2 04 00	 ret	 4
??R?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@std@@QBEXPAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ENDP ; std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z
_TEXT	SEGMENT
tv86 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
$T4 = -212						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
_<_Args_2>$ = 20					; size = 4
??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z PROC ; std::make_unique<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT

; 1629 : 	{	// make a unique_ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00031	33 c5		 xor	 eax, ebp
  00033	50		 push	 eax
  00034	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00037	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003d	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0

; 1630 : 	return (unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...)));

  00047	6a 24		 push	 36			; 00000024H
  00049	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0004e	83 c4 04	 add	 esp, 4
  00051	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00057	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005e	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  00065	74 3a		 je	 SHORT $LN3@make_uniqu
  00067	8b 45 14	 mov	 eax, DWORD PTR _<_Args_2>$[ebp]
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  00070	83 c4 04	 add	 esp, 4
  00073	50		 push	 eax
  00074	8b 4d 10	 mov	 ecx, DWORD PTR _<_Args_1>$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ??$forward@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z ; std::forward<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>
  0007d	83 c4 04	 add	 esp, 4
  00080	50		 push	 eax
  00081	8b 55 0c	 mov	 edx, DWORD PTR _<_Args_0>$[ebp]
  00084	52		 push	 edx
  00085	e8 00 00 00 00	 call	 ??$forward@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YAA6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZA6AX01@Z@Z ; std::forward<void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
  0008a	83 c4 04	 add	 esp, 4
  0008d	50		 push	 eax
  0008e	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  00094	e8 00 00 00 00	 call	 ??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@$0A@@?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z ; std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>
  00099	89 85 0c ff ff
	ff		 mov	 DWORD PTR tv86[ebp], eax
  0009f	eb 0a		 jmp	 SHORT $LN4@make_uniqu
$LN3@make_uniqu:
  000a1	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv86[ebp], 0
$LN4@make_uniqu:
  000ab	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR tv86[ebp]
  000b1	89 85 2c ff ff
	ff		 mov	 DWORD PTR $T4[ebp], eax
  000b7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000be	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR $T4[ebp]
  000c4	51		 push	 ecx
  000c5	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000c8	e8 00 00 00 00	 call	 ??0?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@PAV?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@1@@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  000cd	8b 95 14 ff ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  000d3	83 ca 01	 or	 edx, 1
  000d6	89 95 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
  000dc	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1631 : 	}

  000df	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e9	59		 pop	 ecx
  000ea	5f		 pop	 edi
  000eb	5e		 pop	 esi
  000ec	5b		 pop	 ebx
  000ed	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  000f3	3b ec		 cmp	 ebp, esp
  000f5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000fa	8b e5		 mov	 esp, ebp
  000fc	5d		 pop	 ebp
  000fd	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z$0:
  00000	6a 24		 push	 36			; 00000024H
  00002	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__ehhandler$??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z
  0002b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z ENDP ; std::make_unique<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z PROC ; std::forward<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z ENDP ; std::forward<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YAA6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZA6AX01@Z@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YAA6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZA6AX01@Z@Z PROC ; std::forward<void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YAA6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZA6AX01@Z@Z ENDP ; std::forward<void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$?0VCPerson@@@?$_Ptr_base@VCContact@@@std@@QAE@$$QAV?$_Ptr_base@VCPerson@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??$?0VCPerson@@@?$_Ptr_base@VCContact@@@std@@QAE@$$QAV?$_Ptr_base@VCPerson@@@1@@Z PROC ; std::_Ptr_base<CContact>::_Ptr_base<CContact><CPerson>, COMDAT
; _this$ = ecx

; 287  : 		{	// construct _Ptr_base object that takes resource from _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 286  : 		: _Ptr(_Right._Ptr), _Rep(_Right._Rep)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00029	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002b	89 10		 mov	 DWORD PTR [eax], edx
  0002d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00033	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00036	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 288  : 		_Right._Ptr = 0;

  00039	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0003c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 289  : 		_Right._Rep = 0;

  00042	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00045	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 290  : 		}

  0004c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??$?0VCPerson@@@?$_Ptr_base@VCContact@@@std@@QAE@$$QAV?$_Ptr_base@VCPerson@@@1@@Z ENDP ; std::_Ptr_base<CContact>::_Ptr_base<CContact><CPerson>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAV?$shared_ptr@VCPerson@@@std@@@std@@YA$$QAV?$shared_ptr@VCPerson@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$shared_ptr@VCPerson@@@std@@@std@@YA$$QAV?$shared_ptr@VCPerson@@@0@AAV10@@Z PROC ; std::move<std::shared_ptr<CPerson> &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$move@AAV?$shared_ptr@VCPerson@@@std@@@std@@YA$$QAV?$shared_ptr@VCPerson@@@0@AAV10@@Z ENDP ; std::move<std::shared_ptr<CPerson> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$_Resetp0@VCPerson@@@?$shared_ptr@VCPerson@@@std@@QAEXPAVCPerson@@PAV_Ref_count_base@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Px$ = 8						; size = 4
__Rx$ = 12						; size = 4
??$_Resetp0@VCPerson@@@?$shared_ptr@VCPerson@@@std@@QAEXPAVCPerson@@PAV_Ref_count_base@1@@Z PROC ; std::shared_ptr<CPerson>::_Resetp0<CPerson>, COMDAT
; _this$ = ecx

; 694  : 		{	// release resource and take ownership of _Px

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 695  : 		this->_Reset0(_Px, _Rx);

  00023	8b 45 0c	 mov	 eax, DWORD PTR __Rx$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR __Px$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Reset0@?$_Ptr_base@VCPerson@@@std@@QAEXPAVCPerson@@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<CPerson>::_Reset0

; 696  : 		_Enable_shared(_Px, _Rx);

  00033	8b 45 0c	 mov	 eax, DWORD PTR __Rx$[ebp]
  00036	50		 push	 eax
  00037	8b 4d 08	 mov	 ecx, DWORD PTR __Px$[ebp]
  0003a	51		 push	 ecx
  0003b	e8 00 00 00 00	 call	 ?_Enable_shared@std@@YAXPDX0@Z ; std::_Enable_shared
  00040	83 c4 08	 add	 esp, 8

; 697  : 		}

  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 08 00	 ret	 8
??$_Resetp0@VCPerson@@@?$shared_ptr@VCPerson@@@std@@QAEXPAVCPerson@@PAV_Ref_count_base@1@@Z ENDP ; std::shared_ptr<CPerson>::_Resetp0<CPerson>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z
_TEXT	SEGMENT
tv129 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_<_Args_0>$ = 8						; size = 4
??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z PROC ; std::_Ref_count_obj<CPerson>::_Ref_count_obj<CPerson><bool>, COMDAT
; _this$ = ecx

; 900  : 		{	// construct from argument list

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 899  : 		: _Ref_count_base()

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0_Ref_count_base@std@@IAE@XZ ; std::_Ref_count_base::_Ref_count_base
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 900  : 		{	// construct from argument list

  00051	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00054	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$_Ref_count_obj@VCPerson@@@std@@6B@

; 901  : 		::new ((void *)&_Storage) _Ty(_STD forward<_Types>(_Args)...);

  0005a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	83 c0 0c	 add	 eax, 12			; 0000000cH
  00060	50		 push	 eax
  00061	68 20 01 00 00	 push	 288			; 00000120H
  00066	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0006b	83 c4 08	 add	 esp, 8
  0006e	89 85 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  00074	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00078	83 bd 14 ff ff
	ff 00		 cmp	 DWORD PTR $T2[ebp], 0
  0007f	74 25		 je	 SHORT $LN3@Ref_count_
  00081	8b 4d 08	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00084	51		 push	 ecx
  00085	e8 00 00 00 00	 call	 ??$forward@_N@std@@YA$$QA_NAA_N@Z ; std::forward<bool>
  0008a	83 c4 04	 add	 esp, 4
  0008d	8a 10		 mov	 dl, BYTE PTR [eax]
  0008f	0f b6 c2	 movzx	 eax, dl
  00092	50		 push	 eax
  00093	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  00099	e8 00 00 00 00	 call	 ??0CPerson@@QAE@_N@Z	; CPerson::CPerson
  0009e	89 85 0c ff ff
	ff		 mov	 DWORD PTR tv129[ebp], eax
  000a4	eb 0a		 jmp	 SHORT $LN4@Ref_count_
$LN3@Ref_count_:
  000a6	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv129[ebp], 0
$LN4@Ref_count_:
  000b0	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR tv129[ebp]
  000b6	89 8d 20 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], ecx
  000bc	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0

; 902  : 		}

  000c0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c7	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000cd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d4	59		 pop	 ecx
  000d5	5f		 pop	 edi
  000d6	5e		 pop	 esi
  000d7	5b		 pop	 ebx
  000d8	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  000de	3b ec		 cmp	 ebp, esp
  000e0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e5	8b e5		 mov	 esp, ebp
  000e7	5d		 pop	 ebp
  000e8	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_Ref_count_base@std@@UAE@XZ ; std::_Ref_count_base::~_Ref_count_base
__unwindfunclet$??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z$1:
  00008	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0000b	83 c0 0c	 add	 eax, 12			; 0000000cH
  0000e	50		 push	 eax
  0000f	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0001b	83 c4 08	 add	 esp, 8
  0001e	c3		 ret	 0
__ehhandler$??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z:
  0001f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00023	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00026	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  0002c	33 c8		 xor	 ecx, eax
  0002e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00033	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z
  00038	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z ENDP ; std::_Ref_count_obj<CPerson>::_Ref_count_obj<CPerson><bool>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$_Ref_count_obj@VCPerson@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$_Ref_count_obj@VCPerson@@@std@@UAEPAXI@Z PROC	; std::_Ref_count_obj<CPerson>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$_Ref_count_obj@VCPerson@@@std@@UAE@XZ
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 11		 je	 SHORT $LN2@scalar
  00033	68 2c 01 00 00	 push	 300			; 0000012cH
  00038	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00041	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00044	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
??_G?$_Ref_count_obj@VCPerson@@@std@@UAEPAXI@Z ENDP	; std::_Ref_count_obj<CPerson>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Ref_count_obj@VCPerson@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Ref_count_obj@VCPerson@@@std@@UAE@XZ PROC		; std::_Ref_count_obj<CPerson>::~_Ref_count_obj<CPerson>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1_Ref_count_base@std@@UAE@XZ ; std::_Ref_count_base::~_Ref_count_base
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1?$_Ref_count_obj@VCPerson@@@std@@UAE@XZ ENDP		; std::_Ref_count_obj<CPerson>::~_Ref_count_obj<CPerson>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Delete_this@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ
_TEXT	SEGMENT
tv74 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
?_Delete_this@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ PROC ; std::_Ref_count_obj<CPerson>::_Delete_this, COMDAT
; _this$ = ecx

; 917  : 		{	// destroy self

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00013	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 918  : 		delete this;

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  0002c	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  00032	89 8d 2c ff ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  00038	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR $T2[ebp], 0
  0003f	74 26		 je	 SHORT $LN3@Delete_thi
  00041	8b f4		 mov	 esi, esp
  00043	6a 01		 push	 1
  00045	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  0004b	8b 02		 mov	 eax, DWORD PTR [edx]
  0004d	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  00053	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00056	ff d2		 call	 edx
  00058	3b f4		 cmp	 esi, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	89 85 18 ff ff
	ff		 mov	 DWORD PTR tv74[ebp], eax
  00065	eb 0a		 jmp	 SHORT $LN2@Delete_thi
$LN3@Delete_thi:
  00067	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
$LN2@Delete_thi:

; 919  : 		}

  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	5b		 pop	 ebx
  00074	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  0007a	3b ec		 cmp	 ebp, esp
  0007c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c3		 ret	 0
?_Delete_this@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ ENDP ; std::_Ref_count_obj<CPerson>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Destroy@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ
_TEXT	SEGMENT
tv71 = -220						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Destroy@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ PROC	; std::_Ref_count_obj<CPerson>::_Destroy, COMDAT
; _this$ = ecx

; 912  : 		{	// destroy managed resource

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Destroy@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00021	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 913  : 		_Getptr()->~_Ty();

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?_Getptr@?$_Ref_count_obj@VCPerson@@@std@@QBEPAVCPerson@@XZ ; std::_Ref_count_obj<CPerson>::_Getptr
  0004a	89 85 24 ff ff
	ff		 mov	 DWORD PTR tv71[ebp], eax
  00050	8b f4		 mov	 esi, esp
  00052	6a 00		 push	 0
  00054	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv71[ebp]
  0005a	8b 10		 mov	 edx, DWORD PTR [eax]
  0005c	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR tv71[ebp]
  00062	8b 02		 mov	 eax, DWORD PTR [edx]
  00064	ff d0		 call	 eax
  00066	3b f4		 cmp	 esi, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 914  : 		}

  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00077	59		 pop	 ecx
  00078	5f		 pop	 edi
  00079	5e		 pop	 esi
  0007a	5b		 pop	 ebx
  0007b	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00081	3b ec		 cmp	 ebp, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Destroy@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 20 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-224]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Destroy@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Destroy@?$_Ref_count_obj@VCPerson@@@std@@EAEXXZ ENDP	; std::_Ref_count_obj<CPerson>::_Destroy
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Getptr@?$_Ref_count_obj@VCPerson@@@std@@QBEPAVCPerson@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getptr@?$_Ref_count_obj@VCPerson@@@std@@QBEPAVCPerson@@XZ PROC ; std::_Ref_count_obj<CPerson>::_Getptr, COMDAT
; _this$ = ecx

; 906  : 		{	// get pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 907  : 		return ((_Ty *)&_Storage);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c0 0c	 add	 eax, 12			; 0000000cH

; 908  : 		}

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?_Getptr@?$_Ref_count_obj@VCPerson@@@std@@QBEPAVCPerson@@XZ ENDP ; std::_Ref_count_obj<CPerson>::_Getptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??$load_override@VCContact@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVCContact@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$load_override@VCContact@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVCContact@@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<CContact>, COMDAT
; _this$ = ecx

; 81   :     void load_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 82   :         basic_text_iarchive<Archive>::load_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??$load_override@VCContact@@@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVCContact@@@Z ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override<CContact>

; 83   :     }

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??$load_override@VCContact@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVCContact@@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$?0VCCompany@@@?$_Ptr_base@VCContact@@@std@@QAE@$$QAV?$_Ptr_base@VCCompany@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??$?0VCCompany@@@?$_Ptr_base@VCContact@@@std@@QAE@$$QAV?$_Ptr_base@VCCompany@@@1@@Z PROC ; std::_Ptr_base<CContact>::_Ptr_base<CContact><CCompany>, COMDAT
; _this$ = ecx

; 287  : 		{	// construct _Ptr_base object that takes resource from _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 286  : 		: _Ptr(_Right._Ptr), _Rep(_Right._Rep)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00029	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002b	89 10		 mov	 DWORD PTR [eax], edx
  0002d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00033	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00036	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 288  : 		_Right._Ptr = 0;

  00039	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0003c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 289  : 		_Right._Rep = 0;

  00042	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00045	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 290  : 		}

  0004c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??$?0VCCompany@@@?$_Ptr_base@VCContact@@@std@@QAE@$$QAV?$_Ptr_base@VCCompany@@@1@@Z ENDP ; std::_Ptr_base<CContact>::_Ptr_base<CContact><CCompany>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAV?$shared_ptr@VCCompany@@@std@@@std@@YA$$QAV?$shared_ptr@VCCompany@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$shared_ptr@VCCompany@@@std@@@std@@YA$$QAV?$shared_ptr@VCCompany@@@0@AAV10@@Z PROC ; std::move<std::shared_ptr<CCompany> &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$move@AAV?$shared_ptr@VCCompany@@@std@@@std@@YA$$QAV?$shared_ptr@VCCompany@@@0@AAV10@@Z ENDP ; std::move<std::shared_ptr<CCompany> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$_Resetp0@VCCompany@@@?$shared_ptr@VCCompany@@@std@@QAEXPAVCCompany@@PAV_Ref_count_base@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Px$ = 8						; size = 4
__Rx$ = 12						; size = 4
??$_Resetp0@VCCompany@@@?$shared_ptr@VCCompany@@@std@@QAEXPAVCCompany@@PAV_Ref_count_base@1@@Z PROC ; std::shared_ptr<CCompany>::_Resetp0<CCompany>, COMDAT
; _this$ = ecx

; 694  : 		{	// release resource and take ownership of _Px

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 695  : 		this->_Reset0(_Px, _Rx);

  00023	8b 45 0c	 mov	 eax, DWORD PTR __Rx$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR __Px$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Reset0@?$_Ptr_base@VCCompany@@@std@@QAEXPAVCCompany@@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<CCompany>::_Reset0

; 696  : 		_Enable_shared(_Px, _Rx);

  00033	8b 45 0c	 mov	 eax, DWORD PTR __Rx$[ebp]
  00036	50		 push	 eax
  00037	8b 4d 08	 mov	 ecx, DWORD PTR __Px$[ebp]
  0003a	51		 push	 ecx
  0003b	e8 00 00 00 00	 call	 ?_Enable_shared@std@@YAXPDX0@Z ; std::_Enable_shared
  00040	83 c4 08	 add	 esp, 8

; 697  : 		}

  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 08 00	 ret	 8
??$_Resetp0@VCCompany@@@?$shared_ptr@VCCompany@@@std@@QAEXPAVCCompany@@PAV_Ref_count_base@1@@Z ENDP ; std::shared_ptr<CCompany>::_Resetp0<CCompany>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z
_TEXT	SEGMENT
tv129 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_<_Args_0>$ = 8						; size = 4
??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z PROC ; std::_Ref_count_obj<CCompany>::_Ref_count_obj<CCompany><bool>, COMDAT
; _this$ = ecx

; 900  : 		{	// construct from argument list

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 899  : 		: _Ref_count_base()

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0_Ref_count_base@std@@IAE@XZ ; std::_Ref_count_base::_Ref_count_base
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 900  : 		{	// construct from argument list

  00051	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00054	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$_Ref_count_obj@VCCompany@@@std@@6B@

; 901  : 		::new ((void *)&_Storage) _Ty(_STD forward<_Types>(_Args)...);

  0005a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	83 c0 0c	 add	 eax, 12			; 0000000cH
  00060	50		 push	 eax
  00061	68 e4 00 00 00	 push	 228			; 000000e4H
  00066	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0006b	83 c4 08	 add	 esp, 8
  0006e	89 85 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  00074	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00078	83 bd 14 ff ff
	ff 00		 cmp	 DWORD PTR $T2[ebp], 0
  0007f	74 25		 je	 SHORT $LN3@Ref_count_
  00081	8b 4d 08	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00084	51		 push	 ecx
  00085	e8 00 00 00 00	 call	 ??$forward@_N@std@@YA$$QA_NAA_N@Z ; std::forward<bool>
  0008a	83 c4 04	 add	 esp, 4
  0008d	8a 10		 mov	 dl, BYTE PTR [eax]
  0008f	0f b6 c2	 movzx	 eax, dl
  00092	50		 push	 eax
  00093	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  00099	e8 00 00 00 00	 call	 ??0CCompany@@QAE@_N@Z	; CCompany::CCompany
  0009e	89 85 0c ff ff
	ff		 mov	 DWORD PTR tv129[ebp], eax
  000a4	eb 0a		 jmp	 SHORT $LN4@Ref_count_
$LN3@Ref_count_:
  000a6	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv129[ebp], 0
$LN4@Ref_count_:
  000b0	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR tv129[ebp]
  000b6	89 8d 20 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], ecx
  000bc	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0

; 902  : 		}

  000c0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c7	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000cd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d4	59		 pop	 ecx
  000d5	5f		 pop	 edi
  000d6	5e		 pop	 esi
  000d7	5b		 pop	 ebx
  000d8	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  000de	3b ec		 cmp	 ebp, esp
  000e0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e5	8b e5		 mov	 esp, ebp
  000e7	5d		 pop	 ebp
  000e8	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_Ref_count_base@std@@UAE@XZ ; std::_Ref_count_base::~_Ref_count_base
__unwindfunclet$??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z$1:
  00008	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0000b	83 c0 0c	 add	 eax, 12			; 0000000cH
  0000e	50		 push	 eax
  0000f	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0001b	83 c4 08	 add	 esp, 8
  0001e	c3		 ret	 0
__ehhandler$??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z:
  0001f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00023	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00026	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  0002c	33 c8		 xor	 ecx, eax
  0002e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00033	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z
  00038	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z ENDP ; std::_Ref_count_obj<CCompany>::_Ref_count_obj<CCompany><bool>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$_Ref_count_obj@VCCompany@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$_Ref_count_obj@VCCompany@@@std@@UAEPAXI@Z PROC	; std::_Ref_count_obj<CCompany>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$_Ref_count_obj@VCCompany@@@std@@UAE@XZ
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 11		 je	 SHORT $LN2@scalar
  00033	68 f0 00 00 00	 push	 240			; 000000f0H
  00038	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00041	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00044	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
??_G?$_Ref_count_obj@VCCompany@@@std@@UAEPAXI@Z ENDP	; std::_Ref_count_obj<CCompany>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Ref_count_obj@VCCompany@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Ref_count_obj@VCCompany@@@std@@UAE@XZ PROC	; std::_Ref_count_obj<CCompany>::~_Ref_count_obj<CCompany>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1_Ref_count_base@std@@UAE@XZ ; std::_Ref_count_base::~_Ref_count_base
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1?$_Ref_count_obj@VCCompany@@@std@@UAE@XZ ENDP	; std::_Ref_count_obj<CCompany>::~_Ref_count_obj<CCompany>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Delete_this@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ
_TEXT	SEGMENT
tv74 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
?_Delete_this@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ PROC ; std::_Ref_count_obj<CCompany>::_Delete_this, COMDAT
; _this$ = ecx

; 917  : 		{	// destroy self

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00013	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 918  : 		delete this;

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  0002c	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  00032	89 8d 2c ff ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  00038	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR $T2[ebp], 0
  0003f	74 26		 je	 SHORT $LN3@Delete_thi
  00041	8b f4		 mov	 esi, esp
  00043	6a 01		 push	 1
  00045	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  0004b	8b 02		 mov	 eax, DWORD PTR [edx]
  0004d	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  00053	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00056	ff d2		 call	 edx
  00058	3b f4		 cmp	 esi, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	89 85 18 ff ff
	ff		 mov	 DWORD PTR tv74[ebp], eax
  00065	eb 0a		 jmp	 SHORT $LN2@Delete_thi
$LN3@Delete_thi:
  00067	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
$LN2@Delete_thi:

; 919  : 		}

  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	5b		 pop	 ebx
  00074	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  0007a	3b ec		 cmp	 ebp, esp
  0007c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c3		 ret	 0
?_Delete_this@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ ENDP ; std::_Ref_count_obj<CCompany>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Destroy@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ
_TEXT	SEGMENT
tv71 = -220						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Destroy@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ PROC	; std::_Ref_count_obj<CCompany>::_Destroy, COMDAT
; _this$ = ecx

; 912  : 		{	// destroy managed resource

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Destroy@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00021	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 913  : 		_Getptr()->~_Ty();

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?_Getptr@?$_Ref_count_obj@VCCompany@@@std@@QBEPAVCCompany@@XZ ; std::_Ref_count_obj<CCompany>::_Getptr
  0004a	89 85 24 ff ff
	ff		 mov	 DWORD PTR tv71[ebp], eax
  00050	8b f4		 mov	 esi, esp
  00052	6a 00		 push	 0
  00054	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv71[ebp]
  0005a	8b 10		 mov	 edx, DWORD PTR [eax]
  0005c	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR tv71[ebp]
  00062	8b 02		 mov	 eax, DWORD PTR [edx]
  00064	ff d0		 call	 eax
  00066	3b f4		 cmp	 esi, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 914  : 		}

  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00077	59		 pop	 ecx
  00078	5f		 pop	 edi
  00079	5e		 pop	 esi
  0007a	5b		 pop	 ebx
  0007b	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00081	3b ec		 cmp	 ebp, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Destroy@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 20 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-224]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Destroy@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Destroy@?$_Ref_count_obj@VCCompany@@@std@@EAEXXZ ENDP	; std::_Ref_count_obj<CCompany>::_Destroy
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Getptr@?$_Ref_count_obj@VCCompany@@@std@@QBEPAVCCompany@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getptr@?$_Ref_count_obj@VCCompany@@@std@@QBEPAVCCompany@@XZ PROC ; std::_Ref_count_obj<CCompany>::_Getptr, COMDAT
; _this$ = ecx

; 906  : 		{	// get pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 907  : 		return ((_Ty *)&_Storage);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c0 0c	 add	 eax, 12			; 0000000cH

; 908  : 		}

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?_Getptr@?$_Ref_count_obj@VCCompany@@@std@@QBEPAVCCompany@@XZ ENDP ; std::_Ref_count_obj<CCompany>::_Getptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ??$save_override@$$CBVCContact@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVCContact@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$save_override@$$CBVCContact@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVCContact@@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<CContact const >, COMDAT
; _this$ = ecx

; 82   :     void save_override(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 83   :         this->detail_common_oarchive::save_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??$save_override@$$CBVCContact@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVCContact@@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<CContact const >

; 84   :     }

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??$save_override@$$CBVCContact@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVCContact@@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<CContact const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 724  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 725  : 	return (__builtin_addressof(_Val));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 726  : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z PROC ; std::pointer_traits<std::_Container_proxy *>::pointer_to, COMDAT

; 279  : 		{	// convert raw reference to pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 280  : 		return (_STD addressof(_Val));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ; std::addressof<std::_Container_proxy>
  00027	83 c4 04	 add	 esp, 4

; 281  : 		}

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z ENDP ; std::pointer_traits<std::_Container_proxy *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 724  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 725  : 	return (__builtin_addressof(_Val));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 726  : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??$?0AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<char> > &>, COMDAT
; _this$ = ecx

; 952  : 		{	// construct from a related allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

  00023	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<char> > &>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>

; 953  : 		}

  00038	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??$?0AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z PROC	; std::pointer_traits<char *>::pointer_to, COMDAT

; 279  : 		{	// convert raw reference to pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 280  : 		return (_STD addressof(_Val));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$addressof@D@std@@YAPADAAD@Z ; std::addressof<char>
  00027	83 c4 04	 add	 esp, 4

; 281  : 		}

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z ENDP	; std::pointer_traits<char *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Unfancy@$$CBD@std@@YAPBDPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@$$CBD@std@@YAPBDPBD@Z PROC			; std::_Unfancy<char const >, COMDAT

; 739  : 	{	// do nothing for plain pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 740  : 	return (_Ptr);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 741  : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$_Unfancy@$$CBD@std@@YAPBDPBD@Z ENDP			; std::_Unfancy<char const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Umove@PAV?$shared_ptr@VCContact@@@std@@@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEPAV?$shared_ptr@VCContact@@@1@PAV21@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAV?$shared_ptr@VCContact@@@std@@@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEPAV?$shared_ptr@VCContact@@@1@PAV21@00@Z PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Umove<std::shared_ptr<CContact> *>, COMDAT
; _this$ = ecx

; 1658 : 		{	// move initializing [_First, _Last), using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1659 : 		return (_Uninitialized_move(_First, _Last,

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
  0002b	50		 push	 eax
  0002c	8b 45 10	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0002f	50		 push	 eax
  00030	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAV?$shared_ptr@VCContact@@@std@@PAV12@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *,std::allocator<std::shared_ptr<CContact> > >
  0003d	83 c4 10	 add	 esp, 16			; 00000010H

; 1660 : 			_Ptr, this->_Getal()));
; 1661 : 		}

  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAV?$shared_ptr@VCContact@@@std@@@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEPAV?$shared_ptr@VCContact@@@1@PAV21@00@Z ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Umove<std::shared_ptr<CContact> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 995  : 		_Mytraits::construct(*this, _Ptr,

  00023	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 739  : 	{	// do nothing for plain pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 740  : 	return (_Ptr);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 741  : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx

; 1002 : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1003 : 		_Mytraits::destroy(*this, _Ptr);

  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
  00030	83 c4 08	 add	 esp, 8

; 1004 : 		}

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??$?0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > > &>, COMDAT
; _this$ = ecx

; 952  : 		{	// construct from a related allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

  00023	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > > &>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ??$?0V?$shared_ptr@VCContact@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::shared_ptr<CContact> >

; 953  : 		}

  00038	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??$?0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate, COMDAT
; _this$ = ecx

; 986  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 987  : 		_Mybase::deallocate(_Ptr, _Count);

  00023	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate

; 988  : 		}

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate, COMDAT
; _this$ = ecx

; 975  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 976  : 		return (_Mybase::allocate(_Count));

  00023	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate

; 977  : 		}

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address, COMDAT
; _this$ = ecx

; 925  : 		{	// return address of mutable _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 926  : 		return (pointer_traits<pointer>::pointer_to(_Val));

  00023	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z ; std::pointer_traits<std::_Container_proxy *>::pointer_to
  0002c	83 c4 04	 add	 esp, 4

; 927  : 		}

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx

; 724  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 725  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

  00023	6a 01		 push	 1
  00025	6a 08		 push	 8
  00027	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ?_Allocate@std@@YAPAXII_N@Z ; std::_Allocate
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH

; 726  : 		}

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx

; 719  : 		{	// deallocate object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 720  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  00023	6a 08		 push	 8
  00025	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00028	50		 push	 eax
  00029	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002c	51		 push	 ecx
  0002d	e8 00 00 00 00	 call	 ?_Deallocate@std@@YAXPAXII@Z ; std::_Deallocate
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH

; 721  : 		}

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$swap@PAVCContact@@X@std@@YAXAAPAVCContact@@0@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@PAVCContact@@X@std@@YAXAAPAVCContact@@0@Z PROC	; std::swap<CContact *,void>, COMDAT

; 48   : 	{	// exchange values stored at _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 49   : 	_Ty _Tmp = _STD move(_Left);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$move@AAPAVCContact@@@std@@YA$$QAPAVCContact@@AAPAV1@@Z ; std::move<CContact * &>
  00027	83 c4 04	 add	 esp, 4
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	89 4d f8	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 50   : 	_Left = _STD move(_Right);

  0002f	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$move@AAPAVCContact@@@std@@YA$$QAPAVCContact@@AAPAV1@@Z ; std::move<CContact * &>
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0003e	8b 10		 mov	 edx, DWORD PTR [eax]
  00040	89 11		 mov	 DWORD PTR [ecx], edx

; 51   : 	_Right = _STD move(_Tmp);

  00042	8d 45 f8	 lea	 eax, DWORD PTR __Tmp$[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ??$move@AAPAVCContact@@@std@@YA$$QAPAVCContact@@AAPAV1@@Z ; std::move<CContact * &>
  0004b	83 c4 04	 add	 esp, 4
  0004e	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  00051	8b 10		 mov	 edx, DWORD PTR [eax]
  00053	89 11		 mov	 DWORD PTR [ecx], edx

; 52   : 	}

  00055	52		 push	 edx
  00056	8b cd		 mov	 ecx, ebp
  00058	50		 push	 eax
  00059	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@swap
  0005f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00064	58		 pop	 eax
  00065	5a		 pop	 edx
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx
  00069	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006f	3b ec		 cmp	 ebp, esp
  00071	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
  0007a	66 90		 npad	 2
$LN5@swap:
  0007c	01 00 00 00	 DD	 1
  00080	00 00 00 00	 DD	 $LN4@swap
$LN4@swap:
  00084	f8 ff ff ff	 DD	 -8			; fffffff8H
  00088	04 00 00 00	 DD	 4
  0008c	00 00 00 00	 DD	 $LN3@swap
$LN3@swap:
  00090	5f		 DB	 95			; 0000005fH
  00091	54		 DB	 84			; 00000054H
  00092	6d		 DB	 109			; 0000006dH
  00093	70		 DB	 112			; 00000070H
  00094	00		 DB	 0
??$swap@PAVCContact@@X@std@@YAXAAPAVCContact@@0@Z ENDP	; std::swap<CContact *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$swap@PAV_Ref_count_base@std@@X@std@@YAXAAPAV_Ref_count_base@0@0@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@PAV_Ref_count_base@std@@X@std@@YAXAAPAV_Ref_count_base@0@0@Z PROC ; std::swap<std::_Ref_count_base *,void>, COMDAT

; 48   : 	{	// exchange values stored at _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 49   : 	_Ty _Tmp = _STD move(_Left);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$move@AAPAV_Ref_count_base@std@@@std@@YA$$QAPAV_Ref_count_base@0@AAPAV10@@Z ; std::move<std::_Ref_count_base * &>
  00027	83 c4 04	 add	 esp, 4
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	89 4d f8	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 50   : 	_Left = _STD move(_Right);

  0002f	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$move@AAPAV_Ref_count_base@std@@@std@@YA$$QAPAV_Ref_count_base@0@AAPAV10@@Z ; std::move<std::_Ref_count_base * &>
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0003e	8b 10		 mov	 edx, DWORD PTR [eax]
  00040	89 11		 mov	 DWORD PTR [ecx], edx

; 51   : 	_Right = _STD move(_Tmp);

  00042	8d 45 f8	 lea	 eax, DWORD PTR __Tmp$[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ??$move@AAPAV_Ref_count_base@std@@@std@@YA$$QAPAV_Ref_count_base@0@AAPAV10@@Z ; std::move<std::_Ref_count_base * &>
  0004b	83 c4 04	 add	 esp, 4
  0004e	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  00051	8b 10		 mov	 edx, DWORD PTR [eax]
  00053	89 11		 mov	 DWORD PTR [ecx], edx

; 52   : 	}

  00055	52		 push	 edx
  00056	8b cd		 mov	 ecx, ebp
  00058	50		 push	 eax
  00059	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@swap
  0005f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00064	58		 pop	 eax
  00065	5a		 pop	 edx
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx
  00069	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006f	3b ec		 cmp	 ebp, esp
  00071	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
  0007a	66 90		 npad	 2
$LN5@swap:
  0007c	01 00 00 00	 DD	 1
  00080	00 00 00 00	 DD	 $LN4@swap
$LN4@swap:
  00084	f8 ff ff ff	 DD	 -8			; fffffff8H
  00088	04 00 00 00	 DD	 4
  0008c	00 00 00 00	 DD	 $LN3@swap
$LN3@swap:
  00090	5f		 DB	 95			; 0000005fH
  00091	54		 DB	 84			; 00000054H
  00092	6d		 DB	 109			; 0000006dH
  00093	70		 DB	 112			; 00000070H
  00094	00		 DB	 0
??$swap@PAV_Ref_count_base@std@@X@std@@YAXAAPAV_Ref_count_base@0@0@Z ENDP ; std::swap<std::_Ref_count_base *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 995  : 		_Mytraits::construct(*this, _Ptr,

  00023	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@AAPAD@std@@YAAAPADAAPAD@Z ; std::forward<char * &>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_pointer_if@$$CBD@std@@YAX_NPBDPB_WI@Z
_TEXT	SEGMENT
__Test$ = 8						; size = 1
__Ptr$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_pointer_if@$$CBD@std@@YAX_NPBDPB_WI@Z PROC	; std::_Debug_pointer_if<char const >, COMDAT

; 937  : 	{	// conditionally test pointer for non-singularity, pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 938  : 	if (_Test && _Ptr == 0)

  0001e	0f b6 45 08	 movzx	 eax, BYTE PTR __Test$[ebp]
  00022	85 c0		 test	 eax, eax
  00024	74 25		 je	 SHORT $LN1@Debug_poin
  00026	83 7d 0c 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0002a	75 1f		 jne	 SHORT $LN1@Debug_poin

; 939  : 		_DEBUG_ERROR2("invalid null pointer", _File, _Line);

  0002c	8b f4		 mov	 esi, esp
  0002e	8b 45 14	 mov	 eax, DWORD PTR __Line$[ebp]
  00031	50		 push	 eax
  00032	8b 4d 10	 mov	 ecx, DWORD PTR __File$[ebp]
  00035	51		 push	 ecx
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00041	83 c4 0c	 add	 esp, 12			; 0000000cH
  00044	3b f4		 cmp	 esi, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@Debug_poin:

; 940  : 	}

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
??$_Debug_pointer_if@$$CBD@std@@YAX_NPBDPB_WI@Z ENDP	; std::_Debug_pointer_if<char const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPADPAD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@D@std@@YAPADPAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 739  : 	{	// do nothing for plain pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 740  : 	return (_Ptr);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 741  : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$_Unfancy@D@std@@YAPADPAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 1002 : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1003 : 		_Mytraits::destroy(*this, _Ptr);

  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
  00030	83 c4 08	 add	 esp, 8

; 1004 : 		}

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@PAD@std@@YAPAPADAAPAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAD@std@@YAPAPADAAPAD@Z PROC		; std::addressof<char *>, COMDAT

; 724  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 725  : 	return (__builtin_addressof(_Val));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 726  : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$addressof@PAD@std@@YAPAPADAAPAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT
; _this$ = ecx

; 280  : 		{	// construct from forwarded values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 279  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 281  : 		}

  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003f	3b ec		 cmp	 ebp, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAV?$allocator@D@1@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> >, COMDAT
; _this$ = ecx

; 952  : 		{	// construct from a related allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

  00023	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QAE@ABV01@@Z ; std::allocator<char>::allocator<char>

; 953  : 		}

  00038	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAV?$allocator@D@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@PAV?$shared_ptr@VCContact@@@2@@std@@YAXPAV?$shared_ptr@VCContact@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@PAV?$shared_ptr@VCContact@@@2@@std@@YAXPAV?$shared_ptr@VCContact@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::shared_ptr<CContact> >,std::shared_ptr<CContact> *>, COMDAT

; 1114 : 	{	// destroy [_First, _Last), choose optimization

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1115 : 		// note that this is an optimization for debug mode codegen;
; 1116 : 		// in release mode the BE removes all of this
; 1117 : 	typedef typename _Alloc::value_type _Val;
; 1118 : 	_Destroy_range1(_First, _Last, _Al, typename conjunction<

  0001e	0f b6 85 3b ff
	ff ff		 movzx	 eax, BYTE PTR $T1[ebp]
  00025	50		 push	 eax
  00026	8b 4d 10	 mov	 ecx, DWORD PTR __Al$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Destroy_range1@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@PAV?$shared_ptr@VCContact@@@2@@std@@YAXPAV?$shared_ptr@VCContact@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Destroy_range1<std::allocator<std::shared_ptr<CContact> >,std::shared_ptr<CContact> *>
  00037	83 c4 10	 add	 esp, 16			; 00000010H

; 1119 : 		is_trivially_destructible<_Val>,
; 1120 : 		_Uses_default_destroy<_Alloc, _Val *>>::type());
; 1121 : 	}

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??$_Destroy_range@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@PAV?$shared_ptr@VCContact@@@2@@std@@YAXPAV?$shared_ptr@VCContact@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::shared_ptr<CContact> >,std::shared_ptr<CContact> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1><>, COMDAT
; _this$ = ecx

; 280  : 		{	// construct from forwarded values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 279  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >

; 281  : 		}

  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003f	3b ec		 cmp	 ebp, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z
_TEXT	SEGMENT
$T2 = -292						; size = 4
$T3 = -280						; size = 12
__Pfmod$4 = -68						; size = 4
__Pf$5 = -56						; size = 4
__Id$6 = -44						; size = 4
__Psave$7 = -32						; size = 4
__Lock$8 = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Loc$ = 8						; size = 4
??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z PROC ; std::use_facet<std::codecvt<char,char,_Mbstatet> >, COMDAT

; 553  : 	{	// get facet reference from locale

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 1c 01 00
	00		 sub	 esp, 284		; 0000011cH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8d bd d8 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-296]
  00020	b9 47 00 00 00	 mov	 ecx, 71			; 00000047H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00031	33 c5		 xor	 eax, ebp
  00033	50		 push	 eax
  00034	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00037	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 554  :  #if _NO_LOCALES
; 555  : 	static _Wrap_facet<_Facet> _Wfac;
; 556  : 	return (*(_Facet *)&_Wfac);
; 557  : 
; 558  :  #else /* _NO_LOCALES */
; 559  : 	_BEGIN_LOCK(_LOCK_LOCALE)	// the thread lock, make get atomic

  0003d	8b f4		 mov	 esi, esp
  0003f	6a 00		 push	 0
  00041	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$8[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 560  : 		const locale::facet *_Psave =
; 561  : 			_Facetptr<_Facet>::_Psave;	// static pointer to lazy facet

  00058	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::codecvt<char,char,_Mbstatet> >::_Psave
  0005d	89 45 e0	 mov	 DWORD PTR __Psave$7[ebp], eax

; 562  : 
; 563  : 		size_t _Id = _Facet::id;

  00060	8b f4		 mov	 esi, esp
  00062	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??Bid@locale@std@@QAEIXZ
  0006e	3b f4		 cmp	 esi, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00075	89 45 d4	 mov	 DWORD PTR __Id$6[ebp], eax

; 564  : 		const locale::facet *_Pf = _Loc._Getfacet(_Id);

  00078	8b 45 d4	 mov	 eax, DWORD PTR __Id$6[ebp]
  0007b	50		 push	 eax
  0007c	8b 4d 08	 mov	 ecx, DWORD PTR __Loc$[ebp]
  0007f	e8 00 00 00 00	 call	 ?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z ; std::locale::_Getfacet
  00084	89 45 c8	 mov	 DWORD PTR __Pf$5[ebp], eax

; 565  : 
; 566  : 		if (_Pf != 0)

  00087	83 7d c8 00	 cmp	 DWORD PTR __Pf$5[ebp], 0
  0008b	74 05		 je	 SHORT $LN2@use_facet
  0008d	e9 81 00 00 00	 jmp	 $LN3@use_facet
$LN2@use_facet:

; 567  : 			;	// got facet from locale
; 568  : 		else if (_Psave != 0)

  00092	83 7d e0 00	 cmp	 DWORD PTR __Psave$7[ebp], 0
  00096	74 08		 je	 SHORT $LN4@use_facet

; 569  : 			_Pf = _Psave;	// lazy facet already allocated

  00098	8b 45 e0	 mov	 eax, DWORD PTR __Psave$7[ebp]
  0009b	89 45 c8	 mov	 DWORD PTR __Pf$5[ebp], eax
  0009e	eb 73		 jmp	 SHORT $LN3@use_facet
$LN4@use_facet:

; 570  : 		else if (_Facet::_Getcat(&_Psave, &_Loc) == (size_t)(-1))

  000a0	8b f4		 mov	 esi, esp
  000a2	8b 45 08	 mov	 eax, DWORD PTR __Loc$[ebp]
  000a5	50		 push	 eax
  000a6	8d 4d e0	 lea	 ecx, DWORD PTR __Psave$7[ebp]
  000a9	51		 push	 ecx
  000aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
  000b0	83 c4 08	 add	 esp, 8
  000b3	3b f4		 cmp	 esi, esp
  000b5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ba	83 f8 ff	 cmp	 eax, -1
  000bd	75 1e		 jne	 SHORT $LN6@use_facet

; 571  : 
; 572  :  #if _HAS_EXCEPTIONS
; 573  : 
; 574  : 			_THROW_NCEE(_XSTD bad_cast, _EMPTY_ARGUMENT);	// lazy disallowed

  000bf	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  000c5	e8 00 00 00 00	 call	 ??0bad_cast@std@@QAE@XZ	; std::bad_cast::bad_cast
  000ca	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_cast@std@@
  000cf	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  000d5	50		 push	 eax
  000d6	e8 00 00 00 00	 call	 __CxxThrowException@8

; 575  : 
; 576  :  #else /* _HAS_EXCEPTIONS */
; 577  : 			abort();	// lazy disallowed
; 578  :  #endif /* _HAS_EXCEPTIONS */
; 579  : 
; 580  : 		else

  000db	eb 36		 jmp	 SHORT $LN3@use_facet
$LN6@use_facet:

; 581  : 			{	// queue up lazy facet for destruction
; 582  : 			_Pf = _Psave;

  000dd	8b 45 e0	 mov	 eax, DWORD PTR __Psave$7[ebp]
  000e0	89 45 c8	 mov	 DWORD PTR __Pf$5[ebp], eax

; 583  : 			_Facetptr<_Facet>::_Psave = _Psave;

  000e3	8b 45 e0	 mov	 eax, DWORD PTR __Psave$7[ebp]
  000e6	a3 00 00 00 00	 mov	 DWORD PTR ?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PBVfacet@locale@2@B, eax ; std::_Facetptr<std::codecvt<char,char,_Mbstatet> >::_Psave

; 584  : 
; 585  : 			locale::facet *_Pfmod = (_Facet *)_Psave;

  000eb	8b 45 e0	 mov	 eax, DWORD PTR __Psave$7[ebp]
  000ee	89 45 bc	 mov	 DWORD PTR __Pfmod$4[ebp], eax

; 586  : 			_Pfmod->_Incref();

  000f1	8b 45 bc	 mov	 eax, DWORD PTR __Pfmod$4[ebp]
  000f4	8b 10		 mov	 edx, DWORD PTR [eax]
  000f6	8b f4		 mov	 esi, esp
  000f8	8b 4d bc	 mov	 ecx, DWORD PTR __Pfmod$4[ebp]
  000fb	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000fe	ff d0		 call	 eax
  00100	3b f4		 cmp	 esi, esp
  00102	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 587  : 
; 588  :  #if defined(_M_CEE)
; 589  : 			_Facet_Register_m(_Pfmod);
; 590  : 
; 591  :  #else /* defined(_M_CEE) */
; 592  : 			_Facet_Register(_Pfmod);

  00107	8b 45 bc	 mov	 eax, DWORD PTR __Pfmod$4[ebp]
  0010a	50		 push	 eax
  0010b	e8 00 00 00 00	 call	 ?_Facet_Register@std@@YAXPAV_Facet_base@1@@Z ; std::_Facet_Register
  00110	83 c4 04	 add	 esp, 4
$LN3@use_facet:

; 593  :  #endif /* defined(_M_CEE) */
; 594  : 			}
; 595  : 
; 596  : 		return ((const _Facet&)(*_Pf));	// should be dynamic_cast

  00113	8b 45 c8	 mov	 eax, DWORD PTR __Pf$5[ebp]
  00116	89 85 dc fe ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  0011c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00123	8b f4		 mov	 esi, esp
  00125	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$8[ebp]
  00128	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0012e	3b f4		 cmp	 esi, esp
  00130	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00135	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
$LN8@use_facet:

; 597  : 	_END_LOCK()
; 598  :  #endif /* _NO_LOCALES */
; 599  : 	}	// end of use_facet body

  0013b	52		 push	 edx
  0013c	8b cd		 mov	 ecx, ebp
  0013e	50		 push	 eax
  0013f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN14@use_facet
  00145	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0014a	58		 pop	 eax
  0014b	5a		 pop	 edx
  0014c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0014f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00156	59		 pop	 ecx
  00157	5f		 pop	 edi
  00158	5e		 pop	 esi
  00159	5b		 pop	 ebx
  0015a	81 c4 28 01 00
	00		 add	 esp, 296		; 00000128H
  00160	3b ec		 cmp	 ebp, esp
  00162	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00167	8b e5		 mov	 esp, ebp
  00169	5d		 pop	 ebp
  0016a	c3		 ret	 0
  0016b	90		 npad	 1
$LN14@use_facet:
  0016c	02 00 00 00	 DD	 2
  00170	00 00 00 00	 DD	 $LN13@use_facet
$LN13@use_facet:
  00174	ec ff ff ff	 DD	 -20			; ffffffecH
  00178	04 00 00 00	 DD	 4
  0017c	00 00 00 00	 DD	 $LN10@use_facet
  00180	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00184	04 00 00 00	 DD	 4
  00188	00 00 00 00	 DD	 $LN11@use_facet
$LN11@use_facet:
  0018c	5f		 DB	 95			; 0000005fH
  0018d	50		 DB	 80			; 00000050H
  0018e	73		 DB	 115			; 00000073H
  0018f	61		 DB	 97			; 00000061H
  00190	76		 DB	 118			; 00000076H
  00191	65		 DB	 101			; 00000065H
  00192	00		 DB	 0
$LN10@use_facet:
  00193	5f		 DB	 95			; 0000005fH
  00194	4c		 DB	 76			; 0000004cH
  00195	6f		 DB	 111			; 0000006fH
  00196	63		 DB	 99			; 00000063H
  00197	6b		 DB	 107			; 0000006bH
  00198	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$8[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a d4 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-300]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z
  0002b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z ENDP ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ PROC		; std::fpos<_Mbstatet>::operator __int64, COMDAT
; _this$ = ecx

; 67   : 		{	// return offset

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 68   : 		return ((streamoff)(_Myoff + _FPOSOFF(_Fpos)));

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 10		 mov	 edx, DWORD PTR [eax]
  0002b	03 51 08	 add	 edx, DWORD PTR [ecx+8]
  0002e	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  00031	13 71 0c	 adc	 esi, DWORD PTR [ecx+12]
  00034	8b c2		 mov	 eax, edx
  00036	8b d6		 mov	 edx, esi

; 69   : 		}

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ ENDP		; std::fpos<_Mbstatet>::operator __int64
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?seekpos@?$fpos@U_Mbstatet@@@std@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?seekpos@?$fpos@U_Mbstatet@@@std@@QBE_JXZ PROC		; std::fpos<_Mbstatet>::seekpos, COMDAT
; _this$ = ecx

; 62   : 		{	// return C file position

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 63   : 		return (_Fpos);

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00029	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]

; 64   : 		}

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?seekpos@?$fpos@U_Mbstatet@@@std@@QBE_JXZ ENDP		; std::fpos<_Mbstatet>::seekpos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?state@?$fpos@U_Mbstatet@@@std@@QBE?AU_Mbstatet@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?state@?$fpos@U_Mbstatet@@@std@@QBE?AU_Mbstatet@@XZ PROC ; std::fpos<_Mbstatet>::state, COMDAT
; _this$ = ecx

; 52   : 		{	// return conversion state

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 53   : 		return (_Mystate);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00029	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  0002c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0002f	89 08		 mov	 DWORD PTR [eax], ecx
  00031	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00034	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 54   : 		}

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
?state@?$fpos@U_Mbstatet@@@std@@QBE?AU_Mbstatet@@XZ ENDP ; std::fpos<_Mbstatet>::state
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ??0?$fpos@U_Mbstatet@@@std@@QAE@U_Mbstatet@@_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__State$ = 8						; size = 8
__Fileposition$ = 16					; size = 8
??0?$fpos@U_Mbstatet@@@std@@QAE@U_Mbstatet@@_J@Z PROC	; std::fpos<_Mbstatet>::fpos<_Mbstatet>, COMDAT
; _this$ = ecx

; 48   : 		{	// construct with conversion state and C file position

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 47   : 		: _Myoff(0), _Fpos(_Fileposition), _Mystate(_State)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0002c	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	8b 4d 10	 mov	 ecx, DWORD PTR __Fileposition$[ebp]
  00039	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0003c	8b 55 14	 mov	 edx, DWORD PTR __Fileposition$[ebp+4]
  0003f	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00042	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00045	8b 4d 08	 mov	 ecx, DWORD PTR __State$[ebp]
  00048	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  0004b	8b 55 0c	 mov	 edx, DWORD PTR __State$[ebp+4]
  0004e	89 50 14	 mov	 DWORD PTR [eax+20], edx

; 49   : 		}

  00051	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 10 00	 ret	 16			; 00000010H
??0?$fpos@U_Mbstatet@@@std@@QAE@U_Mbstatet@@_J@Z ENDP	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 8
??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z PROC		; std::fpos<_Mbstatet>::fpos<_Mbstatet>, COMDAT
; _this$ = ecx

; 43   : 		{	// construct with stream offset

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 42   : 		: _Myoff(_Off), _Fpos(_Fpz), _Mystate()

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR __Off$[ebp]
  00029	89 08		 mov	 DWORD PTR [eax], ecx
  0002b	8b 55 0c	 mov	 edx, DWORD PTR __Off$[ebp+4]
  0002e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00031	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00034	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
  0003b	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
  00042	33 c0		 xor	 eax, eax
  00044	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	83 c1 10	 add	 ecx, 16			; 00000010H
  0004a	89 01		 mov	 DWORD PTR [ecx], eax
  0004c	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 44   : 		}

  0004f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5b		 pop	 ebx
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z ENDP		; std::fpos<_Mbstatet>::fpos<_Mbstatet>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>, COMDAT
; _this$ = ecx

; 622  : 		{	// construct allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00021	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 620  : 		: _Mypair(_One_then_variadic_args_t(),

  00042	8b 45 08	 mov	 eax, DWORD PTR __Al$[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
  0004b	83 c4 04	 add	 esp, 4
  0004e	50		 push	 eax
  0004f	0f b6 8d 23 ff
	ff ff		 movzx	 ecx, BYTE PTR $T2[ebp]
  00056	51		 push	 ecx
  00057	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	e8 00 00 00 00	 call	 ??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >
  0005f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 623  : 		_Alloc_proxy();

  00066	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy

; 624  : 		}

  0006e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00075	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00078	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00082	59		 pop	 ecx
  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  0008c	3b ec		 cmp	 ebp, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
__ehhandler$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 18 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-232]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z PROC ; std::move<std::_Wrap_alloc<std::allocator<char> > &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$move@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ENDP ; std::move<std::_Wrap_alloc<std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_pointer@$$CBD@std@@YAXPBDPB_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@$$CBD@std@@YAXPBDPB_WI@Z PROC		; std::_Debug_pointer<char const >, COMDAT

; 923  : 	{	// test pointer for non-singularity, pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 924  : 	if (_Ptr == 0)

  0001e	83 7d 08 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  00022	75 1f		 jne	 SHORT $LN1@Debug_poin

; 925  : 		_DEBUG_ERROR2("invalid null pointer", _File, _Line);

  00024	8b f4		 mov	 esi, esp
  00026	8b 45 10	 mov	 eax, DWORD PTR __Line$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 0c	 mov	 ecx, DWORD PTR __File$[ebp]
  0002d	51		 push	 ecx
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@Debug_poin:

; 926  : 	}

  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
??$_Debug_pointer@$$CBD@std@@YAXPBDPB_WI@Z ENDP		; std::_Debug_pointer<char const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_iterator<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*, COMDAT
; _this$ = ecx

; 339  : 		{	// return designated object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 340  : 		return ((reference)**(_Mybase *)this);

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEABDXZ ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator*

; 341  : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Parg$ = 8						; size = 4
__Pstring$ = 12						; size = 4
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
; _this$ = ecx

; 322  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 321  : 		: _Mybase(_Parg, _Pstring)

  00023	8b 45 0c	 mov	 eax, DWORD PTR __Pstring$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >

; 323  : 		}

  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003f	3b ec		 cmp	 ebp, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 08 00	 ret	 8
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_const_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEABDXZ
_TEXT	SEGMENT
tv77 = -232						; size = 4
__Contptr$ = -32					; size = 4
__Mycont$ = -20						; size = 4
_this$ = -8						; size = 4
??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEABDXZ PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator*, COMDAT
; _this$ = ecx

; 67   : 		{	// return designated object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00013	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 68   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 69   : 		const auto _Mycont = static_cast<const _Mystr *>(this->_Getcont());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002b	89 45 ec	 mov	 DWORD PTR __Mycont$[ebp], eax

; 70   : 		const auto _Contptr = _Mycont ? _Mycont->_Myptr() : 0;

  0002e	83 7d ec 00	 cmp	 DWORD PTR __Mycont$[ebp], 0
  00032	74 10		 je	 SHORT $LN5@operator
  00034	8b 4d ec	 mov	 ecx, DWORD PTR __Mycont$[ebp]
  00037	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0003c	89 85 18 ff ff
	ff		 mov	 DWORD PTR tv77[ebp], eax
  00042	eb 0a		 jmp	 SHORT $LN6@operator
$LN5@operator:
  00044	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv77[ebp], 0
$LN6@operator:
  0004e	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR tv77[ebp]
  00054	89 45 e0	 mov	 DWORD PTR __Contptr$[ebp], eax

; 71   : 		if (_Mycont == 0
; 72   : 			|| _Ptr == nullptr_t{}
; 73   : 			|| _Unfancy(_Ptr) < _Contptr
; 74   : 			|| _Contptr + _Mycont->_Mysize <= _Unfancy(_Ptr))

  00057	83 7d ec 00	 cmp	 DWORD PTR __Mycont$[ebp], 0
  0005b	74 39		 je	 SHORT $LN3@operator
  0005d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00060	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00064	74 30		 je	 SHORT $LN3@operator
  00066	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00069	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0006c	51		 push	 ecx
  0006d	e8 00 00 00 00	 call	 ??$_Unfancy@$$CBD@std@@YAPBDPBD@Z ; std::_Unfancy<char const >
  00072	83 c4 04	 add	 esp, 4
  00075	3b 45 e0	 cmp	 eax, DWORD PTR __Contptr$[ebp]
  00078	72 1c		 jb	 SHORT $LN3@operator
  0007a	8b 45 ec	 mov	 eax, DWORD PTR __Mycont$[ebp]
  0007d	8b 75 e0	 mov	 esi, DWORD PTR __Contptr$[ebp]
  00080	03 70 14	 add	 esi, DWORD PTR [eax+20]
  00083	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00089	52		 push	 edx
  0008a	e8 00 00 00 00	 call	 ??$_Unfancy@$$CBD@std@@YAPBDPBD@Z ; std::_Unfancy<char const >
  0008f	83 c4 04	 add	 esp, 4
  00092	3b f0		 cmp	 esi, eax
  00094	77 7d		 ja	 SHORT $LN2@operator
$LN3@operator:

; 75   : 			{	// report error
; 76   : 			_DEBUG_ERROR("string iterator not dereferencable");

  00096	8b f4		 mov	 esi, esp
  00098	6a 4c		 push	 76			; 0000004cH
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_1EG@CNCHLAOB@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
  000a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  000aa	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ad	3b f4		 cmp	 esi, esp
  000af	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 77   : 			_SCL_SECURE_OUT_OF_RANGE;

  000b4	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  000b9	85 c0		 test	 eax, eax
  000bb	74 04		 je	 SHORT $LN7@operator
  000bd	33 c9		 xor	 ecx, ecx
  000bf	75 2d		 jne	 SHORT $LN8@operator
$LN7@operator:
  000c1	8b f4		 mov	 esi, esp
  000c3	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  000c8	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  000cd	6a 00		 push	 0
  000cf	6a 4d		 push	 77			; 0000004dH
  000d1	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000d6	6a 02		 push	 2
  000d8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  000de	83 c4 18	 add	 esp, 24			; 00000018H
  000e1	3b f4		 cmp	 esi, esp
  000e3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e8	83 f8 01	 cmp	 eax, 1
  000eb	75 01		 jne	 SHORT $LN8@operator
  000ed	cc		 int	 3
$LN8@operator:
  000ee	8b f4		 mov	 esi, esp
  000f0	6a 00		 push	 0
  000f2	6a 4d		 push	 77			; 0000004dH
  000f4	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000f9	68 00 00 00 00	 push	 OFFSET ??_C@_1MG@GDGHDIKC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000fe	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00103	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00109	83 c4 14	 add	 esp, 20			; 00000014H
  0010c	3b f4		 cmp	 esi, esp
  0010e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:

; 78   : 			}
; 79   : 
; 80   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 81   : 		_SCL_SECURE_VALIDATE(_Ptr != nullptr_t{});
; 82   : 		const auto _Mycont = static_cast<const _Mystr *>(this->_Getcont());
; 83   : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 84   : 		const auto _Contptr = _Mycont->_Myptr();
; 85   : 		_SCL_SECURE_VALIDATE_RANGE(_Contptr <= _Unfancy(_Ptr) && _Unfancy(_Ptr) < _Contptr + _Mycont->_Mysize);
; 86   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 87   : 
; 88   : 		_Analysis_assume_(_Ptr != nullptr_t{});
; 89   : 
; 90   : 		return (*_Ptr);

  00113	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00116	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 91   : 		}

  00119	5f		 pop	 edi
  0011a	5e		 pop	 esi
  0011b	5b		 pop	 ebx
  0011c	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  00122	3b ec		 cmp	 ebp, esp
  00124	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00129	8b e5		 mov	 esp, ebp
  0012b	5d		 pop	 ebp
  0012c	c3		 ret	 0
??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEABDXZ ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pstring$ = 12						; size = 4
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
; _this$ = ecx

; 49   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 48   : 		: _Ptr(_Parg)

  00051	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00054	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00057	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 50   : 		this->_Adopt(_Pstring);

  0005a	8b 45 0c	 mov	 eax, DWORD PTR __Pstring$[ebp]
  0005d	50		 push	 eax
  0005e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 51   : 		}

  00066	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00070	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007a	59		 pop	 ecx
  0007b	5f		 pop	 edi
  0007c	5e		 pop	 esi
  0007d	5b		 pop	 ebx
  0007e	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00084	3b ec		 cmp	 ebp, esp
  00086	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008b	8b e5		 mov	 esp, ebp
  0008d	5d		 pop	 ebp
  0008e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::~_Iterator_base12
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::_Iterator_base12
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_iarchive.hpp
;	COMDAT ??$?5Vversion_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVversion_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?5Vversion_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVversion_type@23@@Z PROC ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::version_type>, COMDAT
; _this$ = ecx

; 67   :     Archive & operator>>(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 68   :         this->This()->load_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
  0002f	8b c8		 mov	 ecx, eax
  00031	e8 00 00 00 00	 call	 ??$load_override@Vversion_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::version_type>

; 69   :         return * this->This();

  00036	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This

; 70   :     }

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??$?5Vversion_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVversion_type@23@@Z ENDP ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_iarchive.hpp
;	COMDAT ??$?5Vobject_id_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVobject_id_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?5Vobject_id_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVobject_id_type@23@@Z PROC ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::object_id_type>, COMDAT
; _this$ = ecx

; 67   :     Archive & operator>>(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 68   :         this->This()->load_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
  0002f	8b c8		 mov	 ecx, eax
  00031	e8 00 00 00 00	 call	 ??$load_override@Vobject_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVobject_id_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::object_id_type>

; 69   :         return * this->This();

  00036	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This

; 70   :     }

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??$?5Vobject_id_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVobject_id_type@23@@Z ENDP ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_iarchive.hpp
;	COMDAT ??$?5Vclass_id_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVclass_id_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?5Vclass_id_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVclass_id_type@23@@Z PROC ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::class_id_type>, COMDAT
; _this$ = ecx

; 67   :     Archive & operator>>(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 68   :         this->This()->load_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
  0002f	8b c8		 mov	 ecx, eax
  00031	e8 00 00 00 00	 call	 ??$load_override@Vclass_id_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::class_id_type>

; 69   :         return * this->This();

  00036	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This

; 70   :     }

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??$?5Vclass_id_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVclass_id_type@23@@Z ENDP ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_iarchive.hpp
;	COMDAT ??$?5Vclass_id_optional_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVclass_id_optional_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?5Vclass_id_optional_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVclass_id_optional_type@23@@Z PROC ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::class_id_optional_type>, COMDAT
; _this$ = ecx

; 67   :     Archive & operator>>(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 68   :         this->This()->load_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
  0002f	8b c8		 mov	 ecx, eax
  00031	e8 00 00 00 00	 call	 ??$load_override@Vclass_id_optional_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_optional_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::class_id_optional_type>

; 69   :         return * this->This();

  00036	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This

; 70   :     }

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??$?5Vclass_id_optional_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVclass_id_optional_type@23@@Z ENDP ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::class_id_optional_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_iarchive.hpp
;	COMDAT ??$?5Utracking_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAUtracking_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?5Utracking_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAUtracking_type@23@@Z PROC ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::tracking_type>, COMDAT
; _this$ = ecx

; 67   :     Archive & operator>>(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 68   :         this->This()->load_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
  0002f	8b c8		 mov	 ecx, eax
  00031	e8 00 00 00 00	 call	 ??$load_override@Utracking_type@archive@boost@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUtracking_type@12@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<boost::archive::tracking_type>

; 69   :         return * this->This();

  00036	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This

; 70   :     }

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??$?5Utracking_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAUtracking_type@23@@Z ENDP ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_iarchive.hpp
;	COMDAT ??$?5Uclass_name_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAUclass_name_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?5Uclass_name_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAUclass_name_type@23@@Z PROC ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::class_name_type>, COMDAT
; _this$ = ecx

; 67   :     Archive & operator>>(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 68   :         this->This()->load_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
  0002f	8b c8		 mov	 ecx, eax
  00031	e8 00 00 00 00	 call	 ?load_override@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAUclass_name_type@23@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override

; 69   :         return * this->This();

  00036	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This

; 70   :     }

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??$?5Uclass_name_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAUclass_name_type@23@@Z ENDP ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::class_name_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6Vversion_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVversion_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6Vversion_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVversion_type@23@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::version_type>, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  0002f	8b c8		 mov	 ecx, eax
  00031	e8 00 00 00 00	 call	 ??$save_override@$$CBVversion_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVversion_type@12@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::version_type const >

; 71   :         return * this->This();

  00036	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??$?6Vversion_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVversion_type@23@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::version_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6Vobject_id_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVobject_id_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6Vobject_id_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVobject_id_type@23@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::object_id_type>, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  0002f	8b c8		 mov	 ecx, eax
  00031	e8 00 00 00 00	 call	 ?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_id_type@23@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override

; 71   :         return * this->This();

  00036	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??$?6Vobject_id_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVobject_id_type@23@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::object_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6Vobject_reference_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVobject_reference_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6Vobject_reference_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVobject_reference_type@23@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::object_reference_type>, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  0002f	8b c8		 mov	 ecx, eax
  00031	e8 00 00 00 00	 call	 ??$save_override@$$CBVobject_reference_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_reference_type@12@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::object_reference_type const >

; 71   :         return * this->This();

  00036	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??$?6Vobject_reference_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVobject_reference_type@23@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::object_reference_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6Vclass_id_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6Vclass_id_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_type@23@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_id_type>, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  0002f	8b c8		 mov	 ecx, eax
  00031	e8 00 00 00 00	 call	 ??$save_override@$$CBVclass_id_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_type@12@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_type const >

; 71   :         return * this->This();

  00036	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??$?6Vclass_id_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_type@23@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_id_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6Vclass_id_reference_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_reference_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6Vclass_id_reference_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_reference_type@23@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_id_reference_type>, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  0002f	8b c8		 mov	 ecx, eax
  00031	e8 00 00 00 00	 call	 ??$save_override@$$CBVclass_id_reference_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_reference_type@12@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::class_id_reference_type const >

; 71   :         return * this->This();

  00036	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??$?6Vclass_id_reference_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_reference_type@23@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_id_reference_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6Vclass_id_optional_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_optional_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6Vclass_id_optional_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_optional_type@23@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_id_optional_type>, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  0002f	8b c8		 mov	 ecx, eax
  00031	e8 00 00 00 00	 call	 ?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_optional_type@23@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override

; 71   :         return * this->This();

  00036	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??$?6Vclass_id_optional_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_optional_type@23@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_id_optional_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6Uclass_name_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABUclass_name_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6Uclass_name_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABUclass_name_type@23@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_name_type>, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  0002f	8b c8		 mov	 ecx, eax
  00031	e8 00 00 00 00	 call	 ?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override

; 71   :         return * this->This();

  00036	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??$?6Uclass_name_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABUclass_name_type@23@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_name_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6Utracking_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABUtracking_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6Utracking_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABUtracking_type@23@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::tracking_type>, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  0002f	8b c8		 mov	 ecx, eax
  00031	e8 00 00 00 00	 call	 ??$save_override@$$CBUtracking_type@archive@boost@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUtracking_type@12@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::tracking_type const >

; 71   :         return * this->This();

  00036	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??$?6Utracking_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABUtracking_type@23@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::tracking_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$_Reset@VCContact@@@?$_Ptr_base@VCContact@@@std@@QAEXABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other$ = 8						; size = 4
??$_Reset@VCContact@@@?$_Ptr_base@VCContact@@@std@@QAEXABV01@@Z PROC ; std::_Ptr_base<CContact>::_Reset<CContact>, COMDAT
; _this$ = ecx

; 348  : 		{	// release resource and take ownership of _Other._Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 349  : 		_Reset(_Other._Ptr, _Other._Rep);

  00023	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  00026	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00029	51		 push	 ecx
  0002a	8b 55 08	 mov	 edx, DWORD PTR __Other$[ebp]
  0002d	8b 02		 mov	 eax, DWORD PTR [edx]
  0002f	50		 push	 eax
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Reset@?$_Ptr_base@VCContact@@@std@@QAEXPAVCContact@@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<CContact>::_Reset

; 350  : 		}

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00041	3b ec		 cmp	 ebp, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 04 00	 ret	 4
??$_Reset@VCContact@@@?$_Ptr_base@VCContact@@@std@@QAEXABV01@@Z ENDP ; std::_Ptr_base<CContact>::_Reset<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@$$QAV21@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@$$QAV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >, COMDAT
; _this$ = ecx

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 995  : 		_Mytraits::construct(*this, _Ptr,

  00023	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@V?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::forward<std::shared_ptr<CContact> >
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@$$QAV31@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@$$QAV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z PROC ; std::forward<std::shared_ptr<CContact> >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@V?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ENDP ; std::forward<std::shared_ptr<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@AAV10@@Z PROC ; std::addressof<std::shared_ptr<CContact> >, COMDAT

; 724  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 725  : 	return (__builtin_addressof(_Val));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 726  : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$addressof@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@AAV10@@Z ENDP ; std::addressof<std::shared_ptr<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@ABV21@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@ABV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> const &>, COMDAT
; _this$ = ecx

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 995  : 		_Mytraits::construct(*this, _Ptr,

  00023	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@ABV?$shared_ptr@VCContact@@@std@@@std@@YAABV?$shared_ptr@VCContact@@@0@ABV10@@Z ; std::forward<std::shared_ptr<CContact> const &>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@ABV31@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> const &>
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@ABV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@AAV21@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@AAV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> &>, COMDAT
; _this$ = ecx

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 995  : 		_Mytraits::construct(*this, _Ptr,

  00023	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@AAV?$shared_ptr@VCContact@@@std@@@std@@YAAAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::forward<std::shared_ptr<CContact> &>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@VCContact@@@std@@@1@PAV?$shared_ptr@VCContact@@@1@AAV31@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> &>
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@AAV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z PROC ; std::_Unfancy<std::shared_ptr<CContact> >, COMDAT

; 739  : 	{	// do nothing for plain pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 740  : 	return (_Ptr);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 741  : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ENDP ; std::_Unfancy<std::shared_ptr<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@$$CBV?$shared_ptr@VCContact@@@std@@@std@@YAPBV?$shared_ptr@VCContact@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$shared_ptr@VCContact@@@std@@@std@@YAPBV?$shared_ptr@VCContact@@@0@ABV10@@Z PROC ; std::addressof<std::shared_ptr<CContact> const >, COMDAT

; 724  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 725  : 	return (__builtin_addressof(_Val));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 726  : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$addressof@$$CBV?$shared_ptr@VCContact@@@std@@@std@@YAPBV?$shared_ptr@VCContact@@@0@ABV10@@Z ENDP ; std::addressof<std::shared_ptr<CContact> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Move_unchecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move_unchecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00@Z PROC ; std::_Move_unchecked<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *>, COMDAT

; 2597 : 	{	// move [_First, _Last) to [_Dest, ...), choose optimization

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 2598 : 	return (_Move_unchecked1(_First, _Last,

  0001e	8d 45 10	 lea	 eax, DWORD PTR __Dest$[ebp]
  00021	50		 push	 eax
  00022	8d 4d 08	 lea	 ecx, DWORD PTR __First$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Ptr_move_cat@V?$shared_ptr@VCContact@@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAV?$shared_ptr@VCContact@@@0@0@Z ; std::_Ptr_move_cat<std::shared_ptr<CContact>,std::shared_ptr<CContact> >
  0002b	83 c4 08	 add	 esp, 8
  0002e	88 85 3b ff ff
	ff		 mov	 BYTE PTR $T1[ebp], al
  00034	0f b6 95 3b ff
	ff ff		 movzx	 edx, BYTE PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0003f	50		 push	 eax
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00043	51		 push	 ecx
  00044	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??$_Move_unchecked1@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00U_General_ptr_iterator_tag@0@@Z ; std::_Move_unchecked1<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *>
  0004d	83 c4 10	 add	 esp, 16			; 00000010H

; 2599 : 		_Dest, _Ptr_move_cat(_First, _Dest)));
; 2600 : 	}

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00059	3b ec		 cmp	 ebp, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
??$_Move_unchecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00@Z ENDP ; std::_Move_unchecked<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string
;	COMDAT ??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Istr$ = 8						; size = 4
__Str$ = 12						; size = 4
??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::getline<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 160  : 	{	// get characters into string, discard newline

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 161  : 	return (getline(_STD move(_Istr), _Str, _Istr.widen('\n')));

  0001e	8b f4		 mov	 esi, esp
  00020	6a 0a		 push	 10			; 0000000aH
  00022	8b 45 08	 mov	 eax, DWORD PTR __Istr$[ebp]
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	8b 55 08	 mov	 edx, DWORD PTR __Istr$[ebp]
  0002a	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  0002d	8b ca		 mov	 ecx, edx
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z
  00035	3b f4		 cmp	 esi, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	0f b6 c0	 movzx	 eax, al
  0003f	50		 push	 eax
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR __Str$[ebp]
  00043	51		 push	 ecx
  00044	8b 55 08	 mov	 edx, DWORD PTR __Istr$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??$move@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::move<std::basic_istream<char,std::char_traits<char> > &>
  0004d	83 c4 04	 add	 esp, 4
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z ; std::getline<char,std::char_traits<char>,std::allocator<char> >
  00056	83 c4 0c	 add	 esp, 12			; 0000000cH

; 162  : 	}

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00062	3b ec		 cmp	 ebp, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c3		 ret	 0
??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::getline<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Ostr$ = 8						; size = 4
??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z PROC ; std::endl<char,std::char_traits<char> >, COMDAT

; 991  : 	{	// insert newline and flush stream

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 992  : 	_Ostr.put(_Ostr.widen('\n'));

  0001e	8b f4		 mov	 esi, esp
  00020	6a 0a		 push	 10			; 0000000aH
  00022	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  0002a	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  0002d	8b ca		 mov	 ecx, edx
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z
  00035	3b f4		 cmp	 esi, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	8b f4		 mov	 esi, esp
  0003e	0f b6 c0	 movzx	 eax, al
  00041	50		 push	 eax
  00042	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z
  0004b	3b f4		 cmp	 esi, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 993  : 	_Ostr.flush();

  00052	8b f4		 mov	 esi, esp
  00054	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
  0005d	3b f4		 cmp	 esi, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 994  : 	return (_Ostr);

  00064	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]

; 995  : 	}

  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	5b		 pop	 ebx
  0006a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00070	3b ec		 cmp	 ebp, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ENDP ; std::endl<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
_TEXT	SEGMENT
tv135 = -352						; size = 8
tv342 = -344						; size = 8
tv290 = -340						; size = 4
tv287 = -340						; size = 8
tv285 = -340						; size = 4
tv328 = -336						; size = 8
tv289 = -336						; size = 4
tv284 = -336						; size = 4
tv286 = -332						; size = 4
tv137 = -332						; size = 4
tv288 = -329						; size = 1
tv283 = -329						; size = 1
$T2 = -324						; size = 4
$T3 = -312						; size = 4
$T4 = -300						; size = 4
$T5 = -288						; size = 4
$T6 = -276						; size = 4
__Ok$ = -72						; size = 8
__Pad$ = -56						; size = 8
__Count$ = -40						; size = 8
__State$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT

; 780  : 	{	// insert NTBS into char stream

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 50 01 00
	00		 sub	 esp, 336		; 00000150H
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8d bd a0 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-352]
  00021	b9 54 00 00 00	 mov	 ecx, 84			; 00000054H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	50		 push	 eax
  00035	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00038	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp

; 781  : 	typedef char _Elem;
; 782  : 	typedef basic_ostream<_Elem, _Traits> _Myos;
; 783  : 	ios_base::iostate _State = ios_base::goodbit;

  00041	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR __State$[ebp], 0

; 784  : 	streamsize _Count = (streamsize)_Traits::length(_Val);	// may overflow

  00048	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?length@?$char_traits@D@std@@SAIPBD@Z ; std::char_traits<char>::length
  00051	83 c4 04	 add	 esp, 4
  00054	33 c9		 xor	 ecx, ecx
  00056	89 45 d8	 mov	 DWORD PTR __Count$[ebp], eax
  00059	89 4d dc	 mov	 DWORD PTR __Count$[ebp+4], ecx

; 785  : 	streamsize _Pad = _Ostr.width() <= 0 || _Ostr.width() <= _Count

  0005c	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0005f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00061	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00064	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00067	8b f4		 mov	 esi, esp
  00069	8b ca		 mov	 ecx, edx
  0006b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	89 85 b0 fe ff
	ff		 mov	 DWORD PTR tv328[ebp], eax
  0007e	89 95 b4 fe ff
	ff		 mov	 DWORD PTR tv328[ebp+4], edx
  00084	83 bd b4 fe ff
	ff 00		 cmp	 DWORD PTR tv328[ebp+4], 0
  0008b	7c 79		 jl	 SHORT $LN17@operator
  0008d	7f 09		 jg	 SHORT $LN24@operator
  0008f	83 bd b0 fe ff
	ff 00		 cmp	 DWORD PTR tv328[ebp], 0
  00096	76 6e		 jbe	 SHORT $LN17@operator
$LN24@operator:
  00098	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0009b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009d	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  000a0	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  000a3	8b f4		 mov	 esi, esp
  000a5	8b ca		 mov	 ecx, edx
  000a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  000ad	3b f4		 cmp	 esi, esp
  000af	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b4	89 85 a8 fe ff
	ff		 mov	 DWORD PTR tv342[ebp], eax
  000ba	89 95 ac fe ff
	ff		 mov	 DWORD PTR tv342[ebp+4], edx
  000c0	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR tv342[ebp+4]
  000c6	3b 45 dc	 cmp	 eax, DWORD PTR __Count$[ebp+4]
  000c9	7c 3b		 jl	 SHORT $LN17@operator
  000cb	7f 0b		 jg	 SHORT $LN25@operator
  000cd	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR tv342[ebp]
  000d3	3b 4d d8	 cmp	 ecx, DWORD PTR __Count$[ebp]
  000d6	76 2e		 jbe	 SHORT $LN17@operator
$LN25@operator:
  000d8	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  000db	8b 02		 mov	 eax, DWORD PTR [edx]
  000dd	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  000e0	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  000e3	8b f4		 mov	 esi, esp
  000e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  000eb	3b f4		 cmp	 esi, esp
  000ed	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f2	2b 45 d8	 sub	 eax, DWORD PTR __Count$[ebp]
  000f5	1b 55 dc	 sbb	 edx, DWORD PTR __Count$[ebp+4]
  000f8	89 85 a0 fe ff
	ff		 mov	 DWORD PTR tv135[ebp], eax
  000fe	89 95 a4 fe ff
	ff		 mov	 DWORD PTR tv135[ebp+4], edx
  00104	eb 0b		 jmp	 SHORT $LN18@operator
$LN17@operator:
  00106	0f 57 c0	 xorps	 xmm0, xmm0
  00109	66 0f 13 85 a0
	fe ff ff	 movlpd	 QWORD PTR tv135[ebp], xmm0
$LN18@operator:
  00111	8b 8d a0 fe ff
	ff		 mov	 ecx, DWORD PTR tv135[ebp]
  00117	89 4d c8	 mov	 DWORD PTR __Pad$[ebp], ecx
  0011a	8b 95 a4 fe ff
	ff		 mov	 edx, DWORD PTR tv135[ebp+4]
  00120	89 55 cc	 mov	 DWORD PTR __Pad$[ebp+4], edx

; 786  : 		? 0 : _Ostr.width() - _Count;
; 787  : 	const typename _Myos::sentry _Ok(_Ostr);

  00123	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00126	50		 push	 eax
  00127	8d 4d b8	 lea	 ecx, DWORD PTR __Ok$[ebp]
  0012a	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
  0012f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 788  : 
; 789  : 	if (!_Ok)

  00136	8d 4d b8	 lea	 ecx, DWORD PTR __Ok$[ebp]
  00139	e8 00 00 00 00	 call	 ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
  0013e	0f b6 c0	 movzx	 eax, al
  00141	85 c0		 test	 eax, eax
  00143	75 0e		 jne	 SHORT $LN8@operator

; 790  : 		_State |= ios_base::badbit;

  00145	8b 45 e8	 mov	 eax, DWORD PTR __State$[ebp]
  00148	83 c8 04	 or	 eax, 4
  0014b	89 45 e8	 mov	 DWORD PTR __State$[ebp], eax

; 791  : 	else

  0014e	e9 ba 02 00 00	 jmp	 $LN9@operator
$LN8@operator:

; 792  : 		{	// state okay, insert
; 793  : 		_TRY_IO_BEGIN

  00153	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1

; 794  : 		if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left)

  00157	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0015a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0015c	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  0015f	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00162	8b f4		 mov	 esi, esp
  00164	8b ca		 mov	 ecx, edx
  00166	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
  0016c	3b f4		 cmp	 esi, esp
  0016e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00173	89 85 b4 fe ff
	ff		 mov	 DWORD PTR tv137[ebp], eax
  00179	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR tv137[ebp]
  0017f	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  00184	83 f8 40	 cmp	 eax, 64			; 00000040H
  00187	0f 84 d5 00 00
	00		 je	 $LN11@operator

; 795  : 			for (; 0 < _Pad; --_Pad)	// pad on left

  0018d	eb 12		 jmp	 SHORT $LN4@operator
$LN2@operator:
  0018f	8b 45 c8	 mov	 eax, DWORD PTR __Pad$[ebp]
  00192	83 e8 01	 sub	 eax, 1
  00195	8b 4d cc	 mov	 ecx, DWORD PTR __Pad$[ebp+4]
  00198	83 d9 00	 sbb	 ecx, 0
  0019b	89 45 c8	 mov	 DWORD PTR __Pad$[ebp], eax
  0019e	89 4d cc	 mov	 DWORD PTR __Pad$[ebp+4], ecx
$LN4@operator:
  001a1	83 7d cc 00	 cmp	 DWORD PTR __Pad$[ebp+4], 0
  001a5	0f 8c b7 00 00
	00		 jl	 $LN11@operator
  001ab	7f 0a		 jg	 SHORT $LN26@operator
  001ad	83 7d c8 00	 cmp	 DWORD PTR __Pad$[ebp], 0
  001b1	0f 86 ab 00 00
	00		 jbe	 $LN11@operator
$LN26@operator:

; 796  : 				if (_Traits::eq_int_type(_Traits::eof(),

  001b7	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  001ba	8b 08		 mov	 ecx, DWORD PTR [eax]
  001bc	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  001bf	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  001c2	8b f4		 mov	 esi, esp
  001c4	8b ca		 mov	 ecx, edx
  001c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
  001cc	3b f4		 cmp	 esi, esp
  001ce	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001d3	88 85 b7 fe ff
	ff		 mov	 BYTE PTR tv283[ebp], al
  001d9	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  001dc	8b 08		 mov	 ecx, DWORD PTR [eax]
  001de	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  001e1	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  001e4	8b f4		 mov	 esi, esp
  001e6	8b ca		 mov	 ecx, edx
  001e8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  001ee	3b f4		 cmp	 esi, esp
  001f0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f5	89 85 b0 fe ff
	ff		 mov	 DWORD PTR tv284[ebp], eax
  001fb	8b f4		 mov	 esi, esp
  001fd	0f b6 85 b7 fe
	ff ff		 movzx	 eax, BYTE PTR tv283[ebp]
  00204	50		 push	 eax
  00205	8b 8d b0 fe ff
	ff		 mov	 ecx, DWORD PTR tv284[ebp]
  0020b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
  00211	3b f4		 cmp	 esi, esp
  00213	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00218	89 85 ac fe ff
	ff		 mov	 DWORD PTR tv285[ebp], eax
  0021e	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR tv285[ebp]
  00224	89 8d ec fe ff
	ff		 mov	 DWORD PTR $T6[ebp], ecx
  0022a	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  0022f	89 85 e0 fe ff
	ff		 mov	 DWORD PTR $T5[ebp], eax
  00235	8d 95 ec fe ff
	ff		 lea	 edx, DWORD PTR $T6[ebp]
  0023b	52		 push	 edx
  0023c	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR $T5[ebp]
  00242	50		 push	 eax
  00243	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  00248	83 c4 08	 add	 esp, 8
  0024b	0f b6 c8	 movzx	 ecx, al
  0024e	85 c9		 test	 ecx, ecx
  00250	74 0b		 je	 SHORT $LN12@operator

; 797  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 798  : 					{	// insertion failed, quit
; 799  : 					_State |= ios_base::badbit;

  00252	8b 45 e8	 mov	 eax, DWORD PTR __State$[ebp]
  00255	83 c8 04	 or	 eax, 4
  00258	89 45 e8	 mov	 DWORD PTR __State$[ebp], eax

; 800  : 					break;

  0025b	eb 05		 jmp	 SHORT $LN11@operator
$LN12@operator:

; 801  : 					}
; 802  : 
; 803  : 		if (_State == ios_base::goodbit

  0025d	e9 2d ff ff ff	 jmp	 $LN2@operator
$LN11@operator:

; 804  : 			&& _Ostr.rdbuf()->sputn(_Val, _Count) != _Count)

  00262	83 7d e8 00	 cmp	 DWORD PTR __State$[ebp], 0
  00266	75 6e		 jne	 SHORT $LN13@operator
  00268	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0026b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0026d	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00270	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00273	8b f4		 mov	 esi, esp
  00275	8b ca		 mov	 ecx, edx
  00277	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  0027d	3b f4		 cmp	 esi, esp
  0027f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00284	89 85 b4 fe ff
	ff		 mov	 DWORD PTR tv286[ebp], eax
  0028a	8b f4		 mov	 esi, esp
  0028c	8b 45 dc	 mov	 eax, DWORD PTR __Count$[ebp+4]
  0028f	50		 push	 eax
  00290	8b 4d d8	 mov	 ecx, DWORD PTR __Count$[ebp]
  00293	51		 push	 ecx
  00294	8b 55 0c	 mov	 edx, DWORD PTR __Val$[ebp]
  00297	52		 push	 edx
  00298	8b 8d b4 fe ff
	ff		 mov	 ecx, DWORD PTR tv286[ebp]
  0029e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z
  002a4	3b f4		 cmp	 esi, esp
  002a6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002ab	89 85 ac fe ff
	ff		 mov	 DWORD PTR tv287[ebp], eax
  002b1	89 95 b0 fe ff
	ff		 mov	 DWORD PTR tv287[ebp+4], edx
  002b7	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR tv287[ebp]
  002bd	3b 45 d8	 cmp	 eax, DWORD PTR __Count$[ebp]
  002c0	75 0b		 jne	 SHORT $LN27@operator
  002c2	8b 8d b0 fe ff
	ff		 mov	 ecx, DWORD PTR tv287[ebp+4]
  002c8	3b 4d dc	 cmp	 ecx, DWORD PTR __Count$[ebp+4]
  002cb	74 09		 je	 SHORT $LN13@operator
$LN27@operator:

; 805  : 			_State |= ios_base::badbit;

  002cd	8b 45 e8	 mov	 eax, DWORD PTR __State$[ebp]
  002d0	83 c8 04	 or	 eax, 4
  002d3	89 45 e8	 mov	 DWORD PTR __State$[ebp], eax
$LN13@operator:

; 806  : 
; 807  : 		if (_State == ios_base::goodbit)

  002d6	83 7d e8 00	 cmp	 DWORD PTR __State$[ebp], 0
  002da	0f 85 d5 00 00
	00		 jne	 $LN14@operator

; 808  : 			for (; 0 < _Pad; --_Pad)	// pad on right

  002e0	eb 12		 jmp	 SHORT $LN7@operator
$LN5@operator:
  002e2	8b 45 c8	 mov	 eax, DWORD PTR __Pad$[ebp]
  002e5	83 e8 01	 sub	 eax, 1
  002e8	8b 4d cc	 mov	 ecx, DWORD PTR __Pad$[ebp+4]
  002eb	83 d9 00	 sbb	 ecx, 0
  002ee	89 45 c8	 mov	 DWORD PTR __Pad$[ebp], eax
  002f1	89 4d cc	 mov	 DWORD PTR __Pad$[ebp+4], ecx
$LN7@operator:
  002f4	83 7d cc 00	 cmp	 DWORD PTR __Pad$[ebp+4], 0
  002f8	0f 8c b7 00 00
	00		 jl	 $LN14@operator
  002fe	7f 0a		 jg	 SHORT $LN28@operator
  00300	83 7d c8 00	 cmp	 DWORD PTR __Pad$[ebp], 0
  00304	0f 86 ab 00 00
	00		 jbe	 $LN14@operator
$LN28@operator:

; 809  : 				if (_Traits::eq_int_type(_Traits::eof(),

  0030a	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0030d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0030f	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00312	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00315	8b f4		 mov	 esi, esp
  00317	8b ca		 mov	 ecx, edx
  00319	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
  0031f	3b f4		 cmp	 esi, esp
  00321	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00326	88 85 b7 fe ff
	ff		 mov	 BYTE PTR tv288[ebp], al
  0032c	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0032f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00331	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00334	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00337	8b f4		 mov	 esi, esp
  00339	8b ca		 mov	 ecx, edx
  0033b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00341	3b f4		 cmp	 esi, esp
  00343	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00348	89 85 b0 fe ff
	ff		 mov	 DWORD PTR tv289[ebp], eax
  0034e	8b f4		 mov	 esi, esp
  00350	0f b6 85 b7 fe
	ff ff		 movzx	 eax, BYTE PTR tv288[ebp]
  00357	50		 push	 eax
  00358	8b 8d b0 fe ff
	ff		 mov	 ecx, DWORD PTR tv289[ebp]
  0035e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
  00364	3b f4		 cmp	 esi, esp
  00366	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0036b	89 85 ac fe ff
	ff		 mov	 DWORD PTR tv290[ebp], eax
  00371	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR tv290[ebp]
  00377	89 8d d4 fe ff
	ff		 mov	 DWORD PTR $T4[ebp], ecx
  0037d	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00382	89 85 c8 fe ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00388	8d 95 d4 fe ff
	ff		 lea	 edx, DWORD PTR $T4[ebp]
  0038e	52		 push	 edx
  0038f	8d 85 c8 fe ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  00395	50		 push	 eax
  00396	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  0039b	83 c4 08	 add	 esp, 8
  0039e	0f b6 c8	 movzx	 ecx, al
  003a1	85 c9		 test	 ecx, ecx
  003a3	74 0b		 je	 SHORT $LN15@operator

; 810  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 811  : 					{	// insertion failed, quit
; 812  : 					_State |= ios_base::badbit;

  003a5	8b 45 e8	 mov	 eax, DWORD PTR __State$[ebp]
  003a8	83 c8 04	 or	 eax, 4
  003ab	89 45 e8	 mov	 DWORD PTR __State$[ebp], eax

; 813  : 					break;

  003ae	eb 05		 jmp	 SHORT $LN14@operator
$LN15@operator:

; 814  : 					}

  003b0	e9 2d ff ff ff	 jmp	 $LN5@operator
$LN14@operator:

; 815  : 		_Ostr.width(0);

  003b5	8b f4		 mov	 esi, esp
  003b7	6a 00		 push	 0
  003b9	6a 00		 push	 0
  003bb	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  003be	8b 08		 mov	 ecx, DWORD PTR [eax]
  003c0	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  003c3	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  003c6	8b ca		 mov	 ecx, edx
  003c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
  003ce	3b f4		 cmp	 esi, esp
  003d0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003d5	eb 26		 jmp	 SHORT $LN19@operator
__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0:

; 816  : 		_CATCH_IO_(_Ostr)

  003d7	8b f4		 mov	 esi, esp
  003d9	6a 01		 push	 1
  003db	6a 04		 push	 4
  003dd	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  003e0	8b 08		 mov	 ecx, DWORD PTR [eax]
  003e2	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  003e5	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  003e8	8b ca		 mov	 ecx, edx
  003ea	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
  003f0	3b f4		 cmp	 esi, esp
  003f2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003f7	b8 00 00 00 00	 mov	 eax, $LN23@operator
  003fc	c3		 ret	 0
$LN19@operator:
  003fd	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00404	eb 07		 jmp	 SHORT $LN9@operator
$LN23@operator:
  00406	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
$LN9@operator:

; 817  : 		}
; 818  : 
; 819  : 	_Ostr.setstate(_State);

  0040d	8b f4		 mov	 esi, esp
  0040f	6a 00		 push	 0
  00411	8b 45 e8	 mov	 eax, DWORD PTR __State$[ebp]
  00414	50		 push	 eax
  00415	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  00418	8b 11		 mov	 edx, DWORD PTR [ecx]
  0041a	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  0041d	03 4a 04	 add	 ecx, DWORD PTR [edx+4]
  00420	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
  00426	3b f4		 cmp	 esi, esp
  00428	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 820  : 	return (_Ostr);

  0042d	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00430	89 85 bc fe ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  00436	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0043d	8d 4d b8	 lea	 ecx, DWORD PTR __Ok$[ebp]
  00440	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  00445	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]

; 821  : 	}

  0044b	52		 push	 edx
  0044c	8b cd		 mov	 ecx, ebp
  0044e	50		 push	 eax
  0044f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN32@operator
  00455	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0045a	58		 pop	 eax
  0045b	5a		 pop	 edx
  0045c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0045f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00466	59		 pop	 ecx
  00467	5f		 pop	 edi
  00468	5e		 pop	 esi
  00469	5b		 pop	 ebx
  0046a	81 c4 60 01 00
	00		 add	 esp, 352		; 00000160H
  00470	3b ec		 cmp	 ebp, esp
  00472	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00477	8b e5		 mov	 esp, ebp
  00479	5d		 pop	 ebp
  0047a	c3		 ret	 0
  0047b	90		 npad	 1
$LN32@operator:
  0047c	01 00 00 00	 DD	 1
  00480	00 00 00 00	 DD	 $LN31@operator
$LN31@operator:
  00484	b8 ff ff ff	 DD	 -72			; ffffffb8H
  00488	08 00 00 00	 DD	 8
  0048c	00 00 00 00	 DD	 $LN29@operator
$LN29@operator:
  00490	5f		 DB	 95			; 0000005fH
  00491	4f		 DB	 79			; 0000004fH
  00492	6b		 DB	 107			; 0000006bH
  00493	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2:
  00000	8d 4d b8	 lea	 ecx, DWORD PTR __Ok$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 9c fe ff
	ff		 mov	 ecx, DWORD PTR [edx-356]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ENDP ; std::operator<<<std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ
_TEXT	SEGMENT
tv75 = -272						; size = 4
$T2 = -264						; size = 4
$T3 = -252						; size = 4
$T4 = -240						; size = 4
__Ret$ = -36						; size = 8
__Rx$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ PROC ; std::make_shared<CCompany>, COMDAT

; 969  : 	{	// make a shared_ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8d bd f0 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-272]
  00020	b9 41 00 00 00	 mov	 ecx, 65			; 00000041H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00031	33 c5		 xor	 eax, ebp
  00033	50		 push	 eax
  00034	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00037	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003d	c7 85 f8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0

; 970  : 	_Ref_count_obj<_Ty> *_Rx =
; 971  : 		new _Ref_count_obj<_Ty>(_STD forward<_Types>(_Args)...);

  00047	68 f0 00 00 00	 push	 240			; 000000f0H
  0004c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00051	83 c4 04	 add	 esp, 4
  00054	89 85 04 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00061	83 bd 04 ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  00068	74 13		 je	 SHORT $LN3@make_share
  0006a	8b 8d 04 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  00070	e8 00 00 00 00	 call	 ??$?0$$V@?$_Ref_count_obj@VCCompany@@@std@@QAE@XZ ; std::_Ref_count_obj<CCompany>::_Ref_count_obj<CCompany><>
  00075	89 85 f0 fe ff
	ff		 mov	 DWORD PTR tv75[ebp], eax
  0007b	eb 0a		 jmp	 SHORT $LN4@make_share
$LN3@make_share:
  0007d	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN4@make_share:
  00087	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv75[ebp]
  0008d	89 85 10 ff ff
	ff		 mov	 DWORD PTR $T4[ebp], eax
  00093	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009a	8b 8d 10 ff ff
	ff		 mov	 ecx, DWORD PTR $T4[ebp]
  000a0	89 4d ec	 mov	 DWORD PTR __Rx$[ebp], ecx

; 972  : 
; 973  : 	shared_ptr<_Ty> _Ret;

  000a3	8d 4d dc	 lea	 ecx, DWORD PTR __Ret$[ebp]
  000a6	e8 00 00 00 00	 call	 ??0?$shared_ptr@VCCompany@@@std@@QAE@XZ ; std::shared_ptr<CCompany>::shared_ptr<CCompany>
  000ab	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 974  : 	_Ret._Resetp0(_Rx->_Getptr(), _Rx);

  000b2	8b 45 ec	 mov	 eax, DWORD PTR __Rx$[ebp]
  000b5	50		 push	 eax
  000b6	8b 4d ec	 mov	 ecx, DWORD PTR __Rx$[ebp]
  000b9	e8 00 00 00 00	 call	 ?_Getptr@?$_Ref_count_obj@VCCompany@@@std@@QBEPAVCCompany@@XZ ; std::_Ref_count_obj<CCompany>::_Getptr
  000be	50		 push	 eax
  000bf	8d 4d dc	 lea	 ecx, DWORD PTR __Ret$[ebp]
  000c2	e8 00 00 00 00	 call	 ??$_Resetp0@VCCompany@@@?$shared_ptr@VCCompany@@@std@@QAEXPAVCCompany@@PAV_Ref_count_base@1@@Z ; std::shared_ptr<CCompany>::_Resetp0<CCompany>

; 975  : 	return (_Ret);

  000c7	8d 45 dc	 lea	 eax, DWORD PTR __Ret$[ebp]
  000ca	50		 push	 eax
  000cb	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000ce	e8 00 00 00 00	 call	 ??0?$shared_ptr@VCCompany@@@std@@QAE@$$QAV01@@Z ; std::shared_ptr<CCompany>::shared_ptr<CCompany>
  000d3	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  000d9	83 c9 01	 or	 ecx, 1
  000dc	89 8d f8 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  000e2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e9	8d 4d dc	 lea	 ecx, DWORD PTR __Ret$[ebp]
  000ec	e8 00 00 00 00	 call	 ??1?$shared_ptr@VCCompany@@@std@@QAE@XZ ; std::shared_ptr<CCompany>::~shared_ptr<CCompany>
  000f1	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 976  : 	}

  000f4	52		 push	 edx
  000f5	8b cd		 mov	 ecx, ebp
  000f7	50		 push	 eax
  000f8	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@make_share
  000fe	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00103	58		 pop	 eax
  00104	5a		 pop	 edx
  00105	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00108	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0010f	59		 pop	 ecx
  00110	5f		 pop	 edi
  00111	5e		 pop	 esi
  00112	5b		 pop	 ebx
  00113	81 c4 10 01 00
	00		 add	 esp, 272		; 00000110H
  00119	3b ec		 cmp	 ebp, esp
  0011b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00120	8b e5		 mov	 esp, ebp
  00122	5d		 pop	 ebp
  00123	c3		 ret	 0
$LN12@make_share:
  00124	01 00 00 00	 DD	 1
  00128	00 00 00 00	 DD	 $LN11@make_share
$LN11@make_share:
  0012c	dc ff ff ff	 DD	 -36			; ffffffdcH
  00130	08 00 00 00	 DD	 8
  00134	00 00 00 00	 DD	 $LN9@make_share
$LN9@make_share:
  00138	5f		 DB	 95			; 0000005fH
  00139	52		 DB	 82			; 00000052H
  0013a	65		 DB	 101			; 00000065H
  0013b	74		 DB	 116			; 00000074H
  0013c	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ$0:
  00000	68 f0 00 00 00	 push	 240			; 000000f0H
  00005	8b 85 04 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00011	83 c4 08	 add	 esp, 8
  00014	c3		 ret	 0
__unwindfunclet$??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ$1:
  00015	8d 4d dc	 lea	 ecx, DWORD PTR __Ret$[ebp]
  00018	e9 00 00 00 00	 jmp	 ??1?$shared_ptr@VCCompany@@@std@@QAE@XZ ; std::shared_ptr<CCompany>::~shared_ptr<CCompany>
__ehhandler$??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ:
  0001d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00021	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00024	8b 8a ec fe ff
	ff		 mov	 ecx, DWORD PTR [edx-276]
  0002a	33 c8		 xor	 ecx, eax
  0002c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00031	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ
  00036	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ ENDP ; std::make_shared<CCompany>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ
_TEXT	SEGMENT
tv75 = -272						; size = 4
$T2 = -264						; size = 4
$T3 = -252						; size = 4
$T4 = -240						; size = 4
__Ret$ = -36						; size = 8
__Rx$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ PROC ; std::make_shared<CPerson>, COMDAT

; 969  : 	{	// make a shared_ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8d bd f0 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-272]
  00020	b9 41 00 00 00	 mov	 ecx, 65			; 00000041H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00031	33 c5		 xor	 eax, ebp
  00033	50		 push	 eax
  00034	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00037	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003d	c7 85 f8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0

; 970  : 	_Ref_count_obj<_Ty> *_Rx =
; 971  : 		new _Ref_count_obj<_Ty>(_STD forward<_Types>(_Args)...);

  00047	68 2c 01 00 00	 push	 300			; 0000012cH
  0004c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00051	83 c4 04	 add	 esp, 4
  00054	89 85 04 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00061	83 bd 04 ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  00068	74 13		 je	 SHORT $LN3@make_share
  0006a	8b 8d 04 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  00070	e8 00 00 00 00	 call	 ??$?0$$V@?$_Ref_count_obj@VCPerson@@@std@@QAE@XZ ; std::_Ref_count_obj<CPerson>::_Ref_count_obj<CPerson><>
  00075	89 85 f0 fe ff
	ff		 mov	 DWORD PTR tv75[ebp], eax
  0007b	eb 0a		 jmp	 SHORT $LN4@make_share
$LN3@make_share:
  0007d	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN4@make_share:
  00087	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv75[ebp]
  0008d	89 85 10 ff ff
	ff		 mov	 DWORD PTR $T4[ebp], eax
  00093	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009a	8b 8d 10 ff ff
	ff		 mov	 ecx, DWORD PTR $T4[ebp]
  000a0	89 4d ec	 mov	 DWORD PTR __Rx$[ebp], ecx

; 972  : 
; 973  : 	shared_ptr<_Ty> _Ret;

  000a3	8d 4d dc	 lea	 ecx, DWORD PTR __Ret$[ebp]
  000a6	e8 00 00 00 00	 call	 ??0?$shared_ptr@VCPerson@@@std@@QAE@XZ ; std::shared_ptr<CPerson>::shared_ptr<CPerson>
  000ab	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 974  : 	_Ret._Resetp0(_Rx->_Getptr(), _Rx);

  000b2	8b 45 ec	 mov	 eax, DWORD PTR __Rx$[ebp]
  000b5	50		 push	 eax
  000b6	8b 4d ec	 mov	 ecx, DWORD PTR __Rx$[ebp]
  000b9	e8 00 00 00 00	 call	 ?_Getptr@?$_Ref_count_obj@VCPerson@@@std@@QBEPAVCPerson@@XZ ; std::_Ref_count_obj<CPerson>::_Getptr
  000be	50		 push	 eax
  000bf	8d 4d dc	 lea	 ecx, DWORD PTR __Ret$[ebp]
  000c2	e8 00 00 00 00	 call	 ??$_Resetp0@VCPerson@@@?$shared_ptr@VCPerson@@@std@@QAEXPAVCPerson@@PAV_Ref_count_base@1@@Z ; std::shared_ptr<CPerson>::_Resetp0<CPerson>

; 975  : 	return (_Ret);

  000c7	8d 45 dc	 lea	 eax, DWORD PTR __Ret$[ebp]
  000ca	50		 push	 eax
  000cb	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000ce	e8 00 00 00 00	 call	 ??0?$shared_ptr@VCPerson@@@std@@QAE@$$QAV01@@Z ; std::shared_ptr<CPerson>::shared_ptr<CPerson>
  000d3	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  000d9	83 c9 01	 or	 ecx, 1
  000dc	89 8d f8 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  000e2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e9	8d 4d dc	 lea	 ecx, DWORD PTR __Ret$[ebp]
  000ec	e8 00 00 00 00	 call	 ??1?$shared_ptr@VCPerson@@@std@@QAE@XZ ; std::shared_ptr<CPerson>::~shared_ptr<CPerson>
  000f1	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 976  : 	}

  000f4	52		 push	 edx
  000f5	8b cd		 mov	 ecx, ebp
  000f7	50		 push	 eax
  000f8	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@make_share
  000fe	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00103	58		 pop	 eax
  00104	5a		 pop	 edx
  00105	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00108	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0010f	59		 pop	 ecx
  00110	5f		 pop	 edi
  00111	5e		 pop	 esi
  00112	5b		 pop	 ebx
  00113	81 c4 10 01 00
	00		 add	 esp, 272		; 00000110H
  00119	3b ec		 cmp	 ebp, esp
  0011b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00120	8b e5		 mov	 esp, ebp
  00122	5d		 pop	 ebp
  00123	c3		 ret	 0
$LN12@make_share:
  00124	01 00 00 00	 DD	 1
  00128	00 00 00 00	 DD	 $LN11@make_share
$LN11@make_share:
  0012c	dc ff ff ff	 DD	 -36			; ffffffdcH
  00130	08 00 00 00	 DD	 8
  00134	00 00 00 00	 DD	 $LN9@make_share
$LN9@make_share:
  00138	5f		 DB	 95			; 0000005fH
  00139	52		 DB	 82			; 00000052H
  0013a	65		 DB	 101			; 00000065H
  0013b	74		 DB	 116			; 00000074H
  0013c	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ$0:
  00000	68 2c 01 00 00	 push	 300			; 0000012cH
  00005	8b 85 04 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00011	83 c4 08	 add	 esp, 8
  00014	c3		 ret	 0
__unwindfunclet$??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ$1:
  00015	8d 4d dc	 lea	 ecx, DWORD PTR __Ret$[ebp]
  00018	e9 00 00 00 00	 jmp	 ??1?$shared_ptr@VCPerson@@@std@@QAE@XZ ; std::shared_ptr<CPerson>::~shared_ptr<CPerson>
__ehhandler$??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ:
  0001d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00021	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00024	8b 8a ec fe ff
	ff		 mov	 ecx, DWORD PTR [edx-276]
  0002a	33 c8		 xor	 ecx, eax
  0002c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00031	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ
  00036	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ ENDP ; std::make_shared<CPerson>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z
_TEXT	SEGMENT
tv81 = -236						; size = 4
tv82 = -232						; size = 4
$T2 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Fx$ = 8						; size = 4
_<_Ax_0>$ = 12						; size = 4
_<_Ax_1>$ = 16						; size = 4
??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z PROC ; std::thread::thread<void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,void>, COMDAT
; _this$ = ecx

; 47   : 		{	// construct with _Fx(_Ax...)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e0 00 00
	00		 sub	 esp, 224		; 000000e0H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 14 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-236]
  00021	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 48   : 		_Launch(&_Thr,

  00042	8b 45 10	 mov	 eax, DWORD PTR _<_Ax_1>$[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  0004b	83 c4 04	 add	 esp, 4
  0004e	50		 push	 eax
  0004f	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Ax_0>$[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ??$forward@PAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@YA$$QAPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAPAV10@@Z ; std::forward<std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *>
  00058	83 c4 04	 add	 esp, 4
  0005b	50		 push	 eax
  0005c	8b 55 08	 mov	 edx, DWORD PTR __Fx$[ebp]
  0005f	52		 push	 edx
  00060	e8 00 00 00 00	 call	 ??$forward@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@std@@YAA6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@ZA6AX01@Z@Z ; std::forward<void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &)>
  00065	83 c4 04	 add	 esp, 4
  00068	50		 push	 eax
  00069	8d 85 20 ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ??$make_unique@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV32@AAV42@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$$QAPAV20@1@Z ; std::make_unique<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  00075	83 c4 10	 add	 esp, 16			; 00000010H
  00078	89 85 18 ff ff
	ff		 mov	 DWORD PTR tv82[ebp], eax
  0007e	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR tv82[ebp]
  00084	89 8d 14 ff ff
	ff		 mov	 DWORD PTR tv81[ebp], ecx
  0008a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00091	8b 95 14 ff ff
	ff		 mov	 edx, DWORD PTR tv81[ebp]
  00097	52		 push	 edx
  00098	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	50		 push	 eax
  0009c	e8 00 00 00 00	 call	 ??$_Launch@V?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@@std@@YAXPAU_Thrd_imp_t@@$$QAV?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@0@@Z ; std::_Launch<std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
  000a1	83 c4 08	 add	 esp, 8
  000a4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ab	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  000b1	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >

; 49   : 			_STD make_unique<tuple<decay_t<_Fn>, decay_t<_Args>...> >(
; 50   : 				_STD forward<_Fn>(_Fx), _STD forward<_Args>(_Ax)...));
; 51   : 		}

  000b6	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c3	59		 pop	 ecx
  000c4	5f		 pop	 edi
  000c5	5e		 pop	 esi
  000c6	5b		 pop	 ebx
  000c7	81 c4 ec 00 00
	00		 add	 esp, 236		; 000000ecH
  000cd	3b ec		 cmp	 ebp, esp
  000cf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d4	8b e5		 mov	 esp, ebp
  000d6	5d		 pop	 ebp
  000d7	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z$0:
  00000	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$unique_ptr@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@U?$default_delete@V?$tuple@P6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@ZPAV12@V32@@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~unique_ptr<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::default_delete<std::tuple<void (__cdecl*)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
__ehhandler$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 10 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-240]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z ENDP ; std::thread::thread<void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,void>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\main.cpp
;	COMDAT _main
_TEXT	SEGMENT
tv695 = -1285						; size = 1
tv670 = -1285						; size = 1
tv711 = -1284						; size = 4
tv707 = -1284						; size = 4
tv704 = -1284						; size = 4
tv697 = -1284						; size = 4
tv694 = -1284						; size = 4
tv691 = -1284						; size = 4
tv686 = -1284						; size = 4
tv683 = -1284						; size = 4
tv677 = -1284						; size = 4
tv672 = -1284						; size = 4
tv669 = -1284						; size = 4
tv666 = -1284						; size = 4
tv661 = -1284						; size = 4
tv658 = -1284						; size = 4
tv654 = -1284						; size = 4
tv651 = -1284						; size = 4
tv685 = -1280						; size = 4
tv676 = -1280						; size = 4
tv660 = -1280						; size = 4
tv631 = -1280						; size = 4
tv604 = -1280						; size = 4
tv575 = -1280						; size = 4
tv563 = -1280						; size = 4
tv531 = -1280						; size = 4
tv518 = -1280						; size = 4
tv506 = -1280						; size = 4
tv452 = -1280						; size = 4
tv393 = -1280						; size = 4
tv389 = -1280						; size = 4
tv366 = -1280						; size = 4
tv339 = -1280						; size = 4
tv245 = -1280						; size = 4
tv218 = -1280						; size = 4
tv214 = -1280						; size = 4
tv191 = -1280						; size = 4
tv164 = -1280						; size = 4
tv94 = -1280						; size = 4
tv91 = -1280						; size = 4
tv87 = -1280						; size = 4
tv75 = -1280						; size = 4
$T2 = -1272						; size = 4
$T3 = -1260						; size = 12
$T4 = -1237						; size = 1
$T5 = -1228						; size = 12
$T6 = -1205						; size = 1
$T7 = -1196						; size = 12
$T8 = -1176						; size = 12
$T9 = -1153						; size = 1
$T10 = -1144						; size = 4
$T11 = -1132						; size = 12
$T12 = -1109						; size = 1
$T13 = -1100						; size = 4
$T14 = -1088						; size = 12
$T15 = -1065						; size = 1
$T16 = -1056						; size = 12
$T17 = -1036						; size = 4
$T18 = -1024						; size = 12
$T19 = -1001						; size = 1
$T20 = -992						; size = 4
$T21 = -980						; size = 12
$T22 = -957						; size = 1
$T23 = -948						; size = 4
$T24 = -936						; size = 12
$T25 = -913						; size = 1
$T26 = -904						; size = 8
$T27 = -888						; size = 8
$T28 = -872						; size = 8
$T29 = -856						; size = 8
$T30 = -840						; size = 4
_it$31 = -444						; size = 12
_it$32 = -424						; size = 12
_found$33 = -401					; size = 1
_contactName$34 = -392					; size = 28
_it$35 = -356						; size = 12
_foundContact$36 = -336					; size = 12
_contactName$37 = -316					; size = 28
_it$38 = -280						; size = 12
_it$39 = -260						; size = 12
_foundContact$40 = -240					; size = 12
_contactName$41 = -220					; size = 28
_it$42 = -184						; size = 12
_subMenuChoice$43 = -161				; size = 1
_menuChoice$44 = -149					; size = 1
_exit$ = -137						; size = 1
_contactListFromFile$ = -128				; size = 8
_contactFileName$ = -112				; size = 28
_contactList$ = -76					; size = 16
_UI$ = -52						; size = 32
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_main	PROC						; COMDAT

; 20   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$_main
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec fc 04 00
	00		 sub	 esp, 1276		; 000004fcH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8d bd f8 fa ff
	ff		 lea	 edi, DWORD PTR [ebp-1288]
  00020	b9 3f 01 00 00	 mov	 ecx, 319		; 0000013fH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00031	33 c5		 xor	 eax, ebp
  00033	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00036	50		 push	 eax
  00037	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 21   : 	// User interface for the main menu and splash screen
; 22   : 	CUserInterface UI;

  00040	8d 4d cc	 lea	 ecx, DWORD PTR _UI$[ebp]
  00043	e8 00 00 00 00	 call	 ??0CUserInterface@@QAE@XZ ; CUserInterface::CUserInterface
  00048	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 23   : 	// Uses a pointer to a contact so that it can store both CPerson and CCompany contacts
; 24   : 	vector<shared_ptr<CContact>> contactList;

  0004f	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  00052	e8 00 00 00 00	 call	 ??0?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >
  00057	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 25   : 	// Prefix for person and company contact files
; 26   : 	string contactFileName = "contactList";

  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IKMOJNDM@contactList?$AA@
  00060	8d 4d 90	 lea	 ecx, DWORD PTR _contactFileName$[ebp]
  00063	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00068	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 27   : 
; 28   : 	// Get the contact list from the files
; 29   : 	// Run this in a thread while the splash screen shows
; 30   : 	thread contactListFromFile(getContactList, &contactList, contactFileName);

  0006c	8d 45 b4	 lea	 eax, DWORD PTR _contactList$[ebp]
  0006f	89 85 b8 fc ff
	ff		 mov	 DWORD PTR $T30[ebp], eax
  00075	8d 4d 90	 lea	 ecx, DWORD PTR _contactFileName$[ebp]
  00078	51		 push	 ecx
  00079	8d 95 b8 fc ff
	ff		 lea	 edx, DWORD PTR $T30[ebp]
  0007f	52		 push	 edx
  00080	68 00 00 00 00	 push	 OFFSET ?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; getContactList
  00085	8d 4d 80	 lea	 ecx, DWORD PTR _contactListFromFile$[ebp]
  00088	e8 00 00 00 00	 call	 ??$?0A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@ZPAV01@AAV21@X@thread@std@@QAE@A6AXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$$QAPAV21@1@Z ; std::thread::thread<void (__cdecl&)(std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &),std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,void>
  0008d	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 31   : 
; 32   : 	// Display the splash screen
; 33   : 	UI.displayStartScreen();

  00091	8d 4d cc	 lea	 ecx, DWORD PTR _UI$[ebp]
  00094	e8 00 00 00 00	 call	 ?displayStartScreen@CUserInterface@@QAEXXZ ; CUserInterface::displayStartScreen

; 34   : 
; 35   : 	// Join the thread so once the file finishes loading the menu gets displayed
; 36   : 	contactListFromFile.join();

  00099	8d 4d 80	 lea	 ecx, DWORD PTR _contactListFromFile$[ebp]
  0009c	e8 00 00 00 00	 call	 ?join@thread@std@@QAEXXZ ; std::thread::join

; 37   : 
; 38   : 	bool exit = false;

  000a1	c6 85 77 ff ff
	ff 00		 mov	 BYTE PTR _exit$[ebp], 0
$LN2@main:

; 39   : 	while (!exit)

  000a8	0f b6 85 77 ff
	ff ff		 movzx	 eax, BYTE PTR _exit$[ebp]
  000af	85 c0		 test	 eax, eax
  000b1	0f 85 65 0d 00
	00		 jne	 $LN3@main

; 40   : 	{
; 41   : 		// Get the menu choice from the user
; 42   : 		char menuChoice = UI.displayMainMenu();

  000b7	8d 4d cc	 lea	 ecx, DWORD PTR _UI$[ebp]
  000ba	e8 00 00 00 00	 call	 ?displayMainMenu@CUserInterface@@QAEDXZ ; CUserInterface::displayMainMenu
  000bf	88 85 6b ff ff
	ff		 mov	 BYTE PTR _menuChoice$44[ebp], al

; 43   : 
; 44   : 		switch (menuChoice) {

  000c5	0f be 85 6b ff
	ff ff		 movsx	 eax, BYTE PTR _menuChoice$44[ebp]
  000cc	89 85 00 fb ff
	ff		 mov	 DWORD PTR tv87[ebp], eax
  000d2	8b 8d 00 fb ff
	ff		 mov	 ecx, DWORD PTR tv87[ebp]
  000d8	83 e9 41	 sub	 ecx, 65			; 00000041H
  000db	89 8d 00 fb ff
	ff		 mov	 DWORD PTR tv87[ebp], ecx
  000e1	83 bd 00 fb ff
	ff 05		 cmp	 DWORD PTR tv87[ebp], 5
  000e8	0f 87 29 0d 00
	00		 ja	 $LN4@main
  000ee	8b 95 00 fb ff
	ff		 mov	 edx, DWORD PTR tv87[ebp]
  000f4	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN97@main[edx*4]
$LN26@main:

; 45   : 		// Add a contact
; 46   : 		case 'A':
; 47   : 		{
; 48   : 			// Prompt the user for the submenu choice (person or company)
; 49   : 			char subMenuChoice = UI.displayContactChoiceMenu();

  000fb	8d 4d cc	 lea	 ecx, DWORD PTR _UI$[ebp]
  000fe	e8 00 00 00 00	 call	 ?displayContactChoiceMenu@CUserInterface@@QAEDXZ ; CUserInterface::displayContactChoiceMenu
  00103	88 85 5f ff ff
	ff		 mov	 BYTE PTR _subMenuChoice$43[ebp], al

; 50   : 
; 51   : 			switch (subMenuChoice)

  00109	8a 85 5f ff ff
	ff		 mov	 al, BYTE PTR _subMenuChoice$43[ebp]
  0010f	88 85 00 fb ff
	ff		 mov	 BYTE PTR tv91[ebp], al
  00115	80 bd 00 fb ff
	ff 41		 cmp	 BYTE PTR tv91[ebp], 65	; 00000041H
  0011c	74 0e		 je	 SHORT $LN27@main
  0011e	80 bd 00 fb ff
	ff 42		 cmp	 BYTE PTR tv91[ebp], 66	; 00000042H
  00125	74 7f		 je	 SHORT $LN28@main
  00127	e9 f2 00 00 00	 jmp	 $LN6@main
$LN27@main:

; 52   : 			{
; 53   : 				// Add a person
; 54   : 			case 'A':
; 55   : 				contactList.push_back(make_shared<CPerson>());

  0012c	8d 85 98 fc ff
	ff		 lea	 eax, DWORD PTR $T28[ebp]
  00132	50		 push	 eax
  00133	e8 00 00 00 00	 call	 ??$make_shared@VCPerson@@$$V@std@@YA?AV?$shared_ptr@VCPerson@@@0@XZ ; std::make_shared<CPerson>
  00138	83 c4 04	 add	 esp, 4
  0013b	89 85 00 fb ff
	ff		 mov	 DWORD PTR tv75[ebp], eax
  00141	8b 8d 00 fb ff
	ff		 mov	 ecx, DWORD PTR tv75[ebp]
  00147	89 8d fc fa ff
	ff		 mov	 DWORD PTR tv651[ebp], ecx
  0014d	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00151	8b 95 fc fa ff
	ff		 mov	 edx, DWORD PTR tv651[ebp]
  00157	52		 push	 edx
  00158	8d 8d a8 fc ff
	ff		 lea	 ecx, DWORD PTR $T29[ebp]
  0015e	e8 00 00 00 00	 call	 ??$?0VCPerson@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCPerson@@@1@@Z ; std::shared_ptr<CContact>::shared_ptr<CContact><CPerson,void>
  00163	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00167	8d 85 a8 fc ff
	ff		 lea	 eax, DWORD PTR $T29[ebp]
  0016d	50		 push	 eax
  0016e	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  00171	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAEX$$QAV?$shared_ptr@VCContact@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::push_back
  00176	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  0017a	8d 8d a8 fc ff
	ff		 lea	 ecx, DWORD PTR $T29[ebp]
  00180	e8 00 00 00 00	 call	 ??1?$shared_ptr@VCContact@@@std@@QAE@XZ ; std::shared_ptr<CContact>::~shared_ptr<CContact>
  00185	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00189	8d 8d 98 fc ff
	ff		 lea	 ecx, DWORD PTR $T28[ebp]
  0018f	e8 00 00 00 00	 call	 ??1?$shared_ptr@VCPerson@@@std@@QAE@XZ ; std::shared_ptr<CPerson>::~shared_ptr<CPerson>

; 56   : 				updateContactLists(contactList, contactFileName);

  00194	8d 45 90	 lea	 eax, DWORD PTR _contactFileName$[ebp]
  00197	50		 push	 eax
  00198	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  0019b	51		 push	 ecx
  0019c	e8 00 00 00 00	 call	 ?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; updateContactLists
  001a1	83 c4 08	 add	 esp, 8

; 57   : 				break;

  001a4	eb 78		 jmp	 SHORT $LN6@main
$LN28@main:

; 58   : 				// Add a company
; 59   : 			case 'B':
; 60   : 				contactList.push_back(make_shared<CCompany>());

  001a6	8d 85 78 fc ff
	ff		 lea	 eax, DWORD PTR $T26[ebp]
  001ac	50		 push	 eax
  001ad	e8 00 00 00 00	 call	 ??$make_shared@VCCompany@@$$V@std@@YA?AV?$shared_ptr@VCCompany@@@0@XZ ; std::make_shared<CCompany>
  001b2	83 c4 04	 add	 esp, 4
  001b5	89 85 00 fb ff
	ff		 mov	 DWORD PTR tv94[ebp], eax
  001bb	8b 8d 00 fb ff
	ff		 mov	 ecx, DWORD PTR tv94[ebp]
  001c1	89 8d fc fa ff
	ff		 mov	 DWORD PTR tv654[ebp], ecx
  001c7	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  001cb	8b 95 fc fa ff
	ff		 mov	 edx, DWORD PTR tv654[ebp]
  001d1	52		 push	 edx
  001d2	8d 8d 88 fc ff
	ff		 lea	 ecx, DWORD PTR $T27[ebp]
  001d8	e8 00 00 00 00	 call	 ??$?0VCCompany@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCCompany@@@1@@Z ; std::shared_ptr<CContact>::shared_ptr<CContact><CCompany,void>
  001dd	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  001e1	8d 85 88 fc ff
	ff		 lea	 eax, DWORD PTR $T27[ebp]
  001e7	50		 push	 eax
  001e8	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  001eb	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAEX$$QAV?$shared_ptr@VCContact@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::push_back
  001f0	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  001f4	8d 8d 88 fc ff
	ff		 lea	 ecx, DWORD PTR $T27[ebp]
  001fa	e8 00 00 00 00	 call	 ??1?$shared_ptr@VCContact@@@std@@QAE@XZ ; std::shared_ptr<CContact>::~shared_ptr<CContact>
  001ff	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00203	8d 8d 78 fc ff
	ff		 lea	 ecx, DWORD PTR $T26[ebp]
  00209	e8 00 00 00 00	 call	 ??1?$shared_ptr@VCCompany@@@std@@QAE@XZ ; std::shared_ptr<CCompany>::~shared_ptr<CCompany>

; 61   : 				updateContactLists(contactList, contactFileName);

  0020e	8d 45 90	 lea	 eax, DWORD PTR _contactFileName$[ebp]
  00211	50		 push	 eax
  00212	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  00215	51		 push	 ecx
  00216	e8 00 00 00 00	 call	 ?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; updateContactLists
  0021b	83 c4 08	 add	 esp, 8
$LN6@main:

; 62   : 				break;
; 63   : 				// Go back
; 64   : 			case 'C':
; 65   : 				break;
; 66   : 			}
; 67   : 
; 68   : 			break;

  0021e	e9 f4 0b 00 00	 jmp	 $LN4@main
$LN30@main:

; 69   : 		}
; 70   : 		// Remove a contact
; 71   : 		case 'B':
; 72   : 		{
; 73   : 			// Check if any contacts even exist
; 74   : 			if (contactList.size() == 0)

  00223	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  00226	e8 00 00 00 00	 call	 ?size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::size
  0022b	85 c0		 test	 eax, eax
  0022d	75 45		 jne	 SHORT $LN31@main

; 75   : 			{
; 76   : 				cout << "You don't have any contacts to remove" << endl;

  0022f	8b f4		 mov	 esi, esp
  00231	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  00236	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@MNNPHAFE@You?5don?8t?5have?5any?5contacts?5to?5r@
  0023b	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00240	50		 push	 eax
  00241	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00246	83 c4 08	 add	 esp, 8
  00249	8b c8		 mov	 ecx, eax
  0024b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  00251	3b f4		 cmp	 esi, esp
  00253	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 77   : 				system("pause");

  00258	8b f4		 mov	 esi, esp
  0025a	68 00 00 00 00	 push	 OFFSET ??_C@_05PDJBBECF@pause?$AA@
  0025f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__system
  00265	83 c4 04	 add	 esp, 4
  00268	3b f4		 cmp	 esi, esp
  0026a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 78   : 				break;

  0026f	e9 a3 0b 00 00	 jmp	 $LN4@main
$LN31@main:

; 79   : 			}
; 80   : 
; 81   : 			cout << endl;

  00274	8b f4		 mov	 esi, esp
  00276	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  0027b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00281	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  00287	3b f4		 cmp	 esi, esp
  00289	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 82   : 
; 83   : 			// Display all the contacts so the user can choose from one
; 84   : 			for (vector<shared_ptr<CContact>>::iterator it = contactList.begin(); it != contactList.end(); ++it)

  0028e	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR _it$42[ebp]
  00294	50		 push	 eax
  00295	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  00298	e8 00 00 00 00	 call	 ?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::begin
  0029d	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  002a1	eb 0b		 jmp	 SHORT $LN10@main
$LN8@main:
  002a3	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR _it$42[ebp]
  002a9	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++
$LN10@main:
  002ae	8d 85 58 fc ff
	ff		 lea	 eax, DWORD PTR $T24[ebp]
  002b4	50		 push	 eax
  002b5	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  002b8	e8 00 00 00 00	 call	 ?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
  002bd	89 85 00 fb ff
	ff		 mov	 DWORD PTR tv164[ebp], eax
  002c3	8b 8d 00 fb ff
	ff		 mov	 ecx, DWORD PTR tv164[ebp]
  002c9	89 8d fc fa ff
	ff		 mov	 DWORD PTR tv658[ebp], ecx
  002cf	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  002d3	8b 95 fc fa ff
	ff		 mov	 edx, DWORD PTR tv658[ebp]
  002d9	52		 push	 edx
  002da	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR _it$42[ebp]
  002e0	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator!=
  002e5	88 85 6f fc ff
	ff		 mov	 BYTE PTR $T25[ebp], al
  002eb	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  002ef	8d 8d 58 fc ff
	ff		 lea	 ecx, DWORD PTR $T24[ebp]
  002f5	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
  002fa	0f b6 85 6f fc
	ff ff		 movzx	 eax, BYTE PTR $T25[ebp]
  00301	85 c0		 test	 eax, eax
  00303	74 39		 je	 SHORT $LN9@main

; 85   : 			{
; 86   : 				(*it)->displayName();

  00305	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR _it$42[ebp]
  0030b	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
  00310	8b c8		 mov	 ecx, eax
  00312	e8 00 00 00 00	 call	 ??C?$shared_ptr@VCContact@@@std@@QBEPAVCContact@@XZ ; std::shared_ptr<CContact>::operator->
  00317	89 85 00 fb ff
	ff		 mov	 DWORD PTR tv191[ebp], eax
  0031d	8b 85 00 fb ff
	ff		 mov	 eax, DWORD PTR tv191[ebp]
  00323	8b 10		 mov	 edx, DWORD PTR [eax]
  00325	8b f4		 mov	 esi, esp
  00327	8b 8d 00 fb ff
	ff		 mov	 ecx, DWORD PTR tv191[ebp]
  0032d	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00330	ff d0		 call	 eax
  00332	3b f4		 cmp	 esi, esp
  00334	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00339	e9 65 ff ff ff	 jmp	 $LN8@main
$LN9@main:

; 87   : 			}

  0033e	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00342	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR _it$42[ebp]
  00348	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ

; 88   : 
; 89   : 			cout << endl;

  0034d	8b f4		 mov	 esi, esp
  0034f	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  00354	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  0035a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  00360	3b f4		 cmp	 esi, esp
  00362	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 90   : 
; 91   : 			// Prompt the user for the name of the contact they want to remove
; 92   : 			string contactName = CUserInterface::getUserInput("Enter the name of the person or company you would like to remove from the contact list:\n");

  00367	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0036a	8b cc		 mov	 ecx, esp
  0036c	89 a5 4c fc ff
	ff		 mov	 DWORD PTR $T23[ebp], esp
  00372	68 00 00 00 00	 push	 OFFSET ??_C@_0FJ@GBCKFMI@Enter?5the?5name?5of?5the?5person?5or?5@
  00377	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0037c	89 85 00 fb ff
	ff		 mov	 DWORD PTR tv660[ebp], eax
  00382	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _contactName$41[ebp]
  00388	50		 push	 eax
  00389	e8 00 00 00 00	 call	 ?getUserInput@CUserInterface@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z ; CUserInterface::getUserInput
  0038e	83 c4 20	 add	 esp, 32			; 00000020H
  00391	89 85 fc fa ff
	ff		 mov	 DWORD PTR tv661[ebp], eax
  00397	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH

; 93   : 
; 94   : 			// Set the "found contact" to the end of the vector
; 95   : 			vector<shared_ptr<CContact>>::iterator foundContact = contactList.end();

  0039b	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _foundContact$40[ebp]
  003a1	50		 push	 eax
  003a2	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  003a5	e8 00 00 00 00	 call	 ?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
  003aa	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH

; 96   : 
; 97   : 			// Loop through the vector and try to find what the user entered
; 98   : 			for (vector<shared_ptr<CContact>>::iterator it = contactList.begin(); it != contactList.end(); ++it)

  003ae	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _it$39[ebp]
  003b4	50		 push	 eax
  003b5	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  003b8	e8 00 00 00 00	 call	 ?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::begin
  003bd	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  003c1	eb 0b		 jmp	 SHORT $LN13@main
$LN11@main:
  003c3	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _it$39[ebp]
  003c9	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++
$LN13@main:
  003ce	8d 85 2c fc ff
	ff		 lea	 eax, DWORD PTR $T21[ebp]
  003d4	50		 push	 eax
  003d5	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  003d8	e8 00 00 00 00	 call	 ?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
  003dd	89 85 00 fb ff
	ff		 mov	 DWORD PTR tv218[ebp], eax
  003e3	8b 8d 00 fb ff
	ff		 mov	 ecx, DWORD PTR tv218[ebp]
  003e9	89 8d fc fa ff
	ff		 mov	 DWORD PTR tv666[ebp], ecx
  003ef	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  003f3	8b 95 fc fa ff
	ff		 mov	 edx, DWORD PTR tv666[ebp]
  003f9	52		 push	 edx
  003fa	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _it$39[ebp]
  00400	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator!=
  00405	88 85 43 fc ff
	ff		 mov	 BYTE PTR $T22[ebp], al
  0040b	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  0040f	8d 8d 2c fc ff
	ff		 lea	 ecx, DWORD PTR $T21[ebp]
  00415	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
  0041a	0f b6 85 43 fc
	ff ff		 movzx	 eax, BYTE PTR $T22[ebp]
  00421	85 c0		 test	 eax, eax
  00423	74 72		 je	 SHORT $LN12@main

; 99   : 			{
; 100  : 				// If the contact was found, set the "found contact" iterator to the current iterator
; 101  : 				if (*(*it) == contactName)

  00425	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _it$39[ebp]
  0042b	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
  00430	8b c8		 mov	 ecx, eax
  00432	e8 00 00 00 00	 call	 ??D?$shared_ptr@VCContact@@@std@@QBEAAVCContact@@XZ ; std::shared_ptr<CContact>::operator*
  00437	89 85 00 fb ff
	ff		 mov	 DWORD PTR tv245[ebp], eax
  0043d	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00440	8b cc		 mov	 ecx, esp
  00442	89 a5 20 fc ff
	ff		 mov	 DWORD PTR $T20[ebp], esp
  00448	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _contactName$41[ebp]
  0044e	50		 push	 eax
  0044f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00454	89 85 fc fa ff
	ff		 mov	 DWORD PTR tv669[ebp], eax
  0045a	8b 8d 00 fb ff
	ff		 mov	 ecx, DWORD PTR tv245[ebp]
  00460	8b 11		 mov	 edx, DWORD PTR [ecx]
  00462	8b 8d 00 fb ff
	ff		 mov	 ecx, DWORD PTR tv245[ebp]
  00468	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0046b	ff d0		 call	 eax
  0046d	88 85 fb fa ff
	ff		 mov	 BYTE PTR tv670[ebp], al
  00473	0f b6 8d fb fa
	ff ff		 movzx	 ecx, BYTE PTR tv670[ebp]
  0047a	85 c9		 test	 ecx, ecx
  0047c	74 14		 je	 SHORT $LN32@main

; 102  : 				{
; 103  : 					foundContact = it;

  0047e	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _it$39[ebp]
  00484	50		 push	 eax
  00485	8d 8d 10 ff ff
	ff		 lea	 ecx, DWORD PTR _foundContact$40[ebp]
  0048b	e8 00 00 00 00	 call	 ??4?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z

; 104  : 					break;

  00490	eb 05		 jmp	 SHORT $LN12@main
$LN32@main:

; 105  : 				}

  00492	e9 2c ff ff ff	 jmp	 $LN11@main
$LN12@main:

; 106  : 			}

  00497	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  0049b	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _it$39[ebp]
  004a1	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ

; 107  : 
; 108  : 			// The contact wasn't found because "found contact" is still set to the end of the vector
; 109  : 			if (foundContact == contactList.end())

  004a6	8d 85 00 fc ff
	ff		 lea	 eax, DWORD PTR $T18[ebp]
  004ac	50		 push	 eax
  004ad	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  004b0	e8 00 00 00 00	 call	 ?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
  004b5	89 85 00 fb ff
	ff		 mov	 DWORD PTR tv214[ebp], eax
  004bb	8b 8d 00 fb ff
	ff		 mov	 ecx, DWORD PTR tv214[ebp]
  004c1	89 8d fc fa ff
	ff		 mov	 DWORD PTR tv672[ebp], ecx
  004c7	c6 45 fc 0e	 mov	 BYTE PTR __$EHRec$[ebp+8], 14 ; 0000000eH
  004cb	8b 95 fc fa ff
	ff		 mov	 edx, DWORD PTR tv672[ebp]
  004d1	52		 push	 edx
  004d2	8d 8d 10 ff ff
	ff		 lea	 ecx, DWORD PTR _foundContact$40[ebp]
  004d8	e8 00 00 00 00	 call	 ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator==
  004dd	88 85 17 fc ff
	ff		 mov	 BYTE PTR $T19[ebp], al
  004e3	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  004e7	8d 8d 00 fc ff
	ff		 lea	 ecx, DWORD PTR $T18[ebp]
  004ed	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
  004f2	0f b6 85 17 fc
	ff ff		 movzx	 eax, BYTE PTR $T19[ebp]
  004f9	85 c0		 test	 eax, eax
  004fb	74 78		 je	 SHORT $LN33@main

; 110  : 			{
; 111  : 				cout << endl << "That contact was not found in your contact list" << endl;

  004fd	8b f4		 mov	 esi, esp
  004ff	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  00504	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@FLPABHKE@That?5contact?5was?5not?5found?5in?5yo@
  00509	8b fc		 mov	 edi, esp
  0050b	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  00510	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00516	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  0051c	3b fc		 cmp	 edi, esp
  0051e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00523	50		 push	 eax
  00524	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00529	83 c4 08	 add	 esp, 8
  0052c	8b c8		 mov	 ecx, eax
  0052e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  00534	3b f4		 cmp	 esi, esp
  00536	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 112  : 				system("pause");

  0053b	8b f4		 mov	 esi, esp
  0053d	68 00 00 00 00	 push	 OFFSET ??_C@_05PDJBBECF@pause?$AA@
  00542	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__system
  00548	83 c4 04	 add	 esp, 4
  0054b	3b f4		 cmp	 esi, esp
  0054d	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 113  : 				break;

  00552	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  00556	8d 8d 10 ff ff
	ff		 lea	 ecx, DWORD PTR _foundContact$40[ebp]
  0055c	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
  00561	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00565	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR _contactName$41[ebp]
  0056b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00570	e9 a2 08 00 00	 jmp	 $LN4@main
$LN33@main:

; 114  : 			}
; 115  : 
; 116  : 			// Erase the contact if it was found
; 117  : 			contactList.erase(foundContact);

  00575	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00578	8b cc		 mov	 ecx, esp
  0057a	89 a5 f4 fb ff
	ff		 mov	 DWORD PTR $T17[ebp], esp
  00580	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _foundContact$40[ebp]
  00586	50		 push	 eax
  00587	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
  0058c	89 85 00 fb ff
	ff		 mov	 DWORD PTR tv676[ebp], eax
  00592	8d 8d e0 fb ff
	ff		 lea	 ecx, DWORD PTR $T16[ebp]
  00598	51		 push	 ecx
  00599	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  0059c	e8 00 00 00 00	 call	 ?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::erase
  005a1	89 85 fc fa ff
	ff		 mov	 DWORD PTR tv677[ebp], eax
  005a7	8d 8d e0 fb ff
	ff		 lea	 ecx, DWORD PTR $T16[ebp]
  005ad	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ

; 118  : 
; 119  : 			// Update the saved contact list now
; 120  : 			updateContactLists(contactList, contactFileName);

  005b2	8d 45 90	 lea	 eax, DWORD PTR _contactFileName$[ebp]
  005b5	50		 push	 eax
  005b6	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  005b9	51		 push	 ecx
  005ba	e8 00 00 00 00	 call	 ?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; updateContactLists
  005bf	83 c4 08	 add	 esp, 8

; 121  : 
; 122  : 			cout << endl << "The contact was removed from your contact list" << endl;

  005c2	8b f4		 mov	 esi, esp
  005c4	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  005c9	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@GFNLJBBP@The?5contact?5was?5removed?5from?5you@
  005ce	8b fc		 mov	 edi, esp
  005d0	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  005d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  005db	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  005e1	3b fc		 cmp	 edi, esp
  005e3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005e8	50		 push	 eax
  005e9	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  005ee	83 c4 08	 add	 esp, 8
  005f1	8b c8		 mov	 ecx, eax
  005f3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  005f9	3b f4		 cmp	 esi, esp
  005fb	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 123  : 
; 124  : 			system("pause");

  00600	8b f4		 mov	 esi, esp
  00602	68 00 00 00 00	 push	 OFFSET ??_C@_05PDJBBECF@pause?$AA@
  00607	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__system
  0060d	83 c4 04	 add	 esp, 4
  00610	3b f4		 cmp	 esi, esp
  00612	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 125  : 			break;

  00617	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  0061b	8d 8d 10 ff ff
	ff		 lea	 ecx, DWORD PTR _foundContact$40[ebp]
  00621	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
  00626	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0062a	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR _contactName$41[ebp]
  00630	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00635	e9 dd 07 00 00	 jmp	 $LN4@main

; 126  : 		}

  0063a	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  0063e	8d 8d 10 ff ff
	ff		 lea	 ecx, DWORD PTR _foundContact$40[ebp]
  00644	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
  00649	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0064d	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR _contactName$41[ebp]
  00653	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN34@main:

; 127  : 		// Edit a contact
; 128  : 		case 'C':
; 129  : 		{
; 130  : 			// Check if any contacts even exist
; 131  : 			if (contactList.size() == 0)

  00658	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  0065b	e8 00 00 00 00	 call	 ?size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::size
  00660	85 c0		 test	 eax, eax
  00662	75 45		 jne	 SHORT $LN35@main

; 132  : 			{
; 133  : 				cout << "You don't have any contacts to edit" << endl;

  00664	8b f4		 mov	 esi, esp
  00666	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  0066b	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@GGNPEDJA@You?5don?8t?5have?5any?5contacts?5to?5e@
  00670	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00675	50		 push	 eax
  00676	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  0067b	83 c4 08	 add	 esp, 8
  0067e	8b c8		 mov	 ecx, eax
  00680	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  00686	3b f4		 cmp	 esi, esp
  00688	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 134  : 				system("pause");

  0068d	8b f4		 mov	 esi, esp
  0068f	68 00 00 00 00	 push	 OFFSET ??_C@_05PDJBBECF@pause?$AA@
  00694	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__system
  0069a	83 c4 04	 add	 esp, 4
  0069d	3b f4		 cmp	 esi, esp
  0069f	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 135  : 				break;

  006a4	e9 6e 07 00 00	 jmp	 $LN4@main
$LN35@main:

; 136  : 			}
; 137  : 
; 138  : 			cout << endl;

  006a9	8b f4		 mov	 esi, esp
  006ab	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  006b0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  006b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  006bc	3b f4		 cmp	 esi, esp
  006be	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 139  : 
; 140  : 			// Display all the contacts so the user can pick from them to edit
; 141  : 			for (vector<shared_ptr<CContact>>::iterator it = contactList.begin(); it != contactList.end(); ++it)

  006c3	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _it$38[ebp]
  006c9	50		 push	 eax
  006ca	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  006cd	e8 00 00 00 00	 call	 ?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::begin
  006d2	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+8], 15 ; 0000000fH
  006d6	eb 0b		 jmp	 SHORT $LN16@main
$LN14@main:
  006d8	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _it$38[ebp]
  006de	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++
$LN16@main:
  006e3	8d 85 c0 fb ff
	ff		 lea	 eax, DWORD PTR $T14[ebp]
  006e9	50		 push	 eax
  006ea	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  006ed	e8 00 00 00 00	 call	 ?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
  006f2	89 85 00 fb ff
	ff		 mov	 DWORD PTR tv339[ebp], eax
  006f8	8b 8d 00 fb ff
	ff		 mov	 ecx, DWORD PTR tv339[ebp]
  006fe	89 8d fc fa ff
	ff		 mov	 DWORD PTR tv683[ebp], ecx
  00704	c6 45 fc 10	 mov	 BYTE PTR __$EHRec$[ebp+8], 16 ; 00000010H
  00708	8b 95 fc fa ff
	ff		 mov	 edx, DWORD PTR tv683[ebp]
  0070e	52		 push	 edx
  0070f	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _it$38[ebp]
  00715	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator!=
  0071a	88 85 d7 fb ff
	ff		 mov	 BYTE PTR $T15[ebp], al
  00720	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+8], 15 ; 0000000fH
  00724	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T14[ebp]
  0072a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
  0072f	0f b6 85 d7 fb
	ff ff		 movzx	 eax, BYTE PTR $T15[ebp]
  00736	85 c0		 test	 eax, eax
  00738	74 39		 je	 SHORT $LN15@main

; 142  : 			{
; 143  : 				(*it)->displayName();

  0073a	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _it$38[ebp]
  00740	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
  00745	8b c8		 mov	 ecx, eax
  00747	e8 00 00 00 00	 call	 ??C?$shared_ptr@VCContact@@@std@@QBEPAVCContact@@XZ ; std::shared_ptr<CContact>::operator->
  0074c	89 85 00 fb ff
	ff		 mov	 DWORD PTR tv366[ebp], eax
  00752	8b 85 00 fb ff
	ff		 mov	 eax, DWORD PTR tv366[ebp]
  00758	8b 10		 mov	 edx, DWORD PTR [eax]
  0075a	8b f4		 mov	 esi, esp
  0075c	8b 8d 00 fb ff
	ff		 mov	 ecx, DWORD PTR tv366[ebp]
  00762	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00765	ff d0		 call	 eax
  00767	3b f4		 cmp	 esi, esp
  00769	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0076e	e9 65 ff ff ff	 jmp	 $LN14@main
$LN15@main:

; 144  : 			}

  00773	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00777	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _it$38[ebp]
  0077d	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ

; 145  : 
; 146  : 			cout << endl;

  00782	8b f4		 mov	 esi, esp
  00784	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  00789	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  0078f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  00795	3b f4		 cmp	 esi, esp
  00797	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 147  : 
; 148  : 			// Prompt the user for the name of the contact to edit
; 149  : 			string contactName = CUserInterface::getUserInput("Enter the name of the person or company you would like to edit:\n");

  0079c	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0079f	8b cc		 mov	 ecx, esp
  007a1	89 a5 b4 fb ff
	ff		 mov	 DWORD PTR $T13[ebp], esp
  007a7	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@GEBCPOHK@Enter?5the?5name?5of?5the?5person?5or?5@
  007ac	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  007b1	89 85 00 fb ff
	ff		 mov	 DWORD PTR tv685[ebp], eax
  007b7	8d 85 c4 fe ff
	ff		 lea	 eax, DWORD PTR _contactName$37[ebp]
  007bd	50		 push	 eax
  007be	e8 00 00 00 00	 call	 ?getUserInput@CUserInterface@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z ; CUserInterface::getUserInput
  007c3	83 c4 20	 add	 esp, 32			; 00000020H
  007c6	89 85 fc fa ff
	ff		 mov	 DWORD PTR tv686[ebp], eax
  007cc	c6 45 fc 11	 mov	 BYTE PTR __$EHRec$[ebp+8], 17 ; 00000011H

; 150  : 
; 151  : 			// Set the "found contact" to the end of the vector
; 152  : 			vector<shared_ptr<CContact>>::iterator foundContact = contactList.end();

  007d0	8d 85 b0 fe ff
	ff		 lea	 eax, DWORD PTR _foundContact$36[ebp]
  007d6	50		 push	 eax
  007d7	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  007da	e8 00 00 00 00	 call	 ?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
  007df	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H

; 153  : 
; 154  : 			// Loop through the vector and try to find what the user entered
; 155  : 			for (vector<shared_ptr<CContact>>::iterator it = contactList.begin(); it != contactList.end(); ++it)

  007e3	8d 85 9c fe ff
	ff		 lea	 eax, DWORD PTR _it$35[ebp]
  007e9	50		 push	 eax
  007ea	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  007ed	e8 00 00 00 00	 call	 ?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::begin
  007f2	c6 45 fc 13	 mov	 BYTE PTR __$EHRec$[ebp+8], 19 ; 00000013H
  007f6	eb 0b		 jmp	 SHORT $LN19@main
$LN17@main:
  007f8	8d 8d 9c fe ff
	ff		 lea	 ecx, DWORD PTR _it$35[ebp]
  007fe	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++
$LN19@main:
  00803	8d 85 94 fb ff
	ff		 lea	 eax, DWORD PTR $T11[ebp]
  00809	50		 push	 eax
  0080a	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  0080d	e8 00 00 00 00	 call	 ?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
  00812	89 85 00 fb ff
	ff		 mov	 DWORD PTR tv393[ebp], eax
  00818	8b 8d 00 fb ff
	ff		 mov	 ecx, DWORD PTR tv393[ebp]
  0081e	89 8d fc fa ff
	ff		 mov	 DWORD PTR tv691[ebp], ecx
  00824	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
  00828	8b 95 fc fa ff
	ff		 mov	 edx, DWORD PTR tv691[ebp]
  0082e	52		 push	 edx
  0082f	8d 8d 9c fe ff
	ff		 lea	 ecx, DWORD PTR _it$35[ebp]
  00835	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator!=
  0083a	88 85 ab fb ff
	ff		 mov	 BYTE PTR $T12[ebp], al
  00840	c6 45 fc 13	 mov	 BYTE PTR __$EHRec$[ebp+8], 19 ; 00000013H
  00844	8d 8d 94 fb ff
	ff		 lea	 ecx, DWORD PTR $T11[ebp]
  0084a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
  0084f	0f b6 85 ab fb
	ff ff		 movzx	 eax, BYTE PTR $T12[ebp]
  00856	85 c0		 test	 eax, eax
  00858	74 72		 je	 SHORT $LN18@main

; 156  : 			{
; 157  : 				// If the contact was found, set the "found contact" iterator to the current iterator
; 158  : 				if (*(*it) == contactName)

  0085a	8d 8d 9c fe ff
	ff		 lea	 ecx, DWORD PTR _it$35[ebp]
  00860	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
  00865	8b c8		 mov	 ecx, eax
  00867	e8 00 00 00 00	 call	 ??D?$shared_ptr@VCContact@@@std@@QBEAAVCContact@@XZ ; std::shared_ptr<CContact>::operator*
  0086c	89 85 00 fb ff
	ff		 mov	 DWORD PTR tv452[ebp], eax
  00872	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00875	8b cc		 mov	 ecx, esp
  00877	89 a5 88 fb ff
	ff		 mov	 DWORD PTR $T10[ebp], esp
  0087d	8d 85 c4 fe ff
	ff		 lea	 eax, DWORD PTR _contactName$37[ebp]
  00883	50		 push	 eax
  00884	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00889	89 85 fc fa ff
	ff		 mov	 DWORD PTR tv694[ebp], eax
  0088f	8b 8d 00 fb ff
	ff		 mov	 ecx, DWORD PTR tv452[ebp]
  00895	8b 11		 mov	 edx, DWORD PTR [ecx]
  00897	8b 8d 00 fb ff
	ff		 mov	 ecx, DWORD PTR tv452[ebp]
  0089d	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  008a0	ff d0		 call	 eax
  008a2	88 85 fb fa ff
	ff		 mov	 BYTE PTR tv695[ebp], al
  008a8	0f b6 8d fb fa
	ff ff		 movzx	 ecx, BYTE PTR tv695[ebp]
  008af	85 c9		 test	 ecx, ecx
  008b1	74 14		 je	 SHORT $LN36@main

; 159  : 				{
; 160  : 					foundContact = it;

  008b3	8d 85 9c fe ff
	ff		 lea	 eax, DWORD PTR _it$35[ebp]
  008b9	50		 push	 eax
  008ba	8d 8d b0 fe ff
	ff		 lea	 ecx, DWORD PTR _foundContact$36[ebp]
  008c0	e8 00 00 00 00	 call	 ??4?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z

; 161  : 					break;

  008c5	eb 05		 jmp	 SHORT $LN18@main
$LN36@main:

; 162  : 				}

  008c7	e9 2c ff ff ff	 jmp	 $LN17@main
$LN18@main:

; 163  : 			}

  008cc	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  008d0	8d 8d 9c fe ff
	ff		 lea	 ecx, DWORD PTR _it$35[ebp]
  008d6	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ

; 164  : 
; 165  : 			// The contact wasn't found because "found contact" is still set to the end of the vector
; 166  : 			if (foundContact == contactList.end())

  008db	8d 85 68 fb ff
	ff		 lea	 eax, DWORD PTR $T8[ebp]
  008e1	50		 push	 eax
  008e2	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  008e5	e8 00 00 00 00	 call	 ?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
  008ea	89 85 00 fb ff
	ff		 mov	 DWORD PTR tv389[ebp], eax
  008f0	8b 8d 00 fb ff
	ff		 mov	 ecx, DWORD PTR tv389[ebp]
  008f6	89 8d fc fa ff
	ff		 mov	 DWORD PTR tv697[ebp], ecx
  008fc	c6 45 fc 15	 mov	 BYTE PTR __$EHRec$[ebp+8], 21 ; 00000015H
  00900	8b 95 fc fa ff
	ff		 mov	 edx, DWORD PTR tv697[ebp]
  00906	52		 push	 edx
  00907	8d 8d b0 fe ff
	ff		 lea	 ecx, DWORD PTR _foundContact$36[ebp]
  0090d	e8 00 00 00 00	 call	 ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator==
  00912	88 85 7f fb ff
	ff		 mov	 BYTE PTR $T9[ebp], al
  00918	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  0091c	8d 8d 68 fb ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  00922	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
  00927	0f b6 85 7f fb
	ff ff		 movzx	 eax, BYTE PTR $T9[ebp]
  0092e	85 c0		 test	 eax, eax
  00930	74 78		 je	 SHORT $LN37@main

; 167  : 			{
; 168  : 				cout << endl << "That contact was not found in your contact list" << endl;

  00932	8b f4		 mov	 esi, esp
  00934	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  00939	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@FLPABHKE@That?5contact?5was?5not?5found?5in?5yo@
  0093e	8b fc		 mov	 edi, esp
  00940	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  00945	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  0094b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  00951	3b fc		 cmp	 edi, esp
  00953	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00958	50		 push	 eax
  00959	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  0095e	83 c4 08	 add	 esp, 8
  00961	8b c8		 mov	 ecx, eax
  00963	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  00969	3b f4		 cmp	 esi, esp
  0096b	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 169  : 				system("pause");

  00970	8b f4		 mov	 esi, esp
  00972	68 00 00 00 00	 push	 OFFSET ??_C@_05PDJBBECF@pause?$AA@
  00977	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__system
  0097d	83 c4 04	 add	 esp, 4
  00980	3b f4		 cmp	 esi, esp
  00982	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 170  : 				break;

  00987	c6 45 fc 11	 mov	 BYTE PTR __$EHRec$[ebp+8], 17 ; 00000011H
  0098b	8d 8d b0 fe ff
	ff		 lea	 ecx, DWORD PTR _foundContact$36[ebp]
  00991	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
  00996	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0099a	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR _contactName$37[ebp]
  009a0	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  009a5	e9 6d 04 00 00	 jmp	 $LN4@main
$LN37@main:

; 171  : 			}
; 172  : 
; 173  : 			// Open the menu to edit contact information
; 174  : 			(*foundContact)->getContactInformation();

  009aa	8d 8d b0 fe ff
	ff		 lea	 ecx, DWORD PTR _foundContact$36[ebp]
  009b0	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
  009b5	8b c8		 mov	 ecx, eax
  009b7	e8 00 00 00 00	 call	 ??C?$shared_ptr@VCContact@@@std@@QBEPAVCContact@@XZ ; std::shared_ptr<CContact>::operator->
  009bc	89 85 00 fb ff
	ff		 mov	 DWORD PTR tv506[ebp], eax
  009c2	8b 85 00 fb ff
	ff		 mov	 eax, DWORD PTR tv506[ebp]
  009c8	8b 10		 mov	 edx, DWORD PTR [eax]
  009ca	8b f4		 mov	 esi, esp
  009cc	8b 8d 00 fb ff
	ff		 mov	 ecx, DWORD PTR tv506[ebp]
  009d2	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  009d5	ff d0		 call	 eax
  009d7	3b f4		 cmp	 esi, esp
  009d9	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 175  : 
; 176  : 			// Sort the vector again in case the name changed. Also save new information to the file
; 177  : 			updateContactLists(contactList, contactFileName);

  009de	8d 45 90	 lea	 eax, DWORD PTR _contactFileName$[ebp]
  009e1	50		 push	 eax
  009e2	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  009e5	51		 push	 ecx
  009e6	e8 00 00 00 00	 call	 ?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; updateContactLists
  009eb	83 c4 08	 add	 esp, 8

; 178  : 			
; 179  : 			break;

  009ee	c6 45 fc 11	 mov	 BYTE PTR __$EHRec$[ebp+8], 17 ; 00000011H
  009f2	8d 8d b0 fe ff
	ff		 lea	 ecx, DWORD PTR _foundContact$36[ebp]
  009f8	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
  009fd	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00a01	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR _contactName$37[ebp]
  00a07	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00a0c	e9 06 04 00 00	 jmp	 $LN4@main

; 180  : 		}

  00a11	c6 45 fc 11	 mov	 BYTE PTR __$EHRec$[ebp+8], 17 ; 00000011H
  00a15	8d 8d b0 fe ff
	ff		 lea	 ecx, DWORD PTR _foundContact$36[ebp]
  00a1b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
  00a20	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00a24	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR _contactName$37[ebp]
  00a2a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN38@main:

; 181  : 		// Search for a contact
; 182  : 		case 'D':
; 183  : 		{
; 184  : 			system("cls");

  00a2f	8b f4		 mov	 esi, esp
  00a31	68 00 00 00 00	 push	 OFFSET ??_C@_03LCPHGAHP@cls?$AA@
  00a36	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__system
  00a3c	83 c4 04	 add	 esp, 4
  00a3f	3b f4		 cmp	 esi, esp
  00a41	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 185  : 			cout << "Enter the first name, last name, or company name of a contact:" << endl;

  00a46	8b f4		 mov	 esi, esp
  00a48	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  00a4d	68 00 00 00 00	 push	 OFFSET ??_C@_0DP@KOHCCCHA@Enter?5the?5first?5name?0?5last?5name?0@
  00a52	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00a57	50		 push	 eax
  00a58	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00a5d	83 c4 08	 add	 esp, 8
  00a60	8b c8		 mov	 ecx, eax
  00a62	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  00a68	3b f4		 cmp	 esi, esp
  00a6a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 186  : 
; 187  : 			// Get the name of the contact to find
; 188  : 			string contactName;

  00a6f	8d 8d 78 fe ff
	ff		 lea	 ecx, DWORD PTR _contactName$34[ebp]
  00a75	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00a7a	c6 45 fc 16	 mov	 BYTE PTR __$EHRec$[ebp+8], 22 ; 00000016H

; 189  : 			getline(cin, contactName);

  00a7e	8d 85 78 fe ff
	ff		 lea	 eax, DWORD PTR _contactName$34[ebp]
  00a84	50		 push	 eax
  00a85	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A
  00a8b	51		 push	 ecx
  00a8c	e8 00 00 00 00	 call	 ??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::getline<char,std::char_traits<char>,std::allocator<char> >
  00a91	83 c4 08	 add	 esp, 8

; 190  : 
; 191  : 			cout << endl << "Found contacts:" << endl;

  00a94	8b f4		 mov	 esi, esp
  00a96	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  00a9b	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@KBDJCHMC@Found?5contacts?3?$AA@
  00aa0	8b fc		 mov	 edi, esp
  00aa2	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  00aa7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00aad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  00ab3	3b fc		 cmp	 edi, esp
  00ab5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00aba	50		 push	 eax
  00abb	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00ac0	83 c4 08	 add	 esp, 8
  00ac3	8b c8		 mov	 ecx, eax
  00ac5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  00acb	3b f4		 cmp	 esi, esp
  00acd	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 192  : 
; 193  : 			bool found = false;

  00ad2	c6 85 6f fe ff
	ff 00		 mov	 BYTE PTR _found$33[ebp], 0

; 194  : 
; 195  : 			// Loop through the vector and check to see if any of the contact names contain something the user entered
; 196  : 			// This could be first name, last name, first name + last name, or company name
; 197  : 			for (vector<shared_ptr<CContact>>::const_iterator it = contactList.begin(); it != contactList.end(); ++it)

  00ad9	8d 85 54 fb ff
	ff		 lea	 eax, DWORD PTR $T7[ebp]
  00adf	50		 push	 eax
  00ae0	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  00ae3	e8 00 00 00 00	 call	 ?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::begin
  00ae8	89 85 00 fb ff
	ff		 mov	 DWORD PTR tv518[ebp], eax
  00aee	8b 8d 00 fb ff
	ff		 mov	 ecx, DWORD PTR tv518[ebp]
  00af4	89 8d fc fa ff
	ff		 mov	 DWORD PTR tv704[ebp], ecx
  00afa	c6 45 fc 17	 mov	 BYTE PTR __$EHRec$[ebp+8], 23 ; 00000017H
  00afe	8b 95 fc fa ff
	ff		 mov	 edx, DWORD PTR tv704[ebp]
  00b04	52		 push	 edx
  00b05	8d 8d 58 fe ff
	ff		 lea	 ecx, DWORD PTR _it$32[ebp]
  00b0b	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
  00b10	c6 45 fc 19	 mov	 BYTE PTR __$EHRec$[ebp+8], 25 ; 00000019H
  00b14	8d 8d 54 fb ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  00b1a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
  00b1f	eb 0b		 jmp	 SHORT $LN22@main
$LN20@main:
  00b21	8d 8d 58 fe ff
	ff		 lea	 ecx, DWORD PTR _it$32[ebp]
  00b27	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++
$LN22@main:
  00b2c	8d 85 34 fb ff
	ff		 lea	 eax, DWORD PTR $T5[ebp]
  00b32	50		 push	 eax
  00b33	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  00b36	e8 00 00 00 00	 call	 ?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
  00b3b	89 85 00 fb ff
	ff		 mov	 DWORD PTR tv531[ebp], eax
  00b41	8b 8d 00 fb ff
	ff		 mov	 ecx, DWORD PTR tv531[ebp]
  00b47	89 8d fc fa ff
	ff		 mov	 DWORD PTR tv707[ebp], ecx
  00b4d	c6 45 fc 1a	 mov	 BYTE PTR __$EHRec$[ebp+8], 26 ; 0000001aH
  00b51	8b 95 fc fa ff
	ff		 mov	 edx, DWORD PTR tv707[ebp]
  00b57	52		 push	 edx
  00b58	8d 8d 58 fe ff
	ff		 lea	 ecx, DWORD PTR _it$32[ebp]
  00b5e	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator!=
  00b63	88 85 4b fb ff
	ff		 mov	 BYTE PTR $T6[ebp], al
  00b69	c6 45 fc 19	 mov	 BYTE PTR __$EHRec$[ebp+8], 25 ; 00000019H
  00b6d	8d 8d 34 fb ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  00b73	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
  00b78	0f b6 85 4b fb
	ff ff		 movzx	 eax, BYTE PTR $T6[ebp]
  00b7f	85 c0		 test	 eax, eax
  00b81	0f 84 82 00 00
	00		 je	 $LN21@main

; 198  : 			{
; 199  : 				if ((*it)->contains(contactName))

  00b87	8d 8d 58 fe ff
	ff		 lea	 ecx, DWORD PTR _it$32[ebp]
  00b8d	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEABV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
  00b92	8b c8		 mov	 ecx, eax
  00b94	e8 00 00 00 00	 call	 ??C?$shared_ptr@VCContact@@@std@@QBEPAVCContact@@XZ ; std::shared_ptr<CContact>::operator->
  00b99	89 85 00 fb ff
	ff		 mov	 DWORD PTR tv563[ebp], eax
  00b9f	8b f4		 mov	 esi, esp
  00ba1	8d 85 78 fe ff
	ff		 lea	 eax, DWORD PTR _contactName$34[ebp]
  00ba7	50		 push	 eax
  00ba8	8b 8d 00 fb ff
	ff		 mov	 ecx, DWORD PTR tv563[ebp]
  00bae	8b 11		 mov	 edx, DWORD PTR [ecx]
  00bb0	8b 8d 00 fb ff
	ff		 mov	 ecx, DWORD PTR tv563[ebp]
  00bb6	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00bb9	ff d0		 call	 eax
  00bbb	3b f4		 cmp	 esi, esp
  00bbd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00bc2	0f b6 c8	 movzx	 ecx, al
  00bc5	85 c9		 test	 ecx, ecx
  00bc7	74 3b		 je	 SHORT $LN39@main

; 200  : 				{
; 201  : 					(*it)->displayName();

  00bc9	8d 8d 58 fe ff
	ff		 lea	 ecx, DWORD PTR _it$32[ebp]
  00bcf	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEABV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
  00bd4	8b c8		 mov	 ecx, eax
  00bd6	e8 00 00 00 00	 call	 ??C?$shared_ptr@VCContact@@@std@@QBEPAVCContact@@XZ ; std::shared_ptr<CContact>::operator->
  00bdb	89 85 00 fb ff
	ff		 mov	 DWORD PTR tv575[ebp], eax
  00be1	8b 85 00 fb ff
	ff		 mov	 eax, DWORD PTR tv575[ebp]
  00be7	8b 10		 mov	 edx, DWORD PTR [eax]
  00be9	8b f4		 mov	 esi, esp
  00beb	8b 8d 00 fb ff
	ff		 mov	 ecx, DWORD PTR tv575[ebp]
  00bf1	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00bf4	ff d0		 call	 eax
  00bf6	3b f4		 cmp	 esi, esp
  00bf8	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 202  : 					found = true;

  00bfd	c6 85 6f fe ff
	ff 01		 mov	 BYTE PTR _found$33[ebp], 1
$LN39@main:

; 203  : 				}

  00c04	e9 18 ff ff ff	 jmp	 $LN20@main
$LN21@main:

; 204  : 			}

  00c09	c6 45 fc 16	 mov	 BYTE PTR __$EHRec$[ebp+8], 22 ; 00000016H
  00c0d	8d 8d 58 fe ff
	ff		 lea	 ecx, DWORD PTR _it$32[ebp]
  00c13	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ

; 205  : 
; 206  : 			// Nothing was found so display "none"
; 207  : 			if (!found)

  00c18	0f b6 85 6f fe
	ff ff		 movzx	 eax, BYTE PTR _found$33[ebp]
  00c1f	85 c0		 test	 eax, eax
  00c21	75 3f		 jne	 SHORT $LN40@main

; 208  : 			{
; 209  : 				cout << "None" << endl << endl;

  00c23	8b f4		 mov	 esi, esp
  00c25	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  00c2a	8b fc		 mov	 edi, esp
  00c2c	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  00c31	68 00 00 00 00	 push	 OFFSET ??_C@_04OHJIHAFH@None?$AA@
  00c36	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00c3b	50		 push	 eax
  00c3c	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00c41	83 c4 08	 add	 esp, 8
  00c44	8b c8		 mov	 ecx, eax
  00c46	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  00c4c	3b fc		 cmp	 edi, esp
  00c4e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00c53	8b c8		 mov	 ecx, eax
  00c55	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  00c5b	3b f4		 cmp	 esi, esp
  00c5d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN40@main:

; 210  : 			}
; 211  : 			
; 212  : 			cout << endl;

  00c62	8b f4		 mov	 esi, esp
  00c64	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  00c69	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00c6f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  00c75	3b f4		 cmp	 esi, esp
  00c77	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 213  : 
; 214  : 			system("pause");

  00c7c	8b f4		 mov	 esi, esp
  00c7e	68 00 00 00 00	 push	 OFFSET ??_C@_05PDJBBECF@pause?$AA@
  00c83	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__system
  00c89	83 c4 04	 add	 esp, 4
  00c8c	3b f4		 cmp	 esi, esp
  00c8e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 215  : 
; 216  : 			break;

  00c93	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00c97	8d 8d 78 fe ff
	ff		 lea	 ecx, DWORD PTR _contactName$34[ebp]
  00c9d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00ca2	e9 70 01 00 00	 jmp	 $LN4@main

; 217  : 		}

  00ca7	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00cab	8d 8d 78 fe ff
	ff		 lea	 ecx, DWORD PTR _contactName$34[ebp]
  00cb1	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN41@main:

; 218  : 		// Display contacts
; 219  : 		case 'E':
; 220  : 		{
; 221  : 			system("cls");

  00cb6	8b f4		 mov	 esi, esp
  00cb8	68 00 00 00 00	 push	 OFFSET ??_C@_03LCPHGAHP@cls?$AA@
  00cbd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__system
  00cc3	83 c4 04	 add	 esp, 4
  00cc6	3b f4		 cmp	 esi, esp
  00cc8	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 222  : 
; 223  : 			// Check if any contacts even exist
; 224  : 			if (contactList.size() == 0)

  00ccd	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  00cd0	e8 00 00 00 00	 call	 ?size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::size
  00cd5	85 c0		 test	 eax, eax
  00cd7	75 45		 jne	 SHORT $LN42@main

; 225  : 			{
; 226  : 				cout << "You don't have any contacts to display" << endl;

  00cd9	8b f4		 mov	 esi, esp
  00cdb	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  00ce0	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MIDKGGF@You?5don?8t?5have?5any?5contacts?5to?5d@
  00ce5	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00cea	50		 push	 eax
  00ceb	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00cf0	83 c4 08	 add	 esp, 8
  00cf3	8b c8		 mov	 ecx, eax
  00cf5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  00cfb	3b f4		 cmp	 esi, esp
  00cfd	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 227  : 				system("pause");

  00d02	8b f4		 mov	 esi, esp
  00d04	68 00 00 00 00	 push	 OFFSET ??_C@_05PDJBBECF@pause?$AA@
  00d09	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__system
  00d0f	83 c4 04	 add	 esp, 4
  00d12	3b f4		 cmp	 esi, esp
  00d14	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 228  : 				break;

  00d19	e9 f9 00 00 00	 jmp	 $LN4@main
$LN42@main:

; 229  : 			}
; 230  : 
; 231  : 			cout << endl;

  00d1e	8b f4		 mov	 esi, esp
  00d20	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  00d25	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00d2b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  00d31	3b f4		 cmp	 esi, esp
  00d33	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 232  : 
; 233  : 			// Loop through the contacts and display all of them
; 234  : 			for (vector<shared_ptr<CContact>>::iterator it = contactList.begin(); it != contactList.end(); ++it)

  00d38	8d 85 44 fe ff
	ff		 lea	 eax, DWORD PTR _it$31[ebp]
  00d3e	50		 push	 eax
  00d3f	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  00d42	e8 00 00 00 00	 call	 ?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::begin
  00d47	c6 45 fc 1b	 mov	 BYTE PTR __$EHRec$[ebp+8], 27 ; 0000001bH
  00d4b	eb 0b		 jmp	 SHORT $LN25@main
$LN23@main:
  00d4d	8d 8d 44 fe ff
	ff		 lea	 ecx, DWORD PTR _it$31[ebp]
  00d53	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++
$LN25@main:
  00d58	8d 85 14 fb ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  00d5e	50		 push	 eax
  00d5f	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  00d62	e8 00 00 00 00	 call	 ?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
  00d67	89 85 00 fb ff
	ff		 mov	 DWORD PTR tv604[ebp], eax
  00d6d	8b 8d 00 fb ff
	ff		 mov	 ecx, DWORD PTR tv604[ebp]
  00d73	89 8d fc fa ff
	ff		 mov	 DWORD PTR tv711[ebp], ecx
  00d79	c6 45 fc 1c	 mov	 BYTE PTR __$EHRec$[ebp+8], 28 ; 0000001cH
  00d7d	8b 95 fc fa ff
	ff		 mov	 edx, DWORD PTR tv711[ebp]
  00d83	52		 push	 edx
  00d84	8d 8d 44 fe ff
	ff		 lea	 ecx, DWORD PTR _it$31[ebp]
  00d8a	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator!=
  00d8f	88 85 2b fb ff
	ff		 mov	 BYTE PTR $T4[ebp], al
  00d95	c6 45 fc 1b	 mov	 BYTE PTR __$EHRec$[ebp+8], 27 ; 0000001bH
  00d99	8d 8d 14 fb ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00d9f	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
  00da4	0f b6 85 2b fb
	ff ff		 movzx	 eax, BYTE PTR $T4[ebp]
  00dab	85 c0		 test	 eax, eax
  00dad	74 39		 je	 SHORT $LN24@main

; 235  : 			{
; 236  : 				(*it)->display();

  00daf	8d 8d 44 fe ff
	ff		 lea	 ecx, DWORD PTR _it$31[ebp]
  00db5	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
  00dba	8b c8		 mov	 ecx, eax
  00dbc	e8 00 00 00 00	 call	 ??C?$shared_ptr@VCContact@@@std@@QBEPAVCContact@@XZ ; std::shared_ptr<CContact>::operator->
  00dc1	89 85 00 fb ff
	ff		 mov	 DWORD PTR tv631[ebp], eax
  00dc7	8b 85 00 fb ff
	ff		 mov	 eax, DWORD PTR tv631[ebp]
  00dcd	8b 10		 mov	 edx, DWORD PTR [eax]
  00dcf	8b f4		 mov	 esi, esp
  00dd1	8b 8d 00 fb ff
	ff		 mov	 ecx, DWORD PTR tv631[ebp]
  00dd7	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00dda	ff d0		 call	 eax
  00ddc	3b f4		 cmp	 esi, esp
  00dde	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00de3	e9 65 ff ff ff	 jmp	 $LN23@main
$LN24@main:

; 237  : 			}

  00de8	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00dec	8d 8d 44 fe ff
	ff		 lea	 ecx, DWORD PTR _it$31[ebp]
  00df2	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ

; 238  : 
; 239  : 			system("pause");

  00df7	8b f4		 mov	 esi, esp
  00df9	68 00 00 00 00	 push	 OFFSET ??_C@_05PDJBBECF@pause?$AA@
  00dfe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__system
  00e04	83 c4 04	 add	 esp, 4
  00e07	3b f4		 cmp	 esi, esp
  00e09	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 240  : 
; 241  : 			break;

  00e0e	eb 07		 jmp	 SHORT $LN4@main
$LN43@main:

; 242  : 		}
; 243  : 		case 'F':
; 244  : 			exit = true;

  00e10	c6 85 77 ff ff
	ff 01		 mov	 BYTE PTR _exit$[ebp], 1
$LN4@main:

; 245  : 			break;
; 246  : 		}
; 247  : 	}

  00e17	e9 8c f2 ff ff	 jmp	 $LN2@main
$LN3@main:

; 248  : 
; 249  : 	cout << endl << "Goodbye!" << endl;

  00e1c	8b f4		 mov	 esi, esp
  00e1e	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  00e23	68 00 00 00 00	 push	 OFFSET ??_C@_08HDBDJBNL@Goodbye?$CB?$AA@
  00e28	8b fc		 mov	 edi, esp
  00e2a	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  00e2f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00e35	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  00e3b	3b fc		 cmp	 edi, esp
  00e3d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00e42	50		 push	 eax
  00e43	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00e48	83 c4 08	 add	 esp, 8
  00e4b	8b c8		 mov	 ecx, eax
  00e4d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  00e53	3b f4		 cmp	 esi, esp
  00e55	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 250  : 	system("pause");

  00e5a	8b f4		 mov	 esi, esp
  00e5c	68 00 00 00 00	 push	 OFFSET ??_C@_05PDJBBECF@pause?$AA@
  00e61	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__system
  00e67	83 c4 04	 add	 esp, 4
  00e6a	3b f4		 cmp	 esi, esp
  00e6c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 251  : 	return 0;

  00e71	c7 85 08 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0
  00e7b	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00e7f	8d 4d 80	 lea	 ecx, DWORD PTR _contactListFromFile$[ebp]
  00e82	e8 00 00 00 00	 call	 ??1thread@std@@QAE@XZ	; std::thread::~thread
  00e87	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00e8b	8d 4d 90	 lea	 ecx, DWORD PTR _contactFileName$[ebp]
  00e8e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00e93	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00e97	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  00e9a	e8 00 00 00 00	 call	 ??1?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::~vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >
  00e9f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00ea6	8d 4d cc	 lea	 ecx, DWORD PTR _UI$[ebp]
  00ea9	e8 00 00 00 00	 call	 ??1CUserInterface@@QAE@XZ ; CUserInterface::~CUserInterface
  00eae	8b 85 08 fb ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]

; 252  : }

  00eb4	52		 push	 edx
  00eb5	8b cd		 mov	 ecx, ebp
  00eb7	50		 push	 eax
  00eb8	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN96@main
  00ebe	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00ec3	58		 pop	 eax
  00ec4	5a		 pop	 edx
  00ec5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00ec8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00ecf	59		 pop	 ecx
  00ed0	5f		 pop	 edi
  00ed1	5e		 pop	 esi
  00ed2	5b		 pop	 ebx
  00ed3	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00ed6	33 cd		 xor	 ecx, ebp
  00ed8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00edd	81 c4 08 05 00
	00		 add	 esp, 1288		; 00000508H
  00ee3	3b ec		 cmp	 ebp, esp
  00ee5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00eea	8b e5		 mov	 esp, ebp
  00eec	5d		 pop	 ebp
  00eed	c3		 ret	 0
  00eee	66 90		 npad	 2
$LN96@main:
  00ef0	0f 00 00 00	 DD	 15			; 0000000fH
  00ef4	00 00 00 00	 DD	 $LN95@main
$LN95@main:
  00ef8	cc ff ff ff	 DD	 -52			; ffffffccH
  00efc	20 00 00 00	 DD	 32			; 00000020H
  00f00	00 00 00 00	 DD	 $LN79@main
  00f04	b4 ff ff ff	 DD	 -76			; ffffffb4H
  00f08	10 00 00 00	 DD	 16			; 00000010H
  00f0c	00 00 00 00	 DD	 $LN80@main
  00f10	90 ff ff ff	 DD	 -112			; ffffff90H
  00f14	1c 00 00 00	 DD	 28			; 0000001cH
  00f18	00 00 00 00	 DD	 $LN81@main
  00f1c	80 ff ff ff	 DD	 -128			; ffffff80H
  00f20	08 00 00 00	 DD	 8
  00f24	00 00 00 00	 DD	 $LN82@main
  00f28	48 ff ff ff	 DD	 -184			; ffffff48H
  00f2c	0c 00 00 00	 DD	 12			; 0000000cH
  00f30	00 00 00 00	 DD	 $LN83@main
  00f34	24 ff ff ff	 DD	 -220			; ffffff24H
  00f38	1c 00 00 00	 DD	 28			; 0000001cH
  00f3c	00 00 00 00	 DD	 $LN84@main
  00f40	10 ff ff ff	 DD	 -240			; ffffff10H
  00f44	0c 00 00 00	 DD	 12			; 0000000cH
  00f48	00 00 00 00	 DD	 $LN85@main
  00f4c	fc fe ff ff	 DD	 -260			; fffffefcH
  00f50	0c 00 00 00	 DD	 12			; 0000000cH
  00f54	00 00 00 00	 DD	 $LN86@main
  00f58	e8 fe ff ff	 DD	 -280			; fffffee8H
  00f5c	0c 00 00 00	 DD	 12			; 0000000cH
  00f60	00 00 00 00	 DD	 $LN87@main
  00f64	c4 fe ff ff	 DD	 -316			; fffffec4H
  00f68	1c 00 00 00	 DD	 28			; 0000001cH
  00f6c	00 00 00 00	 DD	 $LN88@main
  00f70	b0 fe ff ff	 DD	 -336			; fffffeb0H
  00f74	0c 00 00 00	 DD	 12			; 0000000cH
  00f78	00 00 00 00	 DD	 $LN89@main
  00f7c	9c fe ff ff	 DD	 -356			; fffffe9cH
  00f80	0c 00 00 00	 DD	 12			; 0000000cH
  00f84	00 00 00 00	 DD	 $LN90@main
  00f88	78 fe ff ff	 DD	 -392			; fffffe78H
  00f8c	1c 00 00 00	 DD	 28			; 0000001cH
  00f90	00 00 00 00	 DD	 $LN91@main
  00f94	58 fe ff ff	 DD	 -424			; fffffe58H
  00f98	0c 00 00 00	 DD	 12			; 0000000cH
  00f9c	00 00 00 00	 DD	 $LN92@main
  00fa0	44 fe ff ff	 DD	 -444			; fffffe44H
  00fa4	0c 00 00 00	 DD	 12			; 0000000cH
  00fa8	00 00 00 00	 DD	 $LN93@main
$LN93@main:
  00fac	69		 DB	 105			; 00000069H
  00fad	74		 DB	 116			; 00000074H
  00fae	00		 DB	 0
$LN92@main:
  00faf	69		 DB	 105			; 00000069H
  00fb0	74		 DB	 116			; 00000074H
  00fb1	00		 DB	 0
$LN91@main:
  00fb2	63		 DB	 99			; 00000063H
  00fb3	6f		 DB	 111			; 0000006fH
  00fb4	6e		 DB	 110			; 0000006eH
  00fb5	74		 DB	 116			; 00000074H
  00fb6	61		 DB	 97			; 00000061H
  00fb7	63		 DB	 99			; 00000063H
  00fb8	74		 DB	 116			; 00000074H
  00fb9	4e		 DB	 78			; 0000004eH
  00fba	61		 DB	 97			; 00000061H
  00fbb	6d		 DB	 109			; 0000006dH
  00fbc	65		 DB	 101			; 00000065H
  00fbd	00		 DB	 0
$LN90@main:
  00fbe	69		 DB	 105			; 00000069H
  00fbf	74		 DB	 116			; 00000074H
  00fc0	00		 DB	 0
$LN89@main:
  00fc1	66		 DB	 102			; 00000066H
  00fc2	6f		 DB	 111			; 0000006fH
  00fc3	75		 DB	 117			; 00000075H
  00fc4	6e		 DB	 110			; 0000006eH
  00fc5	64		 DB	 100			; 00000064H
  00fc6	43		 DB	 67			; 00000043H
  00fc7	6f		 DB	 111			; 0000006fH
  00fc8	6e		 DB	 110			; 0000006eH
  00fc9	74		 DB	 116			; 00000074H
  00fca	61		 DB	 97			; 00000061H
  00fcb	63		 DB	 99			; 00000063H
  00fcc	74		 DB	 116			; 00000074H
  00fcd	00		 DB	 0
$LN88@main:
  00fce	63		 DB	 99			; 00000063H
  00fcf	6f		 DB	 111			; 0000006fH
  00fd0	6e		 DB	 110			; 0000006eH
  00fd1	74		 DB	 116			; 00000074H
  00fd2	61		 DB	 97			; 00000061H
  00fd3	63		 DB	 99			; 00000063H
  00fd4	74		 DB	 116			; 00000074H
  00fd5	4e		 DB	 78			; 0000004eH
  00fd6	61		 DB	 97			; 00000061H
  00fd7	6d		 DB	 109			; 0000006dH
  00fd8	65		 DB	 101			; 00000065H
  00fd9	00		 DB	 0
$LN87@main:
  00fda	69		 DB	 105			; 00000069H
  00fdb	74		 DB	 116			; 00000074H
  00fdc	00		 DB	 0
$LN86@main:
  00fdd	69		 DB	 105			; 00000069H
  00fde	74		 DB	 116			; 00000074H
  00fdf	00		 DB	 0
$LN85@main:
  00fe0	66		 DB	 102			; 00000066H
  00fe1	6f		 DB	 111			; 0000006fH
  00fe2	75		 DB	 117			; 00000075H
  00fe3	6e		 DB	 110			; 0000006eH
  00fe4	64		 DB	 100			; 00000064H
  00fe5	43		 DB	 67			; 00000043H
  00fe6	6f		 DB	 111			; 0000006fH
  00fe7	6e		 DB	 110			; 0000006eH
  00fe8	74		 DB	 116			; 00000074H
  00fe9	61		 DB	 97			; 00000061H
  00fea	63		 DB	 99			; 00000063H
  00feb	74		 DB	 116			; 00000074H
  00fec	00		 DB	 0
$LN84@main:
  00fed	63		 DB	 99			; 00000063H
  00fee	6f		 DB	 111			; 0000006fH
  00fef	6e		 DB	 110			; 0000006eH
  00ff0	74		 DB	 116			; 00000074H
  00ff1	61		 DB	 97			; 00000061H
  00ff2	63		 DB	 99			; 00000063H
  00ff3	74		 DB	 116			; 00000074H
  00ff4	4e		 DB	 78			; 0000004eH
  00ff5	61		 DB	 97			; 00000061H
  00ff6	6d		 DB	 109			; 0000006dH
  00ff7	65		 DB	 101			; 00000065H
  00ff8	00		 DB	 0
$LN83@main:
  00ff9	69		 DB	 105			; 00000069H
  00ffa	74		 DB	 116			; 00000074H
  00ffb	00		 DB	 0
$LN82@main:
  00ffc	63		 DB	 99			; 00000063H
  00ffd	6f		 DB	 111			; 0000006fH
  00ffe	6e		 DB	 110			; 0000006eH
  00fff	74		 DB	 116			; 00000074H
  01000	61		 DB	 97			; 00000061H
  01001	63		 DB	 99			; 00000063H
  01002	74		 DB	 116			; 00000074H
  01003	4c		 DB	 76			; 0000004cH
  01004	69		 DB	 105			; 00000069H
  01005	73		 DB	 115			; 00000073H
  01006	74		 DB	 116			; 00000074H
  01007	46		 DB	 70			; 00000046H
  01008	72		 DB	 114			; 00000072H
  01009	6f		 DB	 111			; 0000006fH
  0100a	6d		 DB	 109			; 0000006dH
  0100b	46		 DB	 70			; 00000046H
  0100c	69		 DB	 105			; 00000069H
  0100d	6c		 DB	 108			; 0000006cH
  0100e	65		 DB	 101			; 00000065H
  0100f	00		 DB	 0
$LN81@main:
  01010	63		 DB	 99			; 00000063H
  01011	6f		 DB	 111			; 0000006fH
  01012	6e		 DB	 110			; 0000006eH
  01013	74		 DB	 116			; 00000074H
  01014	61		 DB	 97			; 00000061H
  01015	63		 DB	 99			; 00000063H
  01016	74		 DB	 116			; 00000074H
  01017	46		 DB	 70			; 00000046H
  01018	69		 DB	 105			; 00000069H
  01019	6c		 DB	 108			; 0000006cH
  0101a	65		 DB	 101			; 00000065H
  0101b	4e		 DB	 78			; 0000004eH
  0101c	61		 DB	 97			; 00000061H
  0101d	6d		 DB	 109			; 0000006dH
  0101e	65		 DB	 101			; 00000065H
  0101f	00		 DB	 0
$LN80@main:
  01020	63		 DB	 99			; 00000063H
  01021	6f		 DB	 111			; 0000006fH
  01022	6e		 DB	 110			; 0000006eH
  01023	74		 DB	 116			; 00000074H
  01024	61		 DB	 97			; 00000061H
  01025	63		 DB	 99			; 00000063H
  01026	74		 DB	 116			; 00000074H
  01027	4c		 DB	 76			; 0000004cH
  01028	69		 DB	 105			; 00000069H
  01029	73		 DB	 115			; 00000073H
  0102a	74		 DB	 116			; 00000074H
  0102b	00		 DB	 0
$LN79@main:
  0102c	55		 DB	 85			; 00000055H
  0102d	49		 DB	 73			; 00000049H
  0102e	00		 DB	 0
  0102f	90		 npad	 1
$LN97@main:
  01030	00 00 00 00	 DD	 $LN26@main
  01034	00 00 00 00	 DD	 $LN30@main
  01038	00 00 00 00	 DD	 $LN34@main
  0103c	00 00 00 00	 DD	 $LN38@main
  01040	00 00 00 00	 DD	 $LN41@main
  01044	00 00 00 00	 DD	 $LN43@main
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$_main$0:
  00000	8d 4d cc	 lea	 ecx, DWORD PTR _UI$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CUserInterface@@QAE@XZ ; CUserInterface::~CUserInterface
__unwindfunclet$_main$1:
  00008	8d 4d b4	 lea	 ecx, DWORD PTR _contactList$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::~vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >
__unwindfunclet$_main$2:
  00010	8d 4d 90	 lea	 ecx, DWORD PTR _contactFileName$[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$_main$3:
  00018	8d 4d 80	 lea	 ecx, DWORD PTR _contactListFromFile$[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1thread@std@@QAE@XZ	; std::thread::~thread
__unwindfunclet$_main$4:
  00020	8d 8d 98 fc ff
	ff		 lea	 ecx, DWORD PTR $T28[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1?$shared_ptr@VCPerson@@@std@@QAE@XZ ; std::shared_ptr<CPerson>::~shared_ptr<CPerson>
__unwindfunclet$_main$5:
  0002b	8d 8d a8 fc ff
	ff		 lea	 ecx, DWORD PTR $T29[ebp]
  00031	e9 00 00 00 00	 jmp	 ??1?$shared_ptr@VCContact@@@std@@QAE@XZ ; std::shared_ptr<CContact>::~shared_ptr<CContact>
__unwindfunclet$_main$6:
  00036	8d 8d 78 fc ff
	ff		 lea	 ecx, DWORD PTR $T26[ebp]
  0003c	e9 00 00 00 00	 jmp	 ??1?$shared_ptr@VCCompany@@@std@@QAE@XZ ; std::shared_ptr<CCompany>::~shared_ptr<CCompany>
__unwindfunclet$_main$7:
  00041	8d 8d 88 fc ff
	ff		 lea	 ecx, DWORD PTR $T27[ebp]
  00047	e9 00 00 00 00	 jmp	 ??1?$shared_ptr@VCContact@@@std@@QAE@XZ ; std::shared_ptr<CContact>::~shared_ptr<CContact>
__unwindfunclet$_main$8:
  0004c	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR _it$42[ebp]
  00052	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$9:
  00057	8d 8d 58 fc ff
	ff		 lea	 ecx, DWORD PTR $T24[ebp]
  0005d	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$11:
  00062	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR _contactName$41[ebp]
  00068	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$_main$12:
  0006d	8d 8d 10 ff ff
	ff		 lea	 ecx, DWORD PTR _foundContact$40[ebp]
  00073	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$13:
  00078	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _it$39[ebp]
  0007e	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$14:
  00083	8d 8d 2c fc ff
	ff		 lea	 ecx, DWORD PTR $T21[ebp]
  00089	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$16:
  0008e	8d 8d 00 fc ff
	ff		 lea	 ecx, DWORD PTR $T18[ebp]
  00094	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$19:
  00099	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _it$38[ebp]
  0009f	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$20:
  000a4	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T14[ebp]
  000aa	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$22:
  000af	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR _contactName$37[ebp]
  000b5	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$_main$23:
  000ba	8d 8d b0 fe ff
	ff		 lea	 ecx, DWORD PTR _foundContact$36[ebp]
  000c0	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$24:
  000c5	8d 8d 9c fe ff
	ff		 lea	 ecx, DWORD PTR _it$35[ebp]
  000cb	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$25:
  000d0	8d 8d 94 fb ff
	ff		 lea	 ecx, DWORD PTR $T11[ebp]
  000d6	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$27:
  000db	8d 8d 68 fb ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  000e1	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$28:
  000e6	8d 8d 78 fe ff
	ff		 lea	 ecx, DWORD PTR _contactName$34[ebp]
  000ec	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$_main$29:
  000f1	8d 8d 54 fb ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  000f7	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$30:
  000fc	8d 8d 58 fe ff
	ff		 lea	 ecx, DWORD PTR _it$32[ebp]
  00102	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$31:
  00107	8d 8d 34 fb ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  0010d	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$32:
  00112	8d 8d 44 fe ff
	ff		 lea	 ecx, DWORD PTR _it$31[ebp]
  00118	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$_main$33:
  0011d	8d 8d 14 fb ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00123	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$_main:
  00128	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0012c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0012f	8b 8a f4 fa ff
	ff		 mov	 ecx, DWORD PTR [edx-1292]
  00135	33 c8		 xor	 ecx, eax
  00137	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0013c	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0013f	33 c8		 xor	 ecx, eax
  00141	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00146	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$_main
  0014b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
_main	ENDP
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$?0VCPerson@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCPerson@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??$?0VCPerson@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCPerson@@@1@@Z PROC ; std::shared_ptr<CContact>::shared_ptr<CContact><CPerson,void>, COMDAT
; _this$ = ecx

; 530  : 		{	// construct shared_ptr object that takes resource from _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$?0VCPerson@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCPerson@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 529  : 		: _Mybase(_STD move(_Right))

  00042	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ??$move@AAV?$shared_ptr@VCPerson@@@std@@@std@@YA$$QAV?$shared_ptr@VCPerson@@@0@AAV10@@Z ; std::move<std::shared_ptr<CPerson> &>
  0004b	83 c4 04	 add	 esp, 4
  0004e	50		 push	 eax
  0004f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ??$?0VCPerson@@@?$_Ptr_base@VCContact@@@std@@QAE@$$QAV?$_Ptr_base@VCPerson@@@1@@Z ; std::_Ptr_base<CContact>::_Ptr_base<CContact><CPerson>

; 531  : 		}

  00057	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00064	59		 pop	 ecx
  00065	5f		 pop	 edi
  00066	5e		 pop	 esi
  00067	5b		 pop	 ebx
  00068	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0006e	3b ec		 cmp	 ebp, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$?0VCPerson@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCPerson@@@1@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?0VCPerson@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCPerson@@@1@@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?0VCPerson@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCPerson@@@1@@Z ENDP ; std::shared_ptr<CContact>::shared_ptr<CContact><CPerson,void>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??1?$shared_ptr@VCPerson@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$shared_ptr@VCPerson@@@std@@QAE@XZ PROC		; std::shared_ptr<CPerson>::~shared_ptr<CPerson>, COMDAT
; _this$ = ecx

; 566  : 		{	// release resource

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$shared_ptr@VCPerson@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 567  : 		this->_Decref();

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?_Decref@?$_Ptr_base@VCPerson@@@std@@QAEXXZ ; std::_Ptr_base<CPerson>::_Decref

; 568  : 		}

  0004a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00054	59		 pop	 ecx
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$shared_ptr@VCPerson@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$shared_ptr@VCPerson@@@std@@QAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$shared_ptr@VCPerson@@@std@@QAE@XZ ENDP		; std::shared_ptr<CPerson>::~shared_ptr<CPerson>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$shared_ptr@VCPerson@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$shared_ptr@VCPerson@@@std@@QAE@$$QAV01@@Z PROC	; std::shared_ptr<CPerson>::shared_ptr<CPerson>, COMDAT
; _this$ = ecx

; 522  : 		{	// construct shared_ptr object that takes resource from _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$shared_ptr@VCPerson@@@std@@QAE@$$QAV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 521  : 		: _Mybase(_STD move(_Right))

  00042	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ??$move@AAV?$shared_ptr@VCPerson@@@std@@@std@@YA$$QAV?$shared_ptr@VCPerson@@@0@AAV10@@Z ; std::move<std::shared_ptr<CPerson> &>
  0004b	83 c4 04	 add	 esp, 4
  0004e	50		 push	 eax
  0004f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ??0?$_Ptr_base@VCPerson@@@std@@QAE@$$QAV01@@Z ; std::_Ptr_base<CPerson>::_Ptr_base<CPerson>

; 523  : 		}

  00057	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00064	59		 pop	 ecx
  00065	5f		 pop	 edi
  00066	5e		 pop	 esi
  00067	5b		 pop	 ebx
  00068	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0006e	3b ec		 cmp	 ebp, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$shared_ptr@VCPerson@@@std@@QAE@$$QAV01@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$shared_ptr@VCPerson@@@std@@QAE@$$QAV01@@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$shared_ptr@VCPerson@@@std@@QAE@$$QAV01@@Z ENDP	; std::shared_ptr<CPerson>::shared_ptr<CPerson>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$shared_ptr@VCPerson@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$shared_ptr@VCPerson@@@std@@QAE@XZ PROC		; std::shared_ptr<CPerson>::shared_ptr<CPerson>, COMDAT
; _this$ = ecx

; 444  : 	constexpr shared_ptr() _NOEXCEPT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 445  : 		{	// construct empty shared_ptr

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$_Ptr_base@VCPerson@@@std@@QAE@XZ ; std::_Ptr_base<CPerson>::_Ptr_base<CPerson>

; 446  : 		}

  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??0?$shared_ptr@VCPerson@@@std@@QAE@XZ ENDP		; std::shared_ptr<CPerson>::shared_ptr<CPerson>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Reset0@?$_Ptr_base@VCPerson@@@std@@QAEXPAVCPerson@@PAV_Ref_count_base@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other_ptr$ = 8					; size = 4
__Other_rep$ = 12					; size = 4
?_Reset0@?$_Ptr_base@VCPerson@@@std@@QAEXPAVCPerson@@PAV_Ref_count_base@2@@Z PROC ; std::_Ptr_base<CPerson>::_Reset0, COMDAT
; _this$ = ecx

; 393  : 		{	// release resource and take new resource

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 394  : 		if (_Rep != 0)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002a	74 0b		 je	 SHORT $LN2@Reset0

; 395  : 			_Rep->_Decref();

  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00032	e8 00 00 00 00	 call	 ?_Decref@_Ref_count_base@std@@QAEXXZ ; std::_Ref_count_base::_Decref
$LN2@Reset0:

; 396  : 		_Rep = _Other_rep;

  00037	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 0c	 mov	 ecx, DWORD PTR __Other_rep$[ebp]
  0003d	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 397  : 		_Ptr = _Other_ptr;

  00040	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00043	8b 4d 08	 mov	 ecx, DWORD PTR __Other_ptr$[ebp]
  00046	89 08		 mov	 DWORD PTR [eax], ecx

; 398  : 		}

  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 08 00	 ret	 8
?_Reset0@?$_Ptr_base@VCPerson@@@std@@QAEXPAVCPerson@@PAV_Ref_count_base@2@@Z ENDP ; std::_Ptr_base<CPerson>::_Reset0
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Decref@?$_Ptr_base@VCPerson@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Decref@?$_Ptr_base@VCPerson@@@std@@QAEXXZ PROC	; std::_Ptr_base<CPerson>::_Decref, COMDAT
; _this$ = ecx

; 336  : 		{	// decrement reference count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 337  : 		if (_Rep != 0)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002a	74 0b		 je	 SHORT $LN1@Decref

; 338  : 			_Rep->_Decref();

  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00032	e8 00 00 00 00	 call	 ?_Decref@_Ref_count_base@std@@QAEXXZ ; std::_Ref_count_base::_Decref
$LN1@Decref:

; 339  : 		}

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?_Decref@?$_Ptr_base@VCPerson@@@std@@QAEXXZ ENDP	; std::_Ptr_base<CPerson>::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$_Ptr_base@VCPerson@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??0?$_Ptr_base@VCPerson@@@std@@QAE@$$QAV01@@Z PROC	; std::_Ptr_base<CPerson>::_Ptr_base<CPerson>, COMDAT
; _this$ = ecx

; 279  : 		{	// construct _Ptr_base object that takes resource from _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 278  : 		: _Ptr(_Right._Ptr), _Rep(_Right._Rep)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00029	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002b	89 10		 mov	 DWORD PTR [eax], edx
  0002d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00033	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00036	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 280  : 		_Right._Ptr = 0;

  00039	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0003c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 281  : 		_Right._Rep = 0;

  00042	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00045	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 282  : 		}

  0004c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??0?$_Ptr_base@VCPerson@@@std@@QAE@$$QAV01@@Z ENDP	; std::_Ptr_base<CPerson>::_Ptr_base<CPerson>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$_Ptr_base@VCPerson@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Ptr_base@VCPerson@@@std@@QAE@XZ PROC		; std::_Ptr_base<CPerson>::_Ptr_base<CPerson>, COMDAT
; _this$ = ecx

; 274  : 		{	// construct

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 273  : 		: _Ptr(0), _Rep(0)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 275  : 		}

  00036	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
??0?$_Ptr_base@VCPerson@@@std@@QAE@XZ ENDP		; std::_Ptr_base<CPerson>::_Ptr_base<CPerson>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z
_TEXT	SEGMENT
tv78 = -272						; size = 4
$T2 = -264						; size = 4
$T3 = -252						; size = 4
$T4 = -240						; size = 4
__Ret$ = -36						; size = 8
__Rx$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_<_Args_0>$ = 12					; size = 4
??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z PROC ; std::make_shared<CPerson,bool>, COMDAT

; 969  : 	{	// make a shared_ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8d bd f0 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-272]
  00020	b9 41 00 00 00	 mov	 ecx, 65			; 00000041H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00031	33 c5		 xor	 eax, ebp
  00033	50		 push	 eax
  00034	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00037	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003d	c7 85 f8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0

; 970  : 	_Ref_count_obj<_Ty> *_Rx =
; 971  : 		new _Ref_count_obj<_Ty>(_STD forward<_Types>(_Args)...);

  00047	68 2c 01 00 00	 push	 300			; 0000012cH
  0004c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00051	83 c4 04	 add	 esp, 4
  00054	89 85 04 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00061	83 bd 04 ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  00068	74 20		 je	 SHORT $LN3@make_share
  0006a	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ??$forward@_N@std@@YA$$QA_NAA_N@Z ; std::forward<bool>
  00073	83 c4 04	 add	 esp, 4
  00076	50		 push	 eax
  00077	8b 8d 04 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  0007d	e8 00 00 00 00	 call	 ??$?0_N@?$_Ref_count_obj@VCPerson@@@std@@QAE@$$QA_N@Z ; std::_Ref_count_obj<CPerson>::_Ref_count_obj<CPerson><bool>
  00082	89 85 f0 fe ff
	ff		 mov	 DWORD PTR tv78[ebp], eax
  00088	eb 0a		 jmp	 SHORT $LN4@make_share
$LN3@make_share:
  0008a	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv78[ebp], 0
$LN4@make_share:
  00094	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR tv78[ebp]
  0009a	89 8d 10 ff ff
	ff		 mov	 DWORD PTR $T4[ebp], ecx
  000a0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000a7	8b 95 10 ff ff
	ff		 mov	 edx, DWORD PTR $T4[ebp]
  000ad	89 55 ec	 mov	 DWORD PTR __Rx$[ebp], edx

; 972  : 
; 973  : 	shared_ptr<_Ty> _Ret;

  000b0	8d 4d dc	 lea	 ecx, DWORD PTR __Ret$[ebp]
  000b3	e8 00 00 00 00	 call	 ??0?$shared_ptr@VCPerson@@@std@@QAE@XZ ; std::shared_ptr<CPerson>::shared_ptr<CPerson>
  000b8	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 974  : 	_Ret._Resetp0(_Rx->_Getptr(), _Rx);

  000bf	8b 45 ec	 mov	 eax, DWORD PTR __Rx$[ebp]
  000c2	50		 push	 eax
  000c3	8b 4d ec	 mov	 ecx, DWORD PTR __Rx$[ebp]
  000c6	e8 00 00 00 00	 call	 ?_Getptr@?$_Ref_count_obj@VCPerson@@@std@@QBEPAVCPerson@@XZ ; std::_Ref_count_obj<CPerson>::_Getptr
  000cb	50		 push	 eax
  000cc	8d 4d dc	 lea	 ecx, DWORD PTR __Ret$[ebp]
  000cf	e8 00 00 00 00	 call	 ??$_Resetp0@VCPerson@@@?$shared_ptr@VCPerson@@@std@@QAEXPAVCPerson@@PAV_Ref_count_base@1@@Z ; std::shared_ptr<CPerson>::_Resetp0<CPerson>

; 975  : 	return (_Ret);

  000d4	8d 45 dc	 lea	 eax, DWORD PTR __Ret$[ebp]
  000d7	50		 push	 eax
  000d8	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000db	e8 00 00 00 00	 call	 ??0?$shared_ptr@VCPerson@@@std@@QAE@$$QAV01@@Z ; std::shared_ptr<CPerson>::shared_ptr<CPerson>
  000e0	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  000e6	83 c9 01	 or	 ecx, 1
  000e9	89 8d f8 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  000ef	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f6	8d 4d dc	 lea	 ecx, DWORD PTR __Ret$[ebp]
  000f9	e8 00 00 00 00	 call	 ??1?$shared_ptr@VCPerson@@@std@@QAE@XZ ; std::shared_ptr<CPerson>::~shared_ptr<CPerson>
  000fe	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 976  : 	}

  00101	52		 push	 edx
  00102	8b cd		 mov	 ecx, ebp
  00104	50		 push	 eax
  00105	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@make_share
  0010b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00110	58		 pop	 eax
  00111	5a		 pop	 edx
  00112	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00115	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011c	59		 pop	 ecx
  0011d	5f		 pop	 edi
  0011e	5e		 pop	 esi
  0011f	5b		 pop	 ebx
  00120	81 c4 10 01 00
	00		 add	 esp, 272		; 00000110H
  00126	3b ec		 cmp	 ebp, esp
  00128	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012d	8b e5		 mov	 esp, ebp
  0012f	5d		 pop	 ebp
  00130	c3		 ret	 0
  00131	0f 1f 00	 npad	 3
$LN12@make_share:
  00134	01 00 00 00	 DD	 1
  00138	00 00 00 00	 DD	 $LN11@make_share
$LN11@make_share:
  0013c	dc ff ff ff	 DD	 -36			; ffffffdcH
  00140	08 00 00 00	 DD	 8
  00144	00 00 00 00	 DD	 $LN9@make_share
$LN9@make_share:
  00148	5f		 DB	 95			; 0000005fH
  00149	52		 DB	 82			; 00000052H
  0014a	65		 DB	 101			; 00000065H
  0014b	74		 DB	 116			; 00000074H
  0014c	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z$0:
  00000	68 2c 01 00 00	 push	 300			; 0000012cH
  00005	8b 85 04 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00011	83 c4 08	 add	 esp, 8
  00014	c3		 ret	 0
__unwindfunclet$??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z$1:
  00015	8d 4d dc	 lea	 ecx, DWORD PTR __Ret$[ebp]
  00018	e9 00 00 00 00	 jmp	 ??1?$shared_ptr@VCPerson@@@std@@QAE@XZ ; std::shared_ptr<CPerson>::~shared_ptr<CPerson>
__ehhandler$??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z:
  0001d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00021	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00024	8b 8a ec fe ff
	ff		 mov	 ecx, DWORD PTR [edx-276]
  0002a	33 c8		 xor	 ecx, eax
  0002c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00031	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z
  00036	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z ENDP ; std::make_shared<CPerson,bool>
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_iarchive.hpp
;	COMDAT ??$?5VCContact@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVCContact@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?5VCContact@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVCContact@@@Z PROC ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><CContact>, COMDAT
; _this$ = ecx

; 67   :     Archive & operator>>(T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 68   :         this->This()->load_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
  0002f	8b c8		 mov	 ecx, eax
  00031	e8 00 00 00 00	 call	 ??$load_override@VCContact@@@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVCContact@@@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load_override<CContact>

; 69   :         return * this->This();

  00036	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This

; 70   :     }

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??$?5VCContact@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVCContact@@@Z ENDP ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$?0VCCompany@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCCompany@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??$?0VCCompany@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCCompany@@@1@@Z PROC ; std::shared_ptr<CContact>::shared_ptr<CContact><CCompany,void>, COMDAT
; _this$ = ecx

; 530  : 		{	// construct shared_ptr object that takes resource from _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$?0VCCompany@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCCompany@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 529  : 		: _Mybase(_STD move(_Right))

  00042	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ??$move@AAV?$shared_ptr@VCCompany@@@std@@@std@@YA$$QAV?$shared_ptr@VCCompany@@@0@AAV10@@Z ; std::move<std::shared_ptr<CCompany> &>
  0004b	83 c4 04	 add	 esp, 4
  0004e	50		 push	 eax
  0004f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ??$?0VCCompany@@@?$_Ptr_base@VCContact@@@std@@QAE@$$QAV?$_Ptr_base@VCCompany@@@1@@Z ; std::_Ptr_base<CContact>::_Ptr_base<CContact><CCompany>

; 531  : 		}

  00057	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00064	59		 pop	 ecx
  00065	5f		 pop	 edi
  00066	5e		 pop	 esi
  00067	5b		 pop	 ebx
  00068	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0006e	3b ec		 cmp	 ebp, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$?0VCCompany@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCCompany@@@1@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?0VCCompany@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCCompany@@@1@@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?0VCCompany@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCCompany@@@1@@Z ENDP ; std::shared_ptr<CContact>::shared_ptr<CContact><CCompany,void>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??1?$shared_ptr@VCCompany@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$shared_ptr@VCCompany@@@std@@QAE@XZ PROC		; std::shared_ptr<CCompany>::~shared_ptr<CCompany>, COMDAT
; _this$ = ecx

; 566  : 		{	// release resource

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$shared_ptr@VCCompany@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 567  : 		this->_Decref();

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?_Decref@?$_Ptr_base@VCCompany@@@std@@QAEXXZ ; std::_Ptr_base<CCompany>::_Decref

; 568  : 		}

  0004a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00054	59		 pop	 ecx
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$shared_ptr@VCCompany@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$shared_ptr@VCCompany@@@std@@QAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$shared_ptr@VCCompany@@@std@@QAE@XZ ENDP		; std::shared_ptr<CCompany>::~shared_ptr<CCompany>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$shared_ptr@VCCompany@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$shared_ptr@VCCompany@@@std@@QAE@$$QAV01@@Z PROC	; std::shared_ptr<CCompany>::shared_ptr<CCompany>, COMDAT
; _this$ = ecx

; 522  : 		{	// construct shared_ptr object that takes resource from _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$shared_ptr@VCCompany@@@std@@QAE@$$QAV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 521  : 		: _Mybase(_STD move(_Right))

  00042	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ??$move@AAV?$shared_ptr@VCCompany@@@std@@@std@@YA$$QAV?$shared_ptr@VCCompany@@@0@AAV10@@Z ; std::move<std::shared_ptr<CCompany> &>
  0004b	83 c4 04	 add	 esp, 4
  0004e	50		 push	 eax
  0004f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ??0?$_Ptr_base@VCCompany@@@std@@QAE@$$QAV01@@Z ; std::_Ptr_base<CCompany>::_Ptr_base<CCompany>

; 523  : 		}

  00057	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00064	59		 pop	 ecx
  00065	5f		 pop	 edi
  00066	5e		 pop	 esi
  00067	5b		 pop	 ebx
  00068	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0006e	3b ec		 cmp	 ebp, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$shared_ptr@VCCompany@@@std@@QAE@$$QAV01@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$shared_ptr@VCCompany@@@std@@QAE@$$QAV01@@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$shared_ptr@VCCompany@@@std@@QAE@$$QAV01@@Z ENDP	; std::shared_ptr<CCompany>::shared_ptr<CCompany>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$shared_ptr@VCCompany@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$shared_ptr@VCCompany@@@std@@QAE@XZ PROC		; std::shared_ptr<CCompany>::shared_ptr<CCompany>, COMDAT
; _this$ = ecx

; 444  : 	constexpr shared_ptr() _NOEXCEPT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 445  : 		{	// construct empty shared_ptr

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$_Ptr_base@VCCompany@@@std@@QAE@XZ ; std::_Ptr_base<CCompany>::_Ptr_base<CCompany>

; 446  : 		}

  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??0?$shared_ptr@VCCompany@@@std@@QAE@XZ ENDP		; std::shared_ptr<CCompany>::shared_ptr<CCompany>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Reset0@?$_Ptr_base@VCCompany@@@std@@QAEXPAVCCompany@@PAV_Ref_count_base@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other_ptr$ = 8					; size = 4
__Other_rep$ = 12					; size = 4
?_Reset0@?$_Ptr_base@VCCompany@@@std@@QAEXPAVCCompany@@PAV_Ref_count_base@2@@Z PROC ; std::_Ptr_base<CCompany>::_Reset0, COMDAT
; _this$ = ecx

; 393  : 		{	// release resource and take new resource

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 394  : 		if (_Rep != 0)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002a	74 0b		 je	 SHORT $LN2@Reset0

; 395  : 			_Rep->_Decref();

  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00032	e8 00 00 00 00	 call	 ?_Decref@_Ref_count_base@std@@QAEXXZ ; std::_Ref_count_base::_Decref
$LN2@Reset0:

; 396  : 		_Rep = _Other_rep;

  00037	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 0c	 mov	 ecx, DWORD PTR __Other_rep$[ebp]
  0003d	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 397  : 		_Ptr = _Other_ptr;

  00040	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00043	8b 4d 08	 mov	 ecx, DWORD PTR __Other_ptr$[ebp]
  00046	89 08		 mov	 DWORD PTR [eax], ecx

; 398  : 		}

  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 08 00	 ret	 8
?_Reset0@?$_Ptr_base@VCCompany@@@std@@QAEXPAVCCompany@@PAV_Ref_count_base@2@@Z ENDP ; std::_Ptr_base<CCompany>::_Reset0
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Decref@?$_Ptr_base@VCCompany@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Decref@?$_Ptr_base@VCCompany@@@std@@QAEXXZ PROC	; std::_Ptr_base<CCompany>::_Decref, COMDAT
; _this$ = ecx

; 336  : 		{	// decrement reference count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 337  : 		if (_Rep != 0)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002a	74 0b		 je	 SHORT $LN1@Decref

; 338  : 			_Rep->_Decref();

  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00032	e8 00 00 00 00	 call	 ?_Decref@_Ref_count_base@std@@QAEXXZ ; std::_Ref_count_base::_Decref
$LN1@Decref:

; 339  : 		}

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?_Decref@?$_Ptr_base@VCCompany@@@std@@QAEXXZ ENDP	; std::_Ptr_base<CCompany>::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$_Ptr_base@VCCompany@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??0?$_Ptr_base@VCCompany@@@std@@QAE@$$QAV01@@Z PROC	; std::_Ptr_base<CCompany>::_Ptr_base<CCompany>, COMDAT
; _this$ = ecx

; 279  : 		{	// construct _Ptr_base object that takes resource from _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 278  : 		: _Ptr(_Right._Ptr), _Rep(_Right._Rep)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00029	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002b	89 10		 mov	 DWORD PTR [eax], edx
  0002d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00033	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00036	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 280  : 		_Right._Ptr = 0;

  00039	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0003c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 281  : 		_Right._Rep = 0;

  00042	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00045	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 282  : 		}

  0004c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??0?$_Ptr_base@VCCompany@@@std@@QAE@$$QAV01@@Z ENDP	; std::_Ptr_base<CCompany>::_Ptr_base<CCompany>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$_Ptr_base@VCCompany@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Ptr_base@VCCompany@@@std@@QAE@XZ PROC		; std::_Ptr_base<CCompany>::_Ptr_base<CCompany>, COMDAT
; _this$ = ecx

; 274  : 		{	// construct

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 273  : 		: _Ptr(0), _Rep(0)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 275  : 		}

  00036	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
??0?$_Ptr_base@VCCompany@@@std@@QAE@XZ ENDP		; std::_Ptr_base<CCompany>::_Ptr_base<CCompany>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z
_TEXT	SEGMENT
tv78 = -272						; size = 4
$T2 = -264						; size = 4
$T3 = -252						; size = 4
$T4 = -240						; size = 4
__Ret$ = -36						; size = 8
__Rx$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_<_Args_0>$ = 12					; size = 4
??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z PROC ; std::make_shared<CCompany,bool>, COMDAT

; 969  : 	{	// make a shared_ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8d bd f0 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-272]
  00020	b9 41 00 00 00	 mov	 ecx, 65			; 00000041H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00031	33 c5		 xor	 eax, ebp
  00033	50		 push	 eax
  00034	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00037	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003d	c7 85 f8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0

; 970  : 	_Ref_count_obj<_Ty> *_Rx =
; 971  : 		new _Ref_count_obj<_Ty>(_STD forward<_Types>(_Args)...);

  00047	68 f0 00 00 00	 push	 240			; 000000f0H
  0004c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00051	83 c4 04	 add	 esp, 4
  00054	89 85 04 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00061	83 bd 04 ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  00068	74 20		 je	 SHORT $LN3@make_share
  0006a	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ??$forward@_N@std@@YA$$QA_NAA_N@Z ; std::forward<bool>
  00073	83 c4 04	 add	 esp, 4
  00076	50		 push	 eax
  00077	8b 8d 04 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  0007d	e8 00 00 00 00	 call	 ??$?0_N@?$_Ref_count_obj@VCCompany@@@std@@QAE@$$QA_N@Z ; std::_Ref_count_obj<CCompany>::_Ref_count_obj<CCompany><bool>
  00082	89 85 f0 fe ff
	ff		 mov	 DWORD PTR tv78[ebp], eax
  00088	eb 0a		 jmp	 SHORT $LN4@make_share
$LN3@make_share:
  0008a	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv78[ebp], 0
$LN4@make_share:
  00094	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR tv78[ebp]
  0009a	89 8d 10 ff ff
	ff		 mov	 DWORD PTR $T4[ebp], ecx
  000a0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000a7	8b 95 10 ff ff
	ff		 mov	 edx, DWORD PTR $T4[ebp]
  000ad	89 55 ec	 mov	 DWORD PTR __Rx$[ebp], edx

; 972  : 
; 973  : 	shared_ptr<_Ty> _Ret;

  000b0	8d 4d dc	 lea	 ecx, DWORD PTR __Ret$[ebp]
  000b3	e8 00 00 00 00	 call	 ??0?$shared_ptr@VCCompany@@@std@@QAE@XZ ; std::shared_ptr<CCompany>::shared_ptr<CCompany>
  000b8	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 974  : 	_Ret._Resetp0(_Rx->_Getptr(), _Rx);

  000bf	8b 45 ec	 mov	 eax, DWORD PTR __Rx$[ebp]
  000c2	50		 push	 eax
  000c3	8b 4d ec	 mov	 ecx, DWORD PTR __Rx$[ebp]
  000c6	e8 00 00 00 00	 call	 ?_Getptr@?$_Ref_count_obj@VCCompany@@@std@@QBEPAVCCompany@@XZ ; std::_Ref_count_obj<CCompany>::_Getptr
  000cb	50		 push	 eax
  000cc	8d 4d dc	 lea	 ecx, DWORD PTR __Ret$[ebp]
  000cf	e8 00 00 00 00	 call	 ??$_Resetp0@VCCompany@@@?$shared_ptr@VCCompany@@@std@@QAEXPAVCCompany@@PAV_Ref_count_base@1@@Z ; std::shared_ptr<CCompany>::_Resetp0<CCompany>

; 975  : 	return (_Ret);

  000d4	8d 45 dc	 lea	 eax, DWORD PTR __Ret$[ebp]
  000d7	50		 push	 eax
  000d8	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000db	e8 00 00 00 00	 call	 ??0?$shared_ptr@VCCompany@@@std@@QAE@$$QAV01@@Z ; std::shared_ptr<CCompany>::shared_ptr<CCompany>
  000e0	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  000e6	83 c9 01	 or	 ecx, 1
  000e9	89 8d f8 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  000ef	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f6	8d 4d dc	 lea	 ecx, DWORD PTR __Ret$[ebp]
  000f9	e8 00 00 00 00	 call	 ??1?$shared_ptr@VCCompany@@@std@@QAE@XZ ; std::shared_ptr<CCompany>::~shared_ptr<CCompany>
  000fe	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 976  : 	}

  00101	52		 push	 edx
  00102	8b cd		 mov	 ecx, ebp
  00104	50		 push	 eax
  00105	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@make_share
  0010b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00110	58		 pop	 eax
  00111	5a		 pop	 edx
  00112	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00115	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011c	59		 pop	 ecx
  0011d	5f		 pop	 edi
  0011e	5e		 pop	 esi
  0011f	5b		 pop	 ebx
  00120	81 c4 10 01 00
	00		 add	 esp, 272		; 00000110H
  00126	3b ec		 cmp	 ebp, esp
  00128	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012d	8b e5		 mov	 esp, ebp
  0012f	5d		 pop	 ebp
  00130	c3		 ret	 0
  00131	0f 1f 00	 npad	 3
$LN12@make_share:
  00134	01 00 00 00	 DD	 1
  00138	00 00 00 00	 DD	 $LN11@make_share
$LN11@make_share:
  0013c	dc ff ff ff	 DD	 -36			; ffffffdcH
  00140	08 00 00 00	 DD	 8
  00144	00 00 00 00	 DD	 $LN9@make_share
$LN9@make_share:
  00148	5f		 DB	 95			; 0000005fH
  00149	52		 DB	 82			; 00000052H
  0014a	65		 DB	 101			; 00000065H
  0014b	74		 DB	 116			; 00000074H
  0014c	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z$0:
  00000	68 f0 00 00 00	 push	 240			; 000000f0H
  00005	8b 85 04 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00011	83 c4 08	 add	 esp, 8
  00014	c3		 ret	 0
__unwindfunclet$??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z$1:
  00015	8d 4d dc	 lea	 ecx, DWORD PTR __Ret$[ebp]
  00018	e9 00 00 00 00	 jmp	 ??1?$shared_ptr@VCCompany@@@std@@QAE@XZ ; std::shared_ptr<CCompany>::~shared_ptr<CCompany>
__ehhandler$??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z:
  0001d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00021	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00024	8b 8a ec fe ff
	ff		 mov	 ecx, DWORD PTR [edx-276]
  0002a	33 c8		 xor	 ecx, eax
  0002c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00031	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z
  00036	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z ENDP ; std::make_shared<CCompany,bool>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ PROC ; std::basic_ifstream<char,std::char_traits<char> >::`vbase destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	83 c1 70	 add	 ecx, 112		; 00000070H
  00029	e8 00 00 00 00	 call	 ??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	83 c1 70	 add	 ecx, 112		; 00000070H
  00034	8b f4		 mov	 esi, esp
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ ENDP ; std::basic_ifstream<char,std::char_traits<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_ifstream<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	83 e9 70	 sub	 ecx, 112		; 00000070H
  00029	e8 00 00 00 00	 call	 ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
  0002e	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00031	83 e0 01	 and	 eax, 1
  00034	74 14		 je	 SHORT $LN2@scalar
  00036	68 b8 00 00 00	 push	 184			; 000000b8H
  0003b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	83 e8 70	 sub	 eax, 112		; 00000070H
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00047	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0004a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 e8 70	 sub	 eax, 112		; 00000070H
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00059	3b ec		 cmp	 ebp, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c2 04 00	 ret	 4
??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_ifstream<char,std::char_traits<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ PROC ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 879  : 		{	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 48 90	 mov	 ecx, DWORD PTR [eax-112]
  00029	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 44 10 90 00
	00 00 00	 mov	 DWORD PTR [eax+edx-112], OFFSET ??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
  00037	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 48 90	 mov	 ecx, DWORD PTR [eax-112]
  0003d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00040	83 ea 70	 sub	 edx, 112		; 00000070H
  00043	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00046	8b 48 90	 mov	 ecx, DWORD PTR [eax-112]
  00049	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0004c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	89 54 01 8c	 mov	 DWORD PTR [ecx+eax-116], edx

; 880  : 		}

  00053	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	83 e9 60	 sub	 ecx, 96			; 00000060H
  00059	e8 00 00 00 00	 call	 ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
  0005e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	83 e9 58	 sub	 ecx, 88			; 00000058H
  00064	8b f4		 mov	 esi, esp
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ
  0006c	3b f4		 cmp	 esi, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	5f		 pop	 edi
  00074	5e		 pop	 esi
  00075	5b		 pop	 ebx
  00076	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0007c	3b ec		 cmp	 ebp, esp
  0007e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
_TEXT	SEGMENT
$T2 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Str$ = 8						; size = 4
__Mode$ = 12						; size = 4
__Prot$ = 16						; size = 4
_$initVBases$ = 20					; size = 4
??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z PROC ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 761  : 		{	// construct with named file and specified mode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00021	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0
  0004c	83 7d 14 00	 cmp	 DWORD PTR _$initVBases$[ebp], 0
  00050	74 34		 je	 SHORT $LN2@basic_ifst
  00052	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@
  0005b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	83 c1 70	 add	 ecx, 112		; 00000070H
  00061	8b f4		 mov	 esi, esp
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ
  00069	3b f4		 cmp	 esi, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00077	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  0007d	83 c8 01	 or	 eax, 1
  00080	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
$LN2@basic_ifst:

; 760  : 		: _Mybase(&_Filebuffer)

  00086	8b f4		 mov	 esi, esp
  00088	6a 00		 push	 0
  0008a	6a 00		 push	 0
  0008c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0008f	83 c0 10	 add	 eax, 16			; 00000010H
  00092	50		 push	 eax
  00093	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
  0009c	3b f4		 cmp	 esi, esp
  0009e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a3	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 761  : 		{	// construct with named file and specified mode

  000aa	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 08		 mov	 ecx, DWORD PTR [eax]
  000af	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000b2	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000b5	c7 04 10 00 00
	00 00		 mov	 DWORD PTR [eax+edx], OFFSET ??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
  000bc	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000bf	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c4	83 ea 70	 sub	 edx, 112		; 00000070H
  000c7	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 08		 mov	 ecx, DWORD PTR [eax]
  000cc	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000cf	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d2	89 54 01 fc	 mov	 DWORD PTR [ecx+eax-4], edx
  000d6	6a 00		 push	 0
  000d8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	83 c1 10	 add	 ecx, 16			; 00000010H
  000de	e8 00 00 00 00	 call	 ??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
  000e3	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 762  : 		if (_Filebuffer.open(_Str.c_str(), _Mode | ios_base::in, _Prot) == 0)

  000e7	8b 45 10	 mov	 eax, DWORD PTR __Prot$[ebp]
  000ea	50		 push	 eax
  000eb	8b 4d 0c	 mov	 ecx, DWORD PTR __Mode$[ebp]
  000ee	83 c9 01	 or	 ecx, 1
  000f1	51		 push	 ecx
  000f2	8b 4d 08	 mov	 ecx, DWORD PTR __Str$[ebp]
  000f5	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  000fa	50		 push	 eax
  000fb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000fe	83 c1 10	 add	 ecx, 16			; 00000010H
  00101	e8 00 00 00 00	 call	 ?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
  00106	85 c0		 test	 eax, eax
  00108	75 20		 jne	 SHORT $LN1@basic_ifst

; 763  : 			_Myios::setstate(ios_base::failbit);

  0010a	8b f4		 mov	 esi, esp
  0010c	6a 00		 push	 0
  0010e	6a 02		 push	 2
  00110	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00113	8b 08		 mov	 ecx, DWORD PTR [eax]
  00115	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00118	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  0011b	8b ca		 mov	 ecx, edx
  0011d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
  00123	3b f4		 cmp	 esi, esp
  00125	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@basic_ifst:

; 764  : 		}

  0012a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00131	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00134	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00137	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0013e	59		 pop	 ecx
  0013f	5f		 pop	 edi
  00140	5e		 pop	 esi
  00141	5b		 pop	 ebx
  00142	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  00148	3b ec		 cmp	 ebp, esp
  0014a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014f	8b e5		 mov	 esp, ebp
  00151	5d		 pop	 ebp
  00152	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z$0:
  00000	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00006	83 e0 01	 and	 eax, 1
  00009	0f 84 1c 00 00
	00		 je	 $LN6@basic_ifst
  0000f	83 a5 20 ff ff
	ff fe		 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00016	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 70	 add	 ecx, 112		; 00000070H
  0001c	8b f4		 mov	 esi, esp
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
  00024	3b f4		 cmp	 esi, esp
  00026	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$LN6@basic_ifst:
  0002b	c3		 ret	 0
__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z$1:
  0002c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	83 c1 18	 add	 ecx, 24			; 00000018H
  00032	8b f4		 mov	 esi, esp
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ
  0003a	3b f4		 cmp	 esi, esp
  0003c	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z$2:
  00041	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	83 c1 10	 add	 ecx, 16			; 00000010H
  00047	e9 00 00 00 00	 jmp	 ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
__ehhandler$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z:
  0004c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00050	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00053	8b 8a 18 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-232]
  00059	33 c8		 xor	 ecx, eax
  0005b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00060	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
  00065	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z ENDP ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\contactlist.h
;	COMDAT ?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
tv202 = -1152						; size = 4
tv200 = -1152						; size = 4
tv191 = -1148						; size = 4
tv182 = -1148						; size = 4
tv203 = -1144						; size = 4
tv201 = -1144						; size = 4
tv199 = -1144						; size = 4
tv195 = -1144						; size = 4
tv186 = -1144						; size = 4
tv88 = -1144						; size = 4
$T2 = -1136						; size = 8
$T3 = -1117						; size = 1
$T4 = -1108						; size = 28
$T5 = -1072						; size = 8
$T6 = -1053						; size = 1
$T7 = -1044						; size = 28
_tempPerson$8 = -624					; size = 8
_people$9 = -608					; size = 88
_peopleFile$10 = -512					; size = 184
_tempCompany$11 = -320					; size = 8
_companies$12 = -304					; size = 88
_companiesFile$13 = -208				; size = 184
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_contactList$ = 8					; size = 4
_contactFileName$ = 12					; size = 4
?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; getContactList, COMDAT

; 46   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 70 04 00
	00		 sub	 esp, 1136		; 00000470H
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8d bd 80 fb ff
	ff		 lea	 edi, DWORD PTR [ebp-1152]
  00021	b9 1c 01 00 00	 mov	 ecx, 284		; 0000011cH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00037	50		 push	 eax
  00038	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  0003b	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00041	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp

; 47   : 	// Try to open the file and read the archive. If it doesn't exist, it throws an exception
; 48   : 	try

  00044	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 49   : 	{
; 50   : 		ifstream companiesFile(contactFileName + "Companies.txt", ios_base::in);

  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MIMFNFBN@Companies?4txt?$AA@
  00050	8b 45 0c	 mov	 eax, DWORD PTR _contactFileName$[ebp]
  00053	50		 push	 eax
  00054	8d 8d ec fb ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00060	83 c4 0c	 add	 esp, 12			; 0000000cH
  00063	89 85 88 fb ff
	ff		 mov	 DWORD PTR tv199[ebp], eax
  00069	8b 95 88 fb ff
	ff		 mov	 edx, DWORD PTR tv199[ebp]
  0006f	89 95 84 fb ff
	ff		 mov	 DWORD PTR tv182[ebp], edx
  00075	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  00079	6a 01		 push	 1
  0007b	6a 40		 push	 64			; 00000040H
  0007d	6a 01		 push	 1
  0007f	8b 85 84 fb ff
	ff		 mov	 eax, DWORD PTR tv182[ebp]
  00085	50		 push	 eax
  00086	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _companiesFile$13[ebp]
  0008c	e8 00 00 00 00	 call	 ??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
  00091	89 85 80 fb ff
	ff		 mov	 DWORD PTR tv200[ebp], eax
  00097	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+12], 3
  0009b	8d 8d ec fb ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  000a1	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 51   : 
; 52   : 		boost::archive::text_iarchive companies(companiesFile);

  000a6	6a 00		 push	 0
  000a8	8d 85 30 ff ff
	ff		 lea	 eax, DWORD PTR _companiesFile$13[ebp]
  000ae	50		 push	 eax
  000af	8d 8d d0 fe ff
	ff		 lea	 ecx, DWORD PTR _companies$12[ebp]
  000b5	e8 00 00 00 00	 call	 ??0text_iarchive@archive@boost@@QAE@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@I@Z ; boost::archive::text_iarchive::text_iarchive
  000ba	89 85 88 fb ff
	ff		 mov	 DWORD PTR tv201[ebp], eax
  000c0	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+12], 4

; 53   : 
; 54   : 		try

  000c4	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+12], 5
$LN2@getContact:

; 55   : 		{
; 56   : 			// Infinitely read the archive. It throws an exception when there's nothing left to read
; 57   : 			while (true)

  000c8	b8 01 00 00 00	 mov	 eax, 1
  000cd	85 c0		 test	 eax, eax
  000cf	74 7e		 je	 SHORT $LN3@getContact

; 58   : 			{
; 59   : 				// Make the pointer to the company, (try) get everything from the archive, then add it to the contact list
; 60   : 				shared_ptr<CContact> tempCompany = make_shared<CCompany>(true);

  000d1	c6 85 e3 fb ff
	ff 01		 mov	 BYTE PTR $T6[ebp], 1
  000d8	8d 85 e3 fb ff
	ff		 lea	 eax, DWORD PTR $T6[ebp]
  000de	50		 push	 eax
  000df	8d 8d d0 fb ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  000e5	51		 push	 ecx
  000e6	e8 00 00 00 00	 call	 ??$make_shared@VCCompany@@_N@std@@YA?AV?$shared_ptr@VCCompany@@@0@$$QA_N@Z ; std::make_shared<CCompany,bool>
  000eb	83 c4 08	 add	 esp, 8
  000ee	89 85 88 fb ff
	ff		 mov	 DWORD PTR tv186[ebp], eax
  000f4	8b 95 88 fb ff
	ff		 mov	 edx, DWORD PTR tv186[ebp]
  000fa	52		 push	 edx
  000fb	8d 8d c0 fe ff
	ff		 lea	 ecx, DWORD PTR _tempCompany$11[ebp]
  00101	e8 00 00 00 00	 call	 ??$?0VCCompany@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCCompany@@@1@@Z ; std::shared_ptr<CContact>::shared_ptr<CContact><CCompany,void>
  00106	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+12], 6
  0010a	8d 8d d0 fb ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  00110	e8 00 00 00 00	 call	 ??1?$shared_ptr@VCCompany@@@std@@QAE@XZ ; std::shared_ptr<CCompany>::~shared_ptr<CCompany>

; 61   : 				companies >> *tempCompany;

  00115	8d 8d c0 fe ff
	ff		 lea	 ecx, DWORD PTR _tempCompany$11[ebp]
  0011b	e8 00 00 00 00	 call	 ??D?$shared_ptr@VCContact@@@std@@QBEAAVCContact@@XZ ; std::shared_ptr<CContact>::operator*
  00120	50		 push	 eax
  00121	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _companies$12[ebp+24]
  00127	e8 00 00 00 00	 call	 ??$?5VCContact@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVCContact@@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><CContact>

; 62   : 				contactList->push_back(tempCompany);

  0012c	8d 85 c0 fe ff
	ff		 lea	 eax, DWORD PTR _tempCompany$11[ebp]
  00132	50		 push	 eax
  00133	8b 4d 08	 mov	 ecx, DWORD PTR _contactList$[ebp]
  00136	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAEXABV?$shared_ptr@VCContact@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::push_back

; 63   : 			}

  0013b	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+12], 5
  0013f	8d 8d c0 fe ff
	ff		 lea	 ecx, DWORD PTR _tempCompany$11[ebp]
  00145	e8 00 00 00 00	 call	 ??1?$shared_ptr@VCContact@@@std@@QAE@XZ ; std::shared_ptr<CContact>::~shared_ptr<CContact>
  0014a	e9 79 ff ff ff	 jmp	 $LN2@getContact
$LN3@getContact:

; 64   : 		}

  0014f	eb 06		 jmp	 SHORT $LN12@getContact
__catch$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$0:

; 65   : 		// Nothing needs to be done with the exceptions. Either the file doesn't exist
; 66   : 		// and it doesn't matter, or it reached the end of the file and it doesn't matter
; 67   : 		catch (...)
; 68   : 		{
; 69   : 		}

  00151	b8 00 00 00 00	 mov	 eax, $LN30@getContact
  00156	c3		 ret	 0
$LN12@getContact:
  00157	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 4
  0015e	eb 07		 jmp	 SHORT __tryend$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$1
$LN30@getContact:
  00160	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 4
__tryend$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$1:

; 70   : 	}

  00167	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+12], 3
  0016b	8d 8d d0 fe ff
	ff		 lea	 ecx, DWORD PTR _companies$12[ebp]
  00171	e8 00 00 00 00	 call	 ??1text_iarchive@archive@boost@@UAE@XZ ; boost::archive::text_iarchive::~text_iarchive
  00176	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  0017a	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _companiesFile$13[ebp]
  00180	e8 00 00 00 00	 call	 ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
  00185	eb 06		 jmp	 SHORT $LN11@getContact
__catch$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$2:

; 71   : 	catch (...)
; 72   : 	{
; 73   : 	}

  00187	b8 00 00 00 00	 mov	 eax, $LN32@getContact
  0018c	c3		 ret	 0
$LN11@getContact:
  0018d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00194	eb 07		 jmp	 SHORT __tryend$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$3
$LN32@getContact:
  00196	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$3:

; 74   : 
; 75   : 	// Try to open the file and read the archive. If it doesn't exist, it throws an exception
; 76   : 	try

  0019d	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9

; 77   : 	{
; 78   : 		ifstream peopleFile(contactFileName + "People.txt", ios_base::in);

  001a4	68 00 00 00 00	 push	 OFFSET ??_C@_0L@GLLABICK@People?4txt?$AA@
  001a9	8b 45 0c	 mov	 eax, DWORD PTR _contactFileName$[ebp]
  001ac	50		 push	 eax
  001ad	8d 8d ac fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  001b3	51		 push	 ecx
  001b4	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  001b9	83 c4 0c	 add	 esp, 12			; 0000000cH
  001bc	89 85 88 fb ff
	ff		 mov	 DWORD PTR tv88[ebp], eax
  001c2	8b 95 88 fb ff
	ff		 mov	 edx, DWORD PTR tv88[ebp]
  001c8	89 95 84 fb ff
	ff		 mov	 DWORD PTR tv191[ebp], edx
  001ce	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+12], 10 ; 0000000aH
  001d2	6a 01		 push	 1
  001d4	6a 40		 push	 64			; 00000040H
  001d6	6a 01		 push	 1
  001d8	8b 85 84 fb ff
	ff		 mov	 eax, DWORD PTR tv191[ebp]
  001de	50		 push	 eax
  001df	8d 8d 00 fe ff
	ff		 lea	 ecx, DWORD PTR _peopleFile$10[ebp]
  001e5	e8 00 00 00 00	 call	 ??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
  001ea	89 85 80 fb ff
	ff		 mov	 DWORD PTR tv202[ebp], eax
  001f0	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+12], 12 ; 0000000cH
  001f4	8d 8d ac fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  001fa	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 79   : 
; 80   : 		boost::archive::text_iarchive people(peopleFile);

  001ff	6a 00		 push	 0
  00201	8d 85 00 fe ff
	ff		 lea	 eax, DWORD PTR _peopleFile$10[ebp]
  00207	50		 push	 eax
  00208	8d 8d a0 fd ff
	ff		 lea	 ecx, DWORD PTR _people$9[ebp]
  0020e	e8 00 00 00 00	 call	 ??0text_iarchive@archive@boost@@QAE@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@I@Z ; boost::archive::text_iarchive::text_iarchive
  00213	89 85 88 fb ff
	ff		 mov	 DWORD PTR tv203[ebp], eax
  00219	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+12], 13 ; 0000000dH

; 81   : 
; 82   : 		try

  0021d	c6 45 fc 0e	 mov	 BYTE PTR __$EHRec$[ebp+12], 14 ; 0000000eH
$LN4@getContact:

; 83   : 		{
; 84   : 			// Infinitely read the archive. It throws an exception when there's nothing left to read
; 85   : 			while (true)

  00221	b8 01 00 00 00	 mov	 eax, 1
  00226	85 c0		 test	 eax, eax
  00228	74 7e		 je	 SHORT $LN5@getContact

; 86   : 			{
; 87   : 				// Make the pointer to the person, (try) get everything from the archive, then add it to the contact list
; 88   : 				shared_ptr<CContact> tempPerson = make_shared<CPerson>(true);

  0022a	c6 85 a3 fb ff
	ff 01		 mov	 BYTE PTR $T3[ebp], 1
  00231	8d 85 a3 fb ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  00237	50		 push	 eax
  00238	8d 8d 90 fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  0023e	51		 push	 ecx
  0023f	e8 00 00 00 00	 call	 ??$make_shared@VCPerson@@_N@std@@YA?AV?$shared_ptr@VCPerson@@@0@$$QA_N@Z ; std::make_shared<CPerson,bool>
  00244	83 c4 08	 add	 esp, 8
  00247	89 85 88 fb ff
	ff		 mov	 DWORD PTR tv195[ebp], eax
  0024d	8b 95 88 fb ff
	ff		 mov	 edx, DWORD PTR tv195[ebp]
  00253	52		 push	 edx
  00254	8d 8d 90 fd ff
	ff		 lea	 ecx, DWORD PTR _tempPerson$8[ebp]
  0025a	e8 00 00 00 00	 call	 ??$?0VCPerson@@X@?$shared_ptr@VCContact@@@std@@QAE@$$QAV?$shared_ptr@VCPerson@@@1@@Z ; std::shared_ptr<CContact>::shared_ptr<CContact><CPerson,void>
  0025f	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+12], 15 ; 0000000fH
  00263	8d 8d 90 fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00269	e8 00 00 00 00	 call	 ??1?$shared_ptr@VCPerson@@@std@@QAE@XZ ; std::shared_ptr<CPerson>::~shared_ptr<CPerson>

; 89   : 				people >> *tempPerson;

  0026e	8d 8d 90 fd ff
	ff		 lea	 ecx, DWORD PTR _tempPerson$8[ebp]
  00274	e8 00 00 00 00	 call	 ??D?$shared_ptr@VCContact@@@std@@QBEAAVCContact@@XZ ; std::shared_ptr<CContact>::operator*
  00279	50		 push	 eax
  0027a	8d 8d b8 fd ff
	ff		 lea	 ecx, DWORD PTR _people$9[ebp+24]
  00280	e8 00 00 00 00	 call	 ??$?5VCContact@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVCContact@@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><CContact>

; 90   : 				contactList->push_back(tempPerson);

  00285	8d 85 90 fd ff
	ff		 lea	 eax, DWORD PTR _tempPerson$8[ebp]
  0028b	50		 push	 eax
  0028c	8b 4d 08	 mov	 ecx, DWORD PTR _contactList$[ebp]
  0028f	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAEXABV?$shared_ptr@VCContact@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::push_back

; 91   : 			}

  00294	c6 45 fc 0e	 mov	 BYTE PTR __$EHRec$[ebp+12], 14 ; 0000000eH
  00298	8d 8d 90 fd ff
	ff		 lea	 ecx, DWORD PTR _tempPerson$8[ebp]
  0029e	e8 00 00 00 00	 call	 ??1?$shared_ptr@VCContact@@@std@@QAE@XZ ; std::shared_ptr<CContact>::~shared_ptr<CContact>
  002a3	e9 79 ff ff ff	 jmp	 $LN4@getContact
$LN5@getContact:

; 92   : 		}

  002a8	eb 06		 jmp	 SHORT $LN16@getContact
__catch$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$4:

; 93   : 		// Nothing needs to be done with the exceptions. Either the file doesn't exist
; 94   : 		// and it doesn't matter, or it reached the end of the file and it doesn't matter
; 95   : 		catch (...)
; 96   : 		{
; 97   : 		}

  002aa	b8 00 00 00 00	 mov	 eax, $LN34@getContact
  002af	c3		 ret	 0
$LN16@getContact:
  002b0	c7 45 fc 0d 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 13 ; 0000000dH
  002b7	eb 07		 jmp	 SHORT __tryend$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$5
$LN34@getContact:
  002b9	c7 45 fc 0d 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 13 ; 0000000dH
__tryend$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$5:

; 98   : 	}

  002c0	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+12], 12 ; 0000000cH
  002c4	8d 8d a0 fd ff
	ff		 lea	 ecx, DWORD PTR _people$9[ebp]
  002ca	e8 00 00 00 00	 call	 ??1text_iarchive@archive@boost@@UAE@XZ ; boost::archive::text_iarchive::~text_iarchive
  002cf	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+12], 9
  002d3	8d 8d 00 fe ff
	ff		 lea	 ecx, DWORD PTR _peopleFile$10[ebp]
  002d9	e8 00 00 00 00	 call	 ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
  002de	eb 06		 jmp	 SHORT $LN15@getContact
__catch$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$6:

; 99   : 	catch (...)
; 100  : 	{
; 101  : 	}

  002e0	b8 00 00 00 00	 mov	 eax, $LN36@getContact
  002e5	c3		 ret	 0
$LN15@getContact:
  002e6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  002ed	eb 07		 jmp	 SHORT __tryend$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$7
$LN36@getContact:
  002ef	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$7:

; 102  : 
; 103  : 	// Sort the list once everything has been imported from the files
; 104  : 	Chris::sort(*contactList);

  002f6	8b 45 08	 mov	 eax, DWORD PTR _contactList$[ebp]
  002f9	50		 push	 eax
  002fa	e8 00 00 00 00	 call	 ?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z ; Chris::sort
  002ff	83 c4 04	 add	 esp, 4

; 105  : }

  00302	52		 push	 edx
  00303	8b cd		 mov	 ecx, ebp
  00305	50		 push	 eax
  00306	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN45@getContact
  0030c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00311	58		 pop	 eax
  00312	5a		 pop	 edx
  00313	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00316	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0031d	59		 pop	 ecx
  0031e	5f		 pop	 edi
  0031f	5e		 pop	 esi
  00320	5b		 pop	 ebx
  00321	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00324	33 cd		 xor	 ecx, ebp
  00326	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0032b	81 c4 80 04 00
	00		 add	 esp, 1152		; 00000480H
  00331	3b ec		 cmp	 ebp, esp
  00333	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00338	8b e5		 mov	 esp, ebp
  0033a	5d		 pop	 ebp
  0033b	c3		 ret	 0
$LN45@getContact:
  0033c	06 00 00 00	 DD	 6
  00340	00 00 00 00	 DD	 $LN44@getContact
$LN44@getContact:
  00344	30 ff ff ff	 DD	 -208			; ffffff30H
  00348	b8 00 00 00	 DD	 184			; 000000b8H
  0034c	00 00 00 00	 DD	 $LN37@getContact
  00350	d0 fe ff ff	 DD	 -304			; fffffed0H
  00354	58 00 00 00	 DD	 88			; 00000058H
  00358	00 00 00 00	 DD	 $LN38@getContact
  0035c	c0 fe ff ff	 DD	 -320			; fffffec0H
  00360	08 00 00 00	 DD	 8
  00364	00 00 00 00	 DD	 $LN39@getContact
  00368	00 fe ff ff	 DD	 -512			; fffffe00H
  0036c	b8 00 00 00	 DD	 184			; 000000b8H
  00370	00 00 00 00	 DD	 $LN40@getContact
  00374	a0 fd ff ff	 DD	 -608			; fffffda0H
  00378	58 00 00 00	 DD	 88			; 00000058H
  0037c	00 00 00 00	 DD	 $LN41@getContact
  00380	90 fd ff ff	 DD	 -624			; fffffd90H
  00384	08 00 00 00	 DD	 8
  00388	00 00 00 00	 DD	 $LN42@getContact
$LN42@getContact:
  0038c	74		 DB	 116			; 00000074H
  0038d	65		 DB	 101			; 00000065H
  0038e	6d		 DB	 109			; 0000006dH
  0038f	70		 DB	 112			; 00000070H
  00390	50		 DB	 80			; 00000050H
  00391	65		 DB	 101			; 00000065H
  00392	72		 DB	 114			; 00000072H
  00393	73		 DB	 115			; 00000073H
  00394	6f		 DB	 111			; 0000006fH
  00395	6e		 DB	 110			; 0000006eH
  00396	00		 DB	 0
$LN41@getContact:
  00397	70		 DB	 112			; 00000070H
  00398	65		 DB	 101			; 00000065H
  00399	6f		 DB	 111			; 0000006fH
  0039a	70		 DB	 112			; 00000070H
  0039b	6c		 DB	 108			; 0000006cH
  0039c	65		 DB	 101			; 00000065H
  0039d	00		 DB	 0
$LN40@getContact:
  0039e	70		 DB	 112			; 00000070H
  0039f	65		 DB	 101			; 00000065H
  003a0	6f		 DB	 111			; 0000006fH
  003a1	70		 DB	 112			; 00000070H
  003a2	6c		 DB	 108			; 0000006cH
  003a3	65		 DB	 101			; 00000065H
  003a4	46		 DB	 70			; 00000046H
  003a5	69		 DB	 105			; 00000069H
  003a6	6c		 DB	 108			; 0000006cH
  003a7	65		 DB	 101			; 00000065H
  003a8	00		 DB	 0
$LN39@getContact:
  003a9	74		 DB	 116			; 00000074H
  003aa	65		 DB	 101			; 00000065H
  003ab	6d		 DB	 109			; 0000006dH
  003ac	70		 DB	 112			; 00000070H
  003ad	43		 DB	 67			; 00000043H
  003ae	6f		 DB	 111			; 0000006fH
  003af	6d		 DB	 109			; 0000006dH
  003b0	70		 DB	 112			; 00000070H
  003b1	61		 DB	 97			; 00000061H
  003b2	6e		 DB	 110			; 0000006eH
  003b3	79		 DB	 121			; 00000079H
  003b4	00		 DB	 0
$LN38@getContact:
  003b5	63		 DB	 99			; 00000063H
  003b6	6f		 DB	 111			; 0000006fH
  003b7	6d		 DB	 109			; 0000006dH
  003b8	70		 DB	 112			; 00000070H
  003b9	61		 DB	 97			; 00000061H
  003ba	6e		 DB	 110			; 0000006eH
  003bb	69		 DB	 105			; 00000069H
  003bc	65		 DB	 101			; 00000065H
  003bd	73		 DB	 115			; 00000073H
  003be	00		 DB	 0
$LN37@getContact:
  003bf	63		 DB	 99			; 00000063H
  003c0	6f		 DB	 111			; 0000006fH
  003c1	6d		 DB	 109			; 0000006dH
  003c2	70		 DB	 112			; 00000070H
  003c3	61		 DB	 97			; 00000061H
  003c4	6e		 DB	 110			; 0000006eH
  003c5	69		 DB	 105			; 00000069H
  003c6	65		 DB	 101			; 00000065H
  003c7	73		 DB	 115			; 00000073H
  003c8	46		 DB	 70			; 00000046H
  003c9	69		 DB	 105			; 00000069H
  003ca	6c		 DB	 108			; 0000006cH
  003cb	65		 DB	 101			; 00000065H
  003cc	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$8:
  00000	8d 8d ec fb ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$9:
  0000b	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _companiesFile$13[ebp]
  00011	e9 00 00 00 00	 jmp	 ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$10:
  00016	8d 8d d0 fe ff
	ff		 lea	 ecx, DWORD PTR _companies$12[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1text_iarchive@archive@boost@@UAE@XZ ; boost::archive::text_iarchive::~text_iarchive
__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$12:
  00021	8d 8d c0 fe ff
	ff		 lea	 ecx, DWORD PTR _tempCompany$11[ebp]
  00027	e9 00 00 00 00	 jmp	 ??1?$shared_ptr@VCContact@@@std@@QAE@XZ ; std::shared_ptr<CContact>::~shared_ptr<CContact>
__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$13:
  0002c	8d 8d ac fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00032	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$14:
  00037	8d 8d 00 fe ff
	ff		 lea	 ecx, DWORD PTR _peopleFile$10[ebp]
  0003d	e9 00 00 00 00	 jmp	 ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$15:
  00042	8d 8d a0 fd ff
	ff		 lea	 ecx, DWORD PTR _people$9[ebp]
  00048	e9 00 00 00 00	 jmp	 ??1text_iarchive@archive@boost@@UAE@XZ ; boost::archive::text_iarchive::~text_iarchive
__unwindfunclet$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$17:
  0004d	8d 8d 90 fd ff
	ff		 lea	 ecx, DWORD PTR _tempPerson$8[ebp]
  00053	e9 00 00 00 00	 jmp	 ??1?$shared_ptr@VCContact@@@std@@QAE@XZ ; std::shared_ptr<CContact>::~shared_ptr<CContact>
__ehhandler$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z:
  00058	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0005c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0005f	8b 8a 7c fb ff
	ff		 mov	 ecx, DWORD PTR [edx-1156]
  00065	33 c8		 xor	 ecx, eax
  00067	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006c	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0006f	33 c8		 xor	 ecx, eax
  00071	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00076	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
  0007b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?getContactList@@YAXPAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; getContactList
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ??$?6VCContact@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVCContact@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??$?6VCContact@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVCContact@@@Z PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<CContact>, COMDAT
; _this$ = ecx

; 69   :     Archive & operator<<(const T & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 70   :         this->This()->save_override(t);

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  0002f	8b c8		 mov	 ecx, eax
  00031	e8 00 00 00 00	 call	 ??$save_override@$$CBVCContact@@@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVCContact@@@Z ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override<CContact const >

; 71   :         return * this->This();

  00036	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This

; 72   :     }

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??$?6VCContact@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVCContact@@@Z ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
_TEXT	SEGMENT
tv68 = -196						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z PROC ; std::operator==<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2479 : 	{	// test for string vs. NTCS equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 2480 : 	return (_Left.compare(_Right) == 0);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00025	e8 00 00 00 00	 call	 ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
  0002a	85 c0		 test	 eax, eax
  0002c	75 0c		 jne	 SHORT $LN3@operator
  0002e	c7 85 3c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv68[ebp], 1
  00038	eb 0a		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0003a	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv68[ebp], 0
$LN4@operator:
  00044	8a 85 3c ff ff
	ff		 mov	 al, BYTE PTR tv68[ebp]

; 2481 : 	}

  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ENDP ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ PROC ; std::basic_ofstream<char,std::char_traits<char> >::`vbase destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	83 c1 68	 add	 ecx, 104		; 00000068H
  00029	e8 00 00 00 00	 call	 ??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	83 c1 68	 add	 ecx, 104		; 00000068H
  00034	8b f4		 mov	 esi, esp
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ ENDP ; std::basic_ofstream<char,std::char_traits<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_ofstream<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	83 e9 68	 sub	 ecx, 104		; 00000068H
  00029	e8 00 00 00 00	 call	 ??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
  0002e	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00031	83 e0 01	 and	 eax, 1
  00034	74 14		 je	 SHORT $LN2@scalar
  00036	68 b0 00 00 00	 push	 176			; 000000b0H
  0003b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	83 e8 68	 sub	 eax, 104		; 00000068H
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00047	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0004a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 e8 68	 sub	 eax, 104		; 00000068H
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00059	3b ec		 cmp	 ebp, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c2 04 00	 ret	 4
??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_ofstream<char,std::char_traits<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0e		 je	 SHORT $LN2@scalar
  00033	6a 58		 push	 88			; 00000058H
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003e	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back, COMDAT
; _this$ = ecx

; 709  : 		{	// set up putback area

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 710  : 		if (_Mysb::eback() != &_Mychar)

  00023	8b f4		 mov	 esi, esp
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0003b	3b c1		 cmp	 eax, ecx
  0003d	74 30		 je	 SHORT $LN2@Set_back

; 711  : 			{	// save current get buffer
; 712  : 			_Set_eback = _Mysb::eback();

  0003f	8b f4		 mov	 esi, esp
  00041	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	89 41 50	 mov	 DWORD PTR [ecx+80], eax

; 713  : 			_Set_egptr = _Mysb::egptr();

  00057	8b f4		 mov	 esi, esp
  00059	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00062	3b f4		 cmp	 esi, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	89 41 54	 mov	 DWORD PTR [ecx+84], eax
$LN2@Set_back:

; 714  : 			}
; 715  : 		_Mysb::setg(&_Mychar, &_Mychar, &_Mychar + 1);

  0006f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00072	83 c0 3d	 add	 eax, 61			; 0000003dH
  00075	8b f4		 mov	 esi, esp
  00077	50		 push	 eax
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0007e	51		 push	 ecx
  0007f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00082	83 c2 3c	 add	 edx, 60			; 0000003cH
  00085	52		 push	 edx
  00086	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  0008f	3b f4		 cmp	 esi, esp
  00091	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 716  : 		}

  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	5b		 pop	 ebx
  00099	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0009f	3b ec		 cmp	 ebp, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c3		 ret	 0
?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back, COMDAT
; _this$ = ecx

; 703  : 		{	// restore buffer after putback

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 704  : 		if (_Mysb::eback() == &_Mychar)

  00023	8b f4		 mov	 esi, esp
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0003b	3b c1		 cmp	 eax, ecx
  0003d	75 27		 jne	 SHORT $LN1@Reset_back

; 705  : 			_Mysb::setg(_Set_eback, _Set_eback, _Set_egptr);

  0003f	8b f4		 mov	 esi, esp
  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	8b 48 54	 mov	 ecx, DWORD PTR [eax+84]
  00047	51		 push	 ecx
  00048	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
  0004e	50		 push	 eax
  0004f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	8b 51 50	 mov	 edx, DWORD PTR [ecx+80]
  00055	52		 push	 edx
  00056	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  0005f	3b f4		 cmp	 esi, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@Reset_back:

; 706  : 		}

  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx
  00069	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006f	3b ec		 cmp	 ebp, esp
  00071	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDU_Mbstatet@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Newpcvt$ = 8						; size = 4
?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDU_Mbstatet@@@2@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt, COMDAT
; _this$ = ecx

; 684  : 		{	// initialize codecvt pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 685  : 		if (_Newpcvt->always_noconv())

  00023	8b f4		 mov	 esi, esp
  00025	8b 4d 08	 mov	 ecx, DWORD PTR __Newpcvt$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?always_noconv@codecvt_base@std@@QBE_NXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	0f b6 c0	 movzx	 eax, al
  00038	85 c0		 test	 eax, eax
  0003a	74 0c		 je	 SHORT $LN2@Initcvt

; 686  : 			_Pcvt = 0;	// nothing to do

  0003c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0

; 687  : 		else

  00046	eb 1b		 jmp	 SHORT $LN1@Initcvt
$LN2@Initcvt:

; 688  : 			{	// set up for nontrivial codecvt facet
; 689  : 			_Pcvt = _Newpcvt;

  00048	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 4d 08	 mov	 ecx, DWORD PTR __Newpcvt$[ebp]
  0004e	89 48 38	 mov	 DWORD PTR [eax+56], ecx

; 690  : 			_Mysb::_Init();	// reset any buffering

  00051	8b f4		 mov	 esi, esp
  00053	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ
  0005c	3b f4		 cmp	 esi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@Initcvt:

; 691  : 			}
; 692  : 		}

  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
  00066	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c2 04 00	 ret	 4
?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDU_Mbstatet@@@2@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ
_TEXT	SEGMENT
tv147 = -500						; size = 4
tv190 = -496						; size = 4
tv204 = -492						; size = 4
tv172 = -492						; size = 4
tv197 = -488						; size = 4
tv192 = -488						; size = 4
tv188 = -488						; size = 4
tv206 = -484						; size = 4
tv205 = -484						; size = 4
tv86 = -484						; size = 4
$T2 = -476						; size = 4
$T3 = -461						; size = 1
$T4 = -449						; size = 1
$T5 = -437						; size = 1
$T6 = -425						; size = 1
$T7 = -416						; size = 12
$T8 = -393						; size = 1
$T9 = -384						; size = 12
$T10 = -364						; size = 12
$T11 = -344						; size = 12
$T12 = -324						; size = 4
$T13 = -312						; size = 4
$T14 = -300						; size = 4
__Count$15 = -96					; size = 4
__Str$16 = -84						; size = 28
__Dest$17 = -48						; size = 4
__STRING_INC$18 = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite, COMDAT
; _this$ = ecx

; 643  : 		{	// put shift to initial conversion state, as needed

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 01 00
	00		 sub	 esp, 488		; 000001e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c fe ff
	ff		 lea	 edi, DWORD PTR [ebp-500]
  00021	b9 7a 00 00 00	 mov	 ecx, 122		; 0000007aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  00045	c7 85 24 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0

; 644  : 		if (_Pcvt == 0 || !_Wrotesome)

  0004f	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00052	83 78 38 00	 cmp	 DWORD PTR [eax+56], 0
  00056	74 0b		 je	 SHORT $LN9@Endwrite
  00058	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	0f b6 48 3d	 movzx	 ecx, BYTE PTR [eax+61]
  0005f	85 c9		 test	 ecx, ecx
  00061	75 0c		 jne	 SHORT $LN7@Endwrite
$LN9@Endwrite:

; 645  : 			return (true);

  00063	b0 01		 mov	 al, 1
  00065	e9 09 03 00 00	 jmp	 $LN1@Endwrite

; 646  : 		else

  0006a	e9 04 03 00 00	 jmp	 $LN1@Endwrite
$LN7@Endwrite:

; 647  : 			{	// may have to put
; 648  : 			const int _STRING_INC = 8;

  0006f	c7 45 dc 08 00
	00 00		 mov	 DWORD PTR __STRING_INC$18[ebp], 8

; 649  : 			char *_Dest;
; 650  : 			if (_Traits::eq_int_type(_Traits::eof(), overflow()))

  00076	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  0007b	8b f4		 mov	 esi, esp
  0007d	50		 push	 eax
  0007e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00081	8b 10		 mov	 edx, DWORD PTR [eax]
  00083	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00089	ff d0		 call	 eax
  0008b	3b f4		 cmp	 esi, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00092	89 85 d4 fe ff
	ff		 mov	 DWORD PTR $T14[ebp], eax
  00098	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  0009d	89 85 c8 fe ff
	ff		 mov	 DWORD PTR $T13[ebp], eax
  000a3	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR $T14[ebp]
  000a9	51		 push	 ecx
  000aa	8d 95 c8 fe ff
	ff		 lea	 edx, DWORD PTR $T13[ebp]
  000b0	52		 push	 edx
  000b1	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  000b6	83 c4 08	 add	 esp, 8
  000b9	0f b6 c0	 movzx	 eax, al
  000bc	85 c0		 test	 eax, eax
  000be	74 07		 je	 SHORT $LN10@Endwrite

; 651  : 				return (false);

  000c0	32 c0		 xor	 al, al
  000c2	e9 ac 02 00 00	 jmp	 $LN1@Endwrite
$LN10@Endwrite:

; 652  : 
; 653  : 			string _Str(_STRING_INC, '\0');

  000c7	6a 00		 push	 0
  000c9	6a 08		 push	 8
  000cb	8d 4d ac	 lea	 ecx, DWORD PTR __Str$16[ebp]
  000ce	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000d3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$LN4@Endwrite:

; 654  : 			for (; ; )
; 655  : 				switch (_Pcvt->unshift(_State,

  000da	8b f4		 mov	 esi, esp
  000dc	8d 45 d0	 lea	 eax, DWORD PTR __Dest$17[ebp]
  000df	50		 push	 eax
  000e0	8d 8d a8 fe ff
	ff		 lea	 ecx, DWORD PTR $T11[ebp]
  000e6	51		 push	 ecx
  000e7	8d 4d ac	 lea	 ecx, DWORD PTR __Str$16[ebp]
  000ea	e8 00 00 00 00	 call	 ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
  000ef	89 85 1c fe ff
	ff		 mov	 DWORD PTR tv86[ebp], eax
  000f5	8b 95 1c fe ff
	ff		 mov	 edx, DWORD PTR tv86[ebp]
  000fb	89 95 18 fe ff
	ff		 mov	 DWORD PTR tv188[ebp], edx
  00101	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00105	8b 8d 18 fe ff
	ff		 mov	 ecx, DWORD PTR tv188[ebp]
  0010b	e8 00 00 00 00	 call	 ??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
  00110	8b f8		 mov	 edi, eax
  00112	8d 4d ac	 lea	 ecx, DWORD PTR __Str$16[ebp]
  00115	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  0011a	03 f8		 add	 edi, eax
  0011c	57		 push	 edi
  0011d	8d 85 94 fe ff
	ff		 lea	 eax, DWORD PTR $T10[ebp]
  00123	50		 push	 eax
  00124	8d 4d ac	 lea	 ecx, DWORD PTR __Str$16[ebp]
  00127	e8 00 00 00 00	 call	 ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
  0012c	89 85 14 fe ff
	ff		 mov	 DWORD PTR tv204[ebp], eax
  00132	8b 8d 14 fe ff
	ff		 mov	 ecx, DWORD PTR tv204[ebp]
  00138	89 8d 10 fe ff
	ff		 mov	 DWORD PTR tv190[ebp], ecx
  0013e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00142	8b 8d 10 fe ff
	ff		 mov	 ecx, DWORD PTR tv190[ebp]
  00148	e8 00 00 00 00	 call	 ??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
  0014d	50		 push	 eax
  0014e	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00151	83 c2 40	 add	 edx, 64			; 00000040H
  00154	52		 push	 edx
  00155	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00158	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  0015b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?unshift@?$codecvt@DDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PAD1AAPAD@Z
  00161	3b f4		 cmp	 esi, esp
  00163	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00168	89 85 bc fe ff
	ff		 mov	 DWORD PTR $T12[ebp], eax
  0016e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00172	8d 8d 94 fe ff
	ff		 lea	 ecx, DWORD PTR $T10[ebp]
  00178	e8 00 00 00 00	 call	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
  0017d	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00181	8d 8d a8 fe ff
	ff		 lea	 ecx, DWORD PTR $T11[ebp]
  00187	e8 00 00 00 00	 call	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
  0018c	8b 8d bc fe ff
	ff		 mov	 ecx, DWORD PTR $T12[ebp]
  00192	89 8d 0c fe ff
	ff		 mov	 DWORD PTR tv147[ebp], ecx
  00198	83 bd 0c fe ff
	ff 00		 cmp	 DWORD PTR tv147[ebp], 0
  0019f	74 1b		 je	 SHORT $LN11@Endwrite
  001a1	83 bd 0c fe ff
	ff 01		 cmp	 DWORD PTR tv147[ebp], 1
  001a8	74 19		 je	 SHORT $LN12@Endwrite
  001aa	83 bd 0c fe ff
	ff 03		 cmp	 DWORD PTR tv147[ebp], 3
  001b1	0f 84 6c 01 00
	00		 je	 $LN16@Endwrite
  001b7	e9 85 01 00 00	 jmp	 $LN17@Endwrite
$LN11@Endwrite:

; 656  : 					&*_Str.begin(), &*_Str.begin() + _Str.size(), _Dest))
; 657  : 				{	// test result of homing conversion
; 658  : 				case codecvt_base::ok:
; 659  : 					_Wrotesome = false;	// homed successfully

  001bc	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  001bf	c6 40 3d 00	 mov	 BYTE PTR [eax+61], 0
$LN12@Endwrite:

; 660  : 
; 661  : 				case codecvt_base::partial:	// fall through
; 662  : 					{	// put any generated bytes
; 663  : 					size_t _Count = _Dest - &*_Str.begin();

  001c3	8d 85 80 fe ff
	ff		 lea	 eax, DWORD PTR $T9[ebp]
  001c9	50		 push	 eax
  001ca	8d 4d ac	 lea	 ecx, DWORD PTR __Str$16[ebp]
  001cd	e8 00 00 00 00	 call	 ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
  001d2	89 85 1c fe ff
	ff		 mov	 DWORD PTR tv205[ebp], eax
  001d8	8b 8d 1c fe ff
	ff		 mov	 ecx, DWORD PTR tv205[ebp]
  001de	89 8d 18 fe ff
	ff		 mov	 DWORD PTR tv192[ebp], ecx
  001e4	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  001e8	8b 8d 18 fe ff
	ff		 mov	 ecx, DWORD PTR tv192[ebp]
  001ee	e8 00 00 00 00	 call	 ??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
  001f3	8b 55 d0	 mov	 edx, DWORD PTR __Dest$17[ebp]
  001f6	2b d0		 sub	 edx, eax
  001f8	89 55 a0	 mov	 DWORD PTR __Count$15[ebp], edx
  001fb	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  001ff	8d 8d 80 fe ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
  00205	e8 00 00 00 00	 call	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ

; 664  : 					if (0 < _Count && _Count !=

  0020a	83 7d a0 00	 cmp	 DWORD PTR __Count$15[ebp], 0
  0020e	76 70		 jbe	 SHORT $LN19@Endwrite
  00210	8b f4		 mov	 esi, esp
  00212	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00215	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00218	51		 push	 ecx
  00219	8b 55 a0	 mov	 edx, DWORD PTR __Count$15[ebp]
  0021c	52		 push	 edx
  0021d	6a 01		 push	 1
  0021f	8d 85 60 fe ff
	ff		 lea	 eax, DWORD PTR $T7[ebp]
  00225	50		 push	 eax
  00226	8d 4d ac	 lea	 ecx, DWORD PTR __Str$16[ebp]
  00229	e8 00 00 00 00	 call	 ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
  0022e	89 85 1c fe ff
	ff		 mov	 DWORD PTR tv206[ebp], eax
  00234	8b 8d 1c fe ff
	ff		 mov	 ecx, DWORD PTR tv206[ebp]
  0023a	89 8d 18 fe ff
	ff		 mov	 DWORD PTR tv197[ebp], ecx
  00240	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00244	8b 95 24 fe ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  0024a	83 ca 01	 or	 edx, 1
  0024d	89 95 24 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
  00253	8b 8d 18 fe ff
	ff		 mov	 ecx, DWORD PTR tv197[ebp]
  00259	e8 00 00 00 00	 call	 ??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
  0025e	50		 push	 eax
  0025f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fwrite
  00265	83 c4 10	 add	 esp, 16			; 00000010H
  00268	3b f4		 cmp	 esi, esp
  0026a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0026f	39 45 a0	 cmp	 DWORD PTR __Count$15[ebp], eax
  00272	74 0c		 je	 SHORT $LN19@Endwrite
  00274	c7 85 14 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv172[ebp], 1
  0027e	eb 0a		 jmp	 SHORT $LN20@Endwrite
$LN19@Endwrite:
  00280	c7 85 14 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv172[ebp], 0
$LN20@Endwrite:
  0028a	8a 85 14 fe ff
	ff		 mov	 al, BYTE PTR tv172[ebp]
  00290	88 85 77 fe ff
	ff		 mov	 BYTE PTR $T8[ebp], al
  00296	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0029d	8b 8d 24 fe ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  002a3	83 e1 01	 and	 ecx, 1
  002a6	74 12		 je	 SHORT $LN27@Endwrite
  002a8	83 a5 24 fe ff
	ff fe		 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  002af	8d 8d 60 fe ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  002b5	e8 00 00 00 00	 call	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
$LN27@Endwrite:
  002ba	0f b6 95 77 fe
	ff ff		 movzx	 edx, BYTE PTR $T8[ebp]
  002c1	85 d2		 test	 edx, edx
  002c3	74 21		 je	 SHORT $LN13@Endwrite

; 665  : 						fwrite(&*_Str.begin(), 1, _Count, _Myfile))
; 666  : 						return (false);	// write failed

  002c5	c6 85 57 fe ff
	ff 00		 mov	 BYTE PTR $T6[ebp], 0
  002cc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  002d3	8d 4d ac	 lea	 ecx, DWORD PTR __Str$16[ebp]
  002d6	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002db	8a 85 57 fe ff
	ff		 mov	 al, BYTE PTR $T6[ebp]
  002e1	e9 8d 00 00 00	 jmp	 $LN1@Endwrite
$LN13@Endwrite:

; 667  : 					if (!_Wrotesome)

  002e6	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  002e9	0f b6 48 3d	 movzx	 ecx, BYTE PTR [eax+61]
  002ed	85 c9		 test	 ecx, ecx
  002ef	75 1e		 jne	 SHORT $LN14@Endwrite

; 668  : 						return (true);

  002f1	c6 85 4b fe ff
	ff 01		 mov	 BYTE PTR $T5[ebp], 1
  002f8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  002ff	8d 4d ac	 lea	 ecx, DWORD PTR __Str$16[ebp]
  00302	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00307	8a 85 4b fe ff
	ff		 mov	 al, BYTE PTR $T5[ebp]
  0030d	eb 64		 jmp	 SHORT $LN1@Endwrite
$LN14@Endwrite:

; 669  : 					if (_Count == 0)

  0030f	83 7d a0 00	 cmp	 DWORD PTR __Count$15[ebp], 0
  00313	75 0c		 jne	 SHORT $LN15@Endwrite

; 670  : 						_Str.append(_STRING_INC, '\0');	// try with more space

  00315	6a 00		 push	 0
  00317	6a 08		 push	 8
  00319	8d 4d ac	 lea	 ecx, DWORD PTR __Str$16[ebp]
  0031c	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN15@Endwrite:

; 671  : 					break;

  00321	eb 3c		 jmp	 SHORT $LN5@Endwrite
$LN16@Endwrite:

; 672  : 					}
; 673  : 
; 674  : 				case codecvt_base::noconv:
; 675  : 					return (true);	// nothing to do

  00323	c6 85 3f fe ff
	ff 01		 mov	 BYTE PTR $T4[ebp], 1
  0032a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00331	8d 4d ac	 lea	 ecx, DWORD PTR __Str$16[ebp]
  00334	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00339	8a 85 3f fe ff
	ff		 mov	 al, BYTE PTR $T4[ebp]
  0033f	eb 32		 jmp	 SHORT $LN1@Endwrite
$LN17@Endwrite:

; 676  : 
; 677  : 				default:
; 678  : 					return (false);	// conversion failed

  00341	c6 85 33 fe ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0
  00348	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0034f	8d 4d ac	 lea	 ecx, DWORD PTR __Str$16[ebp]
  00352	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00357	8a 85 33 fe ff
	ff		 mov	 al, BYTE PTR $T3[ebp]
  0035d	eb 14		 jmp	 SHORT $LN1@Endwrite
$LN5@Endwrite:

; 679  : 				}

  0035f	e9 76 fd ff ff	 jmp	 $LN4@Endwrite

; 680  : 			}

  00364	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0036b	8d 4d ac	 lea	 ecx, DWORD PTR __Str$16[ebp]
  0036e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@Endwrite:

; 681  : 		}

  00373	52		 push	 edx
  00374	8b cd		 mov	 ecx, ebp
  00376	50		 push	 eax
  00377	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN32@Endwrite
  0037d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00382	58		 pop	 eax
  00383	5a		 pop	 edx
  00384	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00387	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0038e	59		 pop	 ecx
  0038f	5f		 pop	 edi
  00390	5e		 pop	 esi
  00391	5b		 pop	 ebx
  00392	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00395	33 cd		 xor	 ecx, ebp
  00397	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0039c	81 c4 f4 01 00
	00		 add	 esp, 500		; 000001f4H
  003a2	3b ec		 cmp	 ebp, esp
  003a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003a9	8b e5		 mov	 esp, ebp
  003ab	5d		 pop	 ebp
  003ac	c3		 ret	 0
  003ad	0f 1f 00	 npad	 3
$LN32@Endwrite:
  003b0	02 00 00 00	 DD	 2
  003b4	00 00 00 00	 DD	 $LN31@Endwrite
$LN31@Endwrite:
  003b8	d0 ff ff ff	 DD	 -48			; ffffffd0H
  003bc	04 00 00 00	 DD	 4
  003c0	00 00 00 00	 DD	 $LN28@Endwrite
  003c4	ac ff ff ff	 DD	 -84			; ffffffacH
  003c8	1c 00 00 00	 DD	 28			; 0000001cH
  003cc	00 00 00 00	 DD	 $LN29@Endwrite
$LN29@Endwrite:
  003d0	5f		 DB	 95			; 0000005fH
  003d1	53		 DB	 83			; 00000053H
  003d2	74		 DB	 116			; 00000074H
  003d3	72		 DB	 114			; 00000072H
  003d4	00		 DB	 0
$LN28@Endwrite:
  003d5	5f		 DB	 95			; 0000005fH
  003d6	44		 DB	 68			; 00000044H
  003d7	65		 DB	 101			; 00000065H
  003d8	73		 DB	 115			; 00000073H
  003d9	74		 DB	 116			; 00000074H
  003da	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$0:
  00000	8d 4d ac	 lea	 ecx, DWORD PTR __Str$16[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$1:
  00008	8d 8d a8 fe ff
	ff		 lea	 ecx, DWORD PTR $T11[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$2:
  00013	8d 8d 94 fe ff
	ff		 lea	 ecx, DWORD PTR $T10[ebp]
  00019	e9 00 00 00 00	 jmp	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$3:
  0001e	8d 8d 80 fe ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
  00024	e9 00 00 00 00	 jmp	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$4:
  00029	8b 85 24 fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  0002f	83 e0 01	 and	 eax, 1
  00032	0f 84 12 00 00
	00		 je	 $LN26@Endwrite
  00038	83 a5 24 fe ff
	ff fe		 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  0003f	8d 8d 60 fe ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  00045	e9 00 00 00 00	 jmp	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
$LN26@Endwrite:
  0004a	c3		 ret	 0
__ehhandler$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ:
  0004b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0004f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00052	8b 8a 08 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-504]
  00058	33 c8		 xor	 ecx, eax
  0005a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00062	33 c8		 xor	 ecx, eax
  00064	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00069	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ
  0006e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z
_TEXT	SEGMENT
tv66 = -256						; size = 4
__Nw$1 = -56						; size = 4
__Nr$2 = -44						; size = 4
__Pn$3 = -32						; size = 4
__Pb$4 = -20						; size = 4
_this$ = -8						; size = 4
__File$ = 8						; size = 4
__Which$ = 12						; size = 4
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Init, COMDAT
; _this$ = ecx

; 604  : 		{	// initialize to C stream _File after {new, open, close}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 00 01 00
	00		 sub	 esp, 256		; 00000100H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 00 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-256]
  00013	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 605  : 		__PURE_APPDOMAIN_GLOBAL static _Myst _Stinit;	// initial state
; 606  : 
; 607  : 		_Closef = _Which == _Openfl;

  00023	83 7d 0c 01	 cmp	 DWORD PTR __Which$[ebp], 1
  00027	75 0c		 jne	 SHORT $LN4@Init
  00029	c7 85 00 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv66[ebp], 1
  00033	eb 0a		 jmp	 SHORT $LN5@Init
$LN4@Init:
  00035	c7 85 00 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv66[ebp], 0
$LN5@Init:
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	8a 8d 00 ff ff
	ff		 mov	 cl, BYTE PTR tv66[ebp]
  00048	88 48 48	 mov	 BYTE PTR [eax+72], cl

; 608  : 		_Wrotesome = false;

  0004b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	c6 40 3d 00	 mov	 BYTE PTR [eax+61], 0

; 609  : 
; 610  : 		_Mysb::_Init();	// initialize stream buffer base object

  00052	8b f4		 mov	 esi, esp
  00054	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ
  0005d	3b f4		 cmp	 esi, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 611  : 
; 612  :  #ifndef _IORCNT
; 613  :   #define _IORCNT	_IOCNT	/* read and write counts are the same */
; 614  :   #define _IOWCNT _IOCNT
; 615  :  #endif /* _IORCNT */
; 616  : 
; 617  :   #pragma warning(push)
; 618  :   #pragma warning(disable: 6240)	/* prefast noise VSW 489858 */
; 619  : 		if (_File != 0 && sizeof (_Elem) == 1)

  00064	83 7d 08 00	 cmp	 DWORD PTR __File$[ebp], 0
  00068	74 70		 je	 SHORT $LN2@Init
  0006a	b8 01 00 00 00	 mov	 eax, 1
  0006f	85 c0		 test	 eax, eax
  00071	74 67		 je	 SHORT $LN2@Init

; 620  :   #pragma warning(pop)
; 621  : 
; 622  : 			{	// point inside C stream with [first, first + count) buffer
; 623  : 			_Elem **_Pb = 0;

  00073	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __Pb$4[ebp], 0

; 624  : 			_Elem **_Pn = 0;

  0007a	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR __Pn$3[ebp], 0

; 625  : 			int *_Nr = 0;

  00081	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR __Nr$2[ebp], 0

; 626  : 
; 627  : 			::_get_stream_buffer_pointers(

  00088	8b f4		 mov	 esi, esp
  0008a	8d 45 d4	 lea	 eax, DWORD PTR __Nr$2[ebp]
  0008d	50		 push	 eax
  0008e	8d 4d e0	 lea	 ecx, DWORD PTR __Pn$3[ebp]
  00091	51		 push	 ecx
  00092	8d 55 ec	 lea	 edx, DWORD PTR __Pb$4[ebp]
  00095	52		 push	 edx
  00096	8b 45 08	 mov	 eax, DWORD PTR __File$[ebp]
  00099	50		 push	 eax
  0009a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___get_stream_buffer_pointers
  000a0	83 c4 10	 add	 esp, 16			; 00000010H
  000a3	3b f4		 cmp	 esi, esp
  000a5	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 628  : 				_File,
; 629  : 				reinterpret_cast<char***>(&_Pb),
; 630  : 				reinterpret_cast<char***>(&_Pn),
; 631  : 				&_Nr);
; 632  : 			int *_Nw = _Nr;

  000aa	8b 45 d4	 mov	 eax, DWORD PTR __Nr$2[ebp]
  000ad	89 45 c8	 mov	 DWORD PTR __Nw$1[ebp], eax

; 633  : 
; 634  : 			_Mysb::_Init(_Pb, _Pn, _Nr, _Pb, _Pn, _Nw);

  000b0	8b f4		 mov	 esi, esp
  000b2	8b 45 c8	 mov	 eax, DWORD PTR __Nw$1[ebp]
  000b5	50		 push	 eax
  000b6	8b 4d e0	 mov	 ecx, DWORD PTR __Pn$3[ebp]
  000b9	51		 push	 ecx
  000ba	8b 55 ec	 mov	 edx, DWORD PTR __Pb$4[ebp]
  000bd	52		 push	 edx
  000be	8b 45 d4	 mov	 eax, DWORD PTR __Nr$2[ebp]
  000c1	50		 push	 eax
  000c2	8b 4d e0	 mov	 ecx, DWORD PTR __Pn$3[ebp]
  000c5	51		 push	 ecx
  000c6	8b 55 ec	 mov	 edx, DWORD PTR __Pb$4[ebp]
  000c9	52		 push	 edx
  000ca	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAPAD0PAH001@Z
  000d3	3b f4		 cmp	 esi, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Init:

; 635  : 			}
; 636  : 
; 637  : 		_Myfile = _File;

  000da	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000dd	8b 4d 08	 mov	 ecx, DWORD PTR __File$[ebp]
  000e0	89 48 4c	 mov	 DWORD PTR [eax+76], ecx

; 638  : 		_State = _Stinit;

  000e3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A
  000ec	89 48 40	 mov	 DWORD PTR [eax+64], ecx
  000ef	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A+4
  000f5	89 50 44	 mov	 DWORD PTR [eax+68], edx

; 639  : 		_Pcvt = 0;	// pointer to codecvt facet

  000f8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000fb	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0

; 640  : 		}

  00102	52		 push	 edx
  00103	8b cd		 mov	 ecx, ebp
  00105	50		 push	 eax
  00106	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@Init
  0010c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00111	58		 pop	 eax
  00112	5a		 pop	 edx
  00113	5f		 pop	 edi
  00114	5e		 pop	 esi
  00115	5b		 pop	 ebx
  00116	81 c4 00 01 00
	00		 add	 esp, 256		; 00000100H
  0011c	3b ec		 cmp	 ebp, esp
  0011e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00123	8b e5		 mov	 esp, ebp
  00125	5d		 pop	 ebp
  00126	c2 08 00	 ret	 8
  00129	0f 1f 00	 npad	 3
$LN10@Init:
  0012c	03 00 00 00	 DD	 3
  00130	00 00 00 00	 DD	 $LN9@Init
$LN9@Init:
  00134	ec ff ff ff	 DD	 -20			; ffffffecH
  00138	04 00 00 00	 DD	 4
  0013c	00 00 00 00	 DD	 $LN6@Init
  00140	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00144	04 00 00 00	 DD	 4
  00148	00 00 00 00	 DD	 $LN7@Init
  0014c	d4 ff ff ff	 DD	 -44			; ffffffd4H
  00150	04 00 00 00	 DD	 4
  00154	00 00 00 00	 DD	 $LN8@Init
$LN8@Init:
  00158	5f		 DB	 95			; 0000005fH
  00159	4e		 DB	 78			; 0000004eH
  0015a	72		 DB	 114			; 00000072H
  0015b	00		 DB	 0
$LN7@Init:
  0015c	5f		 DB	 95			; 0000005fH
  0015d	50		 DB	 80			; 00000050H
  0015e	6e		 DB	 110			; 0000006eH
  0015f	00		 DB	 0
$LN6@Init:
  00160	5f		 DB	 95			; 0000005fH
  00161	50		 DB	 80			; 00000050H
  00162	62		 DB	 98			; 00000062H
  00163	00		 DB	 0
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Loc$ = 8						; size = 4
?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::imbue, COMDAT
; _this$ = ecx

; 599  : 		{	// set locale to argument (capture nontrivial codecvt facet)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 600  : 		_Initcvt(&_USE(_Loc, _Cvt));

  00023	8b 45 08	 mov	 eax, DWORD PTR __Loc$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDU_Mbstatet@@@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt

; 601  : 		}

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00041	3b ec		 cmp	 ebp, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 04 00	 ret	 4
?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::imbue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
tv86 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::sync, COMDAT
; _this$ = ecx

; 592  : 		{	// synchronize C stream with external file

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00013	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 593  : 		return (_Myfile == 0

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 4c 00	 cmp	 DWORD PTR [eax+76], 0
  0002a	74 73		 je	 SHORT $LN3@sync
  0002c	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00031	8b f4		 mov	 esi, esp
  00033	50		 push	 eax
  00034	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	8b 11		 mov	 edx, DWORD PTR [ecx]
  00039	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0003f	ff d0		 call	 eax
  00041	3b f4		 cmp	 esi, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	89 85 2c ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  0004e	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00053	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  00059	8d 8d 2c ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  0005f	51		 push	 ecx
  00060	8d 95 20 ff ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  00066	52		 push	 edx
  00067	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  0006c	83 c4 08	 add	 esp, 8
  0006f	0f b6 c0	 movzx	 eax, al
  00072	85 c0		 test	 eax, eax
  00074	75 29		 jne	 SHORT $LN3@sync
  00076	8b f4		 mov	 esi, esp
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  0007e	52		 push	 edx
  0007f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  00085	83 c4 04	 add	 esp, 4
  00088	3b f4		 cmp	 esi, esp
  0008a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008f	85 c0		 test	 eax, eax
  00091	7d 0c		 jge	 SHORT $LN3@sync
  00093	c7 85 18 ff ff
	ff ff ff ff ff	 mov	 DWORD PTR tv86[ebp], -1
  0009d	eb 0a		 jmp	 SHORT $LN4@sync
$LN3@sync:
  0009f	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv86[ebp], 0
$LN4@sync:
  000a9	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR tv86[ebp]

; 594  : 			|| _Traits::eq_int_type(_Traits::eof(), overflow())
; 595  : 			|| 0 <= fflush(_Myfile) ? 0 : -1);
; 596  : 		}

  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	5b		 pop	 ebx
  000b2	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  000b8	3b ec		 cmp	 ebp, esp
  000ba	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c3		 ret	 0
?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::sync
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z
_TEXT	SEGMENT
tv71 = -208						; size = 4
_this$ = -8						; size = 4
__Buffer$ = 8						; size = 4
__Count$ = 12						; size = 8
?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::setbuf, COMDAT
; _this$ = ecx

; 579  : 		{	// offer _Buffer to C stream

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 580  : 		if (_Myfile == 0 || setvbuf(_Myfile, (char *)_Buffer,

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 4c 00	 cmp	 DWORD PTR [eax+76], 0
  0002a	74 50		 je	 SHORT $LN4@setbuf
  0002c	83 7d 08 00	 cmp	 DWORD PTR __Buffer$[ebp], 0
  00030	75 14		 jne	 SHORT $LN6@setbuf
  00032	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00035	0b 45 10	 or	 eax, DWORD PTR __Count$[ebp+4]
  00038	75 0c		 jne	 SHORT $LN6@setbuf
  0003a	c7 85 30 ff ff
	ff 04 00 00 00	 mov	 DWORD PTR tv71[ebp], 4
  00044	eb 0a		 jmp	 SHORT $LN7@setbuf
$LN6@setbuf:
  00046	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv71[ebp], 0
$LN7@setbuf:
  00050	8b 4d 0c	 mov	 ecx, DWORD PTR __Count$[ebp]
  00053	8b f4		 mov	 esi, esp
  00055	51		 push	 ecx
  00056	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR tv71[ebp]
  0005c	52		 push	 edx
  0005d	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00060	50		 push	 eax
  00061	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  00067	52		 push	 edx
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__setvbuf
  0006e	83 c4 10	 add	 esp, 16			; 00000010H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	85 c0		 test	 eax, eax
  0007a	74 06		 je	 SHORT $LN2@setbuf
$LN4@setbuf:

; 581  : 			_Buffer == 0 && _Count == 0 ? _IONBF : _IOFBF,
; 582  : 			(size_t)_Count * sizeof (_Elem)) != 0)
; 583  : 			return (0);	// failed

  0007c	33 c0		 xor	 eax, eax
  0007e	eb 16		 jmp	 SHORT $LN1@setbuf

; 584  : 		else

  00080	eb 14		 jmp	 SHORT $LN1@setbuf
$LN2@setbuf:

; 585  : 			{	// new buffer, reinitialize pointers
; 586  : 			_Init(_Myfile, _Openfl);

  00082	6a 01		 push	 1
  00084	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00087	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  0008a	51		 push	 ecx
  0008b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008e	e8 00 00 00 00	 call	 ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init

; 587  : 			return (this);

  00093	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
$LN1@setbuf:

; 588  : 			}
; 589  : 		}

  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	5b		 pop	 ebx
  00099	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  0009f	3b ec		 cmp	 ebp, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 0c 00	 ret	 12			; 0000000cH
?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::setbuf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
_TEXT	SEGMENT
$T1 = -248						; size = 8
__Off$ = -40						; size = 8
__Fileposition$ = -24					; size = 8
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Pos$ = 12						; size = 24
___formal$ = 36						; size = 4
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::seekpos, COMDAT
; _this$ = ecx

; 561  : 		{	// change position to _Pos

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 04 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-252]
  00013	b9 3f 00 00 00	 mov	 ecx, 63			; 0000003fH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 562  : 		fpos_t _Fileposition = _POS_TYPE_TO_FPOS_T(_Pos);

  00023	8d 4d 0c	 lea	 ecx, DWORD PTR __Pos$[ebp]
  00026	e8 00 00 00 00	 call	 ?seekpos@?$fpos@U_Mbstatet@@@std@@QBE_JXZ ; std::fpos<_Mbstatet>::seekpos
  0002b	89 45 e8	 mov	 DWORD PTR __Fileposition$[ebp], eax
  0002e	89 55 ec	 mov	 DWORD PTR __Fileposition$[ebp+4], edx

; 563  : 		off_type _Off = (off_type)_Pos - (off_type)_FPOSOFF(_Fileposition);

  00031	8d 4d 0c	 lea	 ecx, DWORD PTR __Pos$[ebp]
  00034	e8 00 00 00 00	 call	 ??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ ; std::fpos<_Mbstatet>::operator __int64
  00039	2b 45 e8	 sub	 eax, DWORD PTR __Fileposition$[ebp]
  0003c	1b 55 ec	 sbb	 edx, DWORD PTR __Fileposition$[ebp+4]
  0003f	89 45 d8	 mov	 DWORD PTR __Off$[ebp], eax
  00042	89 55 dc	 mov	 DWORD PTR __Off$[ebp+4], edx

; 564  : 
; 565  : 		if (_Myfile == 0 || !_Endwrite()
; 566  : 			|| fsetpos(_Myfile, &_Fileposition) != 0
; 567  : 			|| (_Off != 0 && _FSEEK_OFF(_Myfile, _Off, SEEK_CUR) != 0)
; 568  : 			|| fgetpos(_Myfile, &_Fileposition) != 0)

  00045	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00048	83 78 4c 00	 cmp	 DWORD PTR [eax+76], 0
  0004c	0f 84 80 00 00
	00		 je	 $LN3@seekpos
  00052	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
  0005a	0f b6 c0	 movzx	 eax, al
  0005d	85 c0		 test	 eax, eax
  0005f	74 71		 je	 SHORT $LN3@seekpos
  00061	8b f4		 mov	 esi, esp
  00063	8d 45 e8	 lea	 eax, DWORD PTR __Fileposition$[ebp]
  00066	50		 push	 eax
  00067	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  0006d	52		 push	 edx
  0006e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fsetpos
  00074	83 c4 08	 add	 esp, 8
  00077	3b f4		 cmp	 esi, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	85 c0		 test	 eax, eax
  00080	75 50		 jne	 SHORT $LN3@seekpos
  00082	8b 45 d8	 mov	 eax, DWORD PTR __Off$[ebp]
  00085	0b 45 dc	 or	 eax, DWORD PTR __Off$[ebp+4]
  00088	74 27		 je	 SHORT $LN4@seekpos
  0008a	8b f4		 mov	 esi, esp
  0008c	6a 01		 push	 1
  0008e	8b 45 dc	 mov	 eax, DWORD PTR __Off$[ebp+4]
  00091	50		 push	 eax
  00092	8b 4d d8	 mov	 ecx, DWORD PTR __Off$[ebp]
  00095	51		 push	 ecx
  00096	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00099	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  0009c	50		 push	 eax
  0009d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___fseeki64
  000a3	83 c4 10	 add	 esp, 16			; 00000010H
  000a6	3b f4		 cmp	 esi, esp
  000a8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ad	85 c0		 test	 eax, eax
  000af	75 21		 jne	 SHORT $LN3@seekpos
$LN4@seekpos:
  000b1	8b f4		 mov	 esi, esp
  000b3	8d 45 e8	 lea	 eax, DWORD PTR __Fileposition$[ebp]
  000b6	50		 push	 eax
  000b7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  000bd	52		 push	 edx
  000be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fgetpos
  000c4	83 c4 08	 add	 esp, 8
  000c7	3b f4		 cmp	 esi, esp
  000c9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ce	85 c0		 test	 eax, eax
  000d0	74 19		 je	 SHORT $LN2@seekpos
$LN3@seekpos:

; 569  : 			return (pos_type(_BADOFF));	// report failure

  000d2	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  000d7	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000da	51		 push	 ecx
  000db	8b 10		 mov	 edx, DWORD PTR [eax]
  000dd	52		 push	 edx
  000de	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000e1	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  000e6	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000e9	eb 43		 jmp	 SHORT $LN1@seekpos
$LN2@seekpos:

; 570  : 
; 571  : 		_State = _POS_TYPE_TO_STATE(_Pos);

  000eb	8d 85 08 ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  000f1	50		 push	 eax
  000f2	8d 4d 0c	 lea	 ecx, DWORD PTR __Pos$[ebp]
  000f5	e8 00 00 00 00	 call	 ?state@?$fpos@U_Mbstatet@@@std@@QBE?AU_Mbstatet@@XZ ; std::fpos<_Mbstatet>::state
  000fa	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fc	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000ff	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00102	89 48 40	 mov	 DWORD PTR [eax+64], ecx
  00105	89 50 44	 mov	 DWORD PTR [eax+68], edx

; 572  : 
; 573  : 		_Reset_back();	// revert from _Mychar buffer, discarding any putback

  00108	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010b	e8 00 00 00 00	 call	 ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back

; 574  : 		return (_POS_TYPE_FROM_STATE(pos_type, _State,

  00110	8b 45 ec	 mov	 eax, DWORD PTR __Fileposition$[ebp+4]
  00113	50		 push	 eax
  00114	8b 4d e8	 mov	 ecx, DWORD PTR __Fileposition$[ebp]
  00117	51		 push	 ecx
  00118	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0011b	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  0011e	50		 push	 eax
  0011f	8b 4a 40	 mov	 ecx, DWORD PTR [edx+64]
  00122	51		 push	 ecx
  00123	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00126	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QAE@U_Mbstatet@@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  0012b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@seekpos:

; 575  : 			_Fileposition));	// return new position
; 576  : 		}

  0012e	52		 push	 edx
  0012f	8b cd		 mov	 ecx, ebp
  00131	50		 push	 eax
  00132	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@seekpos
  00138	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0013d	58		 pop	 eax
  0013e	5a		 pop	 edx
  0013f	5f		 pop	 edi
  00140	5e		 pop	 esi
  00141	5b		 pop	 ebx
  00142	81 c4 fc 00 00
	00		 add	 esp, 252		; 000000fcH
  00148	3b ec		 cmp	 ebp, esp
  0014a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014f	8b e5		 mov	 esp, ebp
  00151	5d		 pop	 ebp
  00152	c2 20 00	 ret	 32			; 00000020H
  00155	0f 1f 00	 npad	 3
$LN8@seekpos:
  00158	01 00 00 00	 DD	 1
  0015c	00 00 00 00	 DD	 $LN7@seekpos
$LN7@seekpos:
  00160	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00164	08 00 00 00	 DD	 8
  00168	00 00 00 00	 DD	 $LN6@seekpos
$LN6@seekpos:
  0016c	5f		 DB	 95			; 0000005fH
  0016d	46		 DB	 70			; 00000046H
  0016e	69		 DB	 105			; 00000069H
  0016f	6c		 DB	 108			; 0000006cH
  00170	65		 DB	 101			; 00000065H
  00171	70		 DB	 112			; 00000070H
  00172	6f		 DB	 111			; 0000006fH
  00173	73		 DB	 115			; 00000073H
  00174	69		 DB	 105			; 00000069H
  00175	74		 DB	 116			; 00000074H
  00176	69		 DB	 105			; 00000069H
  00177	6f		 DB	 111			; 0000006fH
  00178	6e		 DB	 110			; 0000006eH
  00179	00		 DB	 0
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
_TEXT	SEGMENT
__Fileposition$ = -24					; size = 8
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 8
__Way$ = 20						; size = 4
___formal$ = 24						; size = 4
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::seekoff, COMDAT
; _this$ = ecx

; 539  : 		{	// change position by _Off

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 540  : 		fpos_t _Fileposition;
; 541  : 
; 542  : 		if (_Mysb::gptr() == &_Mychar	// something putback
; 543  : 			&& _Way == ios_base::cur	// a relative seek
; 544  : 			&& _Pcvt == 0)	// not converting

  00023	8b f4		 mov	 esi, esp
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0003b	3b c1		 cmp	 eax, ecx
  0003d	75 21		 jne	 SHORT $LN2@seekoff
  0003f	83 7d 14 01	 cmp	 DWORD PTR __Way$[ebp], 1
  00043	75 1b		 jne	 SHORT $LN2@seekoff
  00045	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00048	83 78 38 00	 cmp	 DWORD PTR [eax+56], 0
  0004c	75 12		 jne	 SHORT $LN2@seekoff

; 545  : 			_Off -= (off_type)sizeof (_Elem);	// back up over _Elem bytes

  0004e	8b 45 0c	 mov	 eax, DWORD PTR __Off$[ebp]
  00051	83 e8 01	 sub	 eax, 1
  00054	8b 4d 10	 mov	 ecx, DWORD PTR __Off$[ebp+4]
  00057	83 d9 00	 sbb	 ecx, 0
  0005a	89 45 0c	 mov	 DWORD PTR __Off$[ebp], eax
  0005d	89 4d 10	 mov	 DWORD PTR __Off$[ebp+4], ecx
$LN2@seekoff:

; 546  : 
; 547  : 		if (_Myfile == 0 || !_Endwrite()
; 548  : 			|| ((_Off != 0 || _Way != ios_base::cur)
; 549  : 				&& _FSEEK_OFF(_Myfile, _Off, _Way) != 0)
; 550  : 			|| fgetpos(_Myfile, &_Fileposition) != 0)

  00060	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00063	83 78 4c 00	 cmp	 DWORD PTR [eax+76], 0
  00067	74 67		 je	 SHORT $LN4@seekoff
  00069	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	e8 00 00 00 00	 call	 ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
  00071	0f b6 c0	 movzx	 eax, al
  00074	85 c0		 test	 eax, eax
  00076	74 58		 je	 SHORT $LN4@seekoff
  00078	8b 45 0c	 mov	 eax, DWORD PTR __Off$[ebp]
  0007b	0b 45 10	 or	 eax, DWORD PTR __Off$[ebp+4]
  0007e	75 06		 jne	 SHORT $LN6@seekoff
  00080	83 7d 14 01	 cmp	 DWORD PTR __Way$[ebp], 1
  00084	74 29		 je	 SHORT $LN5@seekoff
$LN6@seekoff:
  00086	8b f4		 mov	 esi, esp
  00088	8b 45 14	 mov	 eax, DWORD PTR __Way$[ebp]
  0008b	50		 push	 eax
  0008c	8b 4d 10	 mov	 ecx, DWORD PTR __Off$[ebp+4]
  0008f	51		 push	 ecx
  00090	8b 55 0c	 mov	 edx, DWORD PTR __Off$[ebp]
  00093	52		 push	 edx
  00094	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00097	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  0009a	51		 push	 ecx
  0009b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___fseeki64
  000a1	83 c4 10	 add	 esp, 16			; 00000010H
  000a4	3b f4		 cmp	 esi, esp
  000a6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ab	85 c0		 test	 eax, eax
  000ad	75 21		 jne	 SHORT $LN4@seekoff
$LN5@seekoff:
  000af	8b f4		 mov	 esi, esp
  000b1	8d 45 e8	 lea	 eax, DWORD PTR __Fileposition$[ebp]
  000b4	50		 push	 eax
  000b5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b8	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  000bb	52		 push	 edx
  000bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fgetpos
  000c2	83 c4 08	 add	 esp, 8
  000c5	3b f4		 cmp	 esi, esp
  000c7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cc	85 c0		 test	 eax, eax
  000ce	74 19		 je	 SHORT $LN3@seekoff
$LN4@seekoff:

; 551  : 			return (pos_type(_BADOFF));	// report failure

  000d0	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  000d5	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d8	51		 push	 ecx
  000d9	8b 10		 mov	 edx, DWORD PTR [eax]
  000db	52		 push	 edx
  000dc	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000df	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  000e4	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000e7	eb 26		 jmp	 SHORT $LN1@seekoff
$LN3@seekoff:

; 552  : 
; 553  : 		_Reset_back();	// revert from _Mychar buffer, discarding any putback

  000e9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ec	e8 00 00 00 00	 call	 ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back

; 554  : 		return (_POS_TYPE_FROM_STATE(pos_type, _State,

  000f1	8b 45 ec	 mov	 eax, DWORD PTR __Fileposition$[ebp+4]
  000f4	50		 push	 eax
  000f5	8b 4d e8	 mov	 ecx, DWORD PTR __Fileposition$[ebp]
  000f8	51		 push	 ecx
  000f9	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000fc	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  000ff	50		 push	 eax
  00100	8b 4a 40	 mov	 ecx, DWORD PTR [edx+64]
  00103	51		 push	 ecx
  00104	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00107	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QAE@U_Mbstatet@@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  0010c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@seekoff:

; 555  : 			_Fileposition));	// return new position
; 556  : 		}

  0010f	52		 push	 edx
  00110	8b cd		 mov	 ecx, ebp
  00112	50		 push	 eax
  00113	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@seekoff
  00119	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0011e	58		 pop	 eax
  0011f	5a		 pop	 edx
  00120	5f		 pop	 edi
  00121	5e		 pop	 esi
  00122	5b		 pop	 ebx
  00123	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00129	3b ec		 cmp	 ebp, esp
  0012b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00130	8b e5		 mov	 esp, ebp
  00132	5d		 pop	 ebp
  00133	c2 14 00	 ret	 20			; 00000014H
  00136	66 90		 npad	 2
$LN10@seekoff:
  00138	01 00 00 00	 DD	 1
  0013c	00 00 00 00	 DD	 $LN9@seekoff
$LN9@seekoff:
  00140	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00144	08 00 00 00	 DD	 8
  00148	00 00 00 00	 DD	 $LN8@seekoff
$LN8@seekoff:
  0014c	5f		 DB	 95			; 0000005fH
  0014d	46		 DB	 70			; 00000046H
  0014e	69		 DB	 105			; 00000069H
  0014f	6c		 DB	 108			; 0000006cH
  00150	65		 DB	 101			; 00000065H
  00151	70		 DB	 112			; 00000070H
  00152	6f		 DB	 111			; 0000006fH
  00153	73		 DB	 115			; 00000073H
  00154	69		 DB	 105			; 00000069H
  00155	74		 DB	 116			; 00000074H
  00156	69		 DB	 105			; 00000069H
  00157	6f		 DB	 111			; 0000006fH
  00158	6e		 DB	 110			; 0000006eH
  00159	00		 DB	 0
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
tv180 = -508						; size = 4
tv239 = -504						; size = 4
tv249 = -500						; size = 4
tv246 = -496						; size = 4
tv244 = -496						; size = 4
tv241 = -496						; size = 4
tv237 = -496						; size = 4
tv252 = -492						; size = 4
tv251 = -492						; size = 4
tv250 = -492						; size = 4
tv141 = -492						; size = 4
tv139 = -492						; size = 4
$T2 = -484						; size = 4
$T3 = -472						; size = 4
$T4 = -460						; size = 12
$T5 = -440						; size = 12
$T6 = -420						; size = 4
$T7 = -408						; size = 12
$T8 = -388						; size = 12
$T9 = -368						; size = 12
$T10 = -348						; size = 4
$T11 = -336						; size = 4
__Meta$12 = -132					; size = 4
__Nleft$13 = -120					; size = 4
__Src$14 = -108						; size = 4
__Dest$15 = -96						; size = 4
__Ch$16 = -81						; size = 1
__Str$17 = -72						; size = 28
__Ch$18 = -33						; size = 1
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::uflow, COMDAT
; _this$ = ecx

; 472  : 		{	// get an element from stream, point past it

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec f0 01 00
	00		 sub	 esp, 496		; 000001f0H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 04 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-508]
  00021	b9 7c 00 00 00	 mov	 ecx, 124		; 0000007cH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 473  : 		if (_Mysb::gptr() != 0
; 474  : 			&& _Mysb::gptr() < _Mysb::egptr())

  00045	8b f4		 mov	 esi, esp
  00047	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00050	3b f4		 cmp	 esi, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	85 c0		 test	 eax, eax
  00059	74 4c		 je	 SHORT $LN10@uflow
  0005b	8b f4		 mov	 esi, esp
  0005d	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00066	3b f4		 cmp	 esi, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	8b f0		 mov	 esi, eax
  0006f	8b fc		 mov	 edi, esp
  00071	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0007a	3b fc		 cmp	 edi, esp
  0007c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00081	3b f0		 cmp	 esi, eax
  00083	73 22		 jae	 SHORT $LN10@uflow

; 475  : 			return (_Traits::to_int_type(

  00085	8b f4		 mov	 esi, esp
  00087	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
  00090	3b f4		 cmp	 esi, esp
  00092	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00097	50		 push	 eax
  00098	e8 00 00 00 00	 call	 ?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
  0009d	83 c4 04	 add	 esp, 4
  000a0	e9 a7 03 00 00	 jmp	 $LN1@uflow
  000a5	eb 13		 jmp	 SHORT $LN11@uflow
$LN10@uflow:

; 476  : 				*_Mysb::_Gninc()));	// return buffered
; 477  : 		else if (_Myfile == 0)

  000a7	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	83 78 4c 00	 cmp	 DWORD PTR [eax+76], 0
  000ae	75 0a		 jne	 SHORT $LN11@uflow

; 478  : 			return (_Traits::eof());	// no open C stream, fail

  000b0	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  000b5	e9 92 03 00 00	 jmp	 $LN1@uflow
$LN11@uflow:

; 479  : 		_Reset_back();	// revert from _Mychar buffer

  000ba	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	e8 00 00 00 00	 call	 ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back

; 480  : 		if (_Pcvt == 0)

  000c2	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	83 78 38 00	 cmp	 DWORD PTR [eax+56], 0
  000c9	75 4d		 jne	 SHORT $LN13@uflow

; 481  : 			{	// no codecvt facet, just get it
; 482  : 			_Elem _Ch = 0;

  000cb	c6 45 df 00	 mov	 BYTE PTR __Ch$18[ebp], 0

; 483  : 			return (_Fgetc(_Ch, _Myfile) ? _Traits::to_int_type(_Ch)

  000cf	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  000d5	51		 push	 ecx
  000d6	8d 55 df	 lea	 edx, DWORD PTR __Ch$18[ebp]
  000d9	52		 push	 edx
  000da	e8 00 00 00 00	 call	 ??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z ; std::_Fgetc<char>
  000df	83 c4 08	 add	 esp, 8
  000e2	0f b6 c0	 movzx	 eax, al
  000e5	85 c0		 test	 eax, eax
  000e7	74 14		 je	 SHORT $LN23@uflow
  000e9	8d 4d df	 lea	 ecx, DWORD PTR __Ch$18[ebp]
  000ec	51		 push	 ecx
  000ed	e8 00 00 00 00	 call	 ?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
  000f2	83 c4 04	 add	 esp, 4
  000f5	89 85 14 fe ff
	ff		 mov	 DWORD PTR tv139[ebp], eax
  000fb	eb 0b		 jmp	 SHORT $LN24@uflow
$LN23@uflow:
  000fd	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00102	89 85 14 fe ff
	ff		 mov	 DWORD PTR tv139[ebp], eax
$LN24@uflow:
  00108	8b 85 14 fe ff
	ff		 mov	 eax, DWORD PTR tv139[ebp]
  0010e	e9 39 03 00 00	 jmp	 $LN1@uflow

; 484  : 				: _Traits::eof());
; 485  : 			}
; 486  : 		else

  00113	e9 34 03 00 00	 jmp	 $LN1@uflow
$LN13@uflow:

; 487  : 			{	// build string until codecvt succeeds
; 488  : 			string _Str;

  00118	8d 4d b8	 lea	 ecx, DWORD PTR __Str$17[ebp]
  0011b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00120	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$LN4@uflow:

; 489  : 
; 490  : 			for (; ; )
; 491  : 				{	// get using codecvt facet
; 492  : 				_Elem _Ch, *_Dest;
; 493  : 				const char *_Src;
; 494  : 				int _Nleft;
; 495  : 				int _Meta = fgetc(_Myfile);

  00127	8b f4		 mov	 esi, esp
  00129	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0012c	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  0012f	51		 push	 ecx
  00130	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fgetc
  00136	83 c4 04	 add	 esp, 4
  00139	3b f4		 cmp	 esi, esp
  0013b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00140	89 85 7c ff ff
	ff		 mov	 DWORD PTR __Meta$12[ebp], eax

; 496  : 
; 497  : 				if (_Meta == EOF)

  00146	83 bd 7c ff ff
	ff ff		 cmp	 DWORD PTR __Meta$12[ebp], -1
  0014d	75 25		 jne	 SHORT $LN15@uflow

; 498  : 					return (_Traits::eof());	// partial char?

  0014f	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00154	89 85 b0 fe ff
	ff		 mov	 DWORD PTR $T11[ebp], eax
  0015a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00161	8d 4d b8	 lea	 ecx, DWORD PTR __Str$17[ebp]
  00164	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00169	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR $T11[ebp]
  0016f	e9 d8 02 00 00	 jmp	 $LN1@uflow
$LN15@uflow:

; 499  : 
; 500  : 				_Str.append(1, (char)_Meta);	// append byte and convert

  00174	0f b6 85 7c ff
	ff ff		 movzx	 eax, BYTE PTR __Meta$12[ebp]
  0017b	50		 push	 eax
  0017c	6a 01		 push	 1
  0017e	8d 4d b8	 lea	 ecx, DWORD PTR __Str$17[ebp]
  00181	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 501  : 				switch (_Pcvt->in(_State,

  00186	8b f4		 mov	 esi, esp
  00188	8d 45 a0	 lea	 eax, DWORD PTR __Dest$15[ebp]
  0018b	50		 push	 eax
  0018c	8d 4d b0	 lea	 ecx, DWORD PTR __Ch$16[ebp+1]
  0018f	51		 push	 ecx
  00190	8d 55 af	 lea	 edx, DWORD PTR __Ch$16[ebp]
  00193	52		 push	 edx
  00194	8d 45 94	 lea	 eax, DWORD PTR __Src$14[ebp]
  00197	50		 push	 eax
  00198	8d 8d 90 fe ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
  0019e	51		 push	 ecx
  0019f	8d 4d b8	 lea	 ecx, DWORD PTR __Str$17[ebp]
  001a2	e8 00 00 00 00	 call	 ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
  001a7	89 85 14 fe ff
	ff		 mov	 DWORD PTR tv141[ebp], eax
  001ad	8b 95 14 fe ff
	ff		 mov	 edx, DWORD PTR tv141[ebp]
  001b3	89 95 10 fe ff
	ff		 mov	 DWORD PTR tv237[ebp], edx
  001b9	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  001bd	8b 8d 10 fe ff
	ff		 mov	 ecx, DWORD PTR tv237[ebp]
  001c3	e8 00 00 00 00	 call	 ??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
  001c8	8b f8		 mov	 edi, eax
  001ca	8d 4d b8	 lea	 ecx, DWORD PTR __Str$17[ebp]
  001cd	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  001d2	03 f8		 add	 edi, eax
  001d4	57		 push	 edi
  001d5	8d 85 7c fe ff
	ff		 lea	 eax, DWORD PTR $T8[ebp]
  001db	50		 push	 eax
  001dc	8d 4d b8	 lea	 ecx, DWORD PTR __Str$17[ebp]
  001df	e8 00 00 00 00	 call	 ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
  001e4	89 85 0c fe ff
	ff		 mov	 DWORD PTR tv249[ebp], eax
  001ea	8b 8d 0c fe ff
	ff		 mov	 ecx, DWORD PTR tv249[ebp]
  001f0	89 8d 08 fe ff
	ff		 mov	 DWORD PTR tv239[ebp], ecx
  001f6	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  001fa	8b 8d 08 fe ff
	ff		 mov	 ecx, DWORD PTR tv239[ebp]
  00200	e8 00 00 00 00	 call	 ??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
  00205	50		 push	 eax
  00206	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00209	83 c2 40	 add	 edx, 64			; 00000040H
  0020c	52		 push	 edx
  0020d	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00210	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00213	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?in@?$codecvt@DDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PBD1AAPBDPAD3AAPAD@Z
  00219	3b f4		 cmp	 esi, esp
  0021b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00220	89 85 a4 fe ff
	ff		 mov	 DWORD PTR $T10[ebp], eax
  00226	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0022a	8d 8d 7c fe ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  00230	e8 00 00 00 00	 call	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
  00235	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00239	8d 8d 90 fe ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
  0023f	e8 00 00 00 00	 call	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
  00244	8b 8d a4 fe ff
	ff		 mov	 ecx, DWORD PTR $T10[ebp]
  0024a	89 8d 04 fe ff
	ff		 mov	 DWORD PTR tv180[ebp], ecx
  00250	83 bd 04 fe ff
	ff 00		 cmp	 DWORD PTR tv180[ebp], 0
  00257	0f 8c b9 01 00
	00		 jl	 $LN21@uflow
  0025d	83 bd 04 fe ff
	ff 01		 cmp	 DWORD PTR tv180[ebp], 1
  00264	7e 12		 jle	 SHORT $LN16@uflow
  00266	83 bd 04 fe ff
	ff 03		 cmp	 DWORD PTR tv180[ebp], 3
  0026d	0f 84 18 01 00
	00		 je	 $LN19@uflow
  00273	e9 9e 01 00 00	 jmp	 $LN21@uflow
$LN16@uflow:

; 502  : 					&*_Str.begin(), &*_Str.begin() + _Str.size(), _Src,
; 503  : 					&_Ch, &_Ch + 1, _Dest))
; 504  : 					{	// test result of converting one element
; 505  : 				case codecvt_base::partial:
; 506  : 				case codecvt_base::ok:
; 507  : 					if (_Dest != &_Ch)

  00278	8d 45 af	 lea	 eax, DWORD PTR __Ch$16[ebp]
  0027b	39 45 a0	 cmp	 DWORD PTR __Dest$15[ebp], eax
  0027e	0f 84 b3 00 00
	00		 je	 $LN17@uflow

; 508  : 						{	// got an element, put back excess and deliver it
; 509  : 						_Nleft = (int)(&*_Str.begin() + _Str.size() - _Src);

  00284	8d 85 68 fe ff
	ff		 lea	 eax, DWORD PTR $T7[ebp]
  0028a	50		 push	 eax
  0028b	8d 4d b8	 lea	 ecx, DWORD PTR __Str$17[ebp]
  0028e	e8 00 00 00 00	 call	 ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
  00293	89 85 14 fe ff
	ff		 mov	 DWORD PTR tv250[ebp], eax
  00299	8b 8d 14 fe ff
	ff		 mov	 ecx, DWORD PTR tv250[ebp]
  0029f	89 8d 10 fe ff
	ff		 mov	 DWORD PTR tv241[ebp], ecx
  002a5	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  002a9	8b 8d 10 fe ff
	ff		 mov	 ecx, DWORD PTR tv241[ebp]
  002af	e8 00 00 00 00	 call	 ??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
  002b4	8b f0		 mov	 esi, eax
  002b6	8d 4d b8	 lea	 ecx, DWORD PTR __Str$17[ebp]
  002b9	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  002be	03 f0		 add	 esi, eax
  002c0	2b 75 94	 sub	 esi, DWORD PTR __Src$14[ebp]
  002c3	89 75 88	 mov	 DWORD PTR __Nleft$13[ebp], esi
  002c6	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  002ca	8d 8d 68 fe ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  002d0	e8 00 00 00 00	 call	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
$LN9@uflow:

; 510  : 						for (; 0 < _Nleft; )

  002d5	83 7d 88 00	 cmp	 DWORD PTR __Nleft$13[ebp], 0
  002d9	7e 2e		 jle	 SHORT $LN8@uflow

; 511  : 							ungetc(_Src[--_Nleft], _Myfile);

  002db	8b 45 88	 mov	 eax, DWORD PTR __Nleft$13[ebp]
  002de	83 e8 01	 sub	 eax, 1
  002e1	89 45 88	 mov	 DWORD PTR __Nleft$13[ebp], eax
  002e4	8b f4		 mov	 esi, esp
  002e6	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  002e9	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  002ec	52		 push	 edx
  002ed	8b 45 94	 mov	 eax, DWORD PTR __Src$14[ebp]
  002f0	03 45 88	 add	 eax, DWORD PTR __Nleft$13[ebp]
  002f3	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  002f6	51		 push	 ecx
  002f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ungetc
  002fd	83 c4 08	 add	 esp, 8
  00300	3b f4		 cmp	 esi, esp
  00302	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00307	eb cc		 jmp	 SHORT $LN9@uflow
$LN8@uflow:

; 512  : 						return (_Traits::to_int_type(_Ch));

  00309	8d 45 af	 lea	 eax, DWORD PTR __Ch$16[ebp]
  0030c	50		 push	 eax
  0030d	e8 00 00 00 00	 call	 ?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
  00312	83 c4 04	 add	 esp, 4
  00315	89 85 5c fe ff
	ff		 mov	 DWORD PTR $T6[ebp], eax
  0031b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00322	8d 4d b8	 lea	 ecx, DWORD PTR __Str$17[ebp]
  00325	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0032a	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  00330	e9 17 01 00 00	 jmp	 $LN1@uflow

; 513  : 						}
; 514  : 					else

  00335	eb 4f		 jmp	 SHORT $LN18@uflow
$LN17@uflow:

; 515  : 						_Str.erase((size_t)0,	// partial, discard used input

  00337	8d 85 48 fe ff
	ff		 lea	 eax, DWORD PTR $T5[ebp]
  0033d	50		 push	 eax
  0033e	8d 4d b8	 lea	 ecx, DWORD PTR __Str$17[ebp]
  00341	e8 00 00 00 00	 call	 ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
  00346	89 85 14 fe ff
	ff		 mov	 DWORD PTR tv251[ebp], eax
  0034c	8b 8d 14 fe ff
	ff		 mov	 ecx, DWORD PTR tv251[ebp]
  00352	89 8d 10 fe ff
	ff		 mov	 DWORD PTR tv244[ebp], ecx
  00358	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  0035c	8b 8d 10 fe ff
	ff		 mov	 ecx, DWORD PTR tv244[ebp]
  00362	e8 00 00 00 00	 call	 ??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
  00367	8b 55 94	 mov	 edx, DWORD PTR __Src$14[ebp]
  0036a	2b d0		 sub	 edx, eax
  0036c	52		 push	 edx
  0036d	6a 00		 push	 0
  0036f	8d 4d b8	 lea	 ecx, DWORD PTR __Str$17[ebp]
  00372	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00377	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0037b	8d 8d 48 fe ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  00381	e8 00 00 00 00	 call	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
$LN18@uflow:

; 516  : 							(size_t)(_Src - &*_Str.begin()));
; 517  : 					break;

  00386	e9 ad 00 00 00	 jmp	 $LN5@uflow
$LN19@uflow:

; 518  : 
; 519  : 				case codecvt_base::noconv:
; 520  : 					if (_Str.size() < sizeof (_Elem))

  0038b	8d 4d b8	 lea	 ecx, DWORD PTR __Str$17[ebp]
  0038e	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  00393	83 f8 01	 cmp	 eax, 1
  00396	73 05		 jae	 SHORT $LN20@uflow

; 521  : 						break;	// no conversion, but need more chars

  00398	e9 9b 00 00 00	 jmp	 $LN5@uflow
$LN20@uflow:

; 522  : 
; 523  : 					_CRT_SECURE_MEMCPY(&_Ch, sizeof (_Elem), &*_Str.begin(),

  0039d	6a 01		 push	 1
  0039f	8d 85 34 fe ff
	ff		 lea	 eax, DWORD PTR $T4[ebp]
  003a5	50		 push	 eax
  003a6	8d 4d b8	 lea	 ecx, DWORD PTR __Str$17[ebp]
  003a9	e8 00 00 00 00	 call	 ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
  003ae	89 85 14 fe ff
	ff		 mov	 DWORD PTR tv252[ebp], eax
  003b4	8b 8d 14 fe ff
	ff		 mov	 ecx, DWORD PTR tv252[ebp]
  003ba	89 8d 10 fe ff
	ff		 mov	 DWORD PTR tv246[ebp], ecx
  003c0	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  003c4	8b 8d 10 fe ff
	ff		 mov	 ecx, DWORD PTR tv246[ebp]
  003ca	e8 00 00 00 00	 call	 ??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
  003cf	50		 push	 eax
  003d0	6a 01		 push	 1
  003d2	8d 55 af	 lea	 edx, DWORD PTR __Ch$16[ebp]
  003d5	52		 push	 edx
  003d6	e8 00 00 00 00	 call	 _memcpy_s
  003db	83 c4 10	 add	 esp, 16			; 00000010H
  003de	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  003e2	8d 8d 34 fe ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  003e8	e8 00 00 00 00	 call	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ

; 524  : 						sizeof (_Elem));	// copy raw bytes to element
; 525  : 
; 526  : 					return (_Traits::to_int_type(_Ch));	// return result

  003ed	8d 45 af	 lea	 eax, DWORD PTR __Ch$16[ebp]
  003f0	50		 push	 eax
  003f1	e8 00 00 00 00	 call	 ?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
  003f6	83 c4 04	 add	 esp, 4
  003f9	89 85 28 fe ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  003ff	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00406	8d 4d b8	 lea	 ecx, DWORD PTR __Str$17[ebp]
  00409	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0040e	8b 85 28 fe ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  00414	eb 36		 jmp	 SHORT $LN1@uflow
$LN21@uflow:

; 527  : 
; 528  : 				default:
; 529  : 					return (_Traits::eof());	// conversion failed

  00416	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  0041b	89 85 1c fe ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  00421	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00428	8d 4d b8	 lea	 ecx, DWORD PTR __Str$17[ebp]
  0042b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00430	8b 85 1c fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00436	eb 14		 jmp	 SHORT $LN1@uflow
$LN5@uflow:

; 530  : 					}
; 531  : 				}

  00438	e9 ea fc ff ff	 jmp	 $LN4@uflow

; 532  : 			}

  0043d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00444	8d 4d b8	 lea	 ecx, DWORD PTR __Str$17[ebp]
  00447	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@uflow:

; 533  : 		}

  0044c	52		 push	 edx
  0044d	8b cd		 mov	 ecx, ebp
  0044f	50		 push	 eax
  00450	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN38@uflow
  00456	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0045b	58		 pop	 eax
  0045c	5a		 pop	 edx
  0045d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00460	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00467	59		 pop	 ecx
  00468	5f		 pop	 edi
  00469	5e		 pop	 esi
  0046a	5b		 pop	 ebx
  0046b	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0046e	33 cd		 xor	 ecx, ebp
  00470	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00475	81 c4 fc 01 00
	00		 add	 esp, 508		; 000001fcH
  0047b	3b ec		 cmp	 ebp, esp
  0047d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00482	8b e5		 mov	 esp, ebp
  00484	5d		 pop	 ebp
  00485	c3		 ret	 0
  00486	66 90		 npad	 2
$LN38@uflow:
  00488	05 00 00 00	 DD	 5
  0048c	00 00 00 00	 DD	 $LN37@uflow
$LN37@uflow:
  00490	df ff ff ff	 DD	 -33			; ffffffdfH
  00494	01 00 00 00	 DD	 1
  00498	00 00 00 00	 DD	 $LN31@uflow
  0049c	b8 ff ff ff	 DD	 -72			; ffffffb8H
  004a0	1c 00 00 00	 DD	 28			; 0000001cH
  004a4	00 00 00 00	 DD	 $LN32@uflow
  004a8	af ff ff ff	 DD	 -81			; ffffffafH
  004ac	01 00 00 00	 DD	 1
  004b0	00 00 00 00	 DD	 $LN33@uflow
  004b4	a0 ff ff ff	 DD	 -96			; ffffffa0H
  004b8	04 00 00 00	 DD	 4
  004bc	00 00 00 00	 DD	 $LN34@uflow
  004c0	94 ff ff ff	 DD	 -108			; ffffff94H
  004c4	04 00 00 00	 DD	 4
  004c8	00 00 00 00	 DD	 $LN35@uflow
$LN35@uflow:
  004cc	5f		 DB	 95			; 0000005fH
  004cd	53		 DB	 83			; 00000053H
  004ce	72		 DB	 114			; 00000072H
  004cf	63		 DB	 99			; 00000063H
  004d0	00		 DB	 0
$LN34@uflow:
  004d1	5f		 DB	 95			; 0000005fH
  004d2	44		 DB	 68			; 00000044H
  004d3	65		 DB	 101			; 00000065H
  004d4	73		 DB	 115			; 00000073H
  004d5	74		 DB	 116			; 00000074H
  004d6	00		 DB	 0
$LN33@uflow:
  004d7	5f		 DB	 95			; 0000005fH
  004d8	43		 DB	 67			; 00000043H
  004d9	68		 DB	 104			; 00000068H
  004da	00		 DB	 0
$LN32@uflow:
  004db	5f		 DB	 95			; 0000005fH
  004dc	53		 DB	 83			; 00000053H
  004dd	74		 DB	 116			; 00000074H
  004de	72		 DB	 114			; 00000072H
  004df	00		 DB	 0
$LN31@uflow:
  004e0	5f		 DB	 95			; 0000005fH
  004e1	43		 DB	 67			; 00000043H
  004e2	68		 DB	 104			; 00000068H
  004e3	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$0:
  00000	8d 4d b8	 lea	 ecx, DWORD PTR __Str$17[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$1:
  00008	8d 8d 90 fe ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$2:
  00013	8d 8d 7c fe ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  00019	e9 00 00 00 00	 jmp	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$3:
  0001e	8d 8d 68 fe ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  00024	e9 00 00 00 00	 jmp	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$4:
  00029	8d 8d 48 fe ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  0002f	e9 00 00 00 00	 jmp	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$5:
  00034	8d 8d 34 fe ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  0003a	e9 00 00 00 00	 jmp	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__ehhandler$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ:
  0003f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00043	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00046	8b 8a 00 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-512]
  0004c	33 c8		 xor	 ecx, eax
  0004e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00053	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00056	33 c8		 xor	 ecx, eax
  00058	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005d	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
  00062	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::uflow
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
$T1 = -224						; size = 4
__Meta$ = -20						; size = 4
_this$ = -8						; size = 4
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::underflow, COMDAT
; _this$ = ecx

; 457  : 		{	// get an element from stream, but don't point past it

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00013	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 458  : 		int_type _Meta;
; 459  : 		if (_Mysb::gptr() != 0
; 460  : 			&& _Mysb::gptr() < _Mysb::egptr())

  00023	8b f4		 mov	 esi, esp
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	85 c0		 test	 eax, eax
  00037	74 49		 je	 SHORT $LN2@underflow
  00039	8b f4		 mov	 esi, esp
  0003b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00044	3b f4		 cmp	 esi, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b f0		 mov	 esi, eax
  0004d	8b fc		 mov	 edi, esp
  0004f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00058	3b fc		 cmp	 edi, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	3b f0		 cmp	 esi, eax
  00061	73 1f		 jae	 SHORT $LN2@underflow

; 461  : 			return (_Traits::to_int_type(*_Mysb::gptr()));	// return buffered

  00063	8b f4		 mov	 esi, esp
  00065	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0006e	3b f4		 cmp	 esi, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
  0007b	83 c4 04	 add	 esp, 4
  0007e	eb 64		 jmp	 SHORT $LN1@underflow
  00080	eb 62		 jmp	 SHORT $LN1@underflow
$LN2@underflow:

; 462  : 		else if (_Traits::eq_int_type(_Traits::eof(), _Meta = uflow()))

  00082	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 10		 mov	 edx, DWORD PTR [eax]
  00087	8b f4		 mov	 esi, esp
  00089	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0008f	ff d0		 call	 eax
  00091	3b f4		 cmp	 esi, esp
  00093	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00098	89 45 ec	 mov	 DWORD PTR __Meta$[ebp], eax
  0009b	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  000a0	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  000a6	8d 4d ec	 lea	 ecx, DWORD PTR __Meta$[ebp]
  000a9	51		 push	 ecx
  000aa	8d 95 20 ff ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  000b0	52		 push	 edx
  000b1	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  000b6	83 c4 08	 add	 esp, 8
  000b9	0f b6 c0	 movzx	 eax, al
  000bc	85 c0		 test	 eax, eax
  000be	74 07		 je	 SHORT $LN4@underflow

; 463  : 			return (_Meta);	// uflow failed, return EOF

  000c0	8b 45 ec	 mov	 eax, DWORD PTR __Meta$[ebp]
  000c3	eb 1f		 jmp	 SHORT $LN1@underflow

; 464  : 		else

  000c5	eb 1d		 jmp	 SHORT $LN1@underflow
$LN4@underflow:

; 465  : 			{	// get a char, don't point past it
; 466  : 			pbackfail(_Meta);

  000c7	8b f4		 mov	 esi, esp
  000c9	8b 45 ec	 mov	 eax, DWORD PTR __Meta$[ebp]
  000cc	50		 push	 eax
  000cd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d5	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000d8	ff d0		 call	 eax
  000da	3b f4		 cmp	 esi, esp
  000dc	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 467  : 			return (_Meta);

  000e1	8b 45 ec	 mov	 eax, DWORD PTR __Meta$[ebp]
$LN1@underflow:

; 468  : 			}
; 469  : 		}

  000e4	52		 push	 edx
  000e5	8b cd		 mov	 ecx, ebp
  000e7	50		 push	 eax
  000e8	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@underflow
  000ee	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000f3	58		 pop	 eax
  000f4	5a		 pop	 edx
  000f5	5f		 pop	 edi
  000f6	5e		 pop	 esi
  000f7	5b		 pop	 ebx
  000f8	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  000fe	3b ec		 cmp	 ebp, esp
  00100	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00105	8b e5		 mov	 esp, ebp
  00107	5d		 pop	 ebp
  00108	c3		 ret	 0
  00109	0f 1f 00	 npad	 3
$LN9@underflow:
  0010c	01 00 00 00	 DD	 1
  00110	00 00 00 00	 DD	 $LN8@underflow
$LN8@underflow:
  00114	ec ff ff ff	 DD	 -20			; ffffffecH
  00118	04 00 00 00	 DD	 4
  0011c	00 00 00 00	 DD	 $LN7@underflow
$LN7@underflow:
  00120	5f		 DB	 95			; 0000005fH
  00121	4d		 DB	 77			; 0000004dH
  00122	65		 DB	 101			; 00000065H
  00123	74		 DB	 116			; 00000074H
  00124	61		 DB	 97			; 00000061H
  00125	00		 DB	 0
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::underflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT
$T1 = -245						; size = 1
$T2 = -236						; size = 4
$T3 = -224						; size = 4
$T4 = -212						; size = 4
_this$ = -8						; size = 4
__Meta$ = 8						; size = 4
?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail, COMDAT
; _this$ = ecx

; 432  : 		{	// put an element back to stream

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 04 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-252]
  00013	b9 3f 00 00 00	 mov	 ecx, 63			; 0000003fH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 433  : 		if (_Mysb::gptr() != 0
; 434  : 			&& _Mysb::eback() < _Mysb::gptr()
; 435  : 			&& (_Traits::eq_int_type(_Traits::eof(), _Meta)

  00023	8b f4		 mov	 esi, esp
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	85 c0		 test	 eax, eax
  00037	0f 84 c0 00 00
	00		 je	 $LN2@pbackfail
  0003d	8b f4		 mov	 esi, esp
  0003f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00048	3b f4		 cmp	 esi, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b f0		 mov	 esi, eax
  00051	8b fc		 mov	 edi, esp
  00053	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0005c	3b fc		 cmp	 edi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	3b f0		 cmp	 esi, eax
  00065	0f 83 92 00 00
	00		 jae	 $LN2@pbackfail
  0006b	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00070	89 85 2c ff ff
	ff		 mov	 DWORD PTR $T4[ebp], eax
  00076	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  00079	50		 push	 eax
  0007a	8d 8d 2c ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00080	51		 push	 ecx
  00081	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  00086	83 c4 08	 add	 esp, 8
  00089	0f b6 d0	 movzx	 edx, al
  0008c	85 d2		 test	 edx, edx
  0008e	75 45		 jne	 SHORT $LN4@pbackfail
  00090	8b f4		 mov	 esi, esp
  00092	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0009b	3b f4		 cmp	 esi, esp
  0009d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a2	b9 01 00 00 00	 mov	 ecx, 1
  000a7	6b d1 ff	 imul	 edx, ecx, -1
  000aa	03 c2		 add	 eax, edx
  000ac	50		 push	 eax
  000ad	e8 00 00 00 00	 call	 ?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
  000b2	83 c4 04	 add	 esp, 4
  000b5	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  000bb	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  000be	50		 push	 eax
  000bf	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  000c5	51		 push	 ecx
  000c6	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  000cb	83 c4 08	 add	 esp, 8
  000ce	0f b6 d0	 movzx	 edx, al
  000d1	85 d2		 test	 edx, edx
  000d3	74 28		 je	 SHORT $LN2@pbackfail
$LN4@pbackfail:

; 436  : 			|| _Traits::eq_int_type(_Traits::to_int_type(_Mysb::gptr()[-1]),
; 437  : 				_Meta)))
; 438  : 			{	// just back up position
; 439  : 			_Mysb::_Gndec();

  000d5	8b f4		 mov	 esi, esp
  000d7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Gndec@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
  000e0	3b f4		 cmp	 esi, esp
  000e2	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 440  : 			return (_Traits::not_eof(_Meta));

  000e7	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  000ea	50		 push	 eax
  000eb	e8 00 00 00 00	 call	 ?not_eof@?$char_traits@D@std@@SAHABH@Z ; std::char_traits<char>::not_eof
  000f0	83 c4 04	 add	 esp, 4
  000f3	e9 c3 00 00 00	 jmp	 $LN1@pbackfail
  000f8	e9 be 00 00 00	 jmp	 $LN1@pbackfail
$LN2@pbackfail:

; 441  : 			}
; 442  : 		else if (_Myfile == 0 || _Traits::eq_int_type(_Traits::eof(), _Meta))

  000fd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00100	83 78 4c 00	 cmp	 DWORD PTR [eax+76], 0
  00104	74 25		 je	 SHORT $LN7@pbackfail
  00106	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  0010b	89 85 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  00111	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  00114	50		 push	 eax
  00115	8d 8d 14 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  0011b	51		 push	 ecx
  0011c	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  00121	83 c4 08	 add	 esp, 8
  00124	0f b6 d0	 movzx	 edx, al
  00127	85 d2		 test	 edx, edx
  00129	74 0f		 je	 SHORT $LN5@pbackfail
$LN7@pbackfail:

; 443  : 			return (_Traits::eof());	// no open C stream or EOF, fail

  0012b	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00130	e9 86 00 00 00	 jmp	 $LN1@pbackfail
  00135	e9 81 00 00 00	 jmp	 $LN1@pbackfail
$LN5@pbackfail:

; 444  : 		else if (_Pcvt == 0 && _Ungetc(_Traits::to_char_type(_Meta), _Myfile))

  0013a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0013d	83 78 38 00	 cmp	 DWORD PTR [eax+56], 0
  00141	75 36		 jne	 SHORT $LN8@pbackfail
  00143	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  00146	50		 push	 eax
  00147	e8 00 00 00 00	 call	 ?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
  0014c	83 c4 04	 add	 esp, 4
  0014f	88 85 0b ff ff
	ff		 mov	 BYTE PTR $T1[ebp], al
  00155	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00158	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  0015b	52		 push	 edx
  0015c	8d 85 0b ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00162	50		 push	 eax
  00163	e8 00 00 00 00	 call	 ??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z ; std::_Ungetc<char>
  00168	83 c4 08	 add	 esp, 8
  0016b	0f b6 c8	 movzx	 ecx, al
  0016e	85 c9		 test	 ecx, ecx
  00170	74 07		 je	 SHORT $LN8@pbackfail

; 445  : 			return (_Meta);	// no facet and unget succeeded, return

  00172	8b 45 08	 mov	 eax, DWORD PTR __Meta$[ebp]
  00175	eb 44		 jmp	 SHORT $LN1@pbackfail
  00177	eb 42		 jmp	 SHORT $LN1@pbackfail
$LN8@pbackfail:

; 446  : 		else if (_Mysb::gptr() != &_Mychar)

  00179	8b f4		 mov	 esi, esp
  0017b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0017e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00184	3b f4		 cmp	 esi, esp
  00186	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0018e	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00191	3b c1		 cmp	 eax, ecx
  00193	74 21		 je	 SHORT $LN10@pbackfail

; 447  : 			{	// putback to _Mychar
; 448  : 			_Mychar = _Traits::to_char_type(_Meta);

  00195	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  00198	50		 push	 eax
  00199	e8 00 00 00 00	 call	 ?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
  0019e	83 c4 04	 add	 esp, 4
  001a1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001a4	88 41 3c	 mov	 BYTE PTR [ecx+60], al

; 449  : 			_Set_back();	// switch to _Mychar buffer

  001a7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001aa	e8 00 00 00 00	 call	 ?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back

; 450  : 			return (_Meta);

  001af	8b 45 08	 mov	 eax, DWORD PTR __Meta$[ebp]
  001b2	eb 07		 jmp	 SHORT $LN1@pbackfail

; 451  : 			}
; 452  : 		else

  001b4	eb 05		 jmp	 SHORT $LN1@pbackfail
$LN10@pbackfail:

; 453  : 			return (_Traits::eof());	// nowhere to put back

  001b6	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
$LN1@pbackfail:

; 454  : 	}

  001bb	5f		 pop	 edi
  001bc	5e		 pop	 esi
  001bd	5b		 pop	 ebx
  001be	81 c4 fc 00 00
	00		 add	 esp, 252		; 000000fcH
  001c4	3b ec		 cmp	 ebp, esp
  001c6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001cb	8b e5		 mov	 esp, ebp
  001cd	5d		 pop	 ebp
  001ce	c2 04 00	 ret	 4
?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT
tv184 = -524						; size = 4
tv239 = -520						; size = 4
tv254 = -516						; size = 4
tv208 = -516						; size = 4
tv246 = -512						; size = 4
tv241 = -512						; size = 4
tv237 = -512						; size = 4
tv256 = -508						; size = 4
tv255 = -508						; size = 4
tv230 = -508						; size = 4
tv151 = -508						; size = 4
tv147 = -508						; size = 4
$T2 = -500						; size = 4
$T3 = -488						; size = 4
$T4 = -476						; size = 4
$T5 = -464						; size = 4
$T6 = -452						; size = 4
$T7 = -440						; size = 4
$T8 = -428						; size = 12
$T9 = -405						; size = 1
$T10 = -396						; size = 12
$T11 = -376						; size = 12
$T12 = -356						; size = 12
$T13 = -336						; size = 4
$T14 = -324						; size = 4
__Count$15 = -120					; size = 4
__Str$16 = -108						; size = 28
__Dest$17 = -72						; size = 4
__Src$18 = -60						; size = 4
__Ch$19 = -45						; size = 1
__STRING_INC$20 = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Meta$ = 8						; size = 4
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::overflow, COMDAT
; _this$ = ecx

; 371  : 		{	// put an element to stream

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 00 02 00
	00		 sub	 esp, 512		; 00000200H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd f4 fd ff
	ff		 lea	 edi, DWORD PTR [ebp-524]
  00021	b9 80 00 00 00	 mov	 ecx, 128		; 00000080H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  00045	c7 85 0c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0

; 372  : 		if (_Traits::eq_int_type(_Traits::eof(), _Meta))

  0004f	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00054	89 85 bc fe ff
	ff		 mov	 DWORD PTR $T14[ebp], eax
  0005a	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  0005d	50		 push	 eax
  0005e	8d 8d bc fe ff
	ff		 lea	 ecx, DWORD PTR $T14[ebp]
  00064	51		 push	 ecx
  00065	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  0006a	83 c4 08	 add	 esp, 8
  0006d	0f b6 d0	 movzx	 edx, al
  00070	85 d2		 test	 edx, edx
  00072	74 13		 je	 SHORT $LN7@overflow

; 373  : 			return (_Traits::not_eof(_Meta));	// EOF, return success code

  00074	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?not_eof@?$char_traits@D@std@@SAHABH@Z ; std::char_traits<char>::not_eof
  0007d	83 c4 04	 add	 esp, 4
  00080	e9 26 04 00 00	 jmp	 $LN1@overflow

; 374  : 		else if (_Mysb::pptr() != 0

  00085	eb 7f		 jmp	 SHORT $LN8@overflow
$LN7@overflow:

; 375  : 			&& _Mysb::pptr() < _Mysb::epptr())

  00087	8b f4		 mov	 esi, esp
  00089	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00092	3b f4		 cmp	 esi, esp
  00094	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00099	85 c0		 test	 eax, eax
  0009b	74 56		 je	 SHORT $LN9@overflow
  0009d	8b f4		 mov	 esi, esp
  0009f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000a8	3b f4		 cmp	 esi, esp
  000aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000af	8b f0		 mov	 esi, eax
  000b1	8b fc		 mov	 edi, esp
  000b3	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000bc	3b fc		 cmp	 edi, esp
  000be	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c3	3b f0		 cmp	 esi, eax
  000c5	73 2c		 jae	 SHORT $LN9@overflow

; 376  : 			{	// room in buffer, store it
; 377  : 			*_Mysb::_Pninc() = _Traits::to_char_type(_Meta);

  000c7	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  000ca	50		 push	 eax
  000cb	e8 00 00 00 00	 call	 ?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
  000d0	83 c4 04	 add	 esp, 4
  000d3	8a d8		 mov	 bl, al
  000d5	8b f4		 mov	 esi, esp
  000d7	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
  000e0	3b f4		 cmp	 esi, esp
  000e2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e7	88 18		 mov	 BYTE PTR [eax], bl

; 378  : 			return (_Meta);

  000e9	8b 45 08	 mov	 eax, DWORD PTR __Meta$[ebp]
  000ec	e9 ba 03 00 00	 jmp	 $LN1@overflow
  000f1	eb 13		 jmp	 SHORT $LN8@overflow
$LN9@overflow:

; 379  : 			}
; 380  : 		else if (_Myfile == 0)

  000f3	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000f6	83 78 4c 00	 cmp	 DWORD PTR [eax+76], 0
  000fa	75 0a		 jne	 SHORT $LN8@overflow

; 381  : 			return (_Traits::eof());	// no open C stream, fail

  000fc	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00101	e9 a5 03 00 00	 jmp	 $LN1@overflow
$LN8@overflow:

; 382  : 		_Reset_back();	// revert from _Mychar buffer

  00106	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00109	e8 00 00 00 00	 call	 ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back

; 383  : 		if (_Pcvt == 0)

  0010e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00111	83 78 38 00	 cmp	 DWORD PTR [eax+56], 0
  00115	75 4c		 jne	 SHORT $LN12@overflow

; 384  : 			return (_Fputc(_Traits::to_char_type(_Meta), _Myfile)

  00117	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0011a	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  0011d	51		 push	 ecx
  0011e	8d 55 08	 lea	 edx, DWORD PTR __Meta$[ebp]
  00121	52		 push	 edx
  00122	e8 00 00 00 00	 call	 ?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
  00127	83 c4 04	 add	 esp, 4
  0012a	0f b6 c0	 movzx	 eax, al
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 ??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z ; std::_Fputc<char>
  00133	83 c4 08	 add	 esp, 8
  00136	0f b6 c8	 movzx	 ecx, al
  00139	85 c9		 test	 ecx, ecx
  0013b	74 0b		 je	 SHORT $LN24@overflow
  0013d	8b 55 08	 mov	 edx, DWORD PTR __Meta$[ebp]
  00140	89 95 04 fe ff
	ff		 mov	 DWORD PTR tv147[ebp], edx
  00146	eb 0b		 jmp	 SHORT $LN25@overflow
$LN24@overflow:
  00148	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  0014d	89 85 04 fe ff
	ff		 mov	 DWORD PTR tv147[ebp], eax
$LN25@overflow:
  00153	8b 85 04 fe ff
	ff		 mov	 eax, DWORD PTR tv147[ebp]
  00159	e9 4d 03 00 00	 jmp	 $LN1@overflow

; 385  : 				? _Meta : _Traits::eof());	// no codecvt facet, put as is
; 386  : 		else

  0015e	e9 48 03 00 00	 jmp	 $LN1@overflow
$LN12@overflow:

; 387  : 			{	// put using codecvt facet
; 388  : 			const int _STRING_INC = 8;

  00163	c7 45 dc 08 00
	00 00		 mov	 DWORD PTR __STRING_INC$20[ebp], 8

; 389  : 			const _Elem _Ch = _Traits::to_char_type(_Meta);

  0016a	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  0016d	50		 push	 eax
  0016e	e8 00 00 00 00	 call	 ?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
  00173	83 c4 04	 add	 esp, 4
  00176	88 45 d3	 mov	 BYTE PTR __Ch$19[ebp], al

; 390  : 			const _Elem *_Src;
; 391  : 			char *_Dest;
; 392  : 
; 393  : 			string _Str(_STRING_INC, '\0');

  00179	6a 00		 push	 0
  0017b	6a 08		 push	 8
  0017d	8d 4d 94	 lea	 ecx, DWORD PTR __Str$16[ebp]
  00180	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00185	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$LN4@overflow:

; 394  : 			for (; ; )
; 395  : 				switch (_Pcvt->out(_State,

  0018c	8b f4		 mov	 esi, esp
  0018e	8d 45 b8	 lea	 eax, DWORD PTR __Dest$17[ebp]
  00191	50		 push	 eax
  00192	8d 8d 9c fe ff
	ff		 lea	 ecx, DWORD PTR $T12[ebp]
  00198	51		 push	 ecx
  00199	8d 4d 94	 lea	 ecx, DWORD PTR __Str$16[ebp]
  0019c	e8 00 00 00 00	 call	 ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
  001a1	89 85 04 fe ff
	ff		 mov	 DWORD PTR tv151[ebp], eax
  001a7	8b 95 04 fe ff
	ff		 mov	 edx, DWORD PTR tv151[ebp]
  001ad	89 95 00 fe ff
	ff		 mov	 DWORD PTR tv237[ebp], edx
  001b3	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  001b7	8b 8d 00 fe ff
	ff		 mov	 ecx, DWORD PTR tv237[ebp]
  001bd	e8 00 00 00 00	 call	 ??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
  001c2	8b f8		 mov	 edi, eax
  001c4	8d 4d 94	 lea	 ecx, DWORD PTR __Str$16[ebp]
  001c7	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  001cc	03 f8		 add	 edi, eax
  001ce	57		 push	 edi
  001cf	8d 85 88 fe ff
	ff		 lea	 eax, DWORD PTR $T11[ebp]
  001d5	50		 push	 eax
  001d6	8d 4d 94	 lea	 ecx, DWORD PTR __Str$16[ebp]
  001d9	e8 00 00 00 00	 call	 ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
  001de	89 85 fc fd ff
	ff		 mov	 DWORD PTR tv254[ebp], eax
  001e4	8b 8d fc fd ff
	ff		 mov	 ecx, DWORD PTR tv254[ebp]
  001ea	89 8d f8 fd ff
	ff		 mov	 DWORD PTR tv239[ebp], ecx
  001f0	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  001f4	8b 8d f8 fd ff
	ff		 mov	 ecx, DWORD PTR tv239[ebp]
  001fa	e8 00 00 00 00	 call	 ??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
  001ff	50		 push	 eax
  00200	8d 55 c4	 lea	 edx, DWORD PTR __Src$18[ebp]
  00203	52		 push	 edx
  00204	8d 45 d4	 lea	 eax, DWORD PTR __Ch$19[ebp+1]
  00207	50		 push	 eax
  00208	8d 4d d3	 lea	 ecx, DWORD PTR __Ch$19[ebp]
  0020b	51		 push	 ecx
  0020c	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0020f	83 c2 40	 add	 edx, 64			; 00000040H
  00212	52		 push	 edx
  00213	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00216	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00219	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?out@?$codecvt@DDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PBD1AAPBDPAD3AAPAD@Z
  0021f	3b f4		 cmp	 esi, esp
  00221	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00226	89 85 b0 fe ff
	ff		 mov	 DWORD PTR $T13[ebp], eax
  0022c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00230	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR $T11[ebp]
  00236	e8 00 00 00 00	 call	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
  0023b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0023f	8d 8d 9c fe ff
	ff		 lea	 ecx, DWORD PTR $T12[ebp]
  00245	e8 00 00 00 00	 call	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
  0024a	8b 8d b0 fe ff
	ff		 mov	 ecx, DWORD PTR $T13[ebp]
  00250	89 8d f4 fd ff
	ff		 mov	 DWORD PTR tv184[ebp], ecx
  00256	83 bd f4 fd ff
	ff 00		 cmp	 DWORD PTR tv184[ebp], 0
  0025d	0f 8c 12 02 00
	00		 jl	 $LN22@overflow
  00263	83 bd f4 fd ff
	ff 01		 cmp	 DWORD PTR tv184[ebp], 1
  0026a	7e 12		 jle	 SHORT $LN14@overflow
  0026c	83 bd f4 fd ff
	ff 03		 cmp	 DWORD PTR tv184[ebp], 3
  00273	0f 84 a8 01 00
	00		 je	 $LN21@overflow
  00279	e9 f7 01 00 00	 jmp	 $LN22@overflow
$LN14@overflow:

; 396  : 					&_Ch, &_Ch + 1, _Src,
; 397  : 					&*_Str.begin(), &*_Str.begin() + _Str.size(), _Dest))
; 398  : 				{	// test result of converting one element
; 399  : 				case codecvt_base::partial:
; 400  : 				case codecvt_base::ok:
; 401  : 					{	// converted something, try to put it out
; 402  : 					size_t _Count = _Dest - &*_Str.begin();

  0027e	8d 85 74 fe ff
	ff		 lea	 eax, DWORD PTR $T10[ebp]
  00284	50		 push	 eax
  00285	8d 4d 94	 lea	 ecx, DWORD PTR __Str$16[ebp]
  00288	e8 00 00 00 00	 call	 ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
  0028d	89 85 04 fe ff
	ff		 mov	 DWORD PTR tv255[ebp], eax
  00293	8b 8d 04 fe ff
	ff		 mov	 ecx, DWORD PTR tv255[ebp]
  00299	89 8d 00 fe ff
	ff		 mov	 DWORD PTR tv241[ebp], ecx
  0029f	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  002a3	8b 8d 00 fe ff
	ff		 mov	 ecx, DWORD PTR tv241[ebp]
  002a9	e8 00 00 00 00	 call	 ??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
  002ae	8b 55 b8	 mov	 edx, DWORD PTR __Dest$17[ebp]
  002b1	2b d0		 sub	 edx, eax
  002b3	89 55 88	 mov	 DWORD PTR __Count$15[ebp], edx
  002b6	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  002ba	8d 8d 74 fe ff
	ff		 lea	 ecx, DWORD PTR $T10[ebp]
  002c0	e8 00 00 00 00	 call	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ

; 403  : 					if (0 < _Count && _Count !=

  002c5	83 7d 88 00	 cmp	 DWORD PTR __Count$15[ebp], 0
  002c9	76 70		 jbe	 SHORT $LN26@overflow
  002cb	8b f4		 mov	 esi, esp
  002cd	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  002d0	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  002d3	51		 push	 ecx
  002d4	8b 55 88	 mov	 edx, DWORD PTR __Count$15[ebp]
  002d7	52		 push	 edx
  002d8	6a 01		 push	 1
  002da	8d 85 54 fe ff
	ff		 lea	 eax, DWORD PTR $T8[ebp]
  002e0	50		 push	 eax
  002e1	8d 4d 94	 lea	 ecx, DWORD PTR __Str$16[ebp]
  002e4	e8 00 00 00 00	 call	 ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
  002e9	89 85 04 fe ff
	ff		 mov	 DWORD PTR tv256[ebp], eax
  002ef	8b 8d 04 fe ff
	ff		 mov	 ecx, DWORD PTR tv256[ebp]
  002f5	89 8d 00 fe ff
	ff		 mov	 DWORD PTR tv246[ebp], ecx
  002fb	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  002ff	8b 95 0c fe ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  00305	83 ca 01	 or	 edx, 1
  00308	89 95 0c fe ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
  0030e	8b 8d 00 fe ff
	ff		 mov	 ecx, DWORD PTR tv246[ebp]
  00314	e8 00 00 00 00	 call	 ??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
  00319	50		 push	 eax
  0031a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fwrite
  00320	83 c4 10	 add	 esp, 16			; 00000010H
  00323	3b f4		 cmp	 esi, esp
  00325	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0032a	39 45 88	 cmp	 DWORD PTR __Count$15[ebp], eax
  0032d	74 0c		 je	 SHORT $LN26@overflow
  0032f	c7 85 fc fd ff
	ff 01 00 00 00	 mov	 DWORD PTR tv208[ebp], 1
  00339	eb 0a		 jmp	 SHORT $LN27@overflow
$LN26@overflow:
  0033b	c7 85 fc fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv208[ebp], 0
$LN27@overflow:
  00345	8a 85 fc fd ff
	ff		 mov	 al, BYTE PTR tv208[ebp]
  0034b	88 85 6b fe ff
	ff		 mov	 BYTE PTR $T9[ebp], al
  00351	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00358	8b 8d 0c fe ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  0035e	83 e1 01	 and	 ecx, 1
  00361	74 12		 je	 SHORT $LN36@overflow
  00363	83 a5 0c fe ff
	ff fe		 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  0036a	8d 8d 54 fe ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  00370	e8 00 00 00 00	 call	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
$LN36@overflow:
  00375	0f b6 95 6b fe
	ff ff		 movzx	 edx, BYTE PTR $T9[ebp]
  0037c	85 d2		 test	 edx, edx
  0037e	74 25		 je	 SHORT $LN15@overflow

; 404  : 						fwrite(&*_Str.begin(), 1, _Count, _Myfile))
; 405  : 						return (_Traits::eof());	// write failed

  00380	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00385	89 85 48 fe ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  0038b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00392	8d 4d 94	 lea	 ecx, DWORD PTR __Str$16[ebp]
  00395	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0039a	8b 85 48 fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  003a0	e9 06 01 00 00	 jmp	 $LN1@overflow
$LN15@overflow:

; 406  : 
; 407  : 					_Wrotesome = true;	// write succeeded

  003a5	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  003a8	c6 40 3d 01	 mov	 BYTE PTR [eax+61], 1

; 408  : 					if (_Src != &_Ch)

  003ac	8d 45 d3	 lea	 eax, DWORD PTR __Ch$19[ebp]
  003af	39 45 c4	 cmp	 DWORD PTR __Src$18[ebp], eax
  003b2	74 23		 je	 SHORT $LN16@overflow

; 409  : 						return (_Meta);	// converted whole element

  003b4	8b 45 08	 mov	 eax, DWORD PTR __Meta$[ebp]
  003b7	89 85 3c fe ff
	ff		 mov	 DWORD PTR $T6[ebp], eax
  003bd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  003c4	8d 4d 94	 lea	 ecx, DWORD PTR __Str$16[ebp]
  003c7	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  003cc	8b 85 3c fe ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  003d2	e9 d4 00 00 00	 jmp	 $LN1@overflow
$LN16@overflow:

; 410  : 
; 411  : 					if (0 < _Count)

  003d7	83 7d 88 00	 cmp	 DWORD PTR __Count$15[ebp], 0
  003db	76 02		 jbe	 SHORT $LN17@overflow
  003dd	eb 40		 jmp	 SHORT $LN18@overflow
$LN17@overflow:

; 412  : 						;
; 413  : 					else if (_Str.size() < 4 * _STRING_INC)

  003df	8d 4d 94	 lea	 ecx, DWORD PTR __Str$16[ebp]
  003e2	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  003e7	83 f8 20	 cmp	 eax, 32			; 00000020H
  003ea	73 0e		 jae	 SHORT $LN19@overflow

; 414  : 						_Str.append(_STRING_INC, '\0');	// try with more space

  003ec	6a 00		 push	 0
  003ee	6a 08		 push	 8
  003f0	8d 4d 94	 lea	 ecx, DWORD PTR __Str$16[ebp]
  003f3	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 415  : 					else

  003f8	eb 25		 jmp	 SHORT $LN18@overflow
$LN19@overflow:

; 416  : 						return (_Traits::eof());	// conversion failed

  003fa	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  003ff	89 85 30 fe ff
	ff		 mov	 DWORD PTR $T5[ebp], eax
  00405	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0040c	8d 4d 94	 lea	 ecx, DWORD PTR __Str$16[ebp]
  0040f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00414	8b 85 30 fe ff
	ff		 mov	 eax, DWORD PTR $T5[ebp]
  0041a	e9 8c 00 00 00	 jmp	 $LN1@overflow
$LN18@overflow:

; 417  : 					break;

  0041f	eb 76		 jmp	 SHORT $LN5@overflow
$LN21@overflow:

; 418  : 					}
; 419  : 
; 420  : 				case codecvt_base::noconv:
; 421  : 					return (_Fputc(_Ch, _Myfile) ? _Meta

  00421	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00424	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00427	51		 push	 ecx
  00428	0f b6 55 d3	 movzx	 edx, BYTE PTR __Ch$19[ebp]
  0042c	52		 push	 edx
  0042d	e8 00 00 00 00	 call	 ??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z ; std::_Fputc<char>
  00432	83 c4 08	 add	 esp, 8
  00435	0f b6 c0	 movzx	 eax, al
  00438	85 c0		 test	 eax, eax
  0043a	74 0b		 je	 SHORT $LN28@overflow
  0043c	8b 4d 08	 mov	 ecx, DWORD PTR __Meta$[ebp]
  0043f	89 8d 04 fe ff
	ff		 mov	 DWORD PTR tv230[ebp], ecx
  00445	eb 0b		 jmp	 SHORT $LN29@overflow
$LN28@overflow:
  00447	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  0044c	89 85 04 fe ff
	ff		 mov	 DWORD PTR tv230[ebp], eax
$LN29@overflow:
  00452	8b 95 04 fe ff
	ff		 mov	 edx, DWORD PTR tv230[ebp]
  00458	89 95 24 fe ff
	ff		 mov	 DWORD PTR $T4[ebp], edx
  0045e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00465	8d 4d 94	 lea	 ecx, DWORD PTR __Str$16[ebp]
  00468	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0046d	8b 85 24 fe ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  00473	eb 36		 jmp	 SHORT $LN1@overflow
$LN22@overflow:

; 422  : 						: _Traits::eof());	// no conversion, put as is
; 423  : 
; 424  : 				default:
; 425  : 					return (_Traits::eof());	// conversion failed

  00475	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  0047a	89 85 18 fe ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00480	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00487	8d 4d 94	 lea	 ecx, DWORD PTR __Str$16[ebp]
  0048a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0048f	8b 85 18 fe ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  00495	eb 14		 jmp	 SHORT $LN1@overflow
$LN5@overflow:

; 426  : 				}

  00497	e9 f0 fc ff ff	 jmp	 $LN4@overflow

; 427  : 			}

  0049c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  004a3	8d 4d 94	 lea	 ecx, DWORD PTR __Str$16[ebp]
  004a6	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@overflow:

; 428  : 	}

  004ab	52		 push	 edx
  004ac	8b cd		 mov	 ecx, ebp
  004ae	50		 push	 eax
  004af	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN43@overflow
  004b5	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  004ba	58		 pop	 eax
  004bb	5a		 pop	 edx
  004bc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  004bf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  004c6	59		 pop	 ecx
  004c7	5f		 pop	 edi
  004c8	5e		 pop	 esi
  004c9	5b		 pop	 ebx
  004ca	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  004cd	33 cd		 xor	 ecx, ebp
  004cf	e8 00 00 00 00	 call	 @__security_check_cookie@4
  004d4	81 c4 0c 02 00
	00		 add	 esp, 524		; 0000020cH
  004da	3b ec		 cmp	 ebp, esp
  004dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004e1	8b e5		 mov	 esp, ebp
  004e3	5d		 pop	 ebp
  004e4	c2 04 00	 ret	 4
  004e7	90		 npad	 1
$LN43@overflow:
  004e8	04 00 00 00	 DD	 4
  004ec	00 00 00 00	 DD	 $LN42@overflow
$LN42@overflow:
  004f0	d3 ff ff ff	 DD	 -45			; ffffffd3H
  004f4	01 00 00 00	 DD	 1
  004f8	00 00 00 00	 DD	 $LN37@overflow
  004fc	c4 ff ff ff	 DD	 -60			; ffffffc4H
  00500	04 00 00 00	 DD	 4
  00504	00 00 00 00	 DD	 $LN38@overflow
  00508	b8 ff ff ff	 DD	 -72			; ffffffb8H
  0050c	04 00 00 00	 DD	 4
  00510	00 00 00 00	 DD	 $LN39@overflow
  00514	94 ff ff ff	 DD	 -108			; ffffff94H
  00518	1c 00 00 00	 DD	 28			; 0000001cH
  0051c	00 00 00 00	 DD	 $LN40@overflow
$LN40@overflow:
  00520	5f		 DB	 95			; 0000005fH
  00521	53		 DB	 83			; 00000053H
  00522	74		 DB	 116			; 00000074H
  00523	72		 DB	 114			; 00000072H
  00524	00		 DB	 0
$LN39@overflow:
  00525	5f		 DB	 95			; 0000005fH
  00526	44		 DB	 68			; 00000044H
  00527	65		 DB	 101			; 00000065H
  00528	73		 DB	 115			; 00000073H
  00529	74		 DB	 116			; 00000074H
  0052a	00		 DB	 0
$LN38@overflow:
  0052b	5f		 DB	 95			; 0000005fH
  0052c	53		 DB	 83			; 00000053H
  0052d	72		 DB	 114			; 00000072H
  0052e	63		 DB	 99			; 00000063H
  0052f	00		 DB	 0
$LN37@overflow:
  00530	5f		 DB	 95			; 0000005fH
  00531	43		 DB	 67			; 00000043H
  00532	68		 DB	 104			; 00000068H
  00533	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$0:
  00000	8d 4d 94	 lea	 ecx, DWORD PTR __Str$16[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$1:
  00008	8d 8d 9c fe ff
	ff		 lea	 ecx, DWORD PTR $T12[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$2:
  00013	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR $T11[ebp]
  00019	e9 00 00 00 00	 jmp	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$3:
  0001e	8d 8d 74 fe ff
	ff		 lea	 ecx, DWORD PTR $T10[ebp]
  00024	e9 00 00 00 00	 jmp	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$4:
  00029	8b 85 0c fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  0002f	83 e0 01	 and	 eax, 1
  00032	0f 84 12 00 00
	00		 je	 $LN35@overflow
  00038	83 a5 0c fe ff
	ff fe		 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  0003f	8d 8d 54 fe ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  00045	e9 00 00 00 00	 jmp	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
$LN35@overflow:
  0004a	c3		 ret	 0
__ehhandler$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z:
  0004b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0004f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00052	8b 8a f0 fd ff
	ff		 mov	 ecx, DWORD PTR [edx-528]
  00058	33 c8		 xor	 ecx, eax
  0005a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00062	33 c8		 xor	 ecx, eax
  00064	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00069	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
  0006e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::overflow
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock, COMDAT
; _this$ = ecx

; 363  : 		{	// unlock file instead of stream buffer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 364  : 		if (_Myfile)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 4c 00	 cmp	 DWORD PTR [eax+76], 0
  0002a	74 19		 je	 SHORT $LN1@Unlock

; 365  : 			_CSTD _unlock_file(_Myfile);

  0002c	8b f4		 mov	 esi, esp
  0002e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00034	51		 push	 ecx
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___unlock_file
  0003b	83 c4 04	 add	 esp, 4
  0003e	3b f4		 cmp	 esi, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@Unlock:

; 366  : 		}

  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Lock, COMDAT
; _this$ = ecx

; 357  : 		{	// lock file instead of stream buffer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 358  : 		if (_Myfile)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 4c 00	 cmp	 DWORD PTR [eax+76], 0
  0002a	74 19		 je	 SHORT $LN1@Lock

; 359  : 			_CSTD _lock_file(_Myfile);

  0002c	8b f4		 mov	 esi, esp
  0002e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00034	51		 push	 ecx
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___lock_file
  0003b	83 c4 04	 add	 esp, 4
  0003e	3b f4		 cmp	 esi, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@Lock:

; 360  : 		}

  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Lock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ
_TEXT	SEGMENT
__Ans$ = -20						; size = 4
_this$ = -8						; size = 4
?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::close, COMDAT
; _this$ = ecx

; 341  : 		{	// close the C stream

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 342  : 		_Myt *_Ans = this;

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	89 45 ec	 mov	 DWORD PTR __Ans$[ebp], eax

; 343  : 		if (_Myfile == 0)

  00029	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	83 78 4c 00	 cmp	 DWORD PTR [eax+76], 0
  00030	75 09		 jne	 SHORT $LN2@close

; 344  : 			_Ans = 0;

  00032	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __Ans$[ebp], 0

; 345  : 		else

  00039	eb 3a		 jmp	 SHORT $LN3@close
$LN2@close:

; 346  : 			{	// put any homing sequence and close file
; 347  : 			if (!_Endwrite())

  0003b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
  00043	0f b6 c0	 movzx	 eax, al
  00046	85 c0		 test	 eax, eax
  00048	75 07		 jne	 SHORT $LN4@close

; 348  : 				_Ans = 0;

  0004a	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __Ans$[ebp], 0
$LN4@close:

; 349  : 			if (fclose(_Myfile) != 0)

  00051	8b f4		 mov	 esi, esp
  00053	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00056	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00059	51		 push	 ecx
  0005a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  00060	83 c4 04	 add	 esp, 4
  00063	3b f4		 cmp	 esi, esp
  00065	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006a	85 c0		 test	 eax, eax
  0006c	74 07		 je	 SHORT $LN3@close

; 350  : 				_Ans = 0;

  0006e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __Ans$[ebp], 0
$LN3@close:

; 351  : 			}
; 352  : 		_Init(0, _Closefl);

  00075	6a 02		 push	 2
  00077	6a 00		 push	 0
  00079	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	e8 00 00 00 00	 call	 ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init

; 353  : 		return (_Ans);

  00081	8b 45 ec	 mov	 eax, DWORD PTR __Ans$[ebp]

; 354  : 		}

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0008d	3b ec		 cmp	 ebp, esp
  0008f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00094	8b e5		 mov	 esp, ebp
  00096	5d		 pop	 ebp
  00097	c3		 ret	 0
?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::close
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
_TEXT	SEGMENT
tv88 = -252						; size = 4
tv89 = -248						; size = 4
$T2 = -240						; size = 8
__File$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Filename$ = 8						; size = 4
__Mode$ = 12						; size = 4
__Prot$ = 16						; size = 4
?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::open, COMDAT
; _this$ = ecx

; 265  : 		{	// open a C stream with specified mode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 04 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-252]
  00021	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 266  : 		_Filet *_File;
; 267  : 		if (_Myfile != 0 || (_File = _Fiopen(_Filename, _Mode, _Prot)) == 0)

  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	83 78 4c 00	 cmp	 DWORD PTR [eax+76], 0
  00049	75 27		 jne	 SHORT $LN3@open
  0004b	8b f4		 mov	 esi, esp
  0004d	8b 45 10	 mov	 eax, DWORD PTR __Prot$[ebp]
  00050	50		 push	 eax
  00051	8b 4d 0c	 mov	 ecx, DWORD PTR __Mode$[ebp]
  00054	51		 push	 ecx
  00055	8b 55 08	 mov	 edx, DWORD PTR __Filename$[ebp]
  00058	52		 push	 edx
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Fiopen@std@@YAPAU_iobuf@@PBDHH@Z
  0005f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00062	3b f4		 cmp	 esi, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	89 45 e0	 mov	 DWORD PTR __File$[ebp], eax
  0006c	83 7d e0 00	 cmp	 DWORD PTR __File$[ebp], 0
  00070	75 04		 jne	 SHORT $LN2@open
$LN3@open:

; 268  : 			return (0);	// open failed

  00072	33 c0		 xor	 eax, eax
  00074	eb 6d		 jmp	 SHORT $LN1@open
$LN2@open:

; 269  : 
; 270  : 		_Init(_File, _Openfl);

  00076	6a 01		 push	 1
  00078	8b 45 e0	 mov	 eax, DWORD PTR __File$[ebp]
  0007b	50		 push	 eax
  0007c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init

; 271  : 		_Initcvt(&_USE(_Mysb::getloc(), _Cvt));

  00084	8b f4		 mov	 esi, esp
  00086	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  0008c	50		 push	 eax
  0008d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QBE?AVlocale@2@XZ
  00096	3b f4		 cmp	 esi, esp
  00098	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009d	89 85 08 ff ff
	ff		 mov	 DWORD PTR tv89[ebp], eax
  000a3	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR tv89[ebp]
  000a9	89 8d 04 ff ff
	ff		 mov	 DWORD PTR tv88[ebp], ecx
  000af	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000b6	8b 95 04 ff ff
	ff		 mov	 edx, DWORD PTR tv88[ebp]
  000bc	52		 push	 edx
  000bd	e8 00 00 00 00	 call	 ??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
  000c2	83 c4 04	 add	 esp, 4
  000c5	50		 push	 eax
  000c6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c9	e8 00 00 00 00	 call	 ?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDU_Mbstatet@@@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
  000ce	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000d5	8d 8d 10 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  000db	e8 00 00 00 00	 call	 ??1locale@std@@QAE@XZ	; std::locale::~locale

; 272  : 		return (this);	// open succeeded

  000e0	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
$LN1@open:

; 273  : 		}

  000e3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ed	59		 pop	 ecx
  000ee	5f		 pop	 edi
  000ef	5e		 pop	 esi
  000f0	5b		 pop	 ebx
  000f1	81 c4 fc 00 00
	00		 add	 esp, 252		; 000000fcH
  000f7	3b ec		 cmp	 ebp, esp
  000f9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000fe	8b e5		 mov	 esp, ebp
  00100	5d		 pop	 ebp
  00101	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z$0:
  00000	8d 8d 10 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1locale@std@@QAE@XZ	; std::locale::~locale
__ehhandler$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 00 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-256]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::open
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 151  : 		{	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@

; 152  : 		if (_Myfile != 0)

  0004b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	83 78 4c 00	 cmp	 DWORD PTR [eax+76], 0
  00052	74 08		 je	 SHORT $LN2@basic_file

; 153  : 			_Reset_back();	// revert from _Mychar buffer

  00054	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	e8 00 00 00 00	 call	 ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
$LN2@basic_file:

; 154  : 		if (_Closef)

  0005c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	0f b6 48 48	 movzx	 ecx, BYTE PTR [eax+72]
  00063	85 c9		 test	 ecx, ecx
  00065	74 08		 je	 SHORT $LN1@basic_file

; 155  : 			close();

  00067	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	e8 00 00 00 00	 call	 ?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
$LN1@basic_file:

; 156  : 		}

  0006f	8b f4		 mov	 esi, esp
  00071	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
  0007a	3b f4		 cmp	 esi, esp
  0007c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00081	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00084	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008b	59		 pop	 ecx
  0008c	5f		 pop	 edi
  0008d	5e		 pop	 esi
  0008e	5b		 pop	 ebx
  0008f	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00095	3b ec		 cmp	 ebp, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__File$ = 8						; size = 4
??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 146  : 		{	// construct from pointer to C stream

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 145  : 		: _Mysb()

  00042	8b f4		 mov	 esi, esp
  00044	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 146  : 		{	// construct from pointer to C stream

  0005b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@

; 147  : 		_Init(_File, _Newfl);

  00064	6a 00		 push	 0
  00066	8b 45 08	 mov	 eax, DWORD PTR __File$[ebp]
  00069	50		 push	 eax
  0006a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0006d	e8 00 00 00 00	 call	 ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init

; 148  : 		}

  00072	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00079	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00086	59		 pop	 ecx
  00087	5f		 pop	 edi
  00088	5e		 pop	 esi
  00089	5b		 pop	 ebx
  0008a	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00090	3b ec		 cmp	 ebp, esp
  00092	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z
  0002b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ PROC ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 1083 : 		{	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 48 98	 mov	 ecx, DWORD PTR [eax-104]
  00029	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 44 10 98 00
	00 00 00	 mov	 DWORD PTR [eax+edx-104], OFFSET ??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
  00037	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 48 98	 mov	 ecx, DWORD PTR [eax-104]
  0003d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00040	83 ea 68	 sub	 edx, 104		; 00000068H
  00043	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00046	8b 48 98	 mov	 ecx, DWORD PTR [eax-104]
  00049	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0004c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	89 54 01 94	 mov	 DWORD PTR [ecx+eax-108], edx

; 1084 : 		}

  00053	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	83 e9 64	 sub	 ecx, 100		; 00000064H
  00059	e8 00 00 00 00	 call	 ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
  0005e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	83 e9 60	 sub	 ecx, 96			; 00000060H
  00064	8b f4		 mov	 esi, esp
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ
  0006c	3b f4		 cmp	 esi, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	5f		 pop	 edi
  00074	5e		 pop	 esi
  00075	5b		 pop	 ebx
  00076	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0007c	3b ec		 cmp	 ebp, esp
  0007e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
_TEXT	SEGMENT
$T2 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Str$ = 8						; size = 4
__Mode$ = 12						; size = 4
__Prot$ = 16						; size = 4
_$initVBases$ = 20					; size = 4
??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z PROC ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 965  : 		{	// construct with named file and specified mode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00021	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0
  0004c	83 7d 14 00	 cmp	 DWORD PTR _$initVBases$[ebp], 0
  00050	74 34		 je	 SHORT $LN2@basic_ofst
  00052	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@
  0005b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	83 c1 68	 add	 ecx, 104		; 00000068H
  00061	8b f4		 mov	 esi, esp
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ
  00069	3b f4		 cmp	 esi, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00077	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  0007d	83 c8 01	 or	 eax, 1
  00080	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
$LN2@basic_ofst:

; 964  : 		: _Mybase(&_Filebuffer)

  00086	8b f4		 mov	 esi, esp
  00088	6a 00		 push	 0
  0008a	6a 00		 push	 0
  0008c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0008f	83 c0 04	 add	 eax, 4
  00092	50		 push	 eax
  00093	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
  0009c	3b f4		 cmp	 esi, esp
  0009e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a3	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 965  : 		{	// construct with named file and specified mode

  000aa	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 08		 mov	 ecx, DWORD PTR [eax]
  000af	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000b2	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000b5	c7 04 10 00 00
	00 00		 mov	 DWORD PTR [eax+edx], OFFSET ??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
  000bc	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000bf	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c4	83 ea 68	 sub	 edx, 104		; 00000068H
  000c7	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 08		 mov	 ecx, DWORD PTR [eax]
  000cc	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000cf	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d2	89 54 01 fc	 mov	 DWORD PTR [ecx+eax-4], edx
  000d6	6a 00		 push	 0
  000d8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	83 c1 04	 add	 ecx, 4
  000de	e8 00 00 00 00	 call	 ??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
  000e3	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 966  : 		if (_Filebuffer.open(_Str.c_str(), _Mode | ios_base::out, _Prot) == 0)

  000e7	8b 45 10	 mov	 eax, DWORD PTR __Prot$[ebp]
  000ea	50		 push	 eax
  000eb	8b 4d 0c	 mov	 ecx, DWORD PTR __Mode$[ebp]
  000ee	83 c9 02	 or	 ecx, 2
  000f1	51		 push	 ecx
  000f2	8b 4d 08	 mov	 ecx, DWORD PTR __Str$[ebp]
  000f5	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  000fa	50		 push	 eax
  000fb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000fe	83 c1 04	 add	 ecx, 4
  00101	e8 00 00 00 00	 call	 ?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
  00106	85 c0		 test	 eax, eax
  00108	75 20		 jne	 SHORT $LN1@basic_ofst

; 967  : 			_Myios::setstate(ios_base::failbit);

  0010a	8b f4		 mov	 esi, esp
  0010c	6a 00		 push	 0
  0010e	6a 02		 push	 2
  00110	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00113	8b 08		 mov	 ecx, DWORD PTR [eax]
  00115	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00118	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  0011b	8b ca		 mov	 ecx, edx
  0011d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
  00123	3b f4		 cmp	 esi, esp
  00125	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@basic_ofst:

; 968  : 		}

  0012a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00131	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00134	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00137	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0013e	59		 pop	 ecx
  0013f	5f		 pop	 edi
  00140	5e		 pop	 esi
  00141	5b		 pop	 ebx
  00142	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  00148	3b ec		 cmp	 ebp, esp
  0014a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014f	8b e5		 mov	 esp, ebp
  00151	5d		 pop	 ebp
  00152	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z$0:
  00000	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00006	83 e0 01	 and	 eax, 1
  00009	0f 84 1c 00 00
	00		 je	 $LN6@basic_ofst
  0000f	83 a5 20 ff ff
	ff fe		 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00016	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 68	 add	 ecx, 104		; 00000068H
  0001c	8b f4		 mov	 esi, esp
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
  00024	3b f4		 cmp	 esi, esp
  00026	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$LN6@basic_ofst:
  0002b	c3		 ret	 0
__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z$1:
  0002c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	83 c1 08	 add	 ecx, 8
  00032	8b f4		 mov	 esi, esp
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ
  0003a	3b f4		 cmp	 esi, esp
  0003c	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z$2:
  00041	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	83 c1 04	 add	 ecx, 4
  00047	e9 00 00 00 00	 jmp	 ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
__ehhandler$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z:
  0004c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00050	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00053	8b 8a 18 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-232]
  00059	33 c8		 xor	 ecx, eax
  0005b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00060	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
  00065	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z ENDP ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
_TEXT	SEGMENT
$T2 = -252						; size = 4
__Ans$ = -48						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2355 : 	{	// return string + NTCS

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec f4 00 00
	00		 sub	 esp, 244		; 000000f4H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8d bd 00 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-256]
  00020	b9 3d 00 00 00	 mov	 ecx, 61			; 0000003dH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00031	33 c5		 xor	 eax, ebp
  00033	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00036	50		 push	 eax
  00037	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00040	c7 85 04 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0

; 2356 : 	basic_string<_Elem, _Traits, _Alloc> _Ans;

  0004a	8d 4d d0	 lea	 ecx, DWORD PTR __Ans$[ebp]
  0004d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00052	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2357 : 	_Ans.reserve(_Left.size() + _Traits::length(_Right));

  00059	8b 4d 0c	 mov	 ecx, DWORD PTR __Left$[ebp]
  0005c	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  00061	8b f0		 mov	 esi, eax
  00063	8b 45 10	 mov	 eax, DWORD PTR __Right$[ebp]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ?length@?$char_traits@D@std@@SAIPBD@Z ; std::char_traits<char>::length
  0006c	83 c4 04	 add	 esp, 4
  0006f	03 f0		 add	 esi, eax
  00071	56		 push	 esi
  00072	8d 4d d0	 lea	 ecx, DWORD PTR __Ans$[ebp]
  00075	e8 00 00 00 00	 call	 ?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve

; 2358 : 	_Ans += _Left;

  0007a	8b 45 0c	 mov	 eax, DWORD PTR __Left$[ebp]
  0007d	50		 push	 eax
  0007e	8d 4d d0	 lea	 ecx, DWORD PTR __Ans$[ebp]
  00081	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 2359 : 	_Ans += _Right;

  00086	8b 45 10	 mov	 eax, DWORD PTR __Right$[ebp]
  00089	50		 push	 eax
  0008a	8d 4d d0	 lea	 ecx, DWORD PTR __Ans$[ebp]
  0008d	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 2360 : 	return (_Ans);

  00092	8d 45 d0	 lea	 eax, DWORD PTR __Ans$[ebp]
  00095	50		 push	 eax
  00096	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00099	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0009e	8b 8d 04 ff ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  000a4	83 c9 01	 or	 ecx, 1
  000a7	89 8d 04 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  000ad	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b4	8d 4d d0	 lea	 ecx, DWORD PTR __Ans$[ebp]
  000b7	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000bc	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2361 : 	}

  000bf	52		 push	 edx
  000c0	8b cd		 mov	 ecx, ebp
  000c2	50		 push	 eax
  000c3	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@operator
  000c9	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000ce	58		 pop	 eax
  000cf	5a		 pop	 edx
  000d0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000da	59		 pop	 ecx
  000db	5f		 pop	 edi
  000dc	5e		 pop	 esi
  000dd	5b		 pop	 ebx
  000de	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e1	33 cd		 xor	 ecx, ebp
  000e3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e8	81 c4 00 01 00
	00		 add	 esp, 256		; 00000100H
  000ee	3b ec		 cmp	 ebp, esp
  000f0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f5	8b e5		 mov	 esp, ebp
  000f7	5d		 pop	 ebp
  000f8	c3		 ret	 0
  000f9	0f 1f 00	 npad	 3
$LN9@operator:
  000fc	01 00 00 00	 DD	 1
  00100	00 00 00 00	 DD	 $LN8@operator
$LN8@operator:
  00104	d0 ff ff ff	 DD	 -48			; ffffffd0H
  00108	1c 00 00 00	 DD	 28			; 0000001cH
  0010c	00 00 00 00	 DD	 $LN6@operator
$LN6@operator:
  00110	5f		 DB	 95			; 0000005fH
  00111	41		 DB	 65			; 00000041H
  00112	6e		 DB	 110			; 0000006eH
  00113	73		 DB	 115			; 00000073H
  00114	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z$0:
  00000	8d 4d d0	 lea	 ecx, DWORD PTR __Ans$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a fc fe ff
	ff		 mov	 ecx, DWORD PTR [edx-260]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
  0002b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\contactlist.h
;	COMDAT ?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
tv232 = -1208						; size = 4
tv230 = -1208						; size = 4
tv228 = -1204						; size = 4
tv222 = -1204						; size = 4
tv219 = -1204						; size = 4
tv133 = -1204						; size = 4
tv92 = -1204						; size = 4
tv233 = -1200						; size = 4
tv198 = -1200						; size = 4
tv171 = -1200						; size = 4
tv142 = -1200						; size = 4
tv66 = -1200						; size = 4
$T2 = -1192						; size = 28
$T3 = -1153						; size = 1
$T4 = -1144						; size = 28
$T5 = -1105						; size = 1
$T6 = -1096						; size = 12
$T7 = -1073						; size = 1
$T8 = -1064						; size = 28
$T9 = -1028						; size = 28
_it$10 = -608						; size = 12
_people$ = -588						; size = 96
_companies$ = -484					; size = 96
_peopleFile$ = -380					; size = 176
_companiesFile$ = -196					; size = 176
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_contactList$ = 8					; size = 4
_contactFileName$ = 12					; size = 4
?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; updateContactLists, COMDAT

; 16   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec ac 04 00
	00		 sub	 esp, 1196		; 000004acH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8d bd 48 fb ff
	ff		 lea	 edi, DWORD PTR [ebp-1208]
  00020	b9 2b 01 00 00	 mov	 ecx, 299		; 0000012bH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00031	33 c5		 xor	 eax, ebp
  00033	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00036	50		 push	 eax
  00037	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 17   : 	// Sort the list
; 18   : 	Chris::sort(contactList);

  00040	8b 45 08	 mov	 eax, DWORD PTR _contactList$[ebp]
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z ; Chris::sort
  00049	83 c4 04	 add	 esp, 4

; 19   : 
; 20   : 	// Output files for companies and people
; 21   : 	ofstream companiesFile(contactFileName + "Companies.txt", ios_base::trunc);

  0004c	6a 01		 push	 1
  0004e	6a 40		 push	 64			; 00000040H
  00050	6a 10		 push	 16			; 00000010H
  00052	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MIMFNFBN@Companies?4txt?$AA@
  00057	8b 45 0c	 mov	 eax, DWORD PTR _contactFileName$[ebp]
  0005a	50		 push	 eax
  0005b	8d 8d fc fb ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
  00061	51		 push	 ecx
  00062	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00067	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006a	89 85 50 fb ff
	ff		 mov	 DWORD PTR tv233[ebp], eax
  00070	8b 95 50 fb ff
	ff		 mov	 edx, DWORD PTR tv233[ebp]
  00076	89 95 4c fb ff
	ff		 mov	 DWORD PTR tv219[ebp], edx
  0007c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00083	8b 85 4c fb ff
	ff		 mov	 eax, DWORD PTR tv219[ebp]
  00089	50		 push	 eax
  0008a	8d 8d 3c ff ff
	ff		 lea	 ecx, DWORD PTR _companiesFile$[ebp]
  00090	e8 00 00 00 00	 call	 ??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
  00095	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00099	8d 8d fc fb ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
  0009f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 22   : 	ofstream peopleFile(contactFileName + "People.txt", ios_base::trunc);

  000a4	6a 01		 push	 1
  000a6	6a 40		 push	 64			; 00000040H
  000a8	6a 10		 push	 16			; 00000010H
  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_0L@GLLABICK@People?4txt?$AA@
  000af	8b 45 0c	 mov	 eax, DWORD PTR _contactFileName$[ebp]
  000b2	50		 push	 eax
  000b3	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  000b9	51		 push	 ecx
  000ba	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  000bf	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c2	89 85 50 fb ff
	ff		 mov	 DWORD PTR tv66[ebp], eax
  000c8	8b 95 50 fb ff
	ff		 mov	 edx, DWORD PTR tv66[ebp]
  000ce	89 95 4c fb ff
	ff		 mov	 DWORD PTR tv222[ebp], edx
  000d4	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000d8	8b 85 4c fb ff
	ff		 mov	 eax, DWORD PTR tv222[ebp]
  000de	50		 push	 eax
  000df	8d 8d 84 fe ff
	ff		 lea	 ecx, DWORD PTR _peopleFile$[ebp]
  000e5	e8 00 00 00 00	 call	 ??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
  000ea	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  000ee	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  000f4	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 23   : 
; 24   : 	// Boost archive text files for both types of contacts
; 25   : 	boost::archive::text_oarchive companies(companiesFile);

  000f9	6a 00		 push	 0
  000fb	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _companiesFile$[ebp]
  00101	50		 push	 eax
  00102	8d 8d 1c fe ff
	ff		 lea	 ecx, DWORD PTR _companies$[ebp]
  00108	e8 00 00 00 00	 call	 ??0text_oarchive@archive@boost@@QAE@AAV?$basic_ostream@DU?$char_traits@D@std@@@std@@I@Z ; boost::archive::text_oarchive::text_oarchive
  0010d	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6

; 26   : 	boost::archive::text_oarchive people(peopleFile);

  00111	6a 00		 push	 0
  00113	8d 85 84 fe ff
	ff		 lea	 eax, DWORD PTR _peopleFile$[ebp]
  00119	50		 push	 eax
  0011a	8d 8d b4 fd ff
	ff		 lea	 ecx, DWORD PTR _people$[ebp]
  00120	e8 00 00 00 00	 call	 ??0text_oarchive@archive@boost@@QAE@AAV?$basic_ostream@DU?$char_traits@D@std@@@std@@I@Z ; boost::archive::text_oarchive::text_oarchive
  00125	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7

; 27   : 
; 28   : 	// Save the list to a file
; 29   : 	for (vector<shared_ptr<CContact>>::iterator it = contactList.begin(); it != contactList.end(); ++it)

  00129	8d 85 a0 fd ff
	ff		 lea	 eax, DWORD PTR _it$10[ebp]
  0012f	50		 push	 eax
  00130	8b 4d 08	 mov	 ecx, DWORD PTR _contactList$[ebp]
  00133	e8 00 00 00 00	 call	 ?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::begin
  00138	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  0013c	eb 0b		 jmp	 SHORT $LN4@updateCont
$LN2@updateCont:
  0013e	8d 8d a0 fd ff
	ff		 lea	 ecx, DWORD PTR _it$10[ebp]
  00144	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++
$LN4@updateCont:
  00149	8d 85 b8 fb ff
	ff		 lea	 eax, DWORD PTR $T6[ebp]
  0014f	50		 push	 eax
  00150	8b 4d 08	 mov	 ecx, DWORD PTR _contactList$[ebp]
  00153	e8 00 00 00 00	 call	 ?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
  00158	89 85 50 fb ff
	ff		 mov	 DWORD PTR tv142[ebp], eax
  0015e	8b 8d 50 fb ff
	ff		 mov	 ecx, DWORD PTR tv142[ebp]
  00164	89 8d 4c fb ff
	ff		 mov	 DWORD PTR tv228[ebp], ecx
  0016a	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  0016e	8b 95 4c fb ff
	ff		 mov	 edx, DWORD PTR tv228[ebp]
  00174	52		 push	 edx
  00175	8d 8d a0 fd ff
	ff		 lea	 ecx, DWORD PTR _it$10[ebp]
  0017b	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator!=
  00180	88 85 cf fb ff
	ff		 mov	 BYTE PTR $T7[ebp], al
  00186	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  0018a	8d 8d b8 fb ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  00190	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
  00195	0f b6 85 cf fb
	ff ff		 movzx	 eax, BYTE PTR $T7[ebp]
  0019c	85 c0		 test	 eax, eax
  0019e	0f 84 50 01 00
	00		 je	 $LN3@updateCont

; 30   : 	{
; 31   : 		// If it's a person, save it to the person file
; 32   : 		if ((*it)->classType() == "CPerson")

  001a4	8d 8d a0 fd ff
	ff		 lea	 ecx, DWORD PTR _it$10[ebp]
  001aa	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
  001af	8b c8		 mov	 ecx, eax
  001b1	e8 00 00 00 00	 call	 ??C?$shared_ptr@VCContact@@@std@@QBEPAVCContact@@XZ ; std::shared_ptr<CContact>::operator->
  001b6	89 85 50 fb ff
	ff		 mov	 DWORD PTR tv171[ebp], eax
  001bc	68 00 00 00 00	 push	 OFFSET ??_C@_07EEOOECP@CPerson?$AA@
  001c1	8b f4		 mov	 esi, esp
  001c3	8d 85 88 fb ff
	ff		 lea	 eax, DWORD PTR $T4[ebp]
  001c9	50		 push	 eax
  001ca	8b 8d 50 fb ff
	ff		 mov	 ecx, DWORD PTR tv171[ebp]
  001d0	8b 11		 mov	 edx, DWORD PTR [ecx]
  001d2	8b 8d 50 fb ff
	ff		 mov	 ecx, DWORD PTR tv171[ebp]
  001d8	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001db	ff d0		 call	 eax
  001dd	3b f4		 cmp	 esi, esp
  001df	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001e4	89 85 4c fb ff
	ff		 mov	 DWORD PTR tv133[ebp], eax
  001ea	8b 8d 4c fb ff
	ff		 mov	 ecx, DWORD PTR tv133[ebp]
  001f0	89 8d 48 fb ff
	ff		 mov	 DWORD PTR tv230[ebp], ecx
  001f6	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  001fa	8b 95 48 fb ff
	ff		 mov	 edx, DWORD PTR tv230[ebp]
  00200	52		 push	 edx
  00201	e8 00 00 00 00	 call	 ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
  00206	83 c4 08	 add	 esp, 8
  00209	88 85 af fb ff
	ff		 mov	 BYTE PTR $T5[ebp], al
  0020f	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  00213	8d 8d 88 fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00219	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0021e	0f b6 85 af fb
	ff ff		 movzx	 eax, BYTE PTR $T5[ebp]
  00225	85 c0		 test	 eax, eax
  00227	74 23		 je	 SHORT $LN5@updateCont

; 33   : 		{
; 34   : 			people << *(*it);

  00229	8d 8d a0 fd ff
	ff		 lea	 ecx, DWORD PTR _it$10[ebp]
  0022f	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
  00234	8b c8		 mov	 ecx, eax
  00236	e8 00 00 00 00	 call	 ??D?$shared_ptr@VCContact@@@std@@QBEAAVCContact@@XZ ; std::shared_ptr<CContact>::operator*
  0023b	50		 push	 eax
  0023c	8d 8d cc fd ff
	ff		 lea	 ecx, DWORD PTR _people$[ebp+24]
  00242	e8 00 00 00 00	 call	 ??$?6VCContact@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVCContact@@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<CContact>
  00247	e9 a3 00 00 00	 jmp	 $LN6@updateCont
$LN5@updateCont:

; 35   : 		}
; 36   : 		// If it's a company, save it to the company file
; 37   : 		else if ((*it)->classType() == "CCompany")

  0024c	8d 8d a0 fd ff
	ff		 lea	 ecx, DWORD PTR _it$10[ebp]
  00252	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
  00257	8b c8		 mov	 ecx, eax
  00259	e8 00 00 00 00	 call	 ??C?$shared_ptr@VCContact@@@std@@QBEPAVCContact@@XZ ; std::shared_ptr<CContact>::operator->
  0025e	89 85 50 fb ff
	ff		 mov	 DWORD PTR tv198[ebp], eax
  00264	68 00 00 00 00	 push	 OFFSET ??_C@_08FGJDGFCJ@CCompany?$AA@
  00269	8b f4		 mov	 esi, esp
  0026b	8d 85 58 fb ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  00271	50		 push	 eax
  00272	8b 8d 50 fb ff
	ff		 mov	 ecx, DWORD PTR tv198[ebp]
  00278	8b 11		 mov	 edx, DWORD PTR [ecx]
  0027a	8b 8d 50 fb ff
	ff		 mov	 ecx, DWORD PTR tv198[ebp]
  00280	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00283	ff d0		 call	 eax
  00285	3b f4		 cmp	 esi, esp
  00287	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0028c	89 85 4c fb ff
	ff		 mov	 DWORD PTR tv92[ebp], eax
  00292	8b 8d 4c fb ff
	ff		 mov	 ecx, DWORD PTR tv92[ebp]
  00298	89 8d 48 fb ff
	ff		 mov	 DWORD PTR tv232[ebp], ecx
  0029e	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  002a2	8b 95 48 fb ff
	ff		 mov	 edx, DWORD PTR tv232[ebp]
  002a8	52		 push	 edx
  002a9	e8 00 00 00 00	 call	 ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
  002ae	83 c4 08	 add	 esp, 8
  002b1	88 85 7f fb ff
	ff		 mov	 BYTE PTR $T3[ebp], al
  002b7	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  002bb	8d 8d 58 fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  002c1	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002c6	0f b6 85 7f fb
	ff ff		 movzx	 eax, BYTE PTR $T3[ebp]
  002cd	85 c0		 test	 eax, eax
  002cf	74 1e		 je	 SHORT $LN6@updateCont

; 38   : 		{
; 39   : 			companies << *(*it);

  002d1	8d 8d a0 fd ff
	ff		 lea	 ecx, DWORD PTR _it$10[ebp]
  002d7	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
  002dc	8b c8		 mov	 ecx, eax
  002de	e8 00 00 00 00	 call	 ??D?$shared_ptr@VCContact@@@std@@QBEAAVCContact@@XZ ; std::shared_ptr<CContact>::operator*
  002e3	50		 push	 eax
  002e4	8d 8d 34 fe ff
	ff		 lea	 ecx, DWORD PTR _companies$[ebp+24]
  002ea	e8 00 00 00 00	 call	 ??$?6VCContact@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVCContact@@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<CContact>
$LN6@updateCont:

; 40   : 		}

  002ef	e9 4a fe ff ff	 jmp	 $LN2@updateCont
$LN3@updateCont:

; 41   : 	}

  002f4	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  002f8	8d 8d a0 fd ff
	ff		 lea	 ecx, DWORD PTR _it$10[ebp]
  002fe	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ

; 42   : }

  00303	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  00307	8d 8d b4 fd ff
	ff		 lea	 ecx, DWORD PTR _people$[ebp]
  0030d	e8 00 00 00 00	 call	 ??1text_oarchive@archive@boost@@UAE@XZ ; boost::archive::text_oarchive::~text_oarchive
  00312	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00316	8d 8d 1c fe ff
	ff		 lea	 ecx, DWORD PTR _companies$[ebp]
  0031c	e8 00 00 00 00	 call	 ??1text_oarchive@archive@boost@@UAE@XZ ; boost::archive::text_oarchive::~text_oarchive
  00321	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00325	8d 8d 84 fe ff
	ff		 lea	 ecx, DWORD PTR _peopleFile$[ebp]
  0032b	e8 00 00 00 00	 call	 ??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
  00330	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00337	8d 8d 3c ff ff
	ff		 lea	 ecx, DWORD PTR _companiesFile$[ebp]
  0033d	e8 00 00 00 00	 call	 ??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
  00342	52		 push	 edx
  00343	8b cd		 mov	 ecx, ebp
  00345	50		 push	 eax
  00346	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN26@updateCont
  0034c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00351	58		 pop	 eax
  00352	5a		 pop	 edx
  00353	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00356	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0035d	59		 pop	 ecx
  0035e	5f		 pop	 edi
  0035f	5e		 pop	 esi
  00360	5b		 pop	 ebx
  00361	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00364	33 cd		 xor	 ecx, ebp
  00366	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0036b	81 c4 b8 04 00
	00		 add	 esp, 1208		; 000004b8H
  00371	3b ec		 cmp	 ebp, esp
  00373	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00378	8b e5		 mov	 esp, ebp
  0037a	5d		 pop	 ebp
  0037b	c3		 ret	 0
$LN26@updateCont:
  0037c	05 00 00 00	 DD	 5
  00380	00 00 00 00	 DD	 $LN25@updateCont
$LN25@updateCont:
  00384	3c ff ff ff	 DD	 -196			; ffffff3cH
  00388	b0 00 00 00	 DD	 176			; 000000b0H
  0038c	00 00 00 00	 DD	 $LN19@updateCont
  00390	84 fe ff ff	 DD	 -380			; fffffe84H
  00394	b0 00 00 00	 DD	 176			; 000000b0H
  00398	00 00 00 00	 DD	 $LN20@updateCont
  0039c	1c fe ff ff	 DD	 -484			; fffffe1cH
  003a0	60 00 00 00	 DD	 96			; 00000060H
  003a4	00 00 00 00	 DD	 $LN21@updateCont
  003a8	b4 fd ff ff	 DD	 -588			; fffffdb4H
  003ac	60 00 00 00	 DD	 96			; 00000060H
  003b0	00 00 00 00	 DD	 $LN22@updateCont
  003b4	a0 fd ff ff	 DD	 -608			; fffffda0H
  003b8	0c 00 00 00	 DD	 12			; 0000000cH
  003bc	00 00 00 00	 DD	 $LN23@updateCont
$LN23@updateCont:
  003c0	69		 DB	 105			; 00000069H
  003c1	74		 DB	 116			; 00000074H
  003c2	00		 DB	 0
$LN22@updateCont:
  003c3	70		 DB	 112			; 00000070H
  003c4	65		 DB	 101			; 00000065H
  003c5	6f		 DB	 111			; 0000006fH
  003c6	70		 DB	 112			; 00000070H
  003c7	6c		 DB	 108			; 0000006cH
  003c8	65		 DB	 101			; 00000065H
  003c9	00		 DB	 0
$LN21@updateCont:
  003ca	63		 DB	 99			; 00000063H
  003cb	6f		 DB	 111			; 0000006fH
  003cc	6d		 DB	 109			; 0000006dH
  003cd	70		 DB	 112			; 00000070H
  003ce	61		 DB	 97			; 00000061H
  003cf	6e		 DB	 110			; 0000006eH
  003d0	69		 DB	 105			; 00000069H
  003d1	65		 DB	 101			; 00000065H
  003d2	73		 DB	 115			; 00000073H
  003d3	00		 DB	 0
$LN20@updateCont:
  003d4	70		 DB	 112			; 00000070H
  003d5	65		 DB	 101			; 00000065H
  003d6	6f		 DB	 111			; 0000006fH
  003d7	70		 DB	 112			; 00000070H
  003d8	6c		 DB	 108			; 0000006cH
  003d9	65		 DB	 101			; 00000065H
  003da	46		 DB	 70			; 00000046H
  003db	69		 DB	 105			; 00000069H
  003dc	6c		 DB	 108			; 0000006cH
  003dd	65		 DB	 101			; 00000065H
  003de	00		 DB	 0
$LN19@updateCont:
  003df	63		 DB	 99			; 00000063H
  003e0	6f		 DB	 111			; 0000006fH
  003e1	6d		 DB	 109			; 0000006dH
  003e2	70		 DB	 112			; 00000070H
  003e3	61		 DB	 97			; 00000061H
  003e4	6e		 DB	 110			; 0000006eH
  003e5	69		 DB	 105			; 00000069H
  003e6	65		 DB	 101			; 00000065H
  003e7	73		 DB	 115			; 00000073H
  003e8	46		 DB	 70			; 00000046H
  003e9	69		 DB	 105			; 00000069H
  003ea	6c		 DB	 108			; 0000006cH
  003eb	65		 DB	 101			; 00000065H
  003ec	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$0:
  00000	8d 8d fc fb ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$1:
  0000b	8d 8d 3c ff ff
	ff		 lea	 ecx, DWORD PTR _companiesFile$[ebp]
  00011	e9 00 00 00 00	 jmp	 ??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$2:
  00016	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$3:
  00021	8d 8d 84 fe ff
	ff		 lea	 ecx, DWORD PTR _peopleFile$[ebp]
  00027	e9 00 00 00 00	 jmp	 ??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$4:
  0002c	8d 8d 1c fe ff
	ff		 lea	 ecx, DWORD PTR _companies$[ebp]
  00032	e9 00 00 00 00	 jmp	 ??1text_oarchive@archive@boost@@UAE@XZ ; boost::archive::text_oarchive::~text_oarchive
__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$5:
  00037	8d 8d b4 fd ff
	ff		 lea	 ecx, DWORD PTR _people$[ebp]
  0003d	e9 00 00 00 00	 jmp	 ??1text_oarchive@archive@boost@@UAE@XZ ; boost::archive::text_oarchive::~text_oarchive
__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$6:
  00042	8d 8d a0 fd ff
	ff		 lea	 ecx, DWORD PTR _it$10[ebp]
  00048	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$7:
  0004d	8d 8d b8 fb ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  00053	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$8:
  00058	8d 8d 88 fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  0005e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$9:
  00063	8d 8d 58 fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00069	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z:
  0006e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00072	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00075	8b 8a 44 fb ff
	ff		 mov	 ecx, DWORD PTR [edx-1212]
  0007b	33 c8		 xor	 ecx, eax
  0007d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00082	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00085	33 c8		 xor	 ecx, eax
  00087	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
  00091	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?updateContactLists@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; updateContactLists
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$shared_ptr@VCContact@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$shared_ptr@VCContact@@@std@@QAEPAXI@Z PROC	; std::shared_ptr<CContact>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$shared_ptr@VCContact@@@std@@QAE@XZ ; std::shared_ptr<CContact>::~shared_ptr<CContact>
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0e		 je	 SHORT $LN2@scalar
  00033	6a 08		 push	 8
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003e	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
??_G?$shared_ptr@VCContact@@@std@@QAEPAXI@Z ENDP	; std::shared_ptr<CContact>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??C?$shared_ptr@VCContact@@@std@@QBEPAVCContact@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??C?$shared_ptr@VCContact@@@std@@QBEPAVCContact@@XZ PROC ; std::shared_ptr<CContact>::operator->, COMDAT
; _this$ = ecx

; 634  : 		{	// return pointer to resource

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 635  : 		return (this->_Get());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get@?$_Ptr_base@VCContact@@@std@@QBEPAVCContact@@XZ ; std::_Ptr_base<CContact>::_Get

; 636  : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??C?$shared_ptr@VCContact@@@std@@QBEPAVCContact@@XZ ENDP ; std::shared_ptr<CContact>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??D?$shared_ptr@VCContact@@@std@@QBEAAVCContact@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$shared_ptr@VCContact@@@std@@QBEAAVCContact@@XZ PROC ; std::shared_ptr<CContact>::operator*, COMDAT
; _this$ = ecx

; 629  : 		{	// return reference to resource

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 630  : 		return (*this->_Get());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get@?$_Ptr_base@VCContact@@@std@@QBEPAVCContact@@XZ ; std::_Ptr_base<CContact>::_Get

; 631  : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??D?$shared_ptr@VCContact@@@std@@QBEAAVCContact@@XZ ENDP ; std::shared_ptr<CContact>::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?swap@?$shared_ptr@VCContact@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other$ = 8						; size = 4
?swap@?$shared_ptr@VCContact@@@std@@QAEXAAV12@@Z PROC	; std::shared_ptr<CContact>::swap, COMDAT
; _this$ = ecx

; 619  : 		{	// swap pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 620  : 		this->_Swap(_Other);

  00023	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?_Swap@?$_Ptr_base@VCContact@@@std@@QAEXAAV12@@Z ; std::_Ptr_base<CContact>::_Swap

; 621  : 		}

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?swap@?$shared_ptr@VCContact@@@std@@QAEXAAV12@@Z ENDP	; std::shared_ptr<CContact>::swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??4?$shared_ptr@VCContact@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
$T1 = -216						; size = 8
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??4?$shared_ptr@VCContact@@@std@@QAEAAV01@ABV01@@Z PROC	; std::shared_ptr<CContact>::operator=, COMDAT
; _this$ = ecx

; 571  : 		{	// assign shared ownership of resource owned by _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 572  : 		shared_ptr(_Right).swap(*this);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0002a	51		 push	 ecx
  0002b	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00031	e8 00 00 00 00	 call	 ??0?$shared_ptr@VCContact@@@std@@QAE@ABV01@@Z ; std::shared_ptr<CContact>::shared_ptr<CContact>
  00036	8b c8		 mov	 ecx, eax
  00038	e8 00 00 00 00	 call	 ?swap@?$shared_ptr@VCContact@@@std@@QAEXAAV12@@Z ; std::shared_ptr<CContact>::swap
  0003d	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00043	e8 00 00 00 00	 call	 ??1?$shared_ptr@VCContact@@@std@@QAE@XZ ; std::shared_ptr<CContact>::~shared_ptr<CContact>

; 573  : 		return (*this);

  00048	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 574  : 		}

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 04 00	 ret	 4
??4?$shared_ptr@VCContact@@@std@@QAEAAV01@ABV01@@Z ENDP	; std::shared_ptr<CContact>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??1?$shared_ptr@VCContact@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$shared_ptr@VCContact@@@std@@QAE@XZ PROC		; std::shared_ptr<CContact>::~shared_ptr<CContact>, COMDAT
; _this$ = ecx

; 566  : 		{	// release resource

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$shared_ptr@VCContact@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 567  : 		this->_Decref();

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?_Decref@?$_Ptr_base@VCContact@@@std@@QAEXXZ ; std::_Ptr_base<CContact>::_Decref

; 568  : 		}

  0004a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00054	59		 pop	 ecx
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$shared_ptr@VCContact@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$shared_ptr@VCContact@@@std@@QAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$shared_ptr@VCContact@@@std@@QAE@XZ ENDP		; std::shared_ptr<CContact>::~shared_ptr<CContact>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??4?$shared_ptr@VCContact@@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
$T1 = -216						; size = 8
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??4?$shared_ptr@VCContact@@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::shared_ptr<CContact>::operator=, COMDAT
; _this$ = ecx

; 553  : 		{	// take resource from _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 554  : 		shared_ptr(_STD move(_Right)).swap(*this);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$move@AAV?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::move<std::shared_ptr<CContact> &>
  00030	83 c4 04	 add	 esp, 4
  00033	50		 push	 eax
  00034	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  0003a	e8 00 00 00 00	 call	 ??0?$shared_ptr@VCContact@@@std@@QAE@$$QAV01@@Z ; std::shared_ptr<CContact>::shared_ptr<CContact>
  0003f	8b c8		 mov	 ecx, eax
  00041	e8 00 00 00 00	 call	 ?swap@?$shared_ptr@VCContact@@@std@@QAEXAAV12@@Z ; std::shared_ptr<CContact>::swap
  00046	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  0004c	e8 00 00 00 00	 call	 ??1?$shared_ptr@VCContact@@@std@@QAE@XZ ; std::shared_ptr<CContact>::~shared_ptr<CContact>

; 555  : 		return (*this);

  00051	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 556  : 		}

  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx
  00057	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  0005d	3b ec		 cmp	 ebp, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c2 04 00	 ret	 4
??4?$shared_ptr@VCContact@@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::shared_ptr<CContact>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$shared_ptr@VCContact@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$shared_ptr@VCContact@@@std@@QAE@$$QAV01@@Z PROC	; std::shared_ptr<CContact>::shared_ptr<CContact>, COMDAT
; _this$ = ecx

; 522  : 		{	// construct shared_ptr object that takes resource from _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$shared_ptr@VCContact@@@std@@QAE@$$QAV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 521  : 		: _Mybase(_STD move(_Right))

  00042	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ??$move@AAV?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::move<std::shared_ptr<CContact> &>
  0004b	83 c4 04	 add	 esp, 4
  0004e	50		 push	 eax
  0004f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ??0?$_Ptr_base@VCContact@@@std@@QAE@$$QAV01@@Z ; std::_Ptr_base<CContact>::_Ptr_base<CContact>

; 523  : 		}

  00057	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00064	59		 pop	 ecx
  00065	5f		 pop	 edi
  00066	5e		 pop	 esi
  00067	5b		 pop	 ebx
  00068	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0006e	3b ec		 cmp	 ebp, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$shared_ptr@VCContact@@@std@@QAE@$$QAV01@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$shared_ptr@VCContact@@@std@@QAE@$$QAV01@@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$shared_ptr@VCContact@@@std@@QAE@$$QAV01@@Z ENDP	; std::shared_ptr<CContact>::shared_ptr<CContact>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$shared_ptr@VCContact@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Other$ = 8						; size = 4
??0?$shared_ptr@VCContact@@@std@@QAE@ABV01@@Z PROC	; std::shared_ptr<CContact>::shared_ptr<CContact>, COMDAT
; _this$ = ecx

; 492  : 	shared_ptr(const _Myt& _Other) _NOEXCEPT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$shared_ptr@VCContact@@@std@@QAE@ABV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 493  : 		{	// construct shared_ptr object that owns same resource as _Other

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0?$_Ptr_base@VCContact@@@std@@QAE@XZ ; std::_Ptr_base<CContact>::_Ptr_base<CContact>

; 494  : 		this->_Reset(_Other);

  0004a	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0004d	50		 push	 eax
  0004e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??$_Reset@VCContact@@@?$_Ptr_base@VCContact@@@std@@QAEXABV01@@Z ; std::_Ptr_base<CContact>::_Reset<CContact>

; 495  : 		}

  00056	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00059	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00063	59		 pop	 ecx
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	5b		 pop	 ebx
  00067	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0006d	3b ec		 cmp	 ebp, esp
  0006f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$shared_ptr@VCContact@@@std@@QAE@ABV01@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$shared_ptr@VCContact@@@std@@QAE@ABV01@@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$shared_ptr@VCContact@@@std@@QAE@ABV01@@Z ENDP	; std::shared_ptr<CContact>::shared_ptr<CContact>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Reset0@?$_Ptr_base@VCContact@@@std@@QAEXPAVCContact@@PAV_Ref_count_base@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other_ptr$ = 8					; size = 4
__Other_rep$ = 12					; size = 4
?_Reset0@?$_Ptr_base@VCContact@@@std@@QAEXPAVCContact@@PAV_Ref_count_base@2@@Z PROC ; std::_Ptr_base<CContact>::_Reset0, COMDAT
; _this$ = ecx

; 393  : 		{	// release resource and take new resource

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 394  : 		if (_Rep != 0)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002a	74 0b		 je	 SHORT $LN2@Reset0

; 395  : 			_Rep->_Decref();

  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00032	e8 00 00 00 00	 call	 ?_Decref@_Ref_count_base@std@@QAEXXZ ; std::_Ref_count_base::_Decref
$LN2@Reset0:

; 396  : 		_Rep = _Other_rep;

  00037	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 0c	 mov	 ecx, DWORD PTR __Other_rep$[ebp]
  0003d	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 397  : 		_Ptr = _Other_ptr;

  00040	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00043	8b 4d 08	 mov	 ecx, DWORD PTR __Other_ptr$[ebp]
  00046	89 08		 mov	 DWORD PTR [eax], ecx

; 398  : 		}

  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 08 00	 ret	 8
?_Reset0@?$_Ptr_base@VCContact@@@std@@QAEXPAVCContact@@PAV_Ref_count_base@2@@Z ENDP ; std::_Ptr_base<CContact>::_Reset0
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Reset@?$_Ptr_base@VCContact@@@std@@QAEXPAVCContact@@PAV_Ref_count_base@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other_ptr$ = 8					; size = 4
__Other_rep$ = 12					; size = 4
?_Reset@?$_Ptr_base@VCContact@@@std@@QAEXPAVCContact@@PAV_Ref_count_base@2@@Z PROC ; std::_Ptr_base<CContact>::_Reset, COMDAT
; _this$ = ecx

; 376  : 		{	// release resource and take _Other_ptr through _Other_rep

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 377  : 		if (_Other_rep)

  00023	83 7d 0c 00	 cmp	 DWORD PTR __Other_rep$[ebp], 0
  00027	74 08		 je	 SHORT $LN2@Reset

; 378  : 			_Other_rep->_Incref();

  00029	8b 4d 0c	 mov	 ecx, DWORD PTR __Other_rep$[ebp]
  0002c	e8 00 00 00 00	 call	 ?_Incref@_Ref_count_base@std@@QAEXXZ ; std::_Ref_count_base::_Incref
$LN2@Reset:

; 379  : 		_Reset0(_Other_ptr, _Other_rep);

  00031	8b 45 0c	 mov	 eax, DWORD PTR __Other_rep$[ebp]
  00034	50		 push	 eax
  00035	8b 4d 08	 mov	 ecx, DWORD PTR __Other_ptr$[ebp]
  00038	51		 push	 ecx
  00039	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	e8 00 00 00 00	 call	 ?_Reset0@?$_Ptr_base@VCContact@@@std@@QAEXPAVCContact@@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<CContact>::_Reset0

; 380  : 		}

  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5b		 pop	 ebx
  00044	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 08 00	 ret	 8
?_Reset@?$_Ptr_base@VCContact@@@std@@QAEXPAVCContact@@PAV_Ref_count_base@2@@Z ENDP ; std::_Ptr_base<CContact>::_Reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Decref@?$_Ptr_base@VCContact@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Decref@?$_Ptr_base@VCContact@@@std@@QAEXXZ PROC	; std::_Ptr_base<CContact>::_Decref, COMDAT
; _this$ = ecx

; 336  : 		{	// decrement reference count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 337  : 		if (_Rep != 0)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002a	74 0b		 je	 SHORT $LN1@Decref

; 338  : 			_Rep->_Decref();

  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00032	e8 00 00 00 00	 call	 ?_Decref@_Ref_count_base@std@@QAEXXZ ; std::_Ref_count_base::_Decref
$LN1@Decref:

; 339  : 		}

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?_Decref@?$_Ptr_base@VCContact@@@std@@QAEXXZ ENDP	; std::_Ptr_base<CContact>::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Get@?$_Ptr_base@VCContact@@@std@@QBEPAVCContact@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get@?$_Ptr_base@VCContact@@@std@@QBEPAVCContact@@XZ PROC ; std::_Ptr_base<CContact>::_Get, COMDAT
; _this$ = ecx

; 326  : 		{	// return pointer to resource

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 327  : 		return (_Ptr);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 00		 mov	 eax, DWORD PTR [eax]

; 328  : 		}

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?_Get@?$_Ptr_base@VCContact@@@std@@QBEPAVCContact@@XZ ENDP ; std::_Ptr_base<CContact>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Swap@?$_Ptr_base@VCContact@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Swap@?$_Ptr_base@VCContact@@@std@@QAEXAAV12@@Z PROC	; std::_Ptr_base<CContact>::_Swap, COMDAT
; _this$ = ecx

; 309  : 		{	// swap pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 310  : 		_STD swap(_Rep, _Right._Rep);

  00023	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00026	83 c0 04	 add	 eax, 4
  00029	50		 push	 eax
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	83 c1 04	 add	 ecx, 4
  00030	51		 push	 ecx
  00031	e8 00 00 00 00	 call	 ??$swap@PAV_Ref_count_base@std@@X@std@@YAXAAPAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *,void>
  00036	83 c4 08	 add	 esp, 8

; 311  : 		_STD swap(_Ptr, _Right._Ptr);

  00039	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ??$swap@PAVCContact@@X@std@@YAXAAPAVCContact@@0@Z ; std::swap<CContact *,void>
  00046	83 c4 08	 add	 esp, 8

; 312  : 		}

  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi
  0004b	5b		 pop	 ebx
  0004c	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
?_Swap@?$_Ptr_base@VCContact@@@std@@QAEXAAV12@@Z ENDP	; std::_Ptr_base<CContact>::_Swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$_Ptr_base@VCContact@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??0?$_Ptr_base@VCContact@@@std@@QAE@$$QAV01@@Z PROC	; std::_Ptr_base<CContact>::_Ptr_base<CContact>, COMDAT
; _this$ = ecx

; 279  : 		{	// construct _Ptr_base object that takes resource from _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 278  : 		: _Ptr(_Right._Ptr), _Rep(_Right._Rep)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00029	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002b	89 10		 mov	 DWORD PTR [eax], edx
  0002d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00033	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00036	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 280  : 		_Right._Ptr = 0;

  00039	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0003c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 281  : 		_Right._Rep = 0;

  00042	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00045	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 282  : 		}

  0004c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??0?$_Ptr_base@VCContact@@@std@@QAE@$$QAV01@@Z ENDP	; std::_Ptr_base<CContact>::_Ptr_base<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$_Ptr_base@VCContact@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Ptr_base@VCContact@@@std@@QAE@XZ PROC		; std::_Ptr_base<CContact>::_Ptr_base<CContact>, COMDAT
; _this$ = ecx

; 274  : 		{	// construct

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 273  : 		: _Ptr(0), _Rep(0)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 275  : 		}

  00036	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
??0?$_Ptr_base@VCContact@@@std@@QAE@XZ ENDP		; std::_Ptr_base<CContact>::_Ptr_base<CContact>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??4?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
$T2 = -244						; size = 4
__Tmp$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator-, COMDAT
; _this$ = ecx

; 383  : 		{	// return this - integer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 08 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-248]
  00021	b9 3b 00 00 00	 mov	 ecx, 59			; 0000003bH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0

; 384  : 		_Myiter _Tmp = *this;

  0004c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	50		 push	 eax
  00050	8d 4d d8	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00053	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
  00058	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 385  : 		return (_Tmp -= _Off);

  0005f	8b 45 0c	 mov	 eax, DWORD PTR __Off$[ebp]
  00062	50		 push	 eax
  00063	8d 4d d8	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00066	e8 00 00 00 00	 call	 ??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator-=
  0006b	50		 push	 eax
  0006c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0006f	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
  00074	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  0007a	83 c9 01	 or	 ecx, 1
  0007d	89 8d 0c ff ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  00083	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0008a	8d 4d d8	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  0008d	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
  00092	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 386  : 		}

  00095	52		 push	 edx
  00096	8b cd		 mov	 ecx, ebp
  00098	50		 push	 eax
  00099	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@operator
  0009f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000a4	58		 pop	 eax
  000a5	5a		 pop	 edx
  000a6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b0	59		 pop	 ecx
  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	81 c4 f8 00 00
	00		 add	 esp, 248		; 000000f8H
  000ba	3b ec		 cmp	 ebp, esp
  000bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c2 08 00	 ret	 8
  000c7	90		 npad	 1
$LN9@operator:
  000c8	01 00 00 00	 DD	 1
  000cc	00 00 00 00	 DD	 $LN8@operator
$LN8@operator:
  000d0	d8 ff ff ff	 DD	 -40			; ffffffd8H
  000d4	0c 00 00 00	 DD	 12			; 0000000cH
  000d8	00 00 00 00	 DD	 $LN6@operator
$LN6@operator:
  000dc	5f		 DB	 95			; 0000005fH
  000dd	54		 DB	 84			; 00000054H
  000de	6d		 DB	 109			; 0000006dH
  000df	70		 DB	 112			; 00000070H
  000e0	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 04 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-252]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator-
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator-=, COMDAT
; _this$ = ecx

; 378  : 		{	// decrement by integer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 379  : 		return (*this += -_Off);

  00023	8b 45 08	 mov	 eax, DWORD PTR __Off$[ebp]
  00026	f7 d8		 neg	 eax
  00028	50		 push	 eax
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+=

; 380  : 		}

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator-=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
$T2 = -244						; size = 4
__Tmp$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+, COMDAT
; _this$ = ecx

; 372  : 		{	// return this + integer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 08 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-248]
  00021	b9 3b 00 00 00	 mov	 ecx, 59			; 0000003bH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0

; 373  : 		_Myiter _Tmp = *this;

  0004c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	50		 push	 eax
  00050	8d 4d d8	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00053	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
  00058	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 374  : 		return (_Tmp += _Off);

  0005f	8b 45 0c	 mov	 eax, DWORD PTR __Off$[ebp]
  00062	50		 push	 eax
  00063	8d 4d d8	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00066	e8 00 00 00 00	 call	 ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+=
  0006b	50		 push	 eax
  0006c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0006f	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
  00074	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  0007a	83 c9 01	 or	 ecx, 1
  0007d	89 8d 0c ff ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  00083	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0008a	8d 4d d8	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  0008d	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
  00092	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 375  : 		}

  00095	52		 push	 edx
  00096	8b cd		 mov	 ecx, ebp
  00098	50		 push	 eax
  00099	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@operator
  0009f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000a4	58		 pop	 eax
  000a5	5a		 pop	 edx
  000a6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b0	59		 pop	 ecx
  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	81 c4 f8 00 00
	00		 add	 esp, 248		; 000000f8H
  000ba	3b ec		 cmp	 ebp, esp
  000bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c2 08 00	 ret	 8
  000c7	90		 npad	 1
$LN9@operator:
  000c8	01 00 00 00	 DD	 1
  000cc	00 00 00 00	 DD	 $LN8@operator
$LN8@operator:
  000d0	d8 ff ff ff	 DD	 -40			; ffffffd8H
  000d4	0c 00 00 00	 DD	 12			; 0000000cH
  000d8	00 00 00 00	 DD	 $LN6@operator
$LN6@operator:
  000dc	5f		 DB	 95			; 0000005fH
  000dd	54		 DB	 84			; 00000054H
  000de	6d		 DB	 109			; 0000006dH
  000df	70		 DB	 112			; 00000070H
  000e0	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 04 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-252]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+=, COMDAT
; _this$ = ecx

; 366  : 		{	// increment by integer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 367  : 		*(_Mybase *)this += _Off;

  00023	8b 45 08	 mov	 eax, DWORD PTR __Off$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+=

; 368  : 		return (*this);

  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 369  : 		}

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++, COMDAT
; _this$ = ecx

; 340  : 		{	// preincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 341  : 		++*(_Mybase *)this;

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++

; 342  : 		return (*this);

  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 343  : 		}

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*, COMDAT
; _this$ = ecx

; 330  : 		{	// return designated object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 331  : 		return ((reference)**(_Mybase *)this);

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEABV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*

; 332  : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >, COMDAT
; _this$ = ecx

; 313  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 312  : 		: _Mybase(_Parg, _Pvector)

  00023	8b 45 0c	 mov	 eax, DWORD PTR __Pvector$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >

; 314  : 		}

  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003f	3b ec		 cmp	 ebp, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??4?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z
  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00032	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00035	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00038	89 50 08	 mov	 DWORD PTR [eax+8], edx
  0003b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z
  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00032	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00035	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00038	89 50 08	 mov	 DWORD PTR [eax+8], edx
  0003b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00032	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00035	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00038	89 50 08	 mov	 DWORD PTR [eax+8], edx
  0003b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Compat, COMDAT
; _this$ = ecx

; 245  : 		{	// test for compatible iterator pair

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 246  : 		if (this->_Getcont() != _Right._Getcont())

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002b	8b f0		 mov	 esi, eax
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00035	3b f0		 cmp	 esi, eax
  00037	0f 84 86 00 00
	00		 je	 $LN1@Compat

; 247  : 			{
; 248  : 			_DEBUG_ERROR("vector iterators incompatible");

  0003d	8b f4		 mov	 esi, esp
  0003f	68 f8 00 00 00	 push	 248			; 000000f8H
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
  0004e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00054	83 c4 0c	 add	 esp, 12			; 0000000cH
  00057	3b f4		 cmp	 esi, esp
  00059	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 249  : 			_SCL_SECURE_INVALID_ARGUMENT;

  0005e	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
  00063	85 c0		 test	 eax, eax
  00065	74 04		 je	 SHORT $LN4@Compat
  00067	33 c9		 xor	 ecx, ecx
  00069	75 30		 jne	 SHORT $LN5@Compat
$LN4@Compat:
  0006b	8b f4		 mov	 esi, esp
  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00077	6a 00		 push	 0
  00079	68 f9 00 00 00	 push	 249			; 000000f9H
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00083	6a 02		 push	 2
  00085	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0008b	83 c4 18	 add	 esp, 24			; 00000018H
  0008e	3b f4		 cmp	 esi, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00095	83 f8 01	 cmp	 eax, 1
  00098	75 01		 jne	 SHORT $LN5@Compat
  0009a	cc		 int	 3
$LN5@Compat:
  0009b	8b f4		 mov	 esi, esp
  0009d	6a 00		 push	 0
  0009f	68 f9 00 00 00	 push	 249			; 000000f9H
  000a4	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000a9	68 00 00 00 00	 push	 OFFSET ??_C@_1BAE@OFDFOOPB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000ae	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
  000b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000b9	83 c4 14	 add	 esp, 20			; 00000014H
  000bc	3b f4		 cmp	 esi, esp
  000be	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@Compat:

; 250  : 			}
; 251  : 		}

  000c3	5f		 pop	 edi
  000c4	5e		 pop	 esi
  000c5	5b		 pop	 ebx
  000c6	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000cc	3b ec		 cmp	 ebp, esp
  000ce	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d3	8b e5		 mov	 esp, ebp
  000d5	5d		 pop	 ebp
  000d6	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator!=, COMDAT
; _this$ = ecx

; 218  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 219  : 		return (!(*this == _Right));

  00023	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator==
  0002f	0f b6 c8	 movzx	 ecx, al
  00032	85 c9		 test	 ecx, ecx
  00034	75 0c		 jne	 SHORT $LN3@operator
  00036	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv69[ebp], 1
  00040	eb 0a		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00042	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0004c	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv69[ebp]

; 220  : 		}

  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5b		 pop	 ebx
  00055	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  0005b	3b ec		 cmp	 ebp, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator==, COMDAT
; _this$ = ecx

; 212  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 213  : 		_Compat(_Right);

  00023	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Compat

; 214  : 		return (_Ptr == _Right._Ptr);

  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00032	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00035	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00038	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003b	75 0c		 jne	 SHORT $LN3@operator
  0003d	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv69[ebp], 1
  00047	eb 0a		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00049	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  00053	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv69[ebp]

; 215  : 		}

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  00062	3b ec		 cmp	 ebp, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Mycont$1 = -20					; size = 4
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+=, COMDAT
; _this$ = ecx

; 155  : 		{	// increment by integer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 156  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 157  : 		if (_Off != 0)

  00023	83 7d 08 00	 cmp	 DWORD PTR __Off$[ebp], 0
  00027	0f 84 c3 00 00
	00		 je	 $LN2@operator

; 158  : 			{
; 159  : 			const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());

  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00035	89 45 ec	 mov	 DWORD PTR __Mycont$1[ebp], eax

; 160  : 			if (_Mycont == 0
; 161  : 				|| _Ptr + _Off < _Mycont->_Myfirst
; 162  : 				|| _Mycont->_Mylast < _Ptr + _Off)

  00038	83 7d ec 00	 cmp	 DWORD PTR __Mycont$1[ebp], 0
  0003c	74 2c		 je	 SHORT $LN4@operator
  0003e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00044	8b 55 08	 mov	 edx, DWORD PTR __Off$[ebp]
  00047	8d 04 d1	 lea	 eax, DWORD PTR [ecx+edx*8]
  0004a	8b 4d ec	 mov	 ecx, DWORD PTR __Mycont$1[ebp]
  0004d	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00050	72 18		 jb	 SHORT $LN4@operator
  00052	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00055	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00058	8b 55 08	 mov	 edx, DWORD PTR __Off$[ebp]
  0005b	8d 04 d1	 lea	 eax, DWORD PTR [ecx+edx*8]
  0005e	8b 4d ec	 mov	 ecx, DWORD PTR __Mycont$1[ebp]
  00061	39 41 08	 cmp	 DWORD PTR [ecx+8], eax
  00064	0f 83 86 00 00
	00		 jae	 $LN2@operator
$LN4@operator:

; 163  : 				{
; 164  : 				_DEBUG_ERROR("vector iterator + offset out of range");

  0006a	8b f4		 mov	 esi, esp
  0006c	68 a4 00 00 00	 push	 164			; 000000a4H
  00071	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00081	83 c4 0c	 add	 esp, 12			; 0000000cH
  00084	3b f4		 cmp	 esi, esp
  00086	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 165  : 				_SCL_SECURE_OUT_OF_RANGE;

  0008b	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00090	85 c0		 test	 eax, eax
  00092	74 04		 je	 SHORT $LN6@operator
  00094	33 c9		 xor	 ecx, ecx
  00096	75 30		 jne	 SHORT $LN7@operator
$LN6@operator:
  00098	8b f4		 mov	 esi, esp
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  000a4	6a 00		 push	 0
  000a6	68 a5 00 00 00	 push	 165			; 000000a5H
  000ab	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000b0	6a 02		 push	 2
  000b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  000b8	83 c4 18	 add	 esp, 24			; 00000018H
  000bb	3b f4		 cmp	 esi, esp
  000bd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c2	83 f8 01	 cmp	 eax, 1
  000c5	75 01		 jne	 SHORT $LN7@operator
  000c7	cc		 int	 3
$LN7@operator:
  000c8	8b f4		 mov	 esi, esp
  000ca	6a 00		 push	 0
  000cc	68 a5 00 00 00	 push	 165			; 000000a5H
  000d1	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000d6	68 00 00 00 00	 push	 OFFSET ??_C@_1BAM@HBINONGC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000db	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000e6	83 c4 14	 add	 esp, 20			; 00000014H
  000e9	3b f4		 cmp	 esi, esp
  000eb	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:

; 166  : 				}
; 167  : 			}
; 168  : 
; 169  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 170  : 		if (_Off != 0)
; 171  : 			{
; 172  : 			const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());
; 173  : 			_SCL_SECURE_VALIDATE(_Mycont != 0);
; 174  : 			_SCL_SECURE_VALIDATE_RANGE(_Mycont->_Myfirst <= _Ptr + _Off
; 175  : 				&& _Ptr + _Off <= _Mycont->_Mylast);
; 176  : 			}
; 177  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 178  : 
; 179  : 		_Ptr += _Off;

  000f0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f3	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000f6	8b 55 08	 mov	 edx, DWORD PTR __Off$[ebp]
  000f9	8d 04 d1	 lea	 eax, DWORD PTR [ecx+edx*8]
  000fc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 180  : 		return (*this);

  00102	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 181  : 		}

  00105	5f		 pop	 edi
  00106	5e		 pop	 esi
  00107	5b		 pop	 ebx
  00108	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0010e	3b ec		 cmp	 ebp, esp
  00110	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 04 00	 ret	 4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Mycont$ = -20						; size = 4
_this$ = -8						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++, COMDAT
; _this$ = ecx

; 95   : 		{	// preincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 96   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 97   : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002b	89 45 ec	 mov	 DWORD PTR __Mycont$[ebp], eax

; 98   : 		if (_Mycont == 0
; 99   : 			|| _Ptr == nullptr_t{}
; 100  : 			|| _Mycont->_Mylast <= _Ptr)

  0002e	83 7d ec 00	 cmp	 DWORD PTR __Mycont$[ebp], 0
  00032	74 17		 je	 SHORT $LN3@operator
  00034	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00037	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0003b	74 0e		 je	 SHORT $LN3@operator
  0003d	8b 45 ec	 mov	 eax, DWORD PTR __Mycont$[ebp]
  00040	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00046	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00049	77 7d		 ja	 SHORT $LN2@operator
$LN3@operator:

; 101  : 			{	// report error
; 102  : 			_DEBUG_ERROR("vector iterator not incrementable");

  0004b	8b f4		 mov	 esi, esp
  0004d	6a 66		 push	 102			; 00000066H
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00054	68 00 00 00 00	 push	 OFFSET ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0005f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00062	3b f4		 cmp	 esi, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 103  : 			_SCL_SECURE_OUT_OF_RANGE;

  00069	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0006e	85 c0		 test	 eax, eax
  00070	74 04		 je	 SHORT $LN5@operator
  00072	33 c9		 xor	 ecx, ecx
  00074	75 2d		 jne	 SHORT $LN6@operator
$LN5@operator:
  00076	8b f4		 mov	 esi, esp
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  0007d	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00082	6a 00		 push	 0
  00084	6a 67		 push	 103			; 00000067H
  00086	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008b	6a 02		 push	 2
  0008d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00093	83 c4 18	 add	 esp, 24			; 00000018H
  00096	3b f4		 cmp	 esi, esp
  00098	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009d	83 f8 01	 cmp	 eax, 1
  000a0	75 01		 jne	 SHORT $LN6@operator
  000a2	cc		 int	 3
$LN6@operator:
  000a3	8b f4		 mov	 esi, esp
  000a5	6a 00		 push	 0
  000a7	6a 67		 push	 103			; 00000067H
  000a9	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000ae	68 00 00 00 00	 push	 OFFSET ??_C@_1BAM@EPPOFCB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000b3	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000be	83 c4 14	 add	 esp, 20			; 00000014H
  000c1	3b f4		 cmp	 esi, esp
  000c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:

; 104  : 			}
; 105  : 
; 106  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 107  : 		_SCL_SECURE_VALIDATE(_Ptr != _Tptr());
; 108  : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());
; 109  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 110  : 		_SCL_SECURE_VALIDATE_RANGE(_Ptr < _Mycont->_Mylast);
; 111  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 112  : 
; 113  : 		++_Ptr;

  000c8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000cb	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000ce	83 c1 08	 add	 ecx, 8
  000d1	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000d4	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 114  : 		return (*this);

  000d7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 115  : 		}

  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	5b		 pop	 ebx
  000dd	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000e3	3b ec		 cmp	 ebp, esp
  000e5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ea	8b e5		 mov	 esp, ebp
  000ec	5d		 pop	 ebp
  000ed	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEABV?$shared_ptr@VCContact@@@1@XZ
_TEXT	SEGMENT
__Mycont$ = -20						; size = 4
_this$ = -8						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEABV?$shared_ptr@VCContact@@@1@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*, COMDAT
; _this$ = ecx

; 65   : 		{	// return designated object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 66   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 67   : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002b	89 45 ec	 mov	 DWORD PTR __Mycont$[ebp], eax

; 68   : 		if (_Mycont == 0
; 69   : 			|| _Ptr == _Tptr()
; 70   : 			|| _Ptr < _Mycont->_Myfirst
; 71   : 			|| _Mycont->_Mylast <= _Ptr)

  0002e	83 7d ec 00	 cmp	 DWORD PTR __Mycont$[ebp], 0
  00032	74 25		 je	 SHORT $LN3@operator
  00034	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00037	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0003b	74 1c		 je	 SHORT $LN3@operator
  0003d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d ec	 mov	 ecx, DWORD PTR __Mycont$[ebp]
  00043	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00046	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00049	72 0e		 jb	 SHORT $LN3@operator
  0004b	8b 45 ec	 mov	 eax, DWORD PTR __Mycont$[ebp]
  0004e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00054	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00057	77 7d		 ja	 SHORT $LN2@operator
$LN3@operator:

; 72   : 			{	// report error
; 73   : 			_DEBUG_ERROR("vector iterator not dereferencable");

  00059	8b f4		 mov	 esi, esp
  0005b	6a 49		 push	 73			; 00000049H
  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
  00067	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0006d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00070	3b f4		 cmp	 esi, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 74   : 			_SCL_SECURE_OUT_OF_RANGE;

  00077	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0007c	85 c0		 test	 eax, eax
  0007e	74 04		 je	 SHORT $LN5@operator
  00080	33 c9		 xor	 ecx, ecx
  00082	75 2d		 jne	 SHORT $LN6@operator
$LN5@operator:
  00084	8b f4		 mov	 esi, esp
  00086	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00090	6a 00		 push	 0
  00092	6a 4a		 push	 74			; 0000004aH
  00094	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00099	6a 02		 push	 2
  0009b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  000a1	83 c4 18	 add	 esp, 24			; 00000018H
  000a4	3b f4		 cmp	 esi, esp
  000a6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ab	83 f8 01	 cmp	 eax, 1
  000ae	75 01		 jne	 SHORT $LN6@operator
  000b0	cc		 int	 3
$LN6@operator:
  000b1	8b f4		 mov	 esi, esp
  000b3	6a 00		 push	 0
  000b5	6a 4a		 push	 74			; 0000004aH
  000b7	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_1BAK@LJFLLKPP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000c1	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000cc	83 c4 14	 add	 esp, 20			; 00000014H
  000cf	3b f4		 cmp	 esi, esp
  000d1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:

; 75   : 			}
; 76   : 
; 77   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 78   : 		_SCL_SECURE_VALIDATE(_Ptr != _Tptr());
; 79   : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());
; 80   : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 81   : 		_SCL_SECURE_VALIDATE_RANGE(_Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast);
; 82   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 83   : 
; 84   : 		_Analysis_assume_(_Ptr != _Tptr());
; 85   : 
; 86   : 		return (*_Ptr);

  000d6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000d9	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 87   : 		}

  000dc	5f		 pop	 edi
  000dd	5e		 pop	 esi
  000de	5b		 pop	 ebx
  000df	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000e5	3b ec		 cmp	 ebp, esp
  000e7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ec	8b e5		 mov	 esp, ebp
  000ee	5d		 pop	 ebp
  000ef	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEABV?$shared_ptr@VCContact@@@1@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >, COMDAT
; _this$ = ecx

; 47   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 46   : 		: _Ptr(_Parg)

  00051	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00054	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00057	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 48   : 		this->_Adopt(_Pvector);

  0005a	8b 45 0c	 mov	 eax, DWORD PTR __Pvector$[ebp]
  0005d	50		 push	 eax
  0005e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 49   : 		}

  00066	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00070	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007a	59		 pop	 ecx
  0007b	5f		 pop	 edi
  0007c	5e		 pop	 esi
  0007d	5b		 pop	 ebx
  0007e	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00084	3b ec		 cmp	 ebp, esp
  00086	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008b	8b e5		 mov	 esp, ebp
  0008d	5d		 pop	 ebp
  0008e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=
  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??4?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@ABU01@@Z ; std::_Iterator_base12::_Iterator_base12
  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@ABU01@@Z ; std::_Iterator_base12::_Iterator_base12
  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::~_Iterator_base12
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::_Iterator_base12
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$shared_ptr@VCContact@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::shared_ptr<CContact>,int,std::shared_ptr<CContact> const *,std::shared_ptr<CContact> const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z
_TEXT	SEGMENT
__Pnext$ = -44						; size = 4
__Lock$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Orphan_range, COMDAT
; _this$ = ecx

; 1775 : 		{	// orphan iterators within specified (inclusive) range

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00021	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1776 : 		_Lockit _Lock(_LOCK_DEBUG);

  00042	8b f4		 mov	 esi, esp
  00044	6a 03		 push	 3
  00046	8d 4d e0	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1777 : 		const_iterator **_Pnext = (const_iterator **)this->_Getpfirst();

  0005d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getpfirst
  00065	89 45 d4	 mov	 DWORD PTR __Pnext$[ebp], eax

; 1778 : 		if (_Pnext != 0)

  00068	83 7d d4 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  0006c	74 4e		 je	 SHORT $LN4@Orphan_ran
$LN2@Orphan_ran:

; 1779 : 			{	// test an iterator
; 1780 : 			while (*_Pnext != 0)

  0006e	8b 45 d4	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00071	83 38 00	 cmp	 DWORD PTR [eax], 0
  00074	74 46		 je	 SHORT $LN4@Orphan_ran

; 1781 : 				if ((*_Pnext)->_Ptr < _First || _Last < (*_Pnext)->_Ptr)

  00076	8b 45 d4	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00079	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007b	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0007e	3b 55 08	 cmp	 edx, DWORD PTR __First$[ebp]
  00081	72 0d		 jb	 SHORT $LN7@Orphan_ran
  00083	8b 45 d4	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00086	8b 08		 mov	 ecx, DWORD PTR [eax]
  00088	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  0008b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0008e	73 0f		 jae	 SHORT $LN5@Orphan_ran
$LN7@Orphan_ran:

; 1782 : 					_Pnext = (const_iterator **)(*_Pnext)->_Getpnext();

  00090	8b 45 d4	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00093	8b 08		 mov	 ecx, DWORD PTR [eax]
  00095	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  0009a	89 45 d4	 mov	 DWORD PTR __Pnext$[ebp], eax

; 1783 : 				else

  0009d	eb 1b		 jmp	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:

; 1784 : 					{	// orphan the iterator
; 1785 : 					(*_Pnext)->_Clrcont();

  0009f	8b 45 d4	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000a2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a4	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont

; 1786 : 					*_Pnext = *(const_iterator **)(*_Pnext)->_Getpnext();

  000a9	8b 45 d4	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000ac	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ae	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000b3	8b 4d d4	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000b6	8b 10		 mov	 edx, DWORD PTR [eax]
  000b8	89 11		 mov	 DWORD PTR [ecx], edx
$LN6@Orphan_ran:

; 1787 : 					}

  000ba	eb b2		 jmp	 SHORT $LN2@Orphan_ran
$LN4@Orphan_ran:

; 1788 : 			}
; 1789 : 		}

  000bc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c3	8b f4		 mov	 esi, esp
  000c5	8d 4d e0	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000ce	3b f4		 cmp	 esi, esp
  000d0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d5	52		 push	 edx
  000d6	8b cd		 mov	 ecx, ebp
  000d8	50		 push	 eax
  000d9	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ran
  000df	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000e4	58		 pop	 eax
  000e5	5a		 pop	 edx
  000e6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f0	59		 pop	 ecx
  000f1	5f		 pop	 edi
  000f2	5e		 pop	 esi
  000f3	5b		 pop	 ebx
  000f4	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  000fa	3b ec		 cmp	 ebp, esp
  000fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c2 08 00	 ret	 8
  00107	90		 npad	 1
$LN13@Orphan_ran:
  00108	01 00 00 00	 DD	 1
  0010c	00 00 00 00	 DD	 $LN12@Orphan_ran
$LN12@Orphan_ran:
  00110	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00114	04 00 00 00	 DD	 4
  00118	00 00 00 00	 DD	 $LN10@Orphan_ran
$LN10@Orphan_ran:
  0011c	5f		 DB	 95			; 0000005fH
  0011d	4c		 DB	 76			; 0000004cH
  0011e	6f		 DB	 111			; 0000006fH
  0011f	63		 DB	 99			; 00000063H
  00120	6b		 DB	 107			; 0000006bH
  00121	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e0	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a 0c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-244]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z
  0002b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Orphan_range
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Xlen@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xlen@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXXZ PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Xlen, COMDAT
; _this$ = ecx

; 1764 : 		{	// report a length_error

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1765 : 		_Xlength_error("vector<T> too long");

  00023	8b f4		 mov	 esi, esp
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xlen:

; 1766 : 		}

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?_Xlen@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXXZ ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Tidy@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXXZ PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Tidy, COMDAT
; _this$ = ecx

; 1636 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1637 : 		if (this->_Myfirst() != pointer())

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
  0002b	83 38 00	 cmp	 DWORD PTR [eax], 0
  0002e	0f 84 84 00 00
	00		 je	 $LN1@Tidy

; 1638 : 			{	// something to free, destroy and deallocate it
; 1639 : 			this->_Orphan_all();

  00034	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Orphan_all

; 1640 : 			_Destroy(this->_Myfirst(), this->_Mylast());

  0003c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  00044	8b 00		 mov	 eax, DWORD PTR [eax]
  00046	50		 push	 eax
  00047	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
  0004f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00051	51		 push	 ecx
  00052	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXPAV?$shared_ptr@VCContact@@@2@0@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Destroy

; 1641 : 			this->_Getal().deallocate(this->_Myfirst(),

  0005a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
  00062	8b f0		 mov	 esi, eax
  00064	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
  0006c	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0006e	2b 08		 sub	 ecx, DWORD PTR [eax]
  00070	c1 f9 03	 sar	 ecx, 3
  00073	51		 push	 ecx
  00074	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
  0007c	8b 10		 mov	 edx, DWORD PTR [eax]
  0007e	52		 push	 edx
  0007f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00082	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
  00087	8b c8		 mov	 ecx, eax
  00089	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::deallocate

; 1642 : 				this->_Myend() - this->_Myfirst());
; 1643 : 			this->_Myfirst() = pointer();

  0008e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00091	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
  00096	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1644 : 			this->_Mylast() = pointer();

  0009c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009f	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  000a4	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1645 : 			this->_Myend() = pointer();

  000aa	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ad	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
  000b2	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN1@Tidy:

; 1646 : 			}
; 1647 : 		}

  000b8	5f		 pop	 edi
  000b9	5e		 pop	 esi
  000ba	5b		 pop	 ebx
  000bb	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000c1	3b ec		 cmp	 ebp, esp
  000c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c3		 ret	 0
?_Tidy@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXXZ ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reserve@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Reserve, COMDAT
; _this$ = ecx

; 1626 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1627 : 		if (_Unused_capacity() < _Count)

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Unused_capacity@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Unused_capacity
  0002b	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0002e	73 3e		 jae	 SHORT $LN4@Reserve

; 1628 : 			{	// need more room, try to get it
; 1629 : 			if (max_size() - size() < _Count)

  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?max_size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::max_size
  00038	8b f0		 mov	 esi, eax
  0003a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::size
  00042	2b f0		 sub	 esi, eax
  00044	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00047	73 08		 jae	 SHORT $LN3@Reserve

; 1630 : 				_Xlen();

  00049	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Xlen@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Xlen
$LN3@Reserve:

; 1631 : 			_Reallocate(_Grow_to(size() + _Count));

  00051	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::size
  00059	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  0005c	50		 push	 eax
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEII@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Grow_to
  00065	50		 push	 eax
  00066	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Reallocate
$LN4@Reserve:

; 1632 : 			}
; 1633 : 		}

  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00077	3b ec		 cmp	 ebp, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
?_Reserve@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -48						; size = 4
__Ptr$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Reallocate, COMDAT
; _this$ = ecx

; 1601 : 		{	// move to array of exactly _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	51		 push	 ecx
  0001c	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00022	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00027	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002c	f3 ab		 rep stosd
  0002e	59		 pop	 ecx
  0002f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00034	33 c5		 xor	 eax, ebp
  00036	50		 push	 eax
  00037	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  0003a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00040	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00043	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 1602 : 		pointer _Ptr = this->_Getal().allocate(_Count);

  00046	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00049	50		 push	 eax
  0004a	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
  00052	8b c8		 mov	 ecx, eax
  00054	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEPAV?$shared_ptr@VCContact@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::allocate
  00059	89 45 dc	 mov	 DWORD PTR __Ptr$[ebp], eax

; 1603 : 
; 1604 : 		_TRY_BEGIN

  0005c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 1605 : 		_Umove(this->_Myfirst(), this->_Mylast(), _Ptr);

  00063	8b 45 dc	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00066	50		 push	 eax
  00067	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  0006f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00071	51		 push	 ecx
  00072	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
  0007a	8b 10		 mov	 edx, DWORD PTR [eax]
  0007c	52		 push	 edx
  0007d	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	e8 00 00 00 00	 call	 ??$_Umove@PAV?$shared_ptr@VCContact@@@std@@@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEPAV?$shared_ptr@VCContact@@@1@PAV21@00@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Umove<std::shared_ptr<CContact> *>
  00085	eb 26		 jmp	 SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z$0:

; 1606 : 		_CATCH_ALL
; 1607 : 		this->_Getal().deallocate(_Ptr, _Count);

  00087	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0008a	50		 push	 eax
  0008b	8b 4d dc	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0008e	51		 push	 ecx
  0008f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
  00097	8b c8		 mov	 ecx, eax
  00099	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::deallocate

; 1608 : 		_RERAISE;

  0009e	6a 00		 push	 0
  000a0	6a 00		 push	 0
  000a2	e8 00 00 00 00	 call	 __CxxThrowException@8

; 1609 : 		_CATCH_END

  000a7	b8 00 00 00 00	 mov	 eax, $LN8@Reallocate
  000ac	c3		 ret	 0
$LN5@Reallocate:
  000ad	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000b4	eb 07		 jmp	 SHORT __tryend$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z$1
$LN8@Reallocate:
  000b6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z$1:

; 1610 : 
; 1611 : 		size_type _Size = size();

  000bd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::size
  000c5	89 45 d0	 mov	 DWORD PTR __Size$[ebp], eax

; 1612 : 		if (this->_Myfirst() != pointer())

  000c8	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000cb	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
  000d0	83 38 00	 cmp	 DWORD PTR [eax], 0
  000d3	74 52		 je	 SHORT $LN3@Reallocate

; 1613 : 			{	// destroy and deallocate old array
; 1614 : 			_Destroy(this->_Myfirst(), this->_Mylast());

  000d5	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d8	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  000dd	8b 00		 mov	 eax, DWORD PTR [eax]
  000df	50		 push	 eax
  000e0	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e3	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
  000e8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ea	51		 push	 ecx
  000eb	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ee	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXPAV?$shared_ptr@VCContact@@@2@0@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Destroy

; 1615 : 			this->_Getal().deallocate(this->_Myfirst(),

  000f3	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f6	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
  000fb	8b f0		 mov	 esi, eax
  000fd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00100	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
  00105	8b 00		 mov	 eax, DWORD PTR [eax]
  00107	2b 06		 sub	 eax, DWORD PTR [esi]
  00109	c1 f8 03	 sar	 eax, 3
  0010c	50		 push	 eax
  0010d	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00110	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
  00115	8b 08		 mov	 ecx, DWORD PTR [eax]
  00117	51		 push	 ecx
  00118	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0011b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
  00120	8b c8		 mov	 ecx, eax
  00122	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::deallocate
$LN3@Reallocate:

; 1616 : 				this->_Myend() - this->_Myfirst());
; 1617 : 			}
; 1618 : 
; 1619 : 		this->_Orphan_all();

  00127	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0012a	e8 00 00 00 00	 call	 ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Orphan_all

; 1620 : 		this->_Myend() = _Ptr + _Count;

  0012f	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00132	8b 4d dc	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00135	8d 34 c1	 lea	 esi, DWORD PTR [ecx+eax*8]
  00138	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0013b	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
  00140	89 30		 mov	 DWORD PTR [eax], esi

; 1621 : 		this->_Mylast() = _Ptr + _Size;

  00142	8b 45 d0	 mov	 eax, DWORD PTR __Size$[ebp]
  00145	8b 4d dc	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00148	8d 34 c1	 lea	 esi, DWORD PTR [ecx+eax*8]
  0014b	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0014e	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  00153	89 30		 mov	 DWORD PTR [eax], esi

; 1622 : 		this->_Myfirst() = _Ptr;

  00155	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00158	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
  0015d	8b 4d dc	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00160	89 08		 mov	 DWORD PTR [eax], ecx
$LN4@Reallocate:

; 1623 : 		}

  00162	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00165	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0016c	59		 pop	 ecx
  0016d	5f		 pop	 edi
  0016e	5e		 pop	 esi
  0016f	5b		 pop	 ebx
  00170	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  00176	3b ec		 cmp	 ebp, esp
  00178	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0017d	8b e5		 mov	 esp, ebp
  0017f	5d		 pop	 ebp
  00180	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Reallocate
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBE_NPBV?$shared_ptr@VCContact@@@2@@Z
_TEXT	SEGMENT
tv82 = -208						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBE_NPBV?$shared_ptr@VCContact@@@2@@Z PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Inside, COMDAT
; _this$ = ecx

; 1596 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1597 : 		return (_Ptr < _Unfancy(this->_Mylast()) && _Unfancy(this->_Myfirst()) <= _Ptr);

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  0002b	8b 00		 mov	 eax, DWORD PTR [eax]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unfancy<std::shared_ptr<CContact> >
  00033	83 c4 04	 add	 esp, 4
  00036	39 45 08	 cmp	 DWORD PTR __Ptr$[ebp], eax
  00039	73 24		 jae	 SHORT $LN3@Inside
  0003b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
  00043	8b 08		 mov	 ecx, DWORD PTR [eax]
  00045	51		 push	 ecx
  00046	e8 00 00 00 00	 call	 ??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unfancy<std::shared_ptr<CContact> >
  0004b	83 c4 04	 add	 esp, 4
  0004e	3b 45 08	 cmp	 eax, DWORD PTR __Ptr$[ebp]
  00051	77 0c		 ja	 SHORT $LN3@Inside
  00053	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv82[ebp], 1
  0005d	eb 0a		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  0005f	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv82[ebp], 0
$LN4@Inside:
  00069	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv82[ebp]

; 1598 : 		}

  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	5b		 pop	 ebx
  00072	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  00078	3b ec		 cmp	 ebp, esp
  0007a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 04 00	 ret	 4
?_Inside@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBE_NPBV?$shared_ptr@VCContact@@@2@@Z ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Grow_to@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
__Capacity$ = -20					; size = 4
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEII@Z PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Grow_to, COMDAT
; _this$ = ecx

; 1585 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1586 : 		size_type _Capacity = capacity();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?capacity@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::capacity
  0002b	89 45 ec	 mov	 DWORD PTR __Capacity$[ebp], eax

; 1587 : 
; 1588 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?max_size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::max_size
  00036	8b 4d ec	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00039	d1 e9		 shr	 ecx, 1
  0003b	2b c1		 sub	 eax, ecx
  0003d	3b 45 ec	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  00040	73 0c		 jae	 SHORT $LN4@Grow_to
  00042	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv73[ebp], 0
  0004c	eb 0e		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  0004e	8b 55 ec	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00051	d1 ea		 shr	 edx, 1
  00053	03 55 ec	 add	 edx, DWORD PTR __Capacity$[ebp]
  00056	89 95 24 ff ff
	ff		 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  0005c	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv73[ebp]
  00062	89 45 ec	 mov	 DWORD PTR __Capacity$[ebp], eax

; 1589 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%
; 1590 : 		if (_Capacity < _Count)

  00065	8b 45 ec	 mov	 eax, DWORD PTR __Capacity$[ebp]
  00068	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0006b	73 06		 jae	 SHORT $LN2@Grow_to

; 1591 : 			_Capacity = _Count;

  0006d	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00070	89 45 ec	 mov	 DWORD PTR __Capacity$[ebp], eax
$LN2@Grow_to:

; 1592 : 		return (_Capacity);

  00073	8b 45 ec	 mov	 eax, DWORD PTR __Capacity$[ebp]

; 1593 : 		}

  00076	5f		 pop	 edi
  00077	5e		 pop	 esi
  00078	5b		 pop	 ebx
  00079	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  0007f	3b ec		 cmp	 ebp, esp
  00081	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 04 00	 ret	 4
?_Grow_to@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEII@Z ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXPAV?$shared_ptr@VCContact@@@2@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXPAV?$shared_ptr@VCContact@@@2@0@Z PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Destroy, COMDAT
; _this$ = ecx

; 1580 : 		{	// destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1581 : 		_Destroy_range(_First, _Last, this->_Getal());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
  0002b	50		 push	 eax
  0002c	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@PAV?$shared_ptr@VCContact@@@2@@std@@YAXPAV?$shared_ptr@VCContact@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::shared_ptr<CContact> >,std::shared_ptr<CContact> *>
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1582 : 		}

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 08 00	 ret	 8
?_Destroy@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXPAV?$shared_ptr@VCContact@@@2@0@Z ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv195 = -248						; size = 4
tv194 = -244						; size = 4
tv172 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::erase, COMDAT
; _this$ = ecx

; 1470 : 		{	// erase element at where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 08 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-248]
  00021	b9 3b 00 00 00	 mov	 ecx, 59			; 0000003bH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1471 : 		if (_VICONT(_Where) != &this->_Get_data()
; 1472 : 			|| _VIPTR(_Where) < this->_Myfirst()
; 1473 : 			|| this->_Mylast() <= _VIPTR(_Where))

  00053	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00056	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0005b	8b f0		 mov	 esi, eax
  0005d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
  00065	3b f0		 cmp	 esi, eax
  00067	75 1e		 jne	 SHORT $LN3@erase
  00069	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
  00071	8b 4d 14	 mov	 ecx, DWORD PTR __Where$[ebp+8]
  00074	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00076	72 0f		 jb	 SHORT $LN3@erase
  00078	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  00080	8b 00		 mov	 eax, DWORD PTR [eax]
  00082	3b 45 14	 cmp	 eax, DWORD PTR __Where$[ebp+8]
  00085	77 21		 ja	 SHORT $LN2@erase
$LN3@erase:

; 1474 : 			_DEBUG_ERROR("vector erase iterator outside range");

  00087	8b f4		 mov	 esi, esp
  00089	68 c2 05 00 00	 push	 1474			; 000005c2H
  0008e	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00093	68 00 00 00 00	 push	 OFFSET ??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@
  00098	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0009e	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a1	3b f4		 cmp	 esi, esp
  000a3	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@erase:

; 1475 : 		_Move_unchecked(_VIPTR(_Where) + 1, this->_Mylast(), _VIPTR(_Where));

  000a8	8b 45 14	 mov	 eax, DWORD PTR __Where$[ebp+8]
  000ab	50		 push	 eax
  000ac	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000af	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  000b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b6	51		 push	 ecx
  000b7	8b 55 14	 mov	 edx, DWORD PTR __Where$[ebp+8]
  000ba	83 c2 08	 add	 edx, 8
  000bd	52		 push	 edx
  000be	e8 00 00 00 00	 call	 ??$_Move_unchecked@PAV?$shared_ptr@VCContact@@@std@@PAV12@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@00@Z ; std::_Move_unchecked<std::shared_ptr<CContact> *,std::shared_ptr<CContact> *>
  000c3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1476 : 		_Destroy(this->_Mylast() - 1, this->_Mylast());

  000c6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c9	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  000ce	8b 00		 mov	 eax, DWORD PTR [eax]
  000d0	50		 push	 eax
  000d1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  000d9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000db	83 e9 08	 sub	 ecx, 8
  000de	51		 push	 ecx
  000df	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e2	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXPAV?$shared_ptr@VCContact@@@2@0@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Destroy

; 1477 : 		_Orphan_range(_VIPTR(_Where), this->_Mylast());

  000e7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  000ef	8b 00		 mov	 eax, DWORD PTR [eax]
  000f1	50		 push	 eax
  000f2	8b 4d 14	 mov	 ecx, DWORD PTR __Where$[ebp+8]
  000f5	51		 push	 ecx
  000f6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f9	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Orphan_range

; 1478 : 		--this->_Mylast();

  000fe	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00101	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  00106	89 85 0c ff ff
	ff		 mov	 DWORD PTR tv172[ebp], eax
  0010c	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR tv172[ebp]
  00112	8b 08		 mov	 ecx, DWORD PTR [eax]
  00114	83 e9 08	 sub	 ecx, 8
  00117	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR tv172[ebp]
  0011d	89 0a		 mov	 DWORD PTR [edx], ecx

; 1479 : 		return (_Make_iter(_Where));

  0011f	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00122	8b cc		 mov	 ecx, esp
  00124	89 a5 20 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], esp
  0012a	8d 45 0c	 lea	 eax, DWORD PTR __Where$[ebp]
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
  00133	89 85 0c ff ff
	ff		 mov	 DWORD PTR tv194[ebp], eax
  00139	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0013c	51		 push	 ecx
  0013d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00140	e8 00 00 00 00	 call	 ?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Make_iter
  00145	89 85 08 ff ff
	ff		 mov	 DWORD PTR tv195[ebp], eax
  0014b	8b 95 14 ff ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  00151	83 ca 01	 or	 edx, 1
  00154	89 95 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
  0015a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00161	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00164	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
  00169	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1480 : 		}

  0016c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0016f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00176	59		 pop	 ecx
  00177	5f		 pop	 edi
  00178	5e		 pop	 esi
  00179	5b		 pop	 ebx
  0017a	81 c4 f8 00 00
	00		 add	 esp, 248		; 000000f8H
  00180	3b ec		 cmp	 ebp, esp
  00182	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00187	8b e5		 mov	 esp, ebp
  00189	5d		 pop	 ebp
  0018a	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z$0:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 04 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-252]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?erase@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::erase
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?push_back@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAEXABV?$shared_ptr@VCContact@@@2@@Z
_TEXT	SEGMENT
tv231 = -220						; size = 4
tv176 = -220						; size = 4
__Idx$1 = -20						; size = 4
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAEXABV?$shared_ptr@VCContact@@@2@@Z PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::push_back, COMDAT
; _this$ = ecx

; 1276 : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1277 : 		if (_Inside(_STD addressof(_Val)))

  00023	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$shared_ptr@VCContact@@@std@@@std@@YAPBV?$shared_ptr@VCContact@@@0@ABV10@@Z ; std::addressof<std::shared_ptr<CContact> const >
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Inside@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBE_NPBV?$shared_ptr@VCContact@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Inside
  00038	0f b6 c8	 movzx	 ecx, al
  0003b	85 c9		 test	 ecx, ecx
  0003d	0f 84 c3 00 00
	00		 je	 $LN2@push_back

; 1278 : 			{	// push back an element
; 1279 : 			size_type _Idx = _STD addressof(_Val) - _Unfancy(this->_Myfirst());

  00043	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$shared_ptr@VCContact@@@std@@@std@@YAPBV?$shared_ptr@VCContact@@@0@ABV10@@Z ; std::addressof<std::shared_ptr<CContact> const >
  0004c	83 c4 04	 add	 esp, 4
  0004f	8b f0		 mov	 esi, eax
  00051	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
  00059	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005b	51		 push	 ecx
  0005c	e8 00 00 00 00	 call	 ??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unfancy<std::shared_ptr<CContact> >
  00061	83 c4 04	 add	 esp, 4
  00064	2b f0		 sub	 esi, eax
  00066	c1 fe 03	 sar	 esi, 3
  00069	89 75 ec	 mov	 DWORD PTR __Idx$1[ebp], esi

; 1280 : 			if (this->_Mylast() == this->_Myend())

  0006c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  00074	8b f0		 mov	 esi, eax
  00076	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00079	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
  0007e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00080	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00082	75 0a		 jne	 SHORT $LN4@push_back

; 1281 : 				_Reserve(1);

  00084	6a 01		 push	 1
  00086	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	e8 00 00 00 00	 call	 ?_Reserve@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Reserve
$LN4@push_back:

; 1282 : 			_Orphan_range(this->_Mylast(), this->_Mylast());

  0008e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00091	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  00096	8b 00		 mov	 eax, DWORD PTR [eax]
  00098	50		 push	 eax
  00099	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  000a1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a3	51		 push	 ecx
  000a4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a7	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Orphan_range

; 1283 : 			this->_Getal().construct(_Unfancy(this->_Mylast()),

  000ac	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000af	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
  000b4	8b 00		 mov	 eax, DWORD PTR [eax]
  000b6	8b 4d ec	 mov	 ecx, DWORD PTR __Idx$1[ebp]
  000b9	8d 14 c8	 lea	 edx, DWORD PTR [eax+ecx*8]
  000bc	52		 push	 edx
  000bd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  000c5	8b 00		 mov	 eax, DWORD PTR [eax]
  000c7	50		 push	 eax
  000c8	e8 00 00 00 00	 call	 ??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unfancy<std::shared_ptr<CContact> >
  000cd	83 c4 04	 add	 esp, 4
  000d0	50		 push	 eax
  000d1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
  000d9	8b c8		 mov	 ecx, eax
  000db	e8 00 00 00 00	 call	 ??$construct@V?$shared_ptr@VCContact@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@AAV21@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> &>

; 1284 : 				this->_Myfirst()[_Idx]);
; 1285 : 			++this->_Mylast();

  000e0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e3	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  000e8	89 85 24 ff ff
	ff		 mov	 DWORD PTR tv176[ebp], eax
  000ee	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv176[ebp]
  000f4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f6	83 c1 08	 add	 ecx, 8
  000f9	8b 95 24 ff ff
	ff		 mov	 edx, DWORD PTR tv176[ebp]
  000ff	89 0a		 mov	 DWORD PTR [edx], ecx

; 1286 : 			}
; 1287 : 		else

  00101	e9 88 00 00 00	 jmp	 $LN1@push_back
$LN2@push_back:

; 1288 : 			{	// push back a non-element
; 1289 : 			if (this->_Mylast() == this->_Myend())

  00106	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00109	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  0010e	8b f0		 mov	 esi, eax
  00110	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00113	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
  00118	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0011a	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0011c	75 0a		 jne	 SHORT $LN5@push_back

; 1290 : 				_Reserve(1);

  0011e	6a 01		 push	 1
  00120	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00123	e8 00 00 00 00	 call	 ?_Reserve@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Reserve
$LN5@push_back:

; 1291 : 			_Orphan_range(this->_Mylast(), this->_Mylast());

  00128	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0012b	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  00130	8b 00		 mov	 eax, DWORD PTR [eax]
  00132	50		 push	 eax
  00133	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00136	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  0013b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0013d	51		 push	 ecx
  0013e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00141	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Orphan_range

; 1292 : 			this->_Getal().construct(_Unfancy(this->_Mylast()),

  00146	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00149	50		 push	 eax
  0014a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0014d	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  00152	8b 08		 mov	 ecx, DWORD PTR [eax]
  00154	51		 push	 ecx
  00155	e8 00 00 00 00	 call	 ??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unfancy<std::shared_ptr<CContact> >
  0015a	83 c4 04	 add	 esp, 4
  0015d	50		 push	 eax
  0015e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00161	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
  00166	8b c8		 mov	 ecx, eax
  00168	e8 00 00 00 00	 call	 ??$construct@V?$shared_ptr@VCContact@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@ABV21@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> const &>

; 1293 : 				_Val);
; 1294 : 			++this->_Mylast();

  0016d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00170	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  00175	89 85 24 ff ff
	ff		 mov	 DWORD PTR tv231[ebp], eax
  0017b	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv231[ebp]
  00181	8b 08		 mov	 ecx, DWORD PTR [eax]
  00183	83 c1 08	 add	 ecx, 8
  00186	8b 95 24 ff ff
	ff		 mov	 edx, DWORD PTR tv231[ebp]
  0018c	89 0a		 mov	 DWORD PTR [edx], ecx
$LN1@push_back:

; 1295 : 			}
; 1296 : 		}

  0018e	5f		 pop	 edi
  0018f	5e		 pop	 esi
  00190	5b		 pop	 ebx
  00191	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00197	3b ec		 cmp	 ebp, esp
  00199	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0019e	8b e5		 mov	 esp, ebp
  001a0	5d		 pop	 ebp
  001a1	c2 04 00	 ret	 4
?push_back@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAEXABV?$shared_ptr@VCContact@@@2@@Z ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?max_size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
?max_size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::max_size, COMDAT
; _this$ = ecx

; 1184 : 		{	// return maximum possible length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1185 : 		return (this->_Getal().max_size());

  00023	0f b6 85 2f ff
	ff ff		 movzx	 eax, BYTE PTR $T1[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
  00033	8b c8		 mov	 ecx, eax
  00035	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::max_size

; 1186 : 		}

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?max_size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::size, COMDAT
; _this$ = ecx

; 1179 : 		{	// return length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1180 : 		return (this->_Mylast() - this->_Myfirst());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  0002b	8b f0		 mov	 esi, eax
  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
  00035	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00037	2b 08		 sub	 ecx, DWORD PTR [eax]
  00039	c1 f9 03	 sar	 ecx, 3
  0003c	8b c1		 mov	 eax, ecx

; 1181 : 		}

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
?size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
$T2 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Make_iter, COMDAT
; _this$ = ecx

; 1077 : 		{	// make iterator from const_iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00021	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1078 : 		return (iterator(_Where._Ptr, &this->_Get_data()));

  00053	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
  0005b	50		 push	 eax
  0005c	8b 45 14	 mov	 eax, DWORD PTR __Where$[ebp+8]
  0005f	50		 push	 eax
  00060	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00063	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
  00068	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  0006e	83 c9 01	 or	 ecx, 1
  00071	89 8d 20 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  00077	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007e	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00081	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
  00086	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1079 : 		}

  00089	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00093	59		 pop	 ecx
  00094	5f		 pop	 edi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  0009d	3b ec		 cmp	 ebp, esp
  0009f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z$0:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 18 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-232]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Make_iter@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@@Z ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Make_iter
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end, COMDAT
; _this$ = ecx

; 1067 : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1068 : 		return (iterator(this->_Mylast(), &this->_Get_data()));

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
  0004a	50		 push	 eax
  0004b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  00053	8b 00		 mov	 eax, DWORD PTR [eax]
  00055	50		 push	 eax
  00056	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00059	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
  0005e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1069 : 		}

  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00075	3b ec		 cmp	 ebp, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::begin, COMDAT
; _this$ = ecx

; 1057 : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1058 : 		return (iterator(this->_Myfirst(), &this->_Get_data()));

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
  0004a	50		 push	 eax
  0004b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
  00053	8b 00		 mov	 eax, DWORD PTR [eax]
  00055	50		 push	 eax
  00056	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00059	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@PAV?$shared_ptr@VCContact@@@1@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >
  0005e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1059 : 		}

  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00075	3b ec		 cmp	 ebp, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::begin
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Unused_capacity@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Unused_capacity@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Unused_capacity, COMDAT
; _this$ = ecx

; 1047 : 		{	// micro-optimization for capacity() - size()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1048 : 		return (this->_Myend() - this->_Mylast());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
  0002b	8b f0		 mov	 esi, eax
  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  00035	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00037	2b 08		 sub	 ecx, DWORD PTR [eax]
  00039	c1 f9 03	 sar	 ecx, 3
  0003c	8b c1		 mov	 eax, ecx

; 1049 : 		}

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
?_Unused_capacity@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?capacity@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?capacity@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::capacity, COMDAT
; _this$ = ecx

; 1042 : 		{	// return current length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1043 : 		return (this->_Myend() - this->_Myfirst());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
  0002b	8b f0		 mov	 esi, eax
  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
  00035	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00037	2b 08		 sub	 ecx, DWORD PTR [eax]
  00039	c1 f9 03	 sar	 ecx, 3
  0003c	8b c1		 mov	 eax, ecx

; 1044 : 		}

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
?capacity@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??1?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::~vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >, COMDAT
; _this$ = ecx

; 975  : 		{	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 976  : 		_Tidy();

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Tidy

; 977  : 		}

  0004a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ??1?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::~_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >
  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005c	59		 pop	 ecx
  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi
  0005f	5b		 pop	 ebx
  00060	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00066	3b ec		 cmp	 ebp, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::~vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?push_back@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAEX$$QAV?$shared_ptr@VCContact@@@2@@Z
_TEXT	SEGMENT
tv235 = -220						; size = 4
tv178 = -220						; size = 4
__Idx$1 = -20						; size = 4
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAEX$$QAV?$shared_ptr@VCContact@@@2@@Z PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::push_back, COMDAT
; _this$ = ecx

; 896  : 		{	// insert by moving into element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 897  : 		if (_Inside(_STD addressof(_Val)))

  00023	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$addressof@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::addressof<std::shared_ptr<CContact> >
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Inside@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBE_NPBV?$shared_ptr@VCContact@@@2@@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Inside
  00038	0f b6 c8	 movzx	 ecx, al
  0003b	85 c9		 test	 ecx, ecx
  0003d	0f 84 cc 00 00
	00		 je	 $LN2@push_back

; 898  : 			{	// push back an element
; 899  : 			size_type _Idx = _STD addressof(_Val) - _Unfancy(this->_Myfirst());

  00043	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ??$addressof@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::addressof<std::shared_ptr<CContact> >
  0004c	83 c4 04	 add	 esp, 4
  0004f	8b f0		 mov	 esi, eax
  00051	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
  00059	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005b	51		 push	 ecx
  0005c	e8 00 00 00 00	 call	 ??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unfancy<std::shared_ptr<CContact> >
  00061	83 c4 04	 add	 esp, 4
  00064	2b f0		 sub	 esi, eax
  00066	c1 fe 03	 sar	 esi, 3
  00069	89 75 ec	 mov	 DWORD PTR __Idx$1[ebp], esi

; 900  : 			if (this->_Mylast() == this->_Myend())

  0006c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  00074	8b f0		 mov	 esi, eax
  00076	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00079	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
  0007e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00080	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00082	75 0a		 jne	 SHORT $LN4@push_back

; 901  : 				_Reserve(1);

  00084	6a 01		 push	 1
  00086	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	e8 00 00 00 00	 call	 ?_Reserve@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Reserve
$LN4@push_back:

; 902  : 			_Orphan_range(this->_Mylast(), this->_Mylast());

  0008e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00091	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  00096	8b 00		 mov	 eax, DWORD PTR [eax]
  00098	50		 push	 eax
  00099	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  000a1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a3	51		 push	 ecx
  000a4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a7	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Orphan_range

; 903  : 			this->_Getal().construct(_Unfancy(this->_Mylast()),

  000ac	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000af	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
  000b4	8b 00		 mov	 eax, DWORD PTR [eax]
  000b6	8b 4d ec	 mov	 ecx, DWORD PTR __Idx$1[ebp]
  000b9	8d 14 c8	 lea	 edx, DWORD PTR [eax+ecx*8]
  000bc	52		 push	 edx
  000bd	e8 00 00 00 00	 call	 ??$forward@V?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::forward<std::shared_ptr<CContact> >
  000c2	83 c4 04	 add	 esp, 4
  000c5	50		 push	 eax
  000c6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c9	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  000ce	8b 00		 mov	 eax, DWORD PTR [eax]
  000d0	50		 push	 eax
  000d1	e8 00 00 00 00	 call	 ??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unfancy<std::shared_ptr<CContact> >
  000d6	83 c4 04	 add	 esp, 4
  000d9	50		 push	 eax
  000da	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000dd	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
  000e2	8b c8		 mov	 ecx, eax
  000e4	e8 00 00 00 00	 call	 ??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >

; 904  : 				_STD forward<value_type>(this->_Myfirst()[_Idx]));
; 905  : 			++this->_Mylast();

  000e9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ec	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  000f1	89 85 24 ff ff
	ff		 mov	 DWORD PTR tv178[ebp], eax
  000f7	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv178[ebp]
  000fd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ff	83 c1 08	 add	 ecx, 8
  00102	8b 95 24 ff ff
	ff		 mov	 edx, DWORD PTR tv178[ebp]
  00108	89 0a		 mov	 DWORD PTR [edx], ecx

; 906  : 			}
; 907  : 		else

  0010a	e9 91 00 00 00	 jmp	 $LN1@push_back
$LN2@push_back:

; 908  : 			{	// push back a non-element
; 909  : 			if (this->_Mylast() == this->_Myend())

  0010f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00112	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  00117	8b f0		 mov	 esi, eax
  00119	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0011c	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
  00121	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00123	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00125	75 0a		 jne	 SHORT $LN5@push_back

; 910  : 				_Reserve(1);

  00127	6a 01		 push	 1
  00129	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0012c	e8 00 00 00 00	 call	 ?_Reserve@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Reserve
$LN5@push_back:

; 911  : 			_Orphan_range(this->_Mylast(), this->_Mylast());

  00131	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00134	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  00139	8b 00		 mov	 eax, DWORD PTR [eax]
  0013b	50		 push	 eax
  0013c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0013f	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  00144	8b 08		 mov	 ecx, DWORD PTR [eax]
  00146	51		 push	 ecx
  00147	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0014a	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@IBEXPAV?$shared_ptr@VCContact@@@2@0@Z ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::_Orphan_range

; 912  : 			this->_Getal().construct(_Unfancy(this->_Mylast()),

  0014f	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00152	50		 push	 eax
  00153	e8 00 00 00 00	 call	 ??$forward@V?$shared_ptr@VCContact@@@std@@@std@@YA$$QAV?$shared_ptr@VCContact@@@0@AAV10@@Z ; std::forward<std::shared_ptr<CContact> >
  00158	83 c4 04	 add	 esp, 4
  0015b	50		 push	 eax
  0015c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0015f	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  00164	8b 08		 mov	 ecx, DWORD PTR [eax]
  00166	51		 push	 ecx
  00167	e8 00 00 00 00	 call	 ??$_Unfancy@V?$shared_ptr@VCContact@@@std@@@std@@YAPAV?$shared_ptr@VCContact@@@0@PAV10@@Z ; std::_Unfancy<std::shared_ptr<CContact> >
  0016c	83 c4 04	 add	 esp, 4
  0016f	50		 push	 eax
  00170	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00173	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
  00178	8b c8		 mov	 ecx, eax
  0017a	e8 00 00 00 00	 call	 ??$construct@V?$shared_ptr@VCContact@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::construct<std::shared_ptr<CContact>,std::shared_ptr<CContact> >

; 913  : 				_STD forward<value_type>(_Val));
; 914  : 			++this->_Mylast();

  0017f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00182	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
  00187	89 85 24 ff ff
	ff		 mov	 DWORD PTR tv235[ebp], eax
  0018d	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv235[ebp]
  00193	8b 08		 mov	 ecx, DWORD PTR [eax]
  00195	83 c1 08	 add	 ecx, 8
  00198	8b 95 24 ff ff
	ff		 mov	 edx, DWORD PTR tv235[ebp]
  0019e	89 0a		 mov	 DWORD PTR [edx], ecx
$LN1@push_back:

; 915  : 			}
; 916  : 		}

  001a0	5f		 pop	 edi
  001a1	5e		 pop	 esi
  001a2	5b		 pop	 ebx
  001a3	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  001a9	3b ec		 cmp	 ebp, esp
  001ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b0	8b e5		 mov	 esp, ebp
  001b2	5d		 pop	 ebp
  001b3	c2 04 00	 ret	 4
?push_back@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAEX$$QAV?$shared_ptr@VCContact@@@2@@Z ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >, COMDAT
; _this$ = ecx

; 707  : 		{	// construct empty vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 706  : 		: _Mybase()

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >

; 708  : 		}

  0004a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00050	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00057	59		 pop	 ecx
  00058	5f		 pop	 edi
  00059	5e		 pop	 esi
  0005a	5b		 pop	 ebx
  0005b	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00061	3b ec		 cmp	 ebp, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 319  : 		{	// return const reference to second

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 320  : 		return (_Myval2);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 321  : 		}

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 314  : 		{	// return reference to second

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 315  : 		return (_Myval2);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 316  : 		}

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 299  : 		{	// return const reference to first

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 300  : 		return (*this);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 301  : 		}

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 294  : 		{	// return reference to first

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 295  : 		return (*this);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 296  : 		}

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >::~_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1_Container_base12@std@@QAE@XZ ; std::_Container_base12::~_Container_base12
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >::~_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >, COMDAT
; _this$ = ecx

; 488  : 		{	// initialize values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QAE@XZ ; std::_Container_base12::_Container_base12

; 485  : 		: _Myfirst(),

  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 486  : 		_Mylast(),

  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 487  : 		_Myend()

  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 489  : 		}

  00049	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5b		 pop	 ebx
  0004f	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00055	3b ec		 cmp	 ebp, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend, COMDAT
; _this$ = ecx

; 667  : 		{	// return const reference to _Myend

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 668  : 		return (_Get_data()._Myend);

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
  0002b	83 c0 0c	 add	 eax, 12			; 0000000cH

; 669  : 		}

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend, COMDAT
; _this$ = ecx

; 662  : 		{	// return reference to _Myend

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 663  : 		return (_Get_data()._Myend);

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
  0002b	83 c0 0c	 add	 eax, 12			; 0000000cH

; 664  : 		}

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast, COMDAT
; _this$ = ecx

; 657  : 		{	// return const reference to _Mylast

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 658  : 		return (_Get_data()._Mylast);

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
  0002b	83 c0 08	 add	 eax, 8

; 659  : 		}

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast, COMDAT
; _this$ = ecx

; 652  : 		{	// return reference to _Mylast

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 653  : 		return (_Get_data()._Mylast);

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
  0002b	83 c0 08	 add	 eax, 8

; 654  : 		}

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst, COMDAT
; _this$ = ecx

; 647  : 		{	// return const reference to _Myfirst

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 648  : 		return (_Get_data()._Myfirst);

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
  0002b	83 c0 04	 add	 eax, 4

; 649  : 		}

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABQAV?$shared_ptr@VCContact@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst, COMDAT
; _this$ = ecx

; 642  : 		{	// return reference to _Myfirst

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 643  : 		return (_Get_data()._Myfirst);

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
  0002b	83 c0 04	 add	 eax, 4

; 644  : 		}

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAV?$shared_ptr@VCContact@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data, COMDAT
; _this$ = ecx

; 637  : 		{	// return const reference to _Vector_val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 638  : 		return (_Mypair._Get_second());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_second

; 639  : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data, COMDAT
; _this$ = ecx

; 632  : 		{	// return reference to _Vector_val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 633  : 		return (_Mypair._Get_second());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_second

; 634  : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal, COMDAT
; _this$ = ecx

; 627  : 		{	// return const reference to allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 628  : 		return (_Mypair._Get_first());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_first

; 629  : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal, COMDAT
; _this$ = ecx

; 622  : 		{	// return reference to allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 623  : 		return (_Mypair._Get_first());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Get_first

; 624  : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Orphan_all, COMDAT
; _this$ = ecx

; 612  : 		{	// orphan all iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 613  : 		_Get_data()._Orphan_all();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
  0002b	8b c8		 mov	 ecx, eax
  0002d	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 614  : 		}

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myproxy, COMDAT
; _this$ = ecx

; 601  : 		{	// return reference to _Myproxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 602  : 		return (_Get_data()._Myproxy);

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data

; 603  : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getpfirst, COMDAT
; _this$ = ecx

; 596  : 		{	// get address of iterator chain

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 597  : 		return (_Get_data()._Getpfirst());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
  0002b	8b c8		 mov	 ecx, eax
  0002d	e8 00 00 00 00	 call	 ?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst

; 598  : 		}

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -17					; size = 1
_this$ = -8						; size = 4
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Free_proxy, COMDAT
; _this$ = ecx

; 586  : 		{	// destroy proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 587  : 		typename _Alty::template rebind<_Container_proxy>::other
; 588  : 			_Alproxy(_Getal());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
  0002b	50		 push	 eax
  0002c	8d 4d ef	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0002f	e8 00 00 00 00	 call	 ??$?0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > > &>

; 589  : 		_Orphan_all();

  00034	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Orphan_all

; 590  : 		_Alproxy.destroy(_Myproxy());

  0003c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myproxy
  00044	8b 00		 mov	 eax, DWORD PTR [eax]
  00046	50		 push	 eax
  00047	8d 4d ef	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0004a	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>

; 591  : 		_Alproxy.deallocate(_Alproxy.address(*_Myproxy()), 1);

  0004f	6a 01		 push	 1
  00051	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myproxy
  00059	8b 00		 mov	 eax, DWORD PTR [eax]
  0005b	50		 push	 eax
  0005c	8d 4d ef	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0005f	e8 00 00 00 00	 call	 ?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
  00064	50		 push	 eax
  00065	8d 4d ef	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00068	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate

; 592  : 		_Myproxy() = 0;

  0006d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myproxy
  00075	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 593  : 		}

  0007b	52		 push	 edx
  0007c	8b cd		 mov	 ecx, ebp
  0007e	50		 push	 eax
  0007f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00085	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0008a	58		 pop	 eax
  0008b	5a		 pop	 edx
  0008c	5f		 pop	 edi
  0008d	5e		 pop	 esi
  0008e	5b		 pop	 ebx
  0008f	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00095	3b ec		 cmp	 ebp, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c3		 ret	 0
$LN5@Free_proxy:
  000a0	01 00 00 00	 DD	 1
  000a4	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  000a8	ef ff ff ff	 DD	 -17			; ffffffefH
  000ac	01 00 00 00	 DD	 1
  000b0	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  000b4	5f		 DB	 95			; 0000005fH
  000b5	41		 DB	 65			; 00000041H
  000b6	6c		 DB	 108			; 0000006cH
  000b7	70		 DB	 112			; 00000070H
  000b8	72		 DB	 114			; 00000072H
  000b9	6f		 DB	 111			; 0000006fH
  000ba	78		 DB	 120			; 00000078H
  000bb	79		 DB	 121			; 00000079H
  000bc	00		 DB	 0
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -228						; size = 8
__Alproxy$ = -17					; size = 1
_this$ = -8						; size = 4
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Alloc_proxy, COMDAT
; _this$ = ecx

; 577  : 		{	// construct proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00013	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 578  : 		typename _Alty::template rebind<_Container_proxy>::other
; 579  : 			_Alproxy(_Getal());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Getal
  0002b	50		 push	 eax
  0002c	8d 4d ef	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0002f	e8 00 00 00 00	 call	 ??$?0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > > &>

; 580  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

  00034	6a 01		 push	 1
  00036	8d 4d ef	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00039	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  00044	83 c4 04	 add	 esp, 4
  00047	8b f0		 mov	 esi, eax
  00049	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myproxy
  00051	89 30		 mov	 DWORD PTR [eax], esi

; 581  : 		_Alproxy.construct(_Myproxy(), _Container_proxy());

  00053	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00059	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  0005e	50		 push	 eax
  0005f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myproxy
  00067	8b 00		 mov	 eax, DWORD PTR [eax]
  00069	50		 push	 eax
  0006a	8d 4d ef	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0006d	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>

; 582  : 		_Myproxy()->_Mycont = &_Get_data();

  00072	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Get_data
  0007a	8b f0		 mov	 esi, eax
  0007c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Myproxy
  00084	8b 00		 mov	 eax, DWORD PTR [eax]
  00086	89 30		 mov	 DWORD PTR [eax], esi

; 583  : 		}

  00088	52		 push	 edx
  00089	8b cd		 mov	 ecx, ebp
  0008b	50		 push	 eax
  0008c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00092	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00097	58		 pop	 eax
  00098	5a		 pop	 edx
  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	5b		 pop	 ebx
  0009c	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  000a2	3b ec		 cmp	 ebp, esp
  000a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a9	8b e5		 mov	 esp, ebp
  000ab	5d		 pop	 ebp
  000ac	c3		 ret	 0
  000ad	0f 1f 00	 npad	 3
$LN5@Alloc_prox:
  000b0	01 00 00 00	 DD	 1
  000b4	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  000b8	ef ff ff ff	 DD	 -17			; ffffffefH
  000bc	01 00 00 00	 DD	 1
  000c0	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  000c4	5f		 DB	 95			; 0000005fH
  000c5	41		 DB	 65			; 00000041H
  000c6	6c		 DB	 108			; 0000006cH
  000c7	70		 DB	 112			; 00000070H
  000c8	72		 DB	 114			; 00000072H
  000c9	6f		 DB	 111			; 0000006fH
  000ca	78		 DB	 120			; 00000078H
  000cb	79		 DB	 121			; 00000079H
  000cc	00		 DB	 0
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??1?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::~_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 559  : 		_Free_proxy();

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Free_proxy

; 560  : 		}

  0004a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAE@XZ
  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005c	59		 pop	 ecx
  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi
  0005f	5b		 pop	 ebx
  00060	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00066	3b ec		 cmp	 ebp, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::~_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >, COMDAT
; _this$ = ecx

; 544  : 		{	// default construct allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00021	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 543  : 		: _Mypair(_Zero_then_variadic_args_t())

  00042	0f b6 85 23 ff
	ff ff		 movzx	 eax, BYTE PTR $T2[ebp]
  00049	50		 push	 eax
  0004a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >,std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > >,1><>
  00052	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 545  : 		_Alloc_proxy();

  00059	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Alloc_proxy

; 546  : 		}

  00061	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00068	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00075	59		 pop	 ecx
  00076	5f		 pop	 edi
  00077	5e		 pop	 esi
  00078	5b		 pop	 ebx
  00079	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  0007f	3b ec		 cmp	 ebp, esp
  00081	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@2@$00@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 18 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-232]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@U?$_Vec_base_types@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >::_Vector_alloc<std::_Vec_base_types<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::max_size, COMDAT
; _this$ = ecx

; 1007 : 		{	// get maximum size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1008 : 		return (_Mytraits::max_size(*this));

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAIABV?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::max_size
  0002c	83 c4 04	 add	 esp, 4

; 1009 : 		}

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?max_size@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::deallocate, COMDAT
; _this$ = ecx

; 986  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 987  : 		_Mybase::deallocate(_Ptr, _Count);

  00023	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@2@I@Z ; std::allocator<std::shared_ptr<CContact> >::deallocate

; 988  : 		}

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEPAV?$shared_ptr@VCContact@@@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEPAV?$shared_ptr@VCContact@@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::allocate, COMDAT
; _this$ = ecx

; 975  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 976  : 		return (_Mybase::allocate(_Count));

  00023	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?allocate@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEPAV?$shared_ptr@VCContact@@@2@I@Z ; std::allocator<std::shared_ptr<CContact> >::allocate

; 977  : 		}

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAEPAV?$shared_ptr@VCContact@@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >, COMDAT
; _this$ = ecx

; 936  : 		{	// construct default allocator (do nothing)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 935  : 		: _Mybase()

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAE@XZ ; std::allocator<std::shared_ptr<CContact> >::allocator<std::shared_ptr<CContact> >

; 937  : 		}

  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >::_Wrap_alloc<std::allocator<std::shared_ptr<CContact> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAIABV?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAIABV?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::max_size, COMDAT

; 868  : 		{	// get maximum size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 869  : 		return (_Al.max_size());

  0001e	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00021	e8 00 00 00 00	 call	 ?max_size@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QBEIXZ ; std::allocator<std::shared_ptr<CContact> >::max_size

; 870  : 		}

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002f	3b ec		 cmp	 ebp, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@@std@@SAIABV?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::shared_ptr<CContact> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::shared_ptr<CContact> >::max_size, COMDAT
; _this$ = ecx

; 748  : 		{	// estimate maximum array size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 749  : 		return ((size_t)(-1) / sizeof (_Ty));

  00023	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 750  : 		}

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?max_size@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::shared_ptr<CContact> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEPAV?$shared_ptr@VCContact@@@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEPAV?$shared_ptr@VCContact@@@2@I@Z PROC ; std::allocator<std::shared_ptr<CContact> >::allocate, COMDAT
; _this$ = ecx

; 724  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 725  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

  00023	6a 01		 push	 1
  00025	6a 08		 push	 8
  00027	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ?_Allocate@std@@YAPAXII_N@Z ; std::_Allocate
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH

; 726  : 		}

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
?allocate@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEPAV?$shared_ptr@VCContact@@@2@I@Z ENDP ; std::allocator<std::shared_ptr<CContact> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@2@I@Z PROC ; std::allocator<std::shared_ptr<CContact> >::deallocate, COMDAT
; _this$ = ecx

; 719  : 		{	// deallocate object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 720  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  00023	6a 08		 push	 8
  00025	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00028	50		 push	 eax
  00029	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002c	51		 push	 ecx
  0002d	e8 00 00 00 00	 call	 ?_Deallocate@std@@YAXPAXII@Z ; std::_Deallocate
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH

; 721  : 		}

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
?deallocate@?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAEXPAV?$shared_ptr@VCContact@@@2@I@Z ENDP ; std::allocator<std::shared_ptr<CContact> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::shared_ptr<CContact> >::allocator<std::shared_ptr<CContact> >, COMDAT
; _this$ = ecx

; 699  : 	allocator() _THROW0()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 700  : 		{	// construct default allocator (do nothing)
; 701  : 		}

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??0?$allocator@V?$shared_ptr@VCContact@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::shared_ptr<CContact> >::allocator<std::shared_ptr<CContact> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\bubblesort.h
;	COMDAT ?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z
_TEXT	SEGMENT
tv182 = -404						; size = 4
tv190 = -400						; size = 4
tv189 = -396						; size = 4
tv187 = -396						; size = 4
tv184 = -396						; size = 4
tv180 = -396						; size = 4
tv192 = -392						; size = 4
tv191 = -392						; size = 4
tv151 = -392						; size = 4
tv71 = -392						; size = 4
$T2 = -384						; size = 12
$T3 = -364						; size = 12
$T4 = -344						; size = 12
$T5 = -321						; size = 1
$T6 = -312						; size = 12
$T7 = -292						; size = 12
$T8 = -269						; size = 1
_tempPtr$9 = -68					; size = 8
_newIt$10 = -52						; size = 12
_i$11 = -32						; size = 4
_swapHappened$ = -17					; size = 1
__$EHRec$ = -12						; size = 12
_sortVector$ = 8					; size = 4
?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z PROC ; Chris::sort, COMDAT

; 15   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 88 01 00
	00		 sub	 esp, 392		; 00000188H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8d bd 6c fe ff
	ff		 lea	 edi, DWORD PTR [ebp-404]
  00020	b9 62 00 00 00	 mov	 ecx, 98			; 00000062H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00031	33 c5		 xor	 eax, ebp
  00033	50		 push	 eax
  00034	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00037	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 16   : 		// This will allow the algorithm to not go through excess loops
; 17   : 		bool swapHappened = true;

  0003d	c6 45 ef 01	 mov	 BYTE PTR _swapHappened$[ebp], 1

; 18   : 
; 19   : 		// This is the loop for the max number of times it will need to try sort
; 20   : 		for (unsigned int i = 0; i < sortVector.size() && swapHappened; ++i)

  00041	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _i$11[ebp], 0
  00048	eb 09		 jmp	 SHORT $LN4@sort
$LN2@sort:
  0004a	8b 45 e0	 mov	 eax, DWORD PTR _i$11[ebp]
  0004d	83 c0 01	 add	 eax, 1
  00050	89 45 e0	 mov	 DWORD PTR _i$11[ebp], eax
$LN4@sort:
  00053	8b 4d 08	 mov	 ecx, DWORD PTR _sortVector$[ebp]
  00056	e8 00 00 00 00	 call	 ?size@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QBEIXZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::size
  0005b	39 45 e0	 cmp	 DWORD PTR _i$11[ebp], eax
  0005e	0f 83 0f 02 00
	00		 jae	 $LN1@sort
  00064	0f b6 45 ef	 movzx	 eax, BYTE PTR _swapHappened$[ebp]
  00068	85 c0		 test	 eax, eax
  0006a	0f 84 03 02 00
	00		 je	 $LN1@sort

; 21   : 		{
; 22   : 			// A swap has not happened yet this iteration
; 23   : 			swapHappened = false;

  00070	c6 45 ef 00	 mov	 BYTE PTR _swapHappened$[ebp], 0

; 24   : 			// Loop through the vector, but not up to the last one since when it sorts it does n+1
; 25   : 			for (vector<shared_ptr<CContact>>::iterator newIt = sortVector.begin(); newIt != sortVector.end() - 1; ++newIt)

  00074	8d 45 cc	 lea	 eax, DWORD PTR _newIt$10[ebp]
  00077	50		 push	 eax
  00078	8b 4d 08	 mov	 ecx, DWORD PTR _sortVector$[ebp]
  0007b	e8 00 00 00 00	 call	 ?begin@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::begin
  00080	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00087	eb 08		 jmp	 SHORT $LN7@sort
$LN5@sort:
  00089	8d 4d cc	 lea	 ecx, DWORD PTR _newIt$10[ebp]
  0008c	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator++
$LN7@sort:
  00091	6a 01		 push	 1
  00093	8d 85 c8 fe ff
	ff		 lea	 eax, DWORD PTR $T6[ebp]
  00099	50		 push	 eax
  0009a	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  000a0	51		 push	 ecx
  000a1	8b 4d 08	 mov	 ecx, DWORD PTR _sortVector$[ebp]
  000a4	e8 00 00 00 00	 call	 ?end@?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@2@XZ ; std::vector<std::shared_ptr<CContact>,std::allocator<std::shared_ptr<CContact> > >::end
  000a9	89 85 78 fe ff
	ff		 mov	 DWORD PTR tv71[ebp], eax
  000af	8b 95 78 fe ff
	ff		 mov	 edx, DWORD PTR tv71[ebp]
  000b5	89 95 74 fe ff
	ff		 mov	 DWORD PTR tv180[ebp], edx
  000bb	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000bf	8b 8d 74 fe ff
	ff		 mov	 ecx, DWORD PTR tv180[ebp]
  000c5	e8 00 00 00 00	 call	 ??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator-
  000ca	89 85 70 fe ff
	ff		 mov	 DWORD PTR tv190[ebp], eax
  000d0	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR tv190[ebp]
  000d6	89 85 6c fe ff
	ff		 mov	 DWORD PTR tv182[ebp], eax
  000dc	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000e0	8b 8d 6c fe ff
	ff		 mov	 ecx, DWORD PTR tv182[ebp]
  000e6	51		 push	 ecx
  000e7	8d 4d cc	 lea	 ecx, DWORD PTR _newIt$10[ebp]
  000ea	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator!=
  000ef	88 85 f3 fe ff
	ff		 mov	 BYTE PTR $T8[ebp], al
  000f5	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000f9	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  000ff	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
  00104	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00108	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  0010e	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
  00113	0f b6 95 f3 fe
	ff ff		 movzx	 edx, BYTE PTR $T8[ebp]
  0011a	85 d2		 test	 edx, edx
  0011c	0f 84 3d 01 00
	00		 je	 $LN6@sort

; 26   : 			{
; 27   : 				// Check if the value inside the pointer was greater than the next value
; 28   : 				if (*(*newIt) > *(*(newIt + 1)))

  00122	6a 01		 push	 1
  00124	8d 85 a8 fe ff
	ff		 lea	 eax, DWORD PTR $T4[ebp]
  0012a	50		 push	 eax
  0012b	8d 4d cc	 lea	 ecx, DWORD PTR _newIt$10[ebp]
  0012e	e8 00 00 00 00	 call	 ??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+
  00133	89 85 78 fe ff
	ff		 mov	 DWORD PTR tv191[ebp], eax
  00139	8b 8d 78 fe ff
	ff		 mov	 ecx, DWORD PTR tv191[ebp]
  0013f	89 8d 74 fe ff
	ff		 mov	 DWORD PTR tv184[ebp], ecx
  00145	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00149	8b 8d 74 fe ff
	ff		 mov	 ecx, DWORD PTR tv184[ebp]
  0014f	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
  00154	8b c8		 mov	 ecx, eax
  00156	e8 00 00 00 00	 call	 ??D?$shared_ptr@VCContact@@@std@@QBEAAVCContact@@XZ ; std::shared_ptr<CContact>::operator*
  0015b	50		 push	 eax
  0015c	8d 4d cc	 lea	 ecx, DWORD PTR _newIt$10[ebp]
  0015f	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
  00164	8b c8		 mov	 ecx, eax
  00166	e8 00 00 00 00	 call	 ??D?$shared_ptr@VCContact@@@std@@QBEAAVCContact@@XZ ; std::shared_ptr<CContact>::operator*
  0016b	50		 push	 eax
  0016c	e8 00 00 00 00	 call	 ??O@YA_NAAVCContact@@0@Z ; operator>
  00171	83 c4 08	 add	 esp, 8
  00174	88 85 bf fe ff
	ff		 mov	 BYTE PTR $T5[ebp], al
  0017a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0017e	8d 8d a8 fe ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00184	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
  00189	0f b6 95 bf fe
	ff ff		 movzx	 edx, BYTE PTR $T5[ebp]
  00190	85 d2		 test	 edx, edx
  00192	0f 84 c2 00 00
	00		 je	 $LN8@sort

; 29   : 				{
; 30   : 					// Swap the two
; 31   : 					shared_ptr<CContact> tempPtr = *newIt;

  00198	8d 4d cc	 lea	 ecx, DWORD PTR _newIt$10[ebp]
  0019b	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
  001a0	50		 push	 eax
  001a1	8d 4d bc	 lea	 ecx, DWORD PTR _tempPtr$9[ebp]
  001a4	e8 00 00 00 00	 call	 ??0?$shared_ptr@VCContact@@@std@@QAE@ABV01@@Z ; std::shared_ptr<CContact>::shared_ptr<CContact>
  001a9	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4

; 32   : 					*newIt = *(newIt + 1);

  001ad	6a 01		 push	 1
  001af	8d 85 94 fe ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  001b5	50		 push	 eax
  001b6	8d 4d cc	 lea	 ecx, DWORD PTR _newIt$10[ebp]
  001b9	e8 00 00 00 00	 call	 ??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+
  001be	89 85 78 fe ff
	ff		 mov	 DWORD PTR tv151[ebp], eax
  001c4	8b 8d 78 fe ff
	ff		 mov	 ecx, DWORD PTR tv151[ebp]
  001ca	89 8d 74 fe ff
	ff		 mov	 DWORD PTR tv187[ebp], ecx
  001d0	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  001d4	8b 8d 74 fe ff
	ff		 mov	 ecx, DWORD PTR tv187[ebp]
  001da	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
  001df	50		 push	 eax
  001e0	8d 4d cc	 lea	 ecx, DWORD PTR _newIt$10[ebp]
  001e3	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
  001e8	8b c8		 mov	 ecx, eax
  001ea	e8 00 00 00 00	 call	 ??4?$shared_ptr@VCContact@@@std@@QAEAAV01@ABV01@@Z ; std::shared_ptr<CContact>::operator=
  001ef	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  001f3	8d 8d 94 fe ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  001f9	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ

; 33   : 					*(newIt + 1) = tempPtr;

  001fe	8d 45 bc	 lea	 eax, DWORD PTR _tempPtr$9[ebp]
  00201	50		 push	 eax
  00202	6a 01		 push	 1
  00204	8d 8d 80 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  0020a	51		 push	 ecx
  0020b	8d 4d cc	 lea	 ecx, DWORD PTR _newIt$10[ebp]
  0020e	e8 00 00 00 00	 call	 ??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator+
  00213	89 85 78 fe ff
	ff		 mov	 DWORD PTR tv192[ebp], eax
  00219	8b 95 78 fe ff
	ff		 mov	 edx, DWORD PTR tv192[ebp]
  0021f	89 95 74 fe ff
	ff		 mov	 DWORD PTR tv189[ebp], edx
  00225	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  00229	8b 8d 74 fe ff
	ff		 mov	 ecx, DWORD PTR tv189[ebp]
  0022f	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@VCContact@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::shared_ptr<CContact> > > >::operator*
  00234	8b c8		 mov	 ecx, eax
  00236	e8 00 00 00 00	 call	 ??4?$shared_ptr@VCContact@@@std@@QAEAAV01@ABV01@@Z ; std::shared_ptr<CContact>::operator=
  0023b	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  0023f	8d 8d 80 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00245	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ

; 34   : 
; 35   : 					// A swap happened, so it can't stop looping yet
; 36   : 					swapHappened = true;

  0024a	c6 45 ef 01	 mov	 BYTE PTR _swapHappened$[ebp], 1

; 37   : 				}

  0024e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00252	8d 4d bc	 lea	 ecx, DWORD PTR _tempPtr$9[ebp]
  00255	e8 00 00 00 00	 call	 ??1?$shared_ptr@VCContact@@@std@@QAE@XZ ; std::shared_ptr<CContact>::~shared_ptr<CContact>
$LN8@sort:
  0025a	e9 2a fe ff ff	 jmp	 $LN5@sort
$LN6@sort:

; 38   : 			}

  0025f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00266	8d 4d cc	 lea	 ecx, DWORD PTR _newIt$10[ebp]
  00269	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ

; 39   : 		}

  0026e	e9 d7 fd ff ff	 jmp	 $LN2@sort
$LN1@sort:

; 40   : 	}

  00273	52		 push	 edx
  00274	8b cd		 mov	 ecx, ebp
  00276	50		 push	 eax
  00277	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN21@sort
  0027d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00282	58		 pop	 eax
  00283	5a		 pop	 edx
  00284	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00287	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0028e	59		 pop	 ecx
  0028f	5f		 pop	 edi
  00290	5e		 pop	 esi
  00291	5b		 pop	 ebx
  00292	81 c4 94 01 00
	00		 add	 esp, 404		; 00000194H
  00298	3b ec		 cmp	 ebp, esp
  0029a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0029f	8b e5		 mov	 esp, ebp
  002a1	5d		 pop	 ebp
  002a2	c3		 ret	 0
  002a3	90		 npad	 1
$LN21@sort:
  002a4	02 00 00 00	 DD	 2
  002a8	00 00 00 00	 DD	 $LN20@sort
$LN20@sort:
  002ac	cc ff ff ff	 DD	 -52			; ffffffccH
  002b0	0c 00 00 00	 DD	 12			; 0000000cH
  002b4	00 00 00 00	 DD	 $LN17@sort
  002b8	bc ff ff ff	 DD	 -68			; ffffffbcH
  002bc	08 00 00 00	 DD	 8
  002c0	00 00 00 00	 DD	 $LN18@sort
$LN18@sort:
  002c4	74		 DB	 116			; 00000074H
  002c5	65		 DB	 101			; 00000065H
  002c6	6d		 DB	 109			; 0000006dH
  002c7	70		 DB	 112			; 00000070H
  002c8	50		 DB	 80			; 00000050H
  002c9	74		 DB	 116			; 00000074H
  002ca	72		 DB	 114			; 00000072H
  002cb	00		 DB	 0
$LN17@sort:
  002cc	6e		 DB	 110			; 0000006eH
  002cd	65		 DB	 101			; 00000065H
  002ce	77		 DB	 119			; 00000077H
  002cf	49		 DB	 73			; 00000049H
  002d0	74		 DB	 116			; 00000074H
  002d1	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$0:
  00000	8d 4d cc	 lea	 ecx, DWORD PTR _newIt$10[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$1:
  00008	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$2:
  00013	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  00019	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$3:
  0001e	8d 8d a8 fe ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00024	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$4:
  00029	8d 4d bc	 lea	 ecx, DWORD PTR _tempPtr$9[ebp]
  0002c	e9 00 00 00 00	 jmp	 ??1?$shared_ptr@VCContact@@@std@@QAE@XZ ; std::shared_ptr<CContact>::~shared_ptr<CContact>
__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$5:
  00031	8d 8d 94 fe ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00037	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z$6:
  0003c	8d 8d 80 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00042	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VCContact@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z:
  00047	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0004b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0004e	8b 8a 68 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-408]
  00054	33 c8		 xor	 ecx, eax
  00056	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z
  00060	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?sort@Chris@@YAXAAV?$vector@V?$shared_ptr@VCContact@@@std@@V?$allocator@V?$shared_ptr@VCContact@@@std@@@2@@std@@@Z ENDP ; Chris::sort
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
__Byte$ = 8						; size = 4
__File$ = 12						; size = 4
??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z PROC		; std::_Ungetc<char>, COMDAT

; 106  : 	{	// put back a char element to a C stream

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 107  : 	return (ungetc((unsigned char)_Byte, _File) != EOF);

  0001e	8b f4		 mov	 esi, esp
  00020	8b 45 0c	 mov	 eax, DWORD PTR __File$[ebp]
  00023	50		 push	 eax
  00024	8b 4d 08	 mov	 ecx, DWORD PTR __Byte$[ebp]
  00027	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  0002a	52		 push	 edx
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ungetc
  00031	83 c4 08	 add	 esp, 8
  00034	3b f4		 cmp	 esi, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	83 f8 ff	 cmp	 eax, -1
  0003e	74 0c		 je	 SHORT $LN3@Ungetc
  00040	c7 85 3c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv69[ebp], 1
  0004a	eb 0a		 jmp	 SHORT $LN4@Ungetc
$LN3@Ungetc:
  0004c	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv69[ebp], 0
$LN4@Ungetc:
  00056	8a 85 3c ff ff
	ff		 mov	 al, BYTE PTR tv69[ebp]

; 108  : 	}

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  00065	3b ec		 cmp	 ebp, esp
  00067	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c3		 ret	 0
??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z ENDP		; std::_Ungetc<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
__Byte$ = 8						; size = 1
__File$ = 12						; size = 4
??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z PROC		; std::_Fputc<char>, COMDAT

; 82   : 	{	// put a char element to a C stream

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 83   : 	return (fputc(_Byte, _File) != EOF);

  0001e	8b f4		 mov	 esi, esp
  00020	8b 45 0c	 mov	 eax, DWORD PTR __File$[ebp]
  00023	50		 push	 eax
  00024	0f be 4d 08	 movsx	 ecx, BYTE PTR __Byte$[ebp]
  00028	51		 push	 ecx
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fputc
  0002f	83 c4 08	 add	 esp, 8
  00032	3b f4		 cmp	 esi, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	83 f8 ff	 cmp	 eax, -1
  0003c	74 0c		 je	 SHORT $LN3@Fputc
  0003e	c7 85 3c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv69[ebp], 1
  00048	eb 0a		 jmp	 SHORT $LN4@Fputc
$LN3@Fputc:
  0004a	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv69[ebp], 0
$LN4@Fputc:
  00054	8a 85 3c ff ff
	ff		 mov	 al, BYTE PTR tv69[ebp]

; 84   : 	}

  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
  0005c	5b		 pop	 ebx
  0005d	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  00063	3b ec		 cmp	 ebp, esp
  00065	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z ENDP		; std::_Fputc<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\fstream
;	COMDAT ??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z
_TEXT	SEGMENT
__Meta$ = -8						; size = 4
__Byte$ = 8						; size = 4
__File$ = 12						; size = 4
??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z PROC		; std::_Fgetc<char>, COMDAT

; 37   : 	{	// get a char element from a C stream

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 38   : 	int _Meta;
; 39   : 	if ((_Meta = fgetc(_File)) == EOF)

  0001e	8b f4		 mov	 esi, esp
  00020	8b 45 0c	 mov	 eax, DWORD PTR __File$[ebp]
  00023	50		 push	 eax
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fgetc
  0002a	83 c4 04	 add	 esp, 4
  0002d	3b f4		 cmp	 esi, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	89 45 f8	 mov	 DWORD PTR __Meta$[ebp], eax
  00037	83 7d f8 ff	 cmp	 DWORD PTR __Meta$[ebp], -1
  0003b	75 06		 jne	 SHORT $LN2@Fgetc

; 40   : 		return (false);

  0003d	32 c0		 xor	 al, al
  0003f	eb 0c		 jmp	 SHORT $LN1@Fgetc

; 41   : 	else

  00041	eb 0a		 jmp	 SHORT $LN1@Fgetc
$LN2@Fgetc:

; 42   : 		{	// got one, convert to char
; 43   : 		_Byte = (char)_Meta;

  00043	8b 45 08	 mov	 eax, DWORD PTR __Byte$[ebp]
  00046	8a 4d f8	 mov	 cl, BYTE PTR __Meta$[ebp]
  00049	88 08		 mov	 BYTE PTR [eax], cl

; 44   : 		return (true);

  0004b	b0 01		 mov	 al, 1
$LN1@Fgetc:

; 45   : 		}
; 46   : 	}

  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00056	3b ec		 cmp	 ebp, esp
  00058	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z ENDP		; std::_Fgetc<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\contact.h
;	COMDAT ??O@YA_NAAVCContact@@0@Z
_TEXT	SEGMENT
_lhs$ = 8						; size = 4
_rhs$ = 12						; size = 4
??O@YA_NAAVCContact@@0@Z PROC				; operator>, COMDAT

; 24   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 25   : 		return lhs.greater(rhs);

  0001e	8b f4		 mov	 esi, esp
  00020	8b 45 0c	 mov	 eax, DWORD PTR _rhs$[ebp]
  00023	50		 push	 eax
  00024	8b 4d 08	 mov	 ecx, DWORD PTR _lhs$[ebp]
  00027	8b 11		 mov	 edx, DWORD PTR [ecx]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _lhs$[ebp]
  0002c	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  0002f	ff d0		 call	 eax
  00031	3b f4		 cmp	 esi, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 26   : 	}

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00041	3b ec		 cmp	 ebp, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
??O@YA_NAAVCContact@@0@Z ENDP				; operator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gtext_oarchive@archive@boost@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gtext_oarchive@archive@boost@@UAEPAXI@Z PROC		; boost::archive::text_oarchive::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1text_oarchive@archive@boost@@UAE@XZ ; boost::archive::text_oarchive::~text_oarchive
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0e		 je	 SHORT $LN2@scalar
  00033	6a 60		 push	 96			; 00000060H
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003e	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
??_Gtext_oarchive@archive@boost@@UAEPAXI@Z ENDP		; boost::archive::text_oarchive::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_oarchive.hpp
;	COMDAT ??1text_oarchive@archive@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1text_oarchive@archive@boost@@UAE@XZ PROC		; boost::archive::text_oarchive::~text_oarchive, COMDAT
; _this$ = ecx

; 106  :     ~text_oarchive(){}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7text_oarchive@archive@boost@@6B@
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ??1?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@MAE@XZ ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::~text_oarchive_impl<boost::archive::text_oarchive>
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
??1text_oarchive@archive@boost@@UAE@XZ ENDP		; boost::archive::text_oarchive::~text_oarchive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_oarchive.hpp
;	COMDAT ??0text_oarchive@archive@boost@@QAE@AAV?$basic_ostream@DU?$char_traits@D@std@@@std@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_os_$ = 8						; size = 4
_flags$ = 12						; size = 4
??0text_oarchive@archive@boost@@QAE@AAV?$basic_ostream@DU?$char_traits@D@std@@@std@@I@Z PROC ; boost::archive::text_oarchive::text_oarchive, COMDAT
; _this$ = ecx

; 105  :     {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 104  :         text_oarchive_impl<text_oarchive>(os_, flags)

  00023	8b 45 0c	 mov	 eax, DWORD PTR _flags$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _os_$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAE@AAV?$basic_ostream@DU?$char_traits@D@std@@@std@@I@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::text_oarchive_impl<boost::archive::text_oarchive>

; 105  :     {}

  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7text_oarchive@archive@boost@@6B@
  0003c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c2 08 00	 ret	 8
??0text_oarchive@archive@boost@@QAE@AAV?$basic_ostream@DU?$char_traits@D@std@@@std@@I@Z ENDP ; boost::archive::text_oarchive::text_oarchive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@MAEPAXI@Z PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@MAE@XZ ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::~text_oarchive_impl<boost::archive::text_oarchive>
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0e		 je	 SHORT $LN2@scalar
  00033	6a 60		 push	 96			; 00000060H
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003e	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
??_G?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@MAEPAXI@Z ENDP ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_oarchive.hpp
;	COMDAT ??1?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@MAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@MAE@XZ PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::~text_oarchive_impl<boost::archive::text_oarchive>, COMDAT
; _this$ = ecx

; 89   :     ~text_oarchive_impl(){};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@6B@
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ??1?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@MAE@XZ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::~basic_text_oarchive<boost::archive::text_oarchive>
  00034	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 c1 20	 add	 ecx, 32			; 00000020H
  0003a	e8 00 00 00 00	 call	 ??1?$basic_text_oprimitive@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAE@XZ ; boost::archive::basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >::~basic_text_oprimitive<std::basic_ostream<char,std::char_traits<char> > >
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
??1?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@MAE@XZ ENDP ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::~text_oarchive_impl<boost::archive::text_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_oarchive.hpp
;	COMDAT ?save@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVversion_type@23@@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?save@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVversion_type@23@@Z PROC ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save, COMDAT
; _this$ = ecx

; 67   :     void save(const version_type & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 68   :         save(static_cast<const unsigned int>(t));

  00023	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00026	e8 00 00 00 00	 call	 ??Bversion_type@archive@boost@@QBEIXZ ; boost::archive::version_type::operator unsigned int
  0002b	89 85 2c ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  00031	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00037	50		 push	 eax
  00038	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ??$save@I@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABI@Z ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save<unsigned int>

; 69   :     }

  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 04 00	 ret	 4
?save@?$text_oarchive_impl@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVversion_type@23@@Z ENDP ; boost::archive::text_oarchive_impl<boost::archive::text_oarchive>::save
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@MAEPAXI@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@MAE@XZ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::~basic_text_oarchive<boost::archive::text_oarchive>
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0e		 je	 SHORT $LN2@scalar
  00033	6a 1c		 push	 28			; 0000001cH
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003e	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
??_G?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@MAEPAXI@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ??1?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@MAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@MAE@XZ PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::~basic_text_oarchive<boost::archive::text_oarchive>, COMDAT
; _this$ = ecx

; 107  :     ~basic_text_oarchive(){}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@6B@
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ??1?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@UAE@XZ
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
??1?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@MAE@XZ ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::~basic_text_oarchive<boost::archive::text_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z
_TEXT	SEGMENT
_s$ = -60						; size = 28
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override, COMDAT
; _this$ = ecx

; 95   :     void save_override(const class_name_type & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec f4 00 00
	00		 sub	 esp, 244		; 000000f4H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 00 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-256]
  00021	b9 3d 00 00 00	 mov	 ecx, 61			; 0000003dH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 96   :         const std::string s(t);

  00045	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00048	e8 00 00 00 00	 call	 ??Bclass_name_type@archive@boost@@QBEAAPBDXZ ; boost::archive::class_name_type::operator char const * &
  0004d	8b 00		 mov	 eax, DWORD PTR [eax]
  0004f	50		 push	 eax
  00050	8d 4d c4	 lea	 ecx, DWORD PTR _s$[ebp]
  00053	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00058	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 97   :         * this->This() << s;

  0005f	8d 45 c4	 lea	 eax, DWORD PTR _s$[ebp]
  00062	50		 push	 eax
  00063	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	83 c1 18	 add	 ecx, 24			; 00000018H
  00069	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  0006e	83 c0 18	 add	 eax, 24			; 00000018H
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??$?6V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 98   :     }

  00078	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007f	8d 4d c4	 lea	 ecx, DWORD PTR _s$[ebp]
  00082	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00087	52		 push	 edx
  00088	8b cd		 mov	 ecx, ebp
  0008a	50		 push	 eax
  0008b	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@save_overr
  00091	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00096	58		 pop	 eax
  00097	5a		 pop	 edx
  00098	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a2	59		 pop	 ecx
  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	5b		 pop	 ebx
  000a6	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a9	33 cd		 xor	 ecx, ebp
  000ab	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b0	81 c4 00 01 00
	00		 add	 esp, 256		; 00000100H
  000b6	3b ec		 cmp	 ebp, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 04 00	 ret	 4
  000c3	90		 npad	 1
$LN7@save_overr:
  000c4	01 00 00 00	 DD	 1
  000c8	00 00 00 00	 DD	 $LN6@save_overr
$LN6@save_overr:
  000cc	c4 ff ff ff	 DD	 -60			; ffffffc4H
  000d0	1c 00 00 00	 DD	 28			; 0000001cH
  000d4	00 00 00 00	 DD	 $LN4@save_overr
$LN4@save_overr:
  000d8	73		 DB	 115			; 00000073H
  000d9	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z$0:
  00000	8d 4d c4	 lea	 ecx, DWORD PTR _s$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a fc fe ff
	ff		 mov	 ecx, DWORD PTR [edx-260]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z
  0002b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABUclass_name_type@23@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_optional_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_optional_type@23@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override, COMDAT
; _this$ = ecx

; 93   :     void save_override(const class_id_optional_type & /* t */){}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVclass_id_optional_type@23@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_id_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_id_type@23@@Z PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override, COMDAT
; _this$ = ecx

; 87   :     void save_override(const object_id_type & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 88   :         this->This()->newline();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	83 c1 18	 add	 ecx, 24			; 00000018H
  00029	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  0002e	8b c8		 mov	 ecx, eax
  00030	e8 00 00 00 00	 call	 ?newline@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::newline

; 89   :         this->detail_common_oarchive::save_override(t);

  00035	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00038	50		 push	 eax
  00039	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	e8 00 00 00 00	 call	 ??$save_override@$$CBVobject_id_type@archive@boost@@@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@IAEXABVobject_id_type@23@@Z ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::save_override<boost::archive::object_id_type const >

; 90   :     }

  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5b		 pop	 ebx
  00044	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
?save_override@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXABVobject_id_type@23@@Z ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::save_override
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_oarchive.hpp
;	COMDAT ?newline@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?newline@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ PROC ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::newline, COMDAT
; _this$ = ecx

; 74   :     void newline(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 75   :         delimiter = eol;

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 40 18 01 00
	00 00		 mov	 DWORD PTR [eax+24], 1

; 76   :     }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?newline@?$basic_text_oarchive@Vtext_oarchive@archive@boost@@@archive@boost@@IAEXXZ ENDP ; boost::archive::basic_text_oarchive<boost::archive::text_oarchive>::newline
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@UAE@XZ PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::~common_oarchive<boost::archive::text_oarchive>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1basic_oarchive@detail@archive@boost@@MAE@XZ ; boost::archive::detail::basic_oarchive::~basic_oarchive
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@UAE@XZ ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::~common_oarchive<boost::archive::text_oarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXUtracking_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 1
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXUtracking_type@34@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave, COMDAT
; _this$ = ecx

; 63   :     virtual void vsave(const tracking_type t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 64   :         * this->This() << t;

  00023	8d 45 08	 lea	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  00032	83 c0 18	 add	 eax, 24			; 00000018H
  00035	8b c8		 mov	 ecx, eax
  00037	e8 00 00 00 00	 call	 ??$?6Utracking_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABUtracking_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::tracking_type>

; 65   :     }

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXUtracking_type@34@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXABUclass_name_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXABUclass_name_type@34@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave, COMDAT
; _this$ = ecx

; 60   :     virtual void vsave(const class_name_type & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 61   :         * this->This() << t;

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  00032	83 c0 18	 add	 eax, 24			; 00000018H
  00035	8b c8		 mov	 ecx, eax
  00037	e8 00 00 00 00	 call	 ??$?6Uclass_name_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABUclass_name_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_name_type>

; 62   :     }

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXABUclass_name_type@34@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_optional_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 2
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_optional_type@34@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave, COMDAT
; _this$ = ecx

; 57   :     virtual void vsave(const class_id_optional_type t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 58   :         * this->This() << t;

  00023	8d 45 08	 lea	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  00032	83 c0 18	 add	 eax, 24			; 00000018H
  00035	8b c8		 mov	 ecx, eax
  00037	e8 00 00 00 00	 call	 ??$?6Vclass_id_optional_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_optional_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_id_optional_type>

; 59   :     }

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_optional_type@34@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_reference_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 2
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_reference_type@34@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave, COMDAT
; _this$ = ecx

; 54   :     virtual void vsave(const class_id_reference_type t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 55   :         * this->This() << t;

  00023	8d 45 08	 lea	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  00032	83 c0 18	 add	 eax, 24			; 00000018H
  00035	8b c8		 mov	 ecx, eax
  00037	e8 00 00 00 00	 call	 ??$?6Vclass_id_reference_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_reference_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_id_reference_type>

; 56   :     }

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_reference_type@34@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 2
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_type@34@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave, COMDAT
; _this$ = ecx

; 51   :     virtual void vsave(const class_id_type t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 52   :         * this->This() << t;

  00023	8d 45 08	 lea	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  00032	83 c0 18	 add	 eax, 24			; 00000018H
  00035	8b c8		 mov	 ecx, eax
  00037	e8 00 00 00 00	 call	 ??$?6Vclass_id_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVclass_id_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::class_id_type>

; 53   :     }

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVclass_id_type@34@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_reference_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_reference_type@34@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave, COMDAT
; _this$ = ecx

; 48   :     virtual void vsave(const object_reference_type t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 49   :         * this->This() << t;

  00023	8d 45 08	 lea	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  00032	83 c0 18	 add	 eax, 24			; 00000018H
  00035	8b c8		 mov	 ecx, eax
  00037	e8 00 00 00 00	 call	 ??$?6Vobject_reference_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVobject_reference_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::object_reference_type>

; 50   :     }

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_reference_type@34@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_id_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_id_type@34@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave, COMDAT
; _this$ = ecx

; 45   :     virtual void vsave(const object_id_type t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 46   :         * this->This() << t;

  00023	8d 45 08	 lea	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  00032	83 c0 18	 add	 eax, 24			; 00000018H
  00035	8b c8		 mov	 ecx, eax
  00037	e8 00 00 00 00	 call	 ??$?6Vobject_id_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVobject_id_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::object_id_type>

; 47   :     }

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVobject_id_type@34@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_oarchive.hpp
;	COMDAT ?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVversion_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVversion_type@34@@Z PROC ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave, COMDAT
; _this$ = ecx

; 42   :     virtual void vsave(const version_type t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 43   :         * this->This() << t;

  00023	8d 45 08	 lea	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
  00032	83 c0 18	 add	 eax, 24			; 00000018H
  00035	8b c8		 mov	 ecx, eax
  00037	e8 00 00 00 00	 call	 ??$?6Vversion_type@archive@boost@@@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_oarchive@23@ABVversion_type@23@@Z ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::operator<<<boost::archive::version_type>

; 44   :     }

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?vsave@?$common_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@EAEXVversion_type@34@@Z ENDP ; boost::archive::detail::common_oarchive<boost::archive::text_oarchive>::vsave
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_oarchive.hpp
;	COMDAT ?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ PROC ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This, COMDAT
; _this$ = ecx

; 46   :     Archive * This(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 47   :         return static_cast<Archive *>(this);

  00023	83 7d f8 00	 cmp	 DWORD PTR _this$[ebp], 0
  00027	74 0e		 je	 SHORT $LN3@This
  00029	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	83 e8 18	 sub	 eax, 24			; 00000018H
  0002f	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv68[ebp], eax
  00035	eb 0a		 jmp	 SHORT $LN4@This
$LN3@This:
  00037	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv68[ebp], 0
$LN4@This:
  00041	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv68[ebp]

; 48   :     }

  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?This@?$interface_oarchive@Vtext_oarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_oarchive@34@XZ ENDP ; boost::archive::detail::interface_oarchive<boost::archive::text_oarchive>::This
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\basic_oserializer.hpp
;	COMDAT ?serialized_as_pointer@basic_oserializer@detail@archive@boost@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
?serialized_as_pointer@basic_oserializer@detail@archive@boost@@QBE_NXZ PROC ; boost::archive::detail::basic_oserializer::serialized_as_pointer, COMDAT
; _this$ = ecx

; 57   :     bool serialized_as_pointer() const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 58   :         return m_bpos != NULL;

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0002a	74 0c		 je	 SHORT $LN3@serialized
  0002c	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv66[ebp], 1
  00036	eb 0a		 jmp	 SHORT $LN4@serialized
$LN3@serialized:
  00038	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv66[ebp], 0
$LN4@serialized:
  00042	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv66[ebp]

; 59   :     }

  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
?serialized_as_pointer@basic_oserializer@detail@archive@boost@@QBE_NXZ ENDP ; boost::archive::detail::basic_oserializer::serialized_as_pointer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gtext_iarchive@archive@boost@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gtext_iarchive@archive@boost@@UAEPAXI@Z PROC		; boost::archive::text_iarchive::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1text_iarchive@archive@boost@@UAE@XZ ; boost::archive::text_iarchive::~text_iarchive
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0e		 je	 SHORT $LN2@scalar
  00033	6a 58		 push	 88			; 00000058H
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003e	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
??_Gtext_iarchive@archive@boost@@UAEPAXI@Z ENDP		; boost::archive::text_iarchive::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??1text_iarchive@archive@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1text_iarchive@archive@boost@@UAE@XZ PROC		; boost::archive::text_iarchive::~text_iarchive, COMDAT
; _this$ = ecx

; 119  :     ~text_iarchive(){}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7text_iarchive@archive@boost@@6B@
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ??1?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@MAE@XZ ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::~text_iarchive_impl<boost::archive::text_iarchive>
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
??1text_iarchive@archive@boost@@UAE@XZ ENDP		; boost::archive::text_iarchive::~text_iarchive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??0text_iarchive@archive@boost@@QAE@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_is_$ = 8						; size = 4
_flags$ = 12						; size = 4
??0text_iarchive@archive@boost@@QAE@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@I@Z PROC ; boost::archive::text_iarchive::text_iarchive, COMDAT
; _this$ = ecx

; 118  :     {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 117  :         text_iarchive_impl<text_iarchive>(is_, flags)

  00023	8b 45 0c	 mov	 eax, DWORD PTR _flags$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _is_$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAE@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@I@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::text_iarchive_impl<boost::archive::text_iarchive>

; 118  :     {}

  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7text_iarchive@archive@boost@@6B@
  0003c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c2 08 00	 ret	 8
??0text_iarchive@archive@boost@@QAE@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@I@Z ENDP ; boost::archive::text_iarchive::text_iarchive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@MAEPAXI@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@MAE@XZ ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::~text_iarchive_impl<boost::archive::text_iarchive>
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0e		 je	 SHORT $LN2@scalar
  00033	6a 58		 push	 88			; 00000058H
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003e	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
??_G?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@MAEPAXI@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ??1?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@MAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@MAE@XZ PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::~text_iarchive_impl<boost::archive::text_iarchive>, COMDAT
; _this$ = ecx

; 92   :     ~text_iarchive_impl(){};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@6B@
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ??1?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@MAE@XZ ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::~basic_text_iarchive<boost::archive::text_iarchive>
  00034	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 c1 18	 add	 ecx, 24			; 00000018H
  0003a	e8 00 00 00 00	 call	 ??1?$basic_text_iprimitive@V?$basic_istream@DU?$char_traits@D@std@@@std@@@archive@boost@@IAE@XZ ; boost::archive::basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >::~basic_text_iprimitive<std::basic_istream<char,std::char_traits<char> > >
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
??1?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@MAE@XZ ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::~text_iarchive_impl<boost::archive::text_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\text_iarchive.hpp
;	COMDAT ?load@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@23@@Z
_TEXT	SEGMENT
$T1 = -224						; size = 4
_v$ = -20						; size = 4
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?load@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@23@@Z PROC ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load, COMDAT
; _this$ = ecx

; 58   :     void load(version_type & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00013	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 59   :         unsigned int v;
; 60   :         load(v);

  00023	8d 45 ec	 lea	 eax, DWORD PTR _v$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??$load@I@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAI@Z ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load<unsigned int>

; 61   :         t = version_type(v);

  0002f	8d 45 ec	 lea	 eax, DWORD PTR _v$[ebp]
  00032	50		 push	 eax
  00033	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00039	e8 00 00 00 00	 call	 ??0version_type@archive@boost@@QAE@ABI@Z ; boost::archive::version_type::version_type
  0003e	50		 push	 eax
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00042	e8 00 00 00 00	 call	 ??4version_type@archive@boost@@QAEAAV012@ABV012@@Z ; boost::archive::version_type::operator=

; 62   :     }

  00047	52		 push	 edx
  00048	8b cd		 mov	 ecx, ebp
  0004a	50		 push	 eax
  0004b	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@load
  00051	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00056	58		 pop	 eax
  00057	5a		 pop	 edx
  00058	5f		 pop	 edi
  00059	5e		 pop	 esi
  0005a	5b		 pop	 ebx
  0005b	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  00061	3b ec		 cmp	 ebp, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c2 04 00	 ret	 4
  0006e	66 90		 npad	 2
$LN5@load:
  00070	01 00 00 00	 DD	 1
  00074	00 00 00 00	 DD	 $LN4@load
$LN4@load:
  00078	ec ff ff ff	 DD	 -20			; ffffffecH
  0007c	04 00 00 00	 DD	 4
  00080	00 00 00 00	 DD	 $LN3@load
$LN3@load:
  00084	76		 DB	 118			; 00000076H
  00085	00		 DB	 0
?load@?$text_iarchive_impl@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVversion_type@23@@Z ENDP ; boost::archive::text_iarchive_impl<boost::archive::text_iarchive>::load
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@MAEPAXI@Z PROC ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@MAE@XZ ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::~basic_text_iarchive<boost::archive::text_iarchive>
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0e		 je	 SHORT $LN2@scalar
  00033	6a 18		 push	 24			; 00000018H
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003e	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
??_G?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@MAEPAXI@Z ENDP ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iarchive.hpp
;	COMDAT ??1?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@MAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@MAE@XZ PROC ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::~basic_text_iarchive<boost::archive::text_iarchive>, COMDAT
; _this$ = ecx

; 84   :     ~basic_text_iarchive(){}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@6B@
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ??1?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@UAE@XZ
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
??1?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@MAE@XZ ENDP ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::~basic_text_iarchive<boost::archive::text_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_text_iarchive.hpp
;	COMDAT ?load_override@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_optional_type@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?load_override@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_optional_type@23@@Z PROC ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override, COMDAT
; _this$ = ecx

; 73   :     void load_override(class_id_optional_type & /*t*/){}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?load_override@?$basic_text_iarchive@Vtext_iarchive@archive@boost@@@archive@boost@@IAEXAAVclass_id_optional_type@23@@Z ENDP ; boost::archive::basic_text_iarchive<boost::archive::text_iarchive>::load_override
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@UAE@XZ PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::~common_iarchive<boost::archive::text_iarchive>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1basic_iarchive@detail@archive@boost@@UAE@XZ ; boost::archive::detail::basic_iarchive::~basic_iarchive
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@UAE@XZ ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::~common_iarchive<boost::archive::text_iarchive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUclass_name_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUclass_name_type@34@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload, COMDAT
; _this$ = ecx

; 59   :     virtual void vload(class_name_type &s){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 60   :         * this->This() >> s;

  00023	8b 45 08	 mov	 eax, DWORD PTR _s$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
  00032	83 c0 18	 add	 eax, 24			; 00000018H
  00035	8b c8		 mov	 ecx, eax
  00037	e8 00 00 00 00	 call	 ??$?5Uclass_name_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAUclass_name_type@23@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::class_name_type>

; 61   :     }

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUclass_name_type@34@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUtracking_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUtracking_type@34@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload, COMDAT
; _this$ = ecx

; 56   :     virtual void vload(tracking_type & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 57   :         * this->This() >> t;

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
  00032	83 c0 18	 add	 eax, 24			; 00000018H
  00035	8b c8		 mov	 ecx, eax
  00037	e8 00 00 00 00	 call	 ??$?5Utracking_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAUtracking_type@23@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::tracking_type>

; 58   :     }

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAUtracking_type@34@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_optional_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_optional_type@34@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload, COMDAT
; _this$ = ecx

; 53   :     virtual void vload(class_id_optional_type & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 54   :         * this->This() >> t;

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
  00032	83 c0 18	 add	 eax, 24			; 00000018H
  00035	8b c8		 mov	 ecx, eax
  00037	e8 00 00 00 00	 call	 ??$?5Vclass_id_optional_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVclass_id_optional_type@23@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::class_id_optional_type>

; 55   :     }

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_optional_type@34@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_type@34@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload, COMDAT
; _this$ = ecx

; 50   :     virtual void vload(class_id_type & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 51   :         * this->This() >> t;

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
  00032	83 c0 18	 add	 eax, 24			; 00000018H
  00035	8b c8		 mov	 ecx, eax
  00037	e8 00 00 00 00	 call	 ??$?5Vclass_id_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVclass_id_type@23@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::class_id_type>

; 52   :     }

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVclass_id_type@34@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVobject_id_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVobject_id_type@34@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload, COMDAT
; _this$ = ecx

; 47   :     virtual void vload(object_id_type & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 48   :         * this->This() >> t;

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
  00032	83 c0 18	 add	 eax, 24			; 00000018H
  00035	8b c8		 mov	 ecx, eax
  00037	e8 00 00 00 00	 call	 ??$?5Vobject_id_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVobject_id_type@23@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::object_id_type>

; 49   :     }

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVobject_id_type@34@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\common_iarchive.hpp
;	COMDAT ?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVversion_type@34@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVversion_type@34@@Z PROC ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload, COMDAT
; _this$ = ecx

; 44   :     virtual void vload(version_type & t){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 45   :         * this->This() >> t; 

  00023	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 18	 add	 ecx, 24			; 00000018H
  0002d	e8 00 00 00 00	 call	 ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
  00032	83 c0 18	 add	 eax, 24			; 00000018H
  00035	8b c8		 mov	 ecx, eax
  00037	e8 00 00 00 00	 call	 ??$?5Vversion_type@archive@boost@@@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEAAVtext_iarchive@23@AAVversion_type@23@@Z ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::operator>><boost::archive::version_type>

; 46   :     }

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?vload@?$common_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@EAEXAAVversion_type@34@@Z ENDP ; boost::archive::detail::common_iarchive<boost::archive::text_iarchive>::vload
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\interface_iarchive.hpp
;	COMDAT ?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ PROC ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This, COMDAT
; _this$ = ecx

; 45   :     Archive * This(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 46   :         return static_cast<Archive *>(this);

  00023	83 7d f8 00	 cmp	 DWORD PTR _this$[ebp], 0
  00027	74 0e		 je	 SHORT $LN3@This
  00029	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	83 e8 18	 sub	 eax, 24			; 00000018H
  0002f	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv68[ebp], eax
  00035	eb 0a		 jmp	 SHORT $LN4@This
$LN3@This:
  00037	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv68[ebp], 0
$LN4@This:
  00041	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv68[ebp]

; 47   :     }

  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?This@?$interface_iarchive@Vtext_iarchive@archive@boost@@@detail@archive@boost@@QAEPAVtext_iarchive@34@XZ ENDP ; boost::archive::detail::interface_iarchive<boost::archive::text_iarchive>::This
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\detail\basic_iserializer.hpp
;	COMDAT ?serialized_as_pointer@basic_iserializer@detail@archive@boost@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
?serialized_as_pointer@basic_iserializer@detail@archive@boost@@QBE_NXZ PROC ; boost::archive::detail::basic_iserializer::serialized_as_pointer, COMDAT
; _this$ = ecx

; 56   :     bool serialized_as_pointer() const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 57   :         return m_bpis != NULL;

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0002a	74 0c		 je	 SHORT $LN3@serialized
  0002c	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv66[ebp], 1
  00036	eb 0a		 jmp	 SHORT $LN4@serialized
$LN3@serialized:
  00038	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv66[ebp], 0
$LN4@serialized:
  00042	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv66[ebp]

; 58   :     }

  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
?serialized_as_pointer@basic_iserializer@detail@archive@boost@@QBE_NXZ ENDP ; boost::archive::detail::basic_iserializer::serialized_as_pointer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??Bversion_type@serialization@boost@@QBEABIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bversion_type@serialization@boost@@QBEABIXZ PROC	; boost::serialization::version_type::operator unsigned int const &, COMDAT
; _this$ = ecx

; 61   : BOOST_STRONG_TYPEDEF(unsigned int, version_type)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??Bversion_type@serialization@boost@@QBEABIXZ ENDP	; boost::serialization::version_type::operator unsigned int const &
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\serialization.hpp
;	COMDAT ??0version_type@serialization@boost@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t_$ = 8						; size = 4
??0version_type@serialization@boost@@QAE@I@Z PROC	; boost::serialization::version_type::version_type, COMDAT
; _this$ = ecx

; 61   : BOOST_STRONG_TYPEDEF(unsigned int, version_type)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _t_$[ebp]
  00029	89 08		 mov	 DWORD PTR [eax], ecx
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 04 00	 ret	 4
??0version_type@serialization@boost@@QAE@I@Z ENDP	; boost::serialization::version_type::version_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\serialization\extended_type_info_typeid.hpp
;	COMDAT ?get_debug_info@extended_type_info_typeid_0@typeid_system@serialization@boost@@EBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get_debug_info@extended_type_info_typeid_0@typeid_system@serialization@boost@@EBEPBDXZ PROC ; boost::serialization::typeid_system::extended_type_info_typeid_0::get_debug_info, COMDAT
; _this$ = ecx

; 55   :     virtual const char * get_debug_info() const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 56   :         if(static_cast<const std::type_info *>(0) == m_ti)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0002a	75 04		 jne	 SHORT $LN2@get_debug_

; 57   :             return static_cast<const char *>(0);

  0002c	33 c0		 xor	 eax, eax
  0002e	eb 0b		 jmp	 SHORT $LN1@get_debug_
$LN2@get_debug_:

; 58   :         return m_ti->name();

  00030	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00036	e8 00 00 00 00	 call	 ?name@type_info@@QBEPBDXZ ; type_info::name
$LN1@get_debug_:

; 59   :     }

  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
?get_debug_info@extended_type_info_typeid_0@typeid_system@serialization@boost@@EBEPBDXZ ENDP ; boost::serialization::typeid_system::extended_type_info_typeid_0::get_debug_info
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??Bclass_name_type@archive@boost@@QBEAAPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bclass_name_type@archive@boost@@QBEAAPBDXZ PROC	; boost::archive::class_name_type::operator char const * &, COMDAT
; _this$ = ecx

; 218  :     operator const char * & () const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 219  :         return const_cast<const char * &>(t);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 220  :     }

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??Bclass_name_type@archive@boost@@QBEAAPBDXZ ENDP	; boost::archive::class_name_type::operator char const * &
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??Btracking_type@archive@boost@@QAEAA_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Btracking_type@archive@boost@@QAEAA_NXZ PROC		; boost::archive::tracking_type::operator bool &, COMDAT
; _this$ = ecx

; 195  :     operator bool & () {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 196  :         return t;

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 197  :     };

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??Btracking_type@archive@boost@@QAEAA_NXZ ENDP		; boost::archive::tracking_type::operator bool &
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??Btracking_type@archive@boost@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Btracking_type@archive@boost@@QBE_NXZ PROC		; boost::archive::tracking_type::operator bool, COMDAT
; _this$ = ecx

; 192  :     operator bool () const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 193  :         return t;

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8a 00		 mov	 al, BYTE PTR [eax]

; 194  :     };

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
??Btracking_type@archive@boost@@QBE_NXZ ENDP		; boost::archive::tracking_type::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??Bobject_id_type@archive@boost@@QAEAAIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bobject_id_type@archive@boost@@QAEAAIXZ PROC		; boost::archive::object_id_type::operator unsigned int &, COMDAT
; _this$ = ecx

; 169  :     operator uint_least32_t & () {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 170  :         return t;

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 171  :     }                

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??Bobject_id_type@archive@boost@@QAEAAIXZ ENDP		; boost::archive::object_id_type::operator unsigned int &
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??Bobject_id_type@archive@boost@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bobject_id_type@archive@boost@@QBEIXZ PROC		; boost::archive::object_id_type::operator unsigned int, COMDAT
; _this$ = ecx

; 165  :     operator uint_least32_t () const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 166  :         return t;

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 00		 mov	 eax, DWORD PTR [eax]

; 167  :     }                

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
??Bobject_id_type@archive@boost@@QBEIXZ ENDP		; boost::archive::object_id_type::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??Bclass_id_type@archive@boost@@QAEAAFXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bclass_id_type@archive@boost@@QAEAAFXZ PROC		; boost::archive::class_id_type::operator short &, COMDAT
; _this$ = ecx

; 134  :     operator int_least16_t &() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 135  :         return t;

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 136  :     }                

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??Bclass_id_type@archive@boost@@QAEAAFXZ ENDP		; boost::archive::class_id_type::operator short &
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??Bclass_id_type@archive@boost@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bclass_id_type@archive@boost@@QBEHXZ PROC		; boost::archive::class_id_type::operator int, COMDAT
; _this$ = ecx

; 130  :     operator int () const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 131  :         return t;

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	0f bf 00	 movsx	 eax, WORD PTR [eax]

; 132  :     }                

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??Bclass_id_type@archive@boost@@QBEHXZ ENDP		; boost::archive::class_id_type::operator int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??Bversion_type@archive@boost@@QAEAAIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bversion_type@archive@boost@@QAEAAIXZ PROC		; boost::archive::version_type::operator unsigned int &, COMDAT
; _this$ = ecx

; 97   :     operator base_type  & (){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 98   :         return t;

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 99   :     }                

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??Bversion_type@archive@boost@@QAEAAIXZ ENDP		; boost::archive::version_type::operator unsigned int &
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??Bversion_type@archive@boost@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bversion_type@archive@boost@@QBEIXZ PROC		; boost::archive::version_type::operator unsigned int, COMDAT
; _this$ = ecx

; 93   :     operator base_type () const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 94   :         return t;

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 00		 mov	 eax, DWORD PTR [eax]

; 95   :     }                

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
??Bversion_type@archive@boost@@QBEIXZ ENDP		; boost::archive::version_type::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??4version_type@archive@boost@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??4version_type@archive@boost@@QAEAAV012@ABV012@@Z PROC	; boost::archive::version_type::operator=, COMDAT
; _this$ = ecx

; 88   :     version_type & operator=(const version_type & rhs){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 89   :         t = rhs.t; 

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _rhs$[ebp]
  00029	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002b	89 10		 mov	 DWORD PTR [eax], edx

; 90   :         return *this;

  0002d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 91   :     }

  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??4version_type@archive@boost@@QAEAAV012@ABV012@@Z ENDP	; boost::archive::version_type::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\archive\basic_archive.hpp
;	COMDAT ??0version_type@archive@boost@@QAE@ABI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t_$ = 8						; size = 4
??0version_type@archive@boost@@QAE@ABI@Z PROC		; boost::archive::version_type::version_type, COMDAT
; _this$ = ecx

; 82   :     explicit version_type(const unsigned int & t_) : t(t_){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _t_$[ebp]
  00029	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002b	89 10		 mov	 DWORD PTR [eax], edx

; 83   :         BOOST_ASSERT(t_ <= boost::integer_traits<base_type>::const_max);

  0002d	8b 45 08	 mov	 eax, DWORD PTR _t_$[ebp]
  00030	83 38 ff	 cmp	 DWORD PTR [eax], -1
  00033	76 1e		 jbe	 SHORT $LN1@version_ty
  00035	8b f4		 mov	 esi, esp
  00037	6a 53		 push	 83			; 00000053H
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@DBEBMPEE@?$AAs?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAb?$AAo?$AAo?$AAs?$AAt?$AA_@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_1GE@MNCNLAH@?$AAt?$AA_?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAb?$AAo?$AAo?$AAs?$AAt?$AA?3?$AA?3?$AAi?$AAn?$AAt?$AAe?$AAg?$AAe?$AAr?$AA_?$AAt?$AAr?$AAa?$AAi?$AAt?$AAs?$AA?$DM?$AAb?$AAa?$AAs?$AAe@
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00049	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004c	3b f4		 cmp	 esi, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@version_ty:

; 84   :     }

  00053	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0005f	3b ec		 cmp	 ebp, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c2 04 00	 ret	 4
??0version_type@archive@boost@@QAE@ABI@Z ENDP		; boost::archive::version_type::version_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Darchive_exception@archive@boost@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??_Darchive_exception@archive@boost@@QAEXXZ PROC	; boost::archive::archive_exception::`vbase destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	81 c1 8c 00 00
	00		 add	 ecx, 140		; 0000008cH
  0002c	e8 00 00 00 00	 call	 ??1archive_exception@archive@boost@@UAE@XZ ; boost::archive::archive_exception::~archive_exception
  00031	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	81 c1 8c 00 00
	00		 add	 ecx, 140		; 0000008cH
  0003a	e8 00 00 00 00	 call	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
??_Darchive_exception@archive@boost@@QAEXXZ ENDP	; boost::archive::archive_exception::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\io\ios_state.hpp
;	COMDAT ?restore@ios_precision_saver@io@boost@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?restore@ios_precision_saver@io@boost@@QAEXXZ PROC	; boost::io::ios_precision_saver::restore, COMDAT
; _this$ = ecx

; 73   :         { s_save_.precision( a_save_ ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b f4		 mov	 esi, esp
  00025	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0002b	51		 push	 ecx
  0002c	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0002f	52		 push	 edx
  00030	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?precision@ios_base@std@@QAE_J_J@Z
  0003b	3b f4		 cmp	 esi, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?restore@ios_precision_saver@io@boost@@QAEXXZ ENDP	; boost::io::ios_precision_saver::restore
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\io\ios_state.hpp
;	COMDAT ??1ios_precision_saver@io@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1ios_precision_saver@io@boost@@QAE@XZ PROC		; boost::io::ios_precision_saver::~ios_precision_saver, COMDAT
; _this$ = ecx

; 70   :         { this->restore(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1ios_precision_saver@io@boost@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?restore@ios_precision_saver@io@boost@@QAEXXZ ; boost::io::ios_precision_saver::restore
  0004a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00054	59		 pop	 ecx
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1ios_precision_saver@io@boost@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ios_precision_saver@io@boost@@QAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ios_precision_saver@io@boost@@QAE@XZ ENDP		; boost::io::ios_precision_saver::~ios_precision_saver
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\io\ios_state.hpp
;	COMDAT ??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z PROC ; boost::io::ios_precision_saver::ios_precision_saver, COMDAT
; _this$ = ecx

; 65   :         {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 64   :         : s_save_( s ), a_save_( s.precision() )

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _s$[ebp]
  00029	89 08		 mov	 DWORD PTR [eax], ecx
  0002b	8b f4		 mov	 esi, esp
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR _s$[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?precision@ios_base@std@@QBE_JXZ
  00036	3b f4		 cmp	 esi, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00043	89 51 0c	 mov	 DWORD PTR [ecx+12], edx

; 65   :         {}

  00046	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi
  0004b	5b		 pop	 ebx
  0004c	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
??0ios_precision_saver@io@boost@@QAE@AAVios_base@std@@@Z ENDP ; boost::io::ios_precision_saver::ios_precision_saver
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\io\ios_state.hpp
;	COMDAT ?restore@ios_flags_saver@io@boost@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?restore@ios_flags_saver@io@boost@@QAEXXZ PROC		; boost::io::ios_flags_saver::restore, COMDAT
; _this$ = ecx

; 48   :         { s_save_.flags( a_save_ ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b f4		 mov	 esi, esp
  00025	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002b	51		 push	 ecx
  0002c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0002f	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?flags@ios_base@std@@QAEHH@Z
  00037	3b f4		 cmp	 esi, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
?restore@ios_flags_saver@io@boost@@QAEXXZ ENDP		; boost::io::ios_flags_saver::restore
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\io\ios_state.hpp
;	COMDAT ??1ios_flags_saver@io@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1ios_flags_saver@io@boost@@QAE@XZ PROC		; boost::io::ios_flags_saver::~ios_flags_saver, COMDAT
; _this$ = ecx

; 45   :         { this->restore(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1ios_flags_saver@io@boost@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?restore@ios_flags_saver@io@boost@@QAEXXZ ; boost::io::ios_flags_saver::restore
  0004a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00054	59		 pop	 ecx
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1ios_flags_saver@io@boost@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ios_flags_saver@io@boost@@QAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ios_flags_saver@io@boost@@QAE@XZ ENDP		; boost::io::ios_flags_saver::~ios_flags_saver
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\users\public\documents\boost_1_63_0\boost\io\ios_state.hpp
;	COMDAT ??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z PROC ; boost::io::ios_flags_saver::ios_flags_saver, COMDAT
; _this$ = ecx

; 40   :         {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 39   :         : s_save_( s ), a_save_( s.flags() )

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _s$[ebp]
  00029	89 08		 mov	 DWORD PTR [eax], ecx
  0002b	8b f4		 mov	 esi, esp
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR _s$[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
  00036	3b f4		 cmp	 esi, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 40   :         {}

  00043	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00046	5f		 pop	 edi
  00047	5e		 pop	 esi
  00048	5b		 pop	 ebx
  00049	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
??0ios_flags_saver@io@boost@@QAE@AAVios_base@std@@@Z ENDP ; boost::io::ios_flags_saver::ios_flags_saver
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ??8std@@YA_NVid@thread@0@0@Z
_TEXT	SEGMENT
tv65 = -196						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??8std@@YA_NVid@thread@0@0@Z PROC			; std::operator==, COMDAT

; 215  : 	{	// return true if _Left and _Right identify the same thread

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 216  : 	return (_Left._Id == _Right._Id);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00021	3b 45 0c	 cmp	 eax, DWORD PTR __Right$[ebp]
  00024	75 0c		 jne	 SHORT $LN3@operator
  00026	c7 85 3c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv65[ebp], 1
  00030	eb 0a		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00032	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv65[ebp], 0
$LN4@operator:
  0003c	8a 85 3c ff ff
	ff		 mov	 al, BYTE PTR tv65[ebp]

; 217  : 	}

  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
??8std@@YA_NVid@thread@0@0@Z ENDP			; std::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ??0id@thread@std@@AAE@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other_id$ = 8						; size = 4
??0id@thread@std@@AAE@I@Z PROC				; std::thread::id::id, COMDAT
; _this$ = ecx

; 168  : 		{	// construct from unique id

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 167  : 		: _Id(_Other_id)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR __Other_id$[ebp]
  00029	89 08		 mov	 DWORD PTR [eax], ecx

; 169  : 		}

  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 04 00	 ret	 4
??0id@thread@std@@AAE@I@Z ENDP				; std::thread::id::id
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ?get_id@this_thread@std@@YA?AVid@thread@2@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?get_id@this_thread@std@@YA?AVid@thread@2@XZ PROC	; std::this_thread::get_id, COMDAT

; 205  : 	{	// return id for current thread

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?get_id@this_thread@std@@YA?AVid@thread@2@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00020	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00031	33 c5		 xor	 eax, ebp
  00033	50		 push	 eax
  00034	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00037	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 206  : 	return (_Thrd_id());

  0003d	8b f4		 mov	 esi, esp
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___Thrd_id
  00045	3b f4		 cmp	 esi, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	50		 push	 eax
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00050	e8 00 00 00 00	 call	 ??0id@thread@std@@AAE@I@Z ; std::thread::id::id
  00055	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 207  : 	}

  00058	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00062	59		 pop	 ecx
  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
  00066	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?get_id@this_thread@std@@YA?AVid@thread@2@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 30 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-208]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?get_id@this_thread@std@@YA?AVid@thread@2@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?get_id@this_thread@std@@YA?AVid@thread@2@XZ ENDP	; std::this_thread::get_id
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ?get_id@thread@std@@QBE?AVid@12@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?get_id@thread@std@@QBE?AVid@12@XZ PROC			; std::thread::get_id, COMDAT
; _this$ = ecx

; 200  : 	{	// return id for this thread

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?get_id@thread@std@@QBE?AVid@12@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 201  : 	return (_Thr_val(_Thr));

  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00048	51		 push	 ecx
  00049	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0004c	e8 00 00 00 00	 call	 ??0id@thread@std@@AAE@I@Z ; std::thread::id::id
  00051	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 202  : 	}

  00054	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00057	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005e	59		 pop	 ecx
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00068	3b ec		 cmp	 ebp, esp
  0006a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?get_id@thread@std@@QBE?AVid@12@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?get_id@thread@std@@QBE?AVid@12@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?get_id@thread@std@@QBE?AVid@12@XZ ENDP			; std::thread::get_id
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ?join@thread@std@@QAEXXZ
_TEXT	SEGMENT
tv72 = -241						; size = 1
$T1 = -236						; size = 4
$T2 = -224						; size = 4
__Is_null$ = -17					; size = 1
_this$ = -8						; size = 4
?join@thread@std@@QAEXXZ PROC				; std::thread::join, COMDAT
; _this$ = ecx

; 186  : 	{	// join thread

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f4 00 00
	00		 sub	 esp, 244		; 000000f4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00013	b9 3d 00 00 00	 mov	 ecx, 61			; 0000003dH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 187  : 	if (!joinable())

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?joinable@thread@std@@QBE_NXZ ; std::thread::joinable
  0002b	0f b6 c0	 movzx	 eax, al
  0002e	85 c0		 test	 eax, eax
  00030	75 14		 jne	 SHORT $LN2@join

; 188  : 		_Throw_Cpp_error(_INVALID_ARGUMENT);

  00032	8b f4		 mov	 esi, esp
  00034	6a 01		 push	 1
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Throw_Cpp_error@std@@YAXH@Z
  0003c	83 c4 04	 add	 esp, 4
  0003f	3b f4		 cmp	 esi, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@join:

; 189  : 	const bool _Is_null = _Thr_is_null(_Thr);	// Avoid Clang -Wparentheses-equality

  00046	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00049	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0004d	75 09		 jne	 SHORT $LN7@join
  0004f	c6 85 0f ff ff
	ff 01		 mov	 BYTE PTR tv72[ebp], 1
  00056	eb 07		 jmp	 SHORT $LN8@join
$LN7@join:
  00058	c6 85 0f ff ff
	ff 00		 mov	 BYTE PTR tv72[ebp], 0
$LN8@join:
  0005f	8a 8d 0f ff ff
	ff		 mov	 cl, BYTE PTR tv72[ebp]
  00065	88 4d ef	 mov	 BYTE PTR __Is_null$[ebp], cl

; 190  : 	if (_Is_null)

  00068	0f b6 45 ef	 movzx	 eax, BYTE PTR __Is_null$[ebp]
  0006c	85 c0		 test	 eax, eax
  0006e	74 14		 je	 SHORT $LN3@join

; 191  : 		_Throw_Cpp_error(_INVALID_ARGUMENT);

  00070	8b f4		 mov	 esi, esp
  00072	6a 01		 push	 1
  00074	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Throw_Cpp_error@std@@YAXH@Z
  0007a	83 c4 04	 add	 esp, 4
  0007d	3b f4		 cmp	 esi, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@join:

; 192  : 	if (get_id() == _STD this_thread::get_id())

  00084	8d 85 20 ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  0008a	50		 push	 eax
  0008b	e8 00 00 00 00	 call	 ?get_id@this_thread@std@@YA?AVid@thread@2@XZ ; std::this_thread::get_id
  00090	83 c4 04	 add	 esp, 4
  00093	8b 08		 mov	 ecx, DWORD PTR [eax]
  00095	51		 push	 ecx
  00096	8d 95 14 ff ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  0009c	52		 push	 edx
  0009d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a0	e8 00 00 00 00	 call	 ?get_id@thread@std@@QBE?AVid@12@XZ ; std::thread::get_id
  000a5	8b 00		 mov	 eax, DWORD PTR [eax]
  000a7	50		 push	 eax
  000a8	e8 00 00 00 00	 call	 ??8std@@YA_NVid@thread@0@0@Z ; std::operator==
  000ad	83 c4 08	 add	 esp, 8
  000b0	0f b6 c8	 movzx	 ecx, al
  000b3	85 c9		 test	 ecx, ecx
  000b5	74 14		 je	 SHORT $LN4@join

; 193  : 		_Throw_Cpp_error(_RESOURCE_DEADLOCK_WOULD_OCCUR);

  000b7	8b f4		 mov	 esi, esp
  000b9	6a 05		 push	 5
  000bb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Throw_Cpp_error@std@@YAXH@Z
  000c1	83 c4 04	 add	 esp, 4
  000c4	3b f4		 cmp	 esi, esp
  000c6	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@join:

; 194  : 	if (_Thrd_join(_Thr, 0) != _Thrd_success)

  000cb	8b f4		 mov	 esi, esp
  000cd	6a 00		 push	 0
  000cf	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d5	51		 push	 ecx
  000d6	8b 10		 mov	 edx, DWORD PTR [eax]
  000d8	52		 push	 edx
  000d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___Thrd_join
  000df	83 c4 0c	 add	 esp, 12			; 0000000cH
  000e2	3b f4		 cmp	 esi, esp
  000e4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e9	85 c0		 test	 eax, eax
  000eb	74 14		 je	 SHORT $LN5@join

; 195  : 		_Throw_Cpp_error(_NO_SUCH_PROCESS);

  000ed	8b f4		 mov	 esi, esp
  000ef	6a 02		 push	 2
  000f1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Throw_Cpp_error@std@@YAXH@Z
  000f7	83 c4 04	 add	 esp, 4
  000fa	3b f4		 cmp	 esi, esp
  000fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@join:

; 196  : 	_Thr_set_null(_Thr);

  00101	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00104	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0010a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010d	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 197  : 	}

  00114	5f		 pop	 edi
  00115	5e		 pop	 esi
  00116	5b		 pop	 ebx
  00117	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  0011d	3b ec		 cmp	 ebp, esp
  0011f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00124	8b e5		 mov	 esp, ebp
  00126	5d		 pop	 ebp
  00127	c3		 ret	 0
?join@thread@std@@QAEXXZ ENDP				; std::thread::join
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ?joinable@thread@std@@QBE_NXZ
_TEXT	SEGMENT
tv67 = -208						; size = 4
_this$ = -8						; size = 4
?joinable@thread@std@@QBE_NXZ PROC			; std::thread::joinable, COMDAT
; _this$ = ecx

; 80   : 		{	// return true if this thread can be joined

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 81   : 		return (!_Thr_is_null(_Thr));

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002a	74 0c		 je	 SHORT $LN3@joinable
  0002c	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv67[ebp], 1
  00036	eb 0a		 jmp	 SHORT $LN4@joinable
$LN3@joinable:
  00038	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv67[ebp], 0
$LN4@joinable:
  00042	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv67[ebp]

; 82   : 		}

  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
?joinable@thread@std@@QBE_NXZ ENDP			; std::thread::joinable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ??1thread@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1thread@std@@QAE@XZ PROC				; std::thread::~thread, COMDAT
; _this$ = ecx

; 55   : 		{	// clean up

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 56   : 		if (joinable())

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?joinable@thread@std@@QBE_NXZ ; std::thread::joinable
  0002b	0f b6 c0	 movzx	 eax, al
  0002e	85 c0		 test	 eax, eax
  00030	74 0f		 je	 SHORT $LN3@thread

; 57   : 			_XSTD terminate();

  00032	8b f4		 mov	 esi, esp
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__terminate
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@thread:

; 58   : 		}

  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5b		 pop	 ebx
  00044	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
??1thread@std@@QAE@XZ ENDP				; std::thread::~thread
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Call_func@_Pad@std@@CGIPAX@Z
_TEXT	SEGMENT
__Data$ = 8						; size = 4
?_Call_func@_Pad@std@@CGIPAX@Z PROC			; std::_Pad::_Call_func, COMDAT

; 208  : 		{	// entry point for new thread

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 209  : 		static_cast<_Pad *>(_Data)->_Go();

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Data$[ebp]
  00021	8b 10		 mov	 edx, DWORD PTR [eax]
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d 08	 mov	 ecx, DWORD PTR __Data$[ebp]
  00028	8b 02		 mov	 eax, DWORD PTR [edx]
  0002a	ff d0		 call	 eax
  0002c	3b f4		 cmp	 esi, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 210  : 		_Cnd_do_broadcast_at_thread_exit();

  00033	8b f4		 mov	 esi, esp
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___Cnd_do_broadcast_at_thread_exit
  0003b	3b f4		 cmp	 esi, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 211  : 		return (0);

  00042	33 c0		 xor	 eax, eax

; 212  : 		}

  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
?_Call_func@_Pad@std@@CGIPAX@Z ENDP			; std::_Pad::_Call_func
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Release@_Pad@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Release@_Pad@std@@QAEXXZ PROC				; std::_Pad::_Release, COMDAT
; _this$ = ecx

; 194  : 		{	// notify caller that it's okay to continue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 195  : 		_Mtx_lockX(_Mtx);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00029	51		 push	 ecx
  0002a	e8 00 00 00 00	 call	 ?_Mtx_lockX@std@@YAHPAU_Mtx_internal_imp_t@@@Z ; std::_Mtx_lockX
  0002f	83 c4 04	 add	 esp, 4

; 196  : 		_Started = true;

  00032	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00035	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 197  : 		_Cnd_signalX(_Cond);

  00039	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ?_Cnd_signalX@std@@YAHPAU_Cnd_internal_imp_t@@@Z ; std::_Cnd_signalX
  00045	83 c4 04	 add	 esp, 4

; 198  : 		_Mtx_unlockX(_Mtx);

  00048	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0004e	51		 push	 ecx
  0004f	e8 00 00 00 00	 call	 ?_Mtx_unlockX@std@@YAHPAU_Mtx_internal_imp_t@@@Z ; std::_Mtx_unlockX
  00054	83 c4 04	 add	 esp, 4

; 199  : 		}

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00060	3b ec		 cmp	 ebp, esp
  00062	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
?_Release@_Pad@std@@QAEXXZ ENDP				; std::_Pad::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Launch@_Pad@std@@QAEXPAU_Thrd_imp_t@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Thr$ = 8						; size = 4
?_Launch@_Pad@std@@QAEXPAU_Thrd_imp_t@@@Z PROC		; std::_Pad::_Launch, COMDAT
; _this$ = ecx

; 187  : 		{	// launch a thread

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 188  : 		_Thrd_startX(_Thr, _Call_func, this);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	50		 push	 eax
  00027	68 00 00 00 00	 push	 OFFSET ?_Call_func@_Pad@std@@CGIPAX@Z ; std::_Pad::_Call_func
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR __Thr$[ebp]
  0002f	51		 push	 ecx
  00030	e8 00 00 00 00	 call	 ?_Thrd_startX@std@@YAHPAU_Thrd_imp_t@@P6GIPAX@Z1@Z ; std::_Thrd_startX
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@Launch:

; 189  : 		while (!_Started)

  00038	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  0003f	85 c9		 test	 ecx, ecx
  00041	75 18		 jne	 SHORT $LN1@Launch

; 190  : 			_Cnd_waitX(_Cond, _Mtx);

  00043	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00046	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00049	51		 push	 ecx
  0004a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0004d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ?_Cnd_waitX@std@@YAHPAU_Cnd_internal_imp_t@@PAU_Mtx_internal_imp_t@@@Z ; std::_Cnd_waitX
  00056	83 c4 08	 add	 esp, 8
  00059	eb dd		 jmp	 SHORT $LN2@Launch
$LN1@Launch:

; 191  : 		}

  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi
  0005d	5b		 pop	 ebx
  0005e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c2 04 00	 ret	 4
?_Launch@_Pad@std@@QAEXPAU_Thrd_imp_t@@@Z ENDP		; std::_Pad::_Launch
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??1_Pad@std@@QAE@XZ
_TEXT	SEGMENT
__Mtx_cleaner$ = -52					; size = 8
__Cnd_cleaner$ = -36					; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1_Pad@std@@QAE@XZ PROC				; std::_Pad::~_Pad, COMDAT
; _this$ = ecx

; 180  : 		{	// clean up handshake; non-virtual due to type-erasure

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1_Pad@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 08 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-248]
  00021	b9 3b 00 00 00	 mov	 ecx, 59			; 0000003bH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7_Pad@std@@6B@

; 181  : 		_Auto_cnd _Cnd_cleaner(_Cond);

  0004b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00051	51		 push	 ecx
  00052	8d 4d dc	 lea	 ecx, DWORD PTR __Cnd_cleaner$[ebp]
  00055	e8 00 00 00 00	 call	 ??0_Auto_cnd@std@@QAE@PAU_Cnd_internal_imp_t@@@Z ; std::_Auto_cnd::_Auto_cnd

; 182  : 		_Auto_mtx _Mtx_cleaner(_Mtx);

  0005a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00060	51		 push	 ecx
  00061	8d 4d cc	 lea	 ecx, DWORD PTR __Mtx_cleaner$[ebp]
  00064	e8 00 00 00 00	 call	 ??0_Auto_mtx@std@@QAE@PAU_Mtx_internal_imp_t@@@Z ; std::_Auto_mtx::_Auto_mtx

; 183  : 		_Mtx_unlockX(_Mtx);

  00069	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0006f	51		 push	 ecx
  00070	e8 00 00 00 00	 call	 ?_Mtx_unlockX@std@@YAHPAU_Mtx_internal_imp_t@@@Z ; std::_Mtx_unlockX
  00075	83 c4 04	 add	 esp, 4

; 184  : 		}

  00078	8d 4d cc	 lea	 ecx, DWORD PTR __Mtx_cleaner$[ebp]
  0007b	e8 00 00 00 00	 call	 ??1_Auto_mtx@std@@QAE@XZ ; std::_Auto_mtx::~_Auto_mtx
  00080	8d 4d dc	 lea	 ecx, DWORD PTR __Cnd_cleaner$[ebp]
  00083	e8 00 00 00 00	 call	 ??1_Auto_cnd@std@@QAE@XZ ; std::_Auto_cnd::~_Auto_cnd
  00088	52		 push	 edx
  00089	8b cd		 mov	 ecx, ebp
  0008b	50		 push	 eax
  0008c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@Pad
  00092	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00097	58		 pop	 eax
  00098	5a		 pop	 edx
  00099	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a3	59		 pop	 ecx
  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	81 c4 f8 00 00
	00		 add	 esp, 248		; 000000f8H
  000ad	3b ec		 cmp	 ebp, esp
  000af	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
$LN7@Pad:
  000b8	02 00 00 00	 DD	 2
  000bc	00 00 00 00	 DD	 $LN6@Pad
$LN6@Pad:
  000c0	dc ff ff ff	 DD	 -36			; ffffffdcH
  000c4	08 00 00 00	 DD	 8
  000c8	00 00 00 00	 DD	 $LN3@Pad
  000cc	cc ff ff ff	 DD	 -52			; ffffffccH
  000d0	08 00 00 00	 DD	 8
  000d4	00 00 00 00	 DD	 $LN4@Pad
$LN4@Pad:
  000d8	5f		 DB	 95			; 0000005fH
  000d9	4d		 DB	 77			; 0000004dH
  000da	74		 DB	 116			; 00000074H
  000db	78		 DB	 120			; 00000078H
  000dc	5f		 DB	 95			; 0000005fH
  000dd	63		 DB	 99			; 00000063H
  000de	6c		 DB	 108			; 0000006cH
  000df	65		 DB	 101			; 00000065H
  000e0	61		 DB	 97			; 00000061H
  000e1	6e		 DB	 110			; 0000006eH
  000e2	65		 DB	 101			; 00000065H
  000e3	72		 DB	 114			; 00000072H
  000e4	00		 DB	 0
$LN3@Pad:
  000e5	5f		 DB	 95			; 0000005fH
  000e6	43		 DB	 67			; 00000043H
  000e7	6e		 DB	 110			; 0000006eH
  000e8	64		 DB	 100			; 00000064H
  000e9	5f		 DB	 95			; 0000005fH
  000ea	63		 DB	 99			; 00000063H
  000eb	6c		 DB	 108			; 0000006cH
  000ec	65		 DB	 101			; 00000065H
  000ed	61		 DB	 97			; 00000061H
  000ee	6e		 DB	 110			; 0000006eH
  000ef	65		 DB	 101			; 00000065H
  000f0	72		 DB	 114			; 00000072H
  000f1	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Pad@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 04 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-252]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1_Pad@std@@QAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1_Pad@std@@QAE@XZ ENDP				; std::_Pad::~_Pad
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??0_Pad@std@@QAE@XZ
_TEXT	SEGMENT
__Mtx_cleaner$ = -52					; size = 8
__Cnd_cleaner$ = -36					; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0_Pad@std@@QAE@XZ PROC				; std::_Pad::_Pad, COMDAT
; _this$ = ecx

; 167  : 	_Pad()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0_Pad@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 08 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-248]
  00021	b9 3b 00 00 00	 mov	 ecx, 59			; 0000003bH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 168  : 		{	// initialize handshake

  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7_Pad@std@@6B@

; 169  : 		_Cnd_initX(&_Cond);

  0004b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	83 c0 04	 add	 eax, 4
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?_Cnd_initX@std@@YAHPAPAU_Cnd_internal_imp_t@@@Z ; std::_Cnd_initX
  00057	83 c4 04	 add	 esp, 4

; 170  : 		_Auto_cnd _Cnd_cleaner(_Cond);

  0005a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00060	51		 push	 ecx
  00061	8d 4d dc	 lea	 ecx, DWORD PTR __Cnd_cleaner$[ebp]
  00064	e8 00 00 00 00	 call	 ??0_Auto_cnd@std@@QAE@PAU_Cnd_internal_imp_t@@@Z ; std::_Auto_cnd::_Auto_cnd
  00069	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 171  : 		_Mtx_initX(&_Mtx, _Mtx_plain);

  00070	6a 01		 push	 1
  00072	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 c0 08	 add	 eax, 8
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 ?_Mtx_initX@std@@YAHPAPAU_Mtx_internal_imp_t@@H@Z ; std::_Mtx_initX
  0007e	83 c4 08	 add	 esp, 8

; 172  : 		_Auto_mtx _Mtx_cleaner(_Mtx);

  00081	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00084	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00087	51		 push	 ecx
  00088	8d 4d cc	 lea	 ecx, DWORD PTR __Mtx_cleaner$[ebp]
  0008b	e8 00 00 00 00	 call	 ??0_Auto_mtx@std@@QAE@PAU_Mtx_internal_imp_t@@@Z ; std::_Auto_mtx::_Auto_mtx
  00090	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 173  : 		_Started = false;

  00094	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00097	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 174  : 		_Mtx_lockX(_Mtx);

  0009b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000a1	51		 push	 ecx
  000a2	e8 00 00 00 00	 call	 ?_Mtx_lockX@std@@YAHPAU_Mtx_internal_imp_t@@@Z ; std::_Mtx_lockX
  000a7	83 c4 04	 add	 esp, 4

; 175  : 		_Mtx_cleaner._Release();

  000aa	8d 4d cc	 lea	 ecx, DWORD PTR __Mtx_cleaner$[ebp]
  000ad	e8 00 00 00 00	 call	 ?_Release@_Auto_mtx@std@@QAEXXZ ; std::_Auto_mtx::_Release

; 176  : 		_Cnd_cleaner._Release();

  000b2	8d 4d dc	 lea	 ecx, DWORD PTR __Cnd_cleaner$[ebp]
  000b5	e8 00 00 00 00	 call	 ?_Release@_Auto_cnd@std@@QAEXXZ ; std::_Auto_cnd::_Release

; 177  : 		}

  000ba	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000be	8d 4d cc	 lea	 ecx, DWORD PTR __Mtx_cleaner$[ebp]
  000c1	e8 00 00 00 00	 call	 ??1_Auto_mtx@std@@QAE@XZ ; std::_Auto_mtx::~_Auto_mtx
  000c6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000cd	8d 4d dc	 lea	 ecx, DWORD PTR __Cnd_cleaner$[ebp]
  000d0	e8 00 00 00 00	 call	 ??1_Auto_cnd@std@@QAE@XZ ; std::_Auto_cnd::~_Auto_cnd
  000d5	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000d8	52		 push	 edx
  000d9	8b cd		 mov	 ecx, ebp
  000db	50		 push	 eax
  000dc	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@Pad
  000e2	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000e7	58		 pop	 eax
  000e8	5a		 pop	 edx
  000e9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ec	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f3	59		 pop	 ecx
  000f4	5f		 pop	 edi
  000f5	5e		 pop	 esi
  000f6	5b		 pop	 ebx
  000f7	81 c4 f8 00 00
	00		 add	 esp, 248		; 000000f8H
  000fd	3b ec		 cmp	 ebp, esp
  000ff	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00104	8b e5		 mov	 esp, ebp
  00106	5d		 pop	 ebp
  00107	c3		 ret	 0
$LN9@Pad:
  00108	02 00 00 00	 DD	 2
  0010c	00 00 00 00	 DD	 $LN8@Pad
$LN8@Pad:
  00110	dc ff ff ff	 DD	 -36			; ffffffdcH
  00114	08 00 00 00	 DD	 8
  00118	00 00 00 00	 DD	 $LN5@Pad
  0011c	cc ff ff ff	 DD	 -52			; ffffffccH
  00120	08 00 00 00	 DD	 8
  00124	00 00 00 00	 DD	 $LN6@Pad
$LN6@Pad:
  00128	5f		 DB	 95			; 0000005fH
  00129	4d		 DB	 77			; 0000004dH
  0012a	74		 DB	 116			; 00000074H
  0012b	78		 DB	 120			; 00000078H
  0012c	5f		 DB	 95			; 0000005fH
  0012d	63		 DB	 99			; 00000063H
  0012e	6c		 DB	 108			; 0000006cH
  0012f	65		 DB	 101			; 00000065H
  00130	61		 DB	 97			; 00000061H
  00131	6e		 DB	 110			; 0000006eH
  00132	65		 DB	 101			; 00000065H
  00133	72		 DB	 114			; 00000072H
  00134	00		 DB	 0
$LN5@Pad:
  00135	5f		 DB	 95			; 0000005fH
  00136	43		 DB	 67			; 00000043H
  00137	6e		 DB	 110			; 0000006eH
  00138	64		 DB	 100			; 00000064H
  00139	5f		 DB	 95			; 0000005fH
  0013a	63		 DB	 99			; 00000063H
  0013b	6c		 DB	 108			; 0000006cH
  0013c	65		 DB	 101			; 00000065H
  0013d	61		 DB	 97			; 00000061H
  0013e	6e		 DB	 110			; 0000006eH
  0013f	65		 DB	 101			; 00000065H
  00140	72		 DB	 114			; 00000072H
  00141	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_Pad@std@@QAE@XZ$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR __Cnd_cleaner$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_Auto_cnd@std@@QAE@XZ ; std::_Auto_cnd::~_Auto_cnd
__unwindfunclet$??0_Pad@std@@QAE@XZ$1:
  00008	8d 4d cc	 lea	 ecx, DWORD PTR __Mtx_cleaner$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1_Auto_mtx@std@@QAE@XZ ; std::_Auto_mtx::~_Auto_mtx
__ehhandler$??0_Pad@std@@QAE@XZ:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 8a 04 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-252]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0_Pad@std@@QAE@XZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0_Pad@std@@QAE@XZ ENDP				; std::_Pad::_Pad
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Release@_Auto_mtx@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Release@_Auto_mtx@std@@QAEXXZ PROC			; std::_Auto_mtx::_Release, COMDAT
; _this$ = ecx

; 153  : 		{	// release the mutex

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 154  : 		_Active = false;

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c6 00 00	 mov	 BYTE PTR [eax], 0

; 155  : 		}

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?_Release@_Auto_mtx@std@@QAEXXZ ENDP			; std::_Auto_mtx::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??1_Auto_mtx@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_Auto_mtx@std@@QAE@XZ PROC				; std::_Auto_mtx::~_Auto_mtx, COMDAT
; _this$ = ecx

; 147  : 		{	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 148  : 		if (_Active)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00029	85 c9		 test	 ecx, ecx
  0002b	74 19		 je	 SHORT $LN3@Auto_mtx

; 149  : 			_Mtx_destroy(_MyMtxp);

  0002d	8b f4		 mov	 esi, esp
  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00032	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00035	51		 push	 ecx
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___Mtx_destroy
  0003c	83 c4 04	 add	 esp, 4
  0003f	3b f4		 cmp	 esi, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Auto_mtx:

; 150  : 		}

  00046	5f		 pop	 edi
  00047	5e		 pop	 esi
  00048	5b		 pop	 ebx
  00049	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
??1_Auto_mtx@std@@QAE@XZ ENDP				; std::_Auto_mtx::~_Auto_mtx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??0_Auto_mtx@std@@QAE@PAU_Mtx_internal_imp_t@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Mtxp$ = 8						; size = 4
??0_Auto_mtx@std@@QAE@PAU_Mtx_internal_imp_t@@@Z PROC	; std::_Auto_mtx::_Auto_mtx, COMDAT
; _this$ = ecx

; 143  : 		{	// construct from mutex

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 142  : 		: _Active(true), _MyMtxp(_Mtxp)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c6 00 01	 mov	 BYTE PTR [eax], 1
  00029	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR __Mtxp$[ebp]
  0002f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 144  : 		}

  00032	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
??0_Auto_mtx@std@@QAE@PAU_Mtx_internal_imp_t@@@Z ENDP	; std::_Auto_mtx::_Auto_mtx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Release@_Auto_cnd@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Release@_Auto_cnd@std@@QAEXXZ PROC			; std::_Auto_cnd::_Release, COMDAT
; _this$ = ecx

; 129  : 		{	// release the condition variable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 130  : 		_Active = false;

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c6 00 00	 mov	 BYTE PTR [eax], 0

; 131  : 		}

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?_Release@_Auto_cnd@std@@QAEXXZ ENDP			; std::_Auto_cnd::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??1_Auto_cnd@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_Auto_cnd@std@@QAE@XZ PROC				; std::_Auto_cnd::~_Auto_cnd, COMDAT
; _this$ = ecx

; 123  : 		{	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 124  : 		if (_Active)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00029	85 c9		 test	 ecx, ecx
  0002b	74 19		 je	 SHORT $LN3@Auto_cnd

; 125  : 			_Cnd_destroy(_MyCndp);

  0002d	8b f4		 mov	 esi, esp
  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00032	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00035	51		 push	 ecx
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___Cnd_destroy
  0003c	83 c4 04	 add	 esp, 4
  0003f	3b f4		 cmp	 esi, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Auto_cnd:

; 126  : 			}

  00046	5f		 pop	 edi
  00047	5e		 pop	 esi
  00048	5b		 pop	 ebx
  00049	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
??1_Auto_cnd@std@@QAE@XZ ENDP				; std::_Auto_cnd::~_Auto_cnd
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??0_Auto_cnd@std@@QAE@PAU_Cnd_internal_imp_t@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Cndp$ = 8						; size = 4
??0_Auto_cnd@std@@QAE@PAU_Cnd_internal_imp_t@@@Z PROC	; std::_Auto_cnd::_Auto_cnd, COMDAT
; _this$ = ecx

; 119  : 		{	// construct from condition variable pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 118  : 		: _Active(true), _MyCndp(_Cndp)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c6 00 01	 mov	 BYTE PTR [eax], 1
  00029	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR __Cndp$[ebp]
  0002f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 120  : 		}

  00032	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
??0_Auto_cnd@std@@QAE@PAU_Cnd_internal_imp_t@@@Z ENDP	; std::_Auto_cnd::_Auto_cnd
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Cnd_signalX@std@@YAHPAU_Cnd_internal_imp_t@@@Z
_TEXT	SEGMENT
__Cnd$ = 8						; size = 4
?_Cnd_signalX@std@@YAHPAU_Cnd_internal_imp_t@@@Z PROC	; std::_Cnd_signalX, COMDAT

; 110  : 	{	// throw exception on failure

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 111  : 	return (_Check_C_return(_Cnd_signal(_Cnd)));

  0001e	8b f4		 mov	 esi, esp
  00020	8b 45 08	 mov	 eax, DWORD PTR __Cnd$[ebp]
  00023	50		 push	 eax
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___Cnd_signal
  0002a	83 c4 04	 add	 esp, 4
  0002d	3b f4		 cmp	 esi, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?_Check_C_return@std@@YAHH@Z ; std::_Check_C_return
  0003a	83 c4 04	 add	 esp, 4

; 112  : 	}

  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
?_Cnd_signalX@std@@YAHPAU_Cnd_internal_imp_t@@@Z ENDP	; std::_Cnd_signalX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Cnd_waitX@std@@YAHPAU_Cnd_internal_imp_t@@PAU_Mtx_internal_imp_t@@@Z
_TEXT	SEGMENT
__Cnd$ = 8						; size = 4
__Mtx$ = 12						; size = 4
?_Cnd_waitX@std@@YAHPAU_Cnd_internal_imp_t@@PAU_Mtx_internal_imp_t@@@Z PROC ; std::_Cnd_waitX, COMDAT

; 94   : 	{	// throw exception on failure

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 95   : 	return (_Check_C_return(_Cnd_wait(_Cnd, _Mtx)));

  0001e	8b f4		 mov	 esi, esp
  00020	8b 45 0c	 mov	 eax, DWORD PTR __Mtx$[ebp]
  00023	50		 push	 eax
  00024	8b 4d 08	 mov	 ecx, DWORD PTR __Cnd$[ebp]
  00027	51		 push	 ecx
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___Cnd_wait
  0002e	83 c4 08	 add	 esp, 8
  00031	3b f4		 cmp	 esi, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ?_Check_C_return@std@@YAHH@Z ; std::_Check_C_return
  0003e	83 c4 04	 add	 esp, 4

; 96   : 	}

  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5b		 pop	 ebx
  00044	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
?_Cnd_waitX@std@@YAHPAU_Cnd_internal_imp_t@@PAU_Mtx_internal_imp_t@@@Z ENDP ; std::_Cnd_waitX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Cnd_initX@std@@YAHPAPAU_Cnd_internal_imp_t@@@Z
_TEXT	SEGMENT
__Cnd$ = 8						; size = 4
?_Cnd_initX@std@@YAHPAPAU_Cnd_internal_imp_t@@@Z PROC	; std::_Cnd_initX, COMDAT

; 89   : 	{	// throw exception on failure

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 90   : 	return (_Check_C_return(_Cnd_init(_Cnd)));

  0001e	8b f4		 mov	 esi, esp
  00020	8b 45 08	 mov	 eax, DWORD PTR __Cnd$[ebp]
  00023	50		 push	 eax
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___Cnd_init
  0002a	83 c4 04	 add	 esp, 4
  0002d	3b f4		 cmp	 esi, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?_Check_C_return@std@@YAHH@Z ; std::_Check_C_return
  0003a	83 c4 04	 add	 esp, 4

; 91   : 	}

  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
?_Cnd_initX@std@@YAHPAPAU_Cnd_internal_imp_t@@@Z ENDP	; std::_Cnd_initX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Mtx_unlockX@std@@YAHPAU_Mtx_internal_imp_t@@@Z
_TEXT	SEGMENT
__Mtx$ = 8						; size = 4
?_Mtx_unlockX@std@@YAHPAU_Mtx_internal_imp_t@@@Z PROC	; std::_Mtx_unlockX, COMDAT

; 84   : 	{	// throw exception on failure

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 85   : 	return (_Check_C_return(_Mtx_unlock(_Mtx)));

  0001e	8b f4		 mov	 esi, esp
  00020	8b 45 08	 mov	 eax, DWORD PTR __Mtx$[ebp]
  00023	50		 push	 eax
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___Mtx_unlock
  0002a	83 c4 04	 add	 esp, 4
  0002d	3b f4		 cmp	 esi, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?_Check_C_return@std@@YAHH@Z ; std::_Check_C_return
  0003a	83 c4 04	 add	 esp, 4

; 86   : 	}

  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
?_Mtx_unlockX@std@@YAHPAU_Mtx_internal_imp_t@@@Z ENDP	; std::_Mtx_unlockX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Mtx_lockX@std@@YAHPAU_Mtx_internal_imp_t@@@Z
_TEXT	SEGMENT
__Mtx$ = 8						; size = 4
?_Mtx_lockX@std@@YAHPAU_Mtx_internal_imp_t@@@Z PROC	; std::_Mtx_lockX, COMDAT

; 69   : 	{	// throw exception on failure

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 70   : 	return (_Check_C_return(_Mtx_lock(_Mtx)));

  0001e	8b f4		 mov	 esi, esp
  00020	8b 45 08	 mov	 eax, DWORD PTR __Mtx$[ebp]
  00023	50		 push	 eax
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___Mtx_lock
  0002a	83 c4 04	 add	 esp, 4
  0002d	3b f4		 cmp	 esi, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?_Check_C_return@std@@YAHH@Z ; std::_Check_C_return
  0003a	83 c4 04	 add	 esp, 4

; 71   : 	}

  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
?_Mtx_lockX@std@@YAHPAU_Mtx_internal_imp_t@@@Z ENDP	; std::_Mtx_lockX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Mtx_initX@std@@YAHPAPAU_Mtx_internal_imp_t@@H@Z
_TEXT	SEGMENT
__Mtx$ = 8						; size = 4
__Type$ = 12						; size = 4
?_Mtx_initX@std@@YAHPAPAU_Mtx_internal_imp_t@@H@Z PROC	; std::_Mtx_initX, COMDAT

; 64   : 	{	// throw exception on failure

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 65   : 	return (_Check_C_return(_Mtx_init(_Mtx, _Type)));

  0001e	8b f4		 mov	 esi, esp
  00020	8b 45 0c	 mov	 eax, DWORD PTR __Type$[ebp]
  00023	50		 push	 eax
  00024	8b 4d 08	 mov	 ecx, DWORD PTR __Mtx$[ebp]
  00027	51		 push	 ecx
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___Mtx_init
  0002e	83 c4 08	 add	 esp, 8
  00031	3b f4		 cmp	 esi, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ?_Check_C_return@std@@YAHH@Z ; std::_Check_C_return
  0003e	83 c4 04	 add	 esp, 4

; 66   : 	}

  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5b		 pop	 ebx
  00044	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
?_Mtx_initX@std@@YAHPAPAU_Mtx_internal_imp_t@@H@Z ENDP	; std::_Mtx_initX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Thrd_startX@std@@YAHPAU_Thrd_imp_t@@P6GIPAX@Z1@Z
_TEXT	SEGMENT
tv70 = -208						; size = 4
__Res$ = -8						; size = 4
__Thr$ = 8						; size = 4
__Fp$ = 12						; size = 4
__Arg$ = 16						; size = 4
?_Thrd_startX@std@@YAHPAU_Thrd_imp_t@@P6GIPAX@Z1@Z PROC	; std::_Thrd_startX, COMDAT

; 48   : 	{	// throw exception on failure

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00012	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 49   : 	int _Res = _Thrd_start(_Thr, _Fp, _Arg);

  0001e	8b f4		 mov	 esi, esp
  00020	8b 45 10	 mov	 eax, DWORD PTR __Arg$[ebp]
  00023	50		 push	 eax
  00024	8b 4d 0c	 mov	 ecx, DWORD PTR __Fp$[ebp]
  00027	51		 push	 ecx
  00028	8b 55 08	 mov	 edx, DWORD PTR __Thr$[ebp]
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___Thrd_start
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH
  00035	3b f4		 cmp	 esi, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	89 45 f8	 mov	 DWORD PTR __Res$[ebp], eax

; 50   : 	return (_Check_C_return(_Res != _Thrd_error ? _Res : _Thrd_nomem));

  0003f	83 7d f8 04	 cmp	 DWORD PTR __Res$[ebp], 4
  00043	74 0b		 je	 SHORT $LN3@Thrd_start
  00045	8b 45 f8	 mov	 eax, DWORD PTR __Res$[ebp]
  00048	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv70[ebp], eax
  0004e	eb 0a		 jmp	 SHORT $LN4@Thrd_start
$LN3@Thrd_start:
  00050	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv70[ebp], 1
$LN4@Thrd_start:
  0005a	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv70[ebp]
  00060	51		 push	 ecx
  00061	e8 00 00 00 00	 call	 ?_Check_C_return@std@@YAHH@Z ; std::_Check_C_return
  00066	83 c4 04	 add	 esp, 4

; 51   : 	}

  00069	5f		 pop	 edi
  0006a	5e		 pop	 esi
  0006b	5b		 pop	 ebx
  0006c	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  00072	3b ec		 cmp	 ebp, esp
  00074	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c3		 ret	 0
?_Thrd_startX@std@@YAHPAU_Thrd_imp_t@@P6GIPAX@Z1@Z ENDP	; std::_Thrd_startX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Check_C_return@std@@YAHH@Z
_TEXT	SEGMENT
__Res$ = 8						; size = 4
?_Check_C_return@std@@YAHH@Z PROC			; std::_Check_C_return, COMDAT

; 33   : 	{	// throw exception on failure

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 34   : 	if (_Res != _Thrd_success)

  0001e	83 7d 08 00	 cmp	 DWORD PTR __Res$[ebp], 0
  00022	74 16		 je	 SHORT $LN2@Check_C_re

; 35   : 		_Throw_C_error(_Res);

  00024	8b f4		 mov	 esi, esp
  00026	8b 45 08	 mov	 eax, DWORD PTR __Res$[ebp]
  00029	50		 push	 eax
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Throw_C_error@std@@YAXH@Z
  00030	83 c4 04	 add	 esp, 4
  00033	3b f4		 cmp	 esi, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Check_C_re:

; 36   : 	return (_Res);

  0003a	8b 45 08	 mov	 eax, DWORD PTR __Res$[ebp]

; 37   : 	}

  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
?_Check_C_return@std@@YAHH@Z ENDP			; std::_Check_C_return
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Enable_shared@std@@YAXPDX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Enable_shared@std@@YAXPDX0@Z PROC			; std::_Enable_shared, COMDAT

; 261  : 	{	// not derived from enable_shared_from_this; do nothing

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 262  : 	}

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?_Enable_shared@std@@YAXPDX0@Z ENDP			; std::_Enable_shared
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G_Ref_count_base@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G_Ref_count_base@std@@UAEPAXI@Z PROC			; std::_Ref_count_base::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1_Ref_count_base@std@@UAE@XZ ; std::_Ref_count_base::~_Ref_count_base
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0e		 je	 SHORT $LN2@scalar
  00033	6a 0c		 push	 12			; 0000000cH
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003e	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
??_G_Ref_count_base@std@@UAEPAXI@Z ENDP			; std::_Ref_count_base::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Get_deleter@_Ref_count_base@std@@UBEPAXABVtype_info@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?_Get_deleter@_Ref_count_base@std@@UBEPAXABVtype_info@@@Z PROC ; std::_Ref_count_base::_Get_deleter, COMDAT
; _this$ = ecx

; 134  : 		{	// return address of deleter object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 135  : 		return (0);

  00023	33 c0		 xor	 eax, eax

; 136  : 		}

  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?_Get_deleter@_Ref_count_base@std@@UBEPAXABVtype_info@@@Z ENDP ; std::_Ref_count_base::_Get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Decwref@_Ref_count_base@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Decwref@_Ref_count_base@std@@QAEXXZ PROC		; std::_Ref_count_base::_Decwref, COMDAT
; _this$ = ecx

; 118  : 		{	// decrement weak reference count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 119  : 		if (_MT_DECR(_Weaks) == 0)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c0 08	 add	 eax, 8
  00029	83 c9 ff	 or	 ecx, -1
  0002c	f0 0f c1 08	 lock	  xadd	 DWORD PTR [eax], ecx
  00030	49		 dec	 ecx
  00031	75 16		 jne	 SHORT $LN1@Decwref

; 120  : 			_Delete_this();

  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	8b 10		 mov	 edx, DWORD PTR [eax]
  00038	8b f4		 mov	 esi, esp
  0003a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00040	ff d0		 call	 eax
  00042	3b f4		 cmp	 esi, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@Decwref:

; 121  : 		}

  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi
  0004b	5b		 pop	 ebx
  0004c	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
?_Decwref@_Ref_count_base@std@@QAEXXZ ENDP		; std::_Ref_count_base::_Decwref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Decref@_Ref_count_base@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Decref@_Ref_count_base@std@@QAEXXZ PROC		; std::_Ref_count_base::_Decref, COMDAT
; _this$ = ecx

; 109  : 		{	// decrement use count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 110  : 		if (_MT_DECR(_Uses) == 0)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c0 04	 add	 eax, 4
  00029	83 c9 ff	 or	 ecx, -1
  0002c	f0 0f c1 08	 lock	  xadd	 DWORD PTR [eax], ecx
  00030	49		 dec	 ecx
  00031	75 1d		 jne	 SHORT $LN1@Decref

; 111  : 			{	// destroy managed resource, decrement weak reference count
; 112  : 			_Destroy();

  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	8b 10		 mov	 edx, DWORD PTR [eax]
  00038	8b f4		 mov	 esi, esp
  0003a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	8b 02		 mov	 eax, DWORD PTR [edx]
  0003f	ff d0		 call	 eax
  00041	3b f4		 cmp	 esi, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 113  : 			_Decwref();

  00048	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Decwref@_Ref_count_base@std@@QAEXXZ ; std::_Ref_count_base::_Decwref
$LN1@Decref:

; 114  : 			}
; 115  : 		}

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00059	3b ec		 cmp	 ebp, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
?_Decref@_Ref_count_base@std@@QAEXXZ ENDP		; std::_Ref_count_base::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Incref@_Ref_count_base@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Incref@_Ref_count_base@std@@QAEXXZ PROC		; std::_Ref_count_base::_Incref, COMDAT
; _this$ = ecx

; 99   : 		{	// increment use count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 100  : 		_MT_INCR(_Uses);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c0 04	 add	 eax, 4
  00029	f0 ff 00	 lock	  inc	 DWORD PTR [eax]

; 101  : 		}

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?_Incref@_Ref_count_base@std@@QAEXXZ ENDP		; std::_Ref_count_base::_Incref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??1_Ref_count_base@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_Ref_count_base@std@@UAE@XZ PROC			; std::_Ref_count_base::~_Ref_count_base, COMDAT
; _this$ = ecx

; 66   : 		{	// ensure that derived classes can be destroyed properly

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7_Ref_count_base@std@@6B@

; 67   : 		}

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??1_Ref_count_base@std@@UAE@XZ ENDP			; std::_Ref_count_base::~_Ref_count_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0_Ref_count_base@std@@IAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Ref_count_base@std@@IAE@XZ PROC			; std::_Ref_count_base::_Ref_count_base, COMDAT
; _this$ = ecx

; 58   : 	_Ref_count_base()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 59   : 		{	// construct

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7_Ref_count_base@std@@6B@

; 60   : 		_Init_atomic_counter(_Uses, 1);

  0002c	6a 01		 push	 1
  0002e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	83 c0 04	 add	 eax, 4
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?_Init_atomic_counter@std@@YAXAAKK@Z ; std::_Init_atomic_counter
  0003a	83 c4 08	 add	 esp, 8

; 61   : 		_Init_atomic_counter(_Weaks, 1);

  0003d	6a 01		 push	 1
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	83 c0 08	 add	 eax, 8
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ?_Init_atomic_counter@std@@YAXAAKK@Z ; std::_Init_atomic_counter
  0004b	83 c4 08	 add	 esp, 8

; 62   : 		}

  0004e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0005a	3b ec		 cmp	 ebp, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
??0_Ref_count_base@std@@IAE@XZ ENDP			; std::_Ref_count_base::_Ref_count_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z
_TEXT	SEGMENT
tv83 = -232						; size = 4
tv71 = -232						; size = 4
__Ptr0$1 = -32						; size = 4
__Facptr$ = -20						; size = 4
_this$ = -8						; size = 4
__Id$ = 8						; size = 4
?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z PROC		; std::locale::_Getfacet, COMDAT
; _this$ = ecx

; 458  : 		{	// look up a facet in locale object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00013	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 459  : 		const facet *_Facptr = _Id < _Ptr->_Facetcount

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00029	8b 55 08	 mov	 edx, DWORD PTR __Id$[ebp]
  0002c	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  0002f	73 17		 jae	 SHORT $LN6@Getfacet
  00031	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00037	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0003a	8b 45 08	 mov	 eax, DWORD PTR __Id$[ebp]
  0003d	8b 0c 82	 mov	 ecx, DWORD PTR [edx+eax*4]
  00040	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv71[ebp], ecx
  00046	eb 0a		 jmp	 SHORT $LN7@Getfacet
$LN6@Getfacet:
  00048	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv71[ebp], 0
$LN7@Getfacet:
  00052	8b 95 18 ff ff
	ff		 mov	 edx, DWORD PTR tv71[ebp]
  00058	89 55 ec	 mov	 DWORD PTR __Facptr$[ebp], edx

; 460  : 			? _Ptr->_Facetvec[_Id] : 0;	// null if id off end
; 461  : 		if (_Facptr != 0 || !_Ptr->_Xparent)

  0005b	83 7d ec 00	 cmp	 DWORD PTR __Facptr$[ebp], 0
  0005f	75 0e		 jne	 SHORT $LN4@Getfacet
  00061	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00064	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00067	0f b6 51 14	 movzx	 edx, BYTE PTR [ecx+20]
  0006b	85 d2		 test	 edx, edx
  0006d	75 07		 jne	 SHORT $LN2@Getfacet
$LN4@Getfacet:

; 462  : 			return (_Facptr);	// found facet or not transparent

  0006f	8b 45 ec	 mov	 eax, DWORD PTR __Facptr$[ebp]
  00072	eb 43		 jmp	 SHORT $LN1@Getfacet

; 463  : 		else

  00074	eb 41		 jmp	 SHORT $LN1@Getfacet
$LN2@Getfacet:

; 464  : 			{	// look in current locale
; 465  : 			locale::_Locimp *_Ptr0 = _Getgloballocale();

  00076	8b f4		 mov	 esi, esp
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ
  0007e	3b f4		 cmp	 esi, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00085	89 45 e0	 mov	 DWORD PTR __Ptr0$1[ebp], eax

; 466  : 			return (_Id < _Ptr0->_Facetcount

  00088	8b 45 e0	 mov	 eax, DWORD PTR __Ptr0$1[ebp]
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR __Id$[ebp]
  0008e	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  00091	73 14		 jae	 SHORT $LN8@Getfacet
  00093	8b 55 e0	 mov	 edx, DWORD PTR __Ptr0$1[ebp]
  00096	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00099	8b 4d 08	 mov	 ecx, DWORD PTR __Id$[ebp]
  0009c	8b 14 88	 mov	 edx, DWORD PTR [eax+ecx*4]
  0009f	89 95 18 ff ff
	ff		 mov	 DWORD PTR tv83[ebp], edx
  000a5	eb 0a		 jmp	 SHORT $LN9@Getfacet
$LN8@Getfacet:
  000a7	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv83[ebp], 0
$LN9@Getfacet:
  000b1	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR tv83[ebp]
$LN1@Getfacet:

; 467  : 				? _Ptr0->_Facetvec[_Id]	// get from current locale
; 468  : 				: 0);	// no entry in current locale
; 469  : 			}
; 470  : 		}

  000b7	5f		 pop	 edi
  000b8	5e		 pop	 esi
  000b9	5b		 pop	 ebx
  000ba	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  000c0	3b ec		 cmp	 ebp, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c7	8b e5		 mov	 esp, ebp
  000c9	5d		 pop	 ebp
  000ca	c2 04 00	 ret	 4
?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z ENDP		; std::locale::_Getfacet
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??1locale@std@@QAE@XZ
_TEXT	SEGMENT
tv84 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1locale@std@@QAE@XZ PROC				; std::locale::~locale, COMDAT
; _this$ = ecx

; 430  : 		{	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1locale@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 431  : 		if (_Ptr != 0)

  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00049	74 66		 je	 SHORT $LN3@locale

; 432  : 			delete _Ptr->_Decref();

  0004b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00051	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00054	8b 01		 mov	 eax, DWORD PTR [ecx]
  00056	8b f4		 mov	 esi, esp
  00058	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  0005b	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0005e	ff d2		 call	 edx
  00060	3b f4		 cmp	 esi, esp
  00062	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00067	89 85 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  0006d	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00073	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00079	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  00080	74 25		 je	 SHORT $LN4@locale
  00082	8b f4		 mov	 esi, esp
  00084	6a 01		 push	 1
  00086	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  0008c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008e	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  00094	8b 02		 mov	 eax, DWORD PTR [edx]
  00096	ff d0		 call	 eax
  00098	3b f4		 cmp	 esi, esp
  0009a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009f	89 85 0c ff ff
	ff		 mov	 DWORD PTR tv84[ebp], eax
  000a5	eb 0a		 jmp	 SHORT $LN3@locale
$LN4@locale:
  000a7	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv84[ebp], 0
$LN3@locale:

; 433  : 		}

  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  000c5	3b ec		 cmp	 ebp, esp
  000c7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1locale@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1locale@std@@QAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1locale@std@@QAE@XZ ENDP				; std::locale::~locale
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_cast@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gbad_cast@std@@UAEPAXI@Z PROC			; std::bad_cast::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1bad_cast@std@@UAE@XZ
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0e		 je	 SHORT $LN2@scalar
  00033	6a 0c		 push	 12			; 0000000cH
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003e	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
??_Gbad_cast@std@@UAEPAXI@Z ENDP			; std::bad_cast::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_cast@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0bad_cast@std@@QAE@ABV01@@Z PROC			; std::bad_cast::bad_cast, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABV01@@Z ; std::exception::exception
  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00032	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7bad_cast@std@@6B@
  00038	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??0bad_cast@std@@QAE@ABV01@@Z ENDP			; std::bad_cast::bad_cast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_cast@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1bad_cast@std@@UAE@XZ PROC				; std::bad_cast::~bad_cast, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1bad_cast@std@@UAE@XZ ENDP				; std::bad_cast::~bad_cast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_typeinfo.h
;	COMDAT ??0bad_cast@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0bad_cast@std@@QAE@XZ PROC				; std::bad_cast::bad_cast, COMDAT
; _this$ = ecx

; 125  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 124  :         : exception("bad cast", 1)

  00023	6a 01		 push	 1
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ??0exception@std@@QAE@QBDH@Z ; std::exception::exception

; 125  :     {

  00032	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00035	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7bad_cast@std@@6B@

; 126  :     }

  0003b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
??0bad_cast@std@@QAE@XZ ENDP				; std::bad_cast::bad_cast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_typeinfo.h
;	COMDAT ?name@type_info@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?name@type_info@@QBEPBDXZ PROC				; type_info::name, COMDAT
; _this$ = ecx

; 90   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 91   :         #ifdef _M_CEE_PURE
; 92   :         return __std_type_info_name(&_Data, static_cast<__type_info_node*>(__type_info_root_node.ToPointer()));
; 93   :         #else
; 94   :         return __std_type_info_name(&_Data, &__type_info_root_node);

  00023	8b f4		 mov	 esi, esp
  00025	68 00 00 00 00	 push	 OFFSET ?__type_info_root_node@@3U__type_info_node@@A ; __type_info_root_node
  0002a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c0 04	 add	 eax, 4
  00030	50		 push	 eax
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____std_type_info_name
  00037	83 c4 08	 add	 esp, 8
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 95   :         #endif
; 96   :     }

  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5b		 pop	 ebx
  00044	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
?name@type_info@@QBEPBDXZ ENDP				; type_info::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2282 : 		{	// report an out_of_range error

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2283 : 		_Xout_of_range("invalid string position");

  00023	8b f4		 mov	 esi, esp
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xran:

; 2284 : 		}

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset, COMDAT
; _this$ = ecx

; 2270 : 		{	// checks whether _Off is in the bounds of [0, this->size()]

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2271 : 		if (this->_Mysize() < _Off)

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  0002b	8b 00		 mov	 eax, DWORD PTR [eax]
  0002d	3b 45 08	 cmp	 eax, DWORD PTR __Off$[ebp]
  00030	73 08		 jae	 SHORT $LN3@Check_offs

; 2272 : 			_Xran();

  00032	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN3@Check_offs:

; 2273 : 		}

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c2 04 00	 ret	 4
?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2265 : 		{	// report a length_error

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2266 : 		_Xlength_error("string too long");

  00023	8b f4		 mov	 esi, esp
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xlen:

; 2267 : 		}

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -20						; size = 4
_this$ = -8						; size = 4
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2248 : 		{	// initialize buffer, deallocating any storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2249 : 		if (!_Built)

  00023	0f b6 45 08	 movzx	 eax, BYTE PTR __Built$[ebp]
  00027	85 c0		 test	 eax, eax
  00029	75 05		 jne	 SHORT $LN2@Tidy
  0002b	e9 84 00 00 00	 jmp	 $LN3@Tidy
$LN2@Tidy:

; 2250 : 			;
; 2251 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  00038	83 38 10	 cmp	 DWORD PTR [eax], 16	; 00000010H
  0003b	72 77		 jb	 SHORT $LN3@Tidy

; 2252 : 			{	// copy any leftovers to small buffer and deallocate
; 2253 : 			pointer _Ptr = this->_Bx()._Ptr;

  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
  00045	8b 00		 mov	 eax, DWORD PTR [eax]
  00047	89 45 ec	 mov	 DWORD PTR __Ptr$1[ebp], eax

; 2254 : 			this->_Getal().destroy(_STD addressof(this->_Bx()._Ptr));

  0004a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ??$addressof@PAD@std@@YAPAPADAAPAD@Z ; std::addressof<char *>
  00058	83 c4 04	 add	 esp, 4
  0005b	50		 push	 eax
  0005c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  00064	8b c8		 mov	 ecx, eax
  00066	e8 00 00 00 00	 call	 ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2255 : 			if (0 < _Newsize)

  0006b	83 7d 0c 00	 cmp	 DWORD PTR __Newsize$[ebp], 0
  0006f	76 22		 jbe	 SHORT $LN5@Tidy

; 2256 : 				_Traits::copy(this->_Bx()._Buf,

  00071	8b 45 0c	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00074	50		 push	 eax
  00075	8b 4d ec	 mov	 ecx, DWORD PTR __Ptr$1[ebp]
  00078	51		 push	 ecx
  00079	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPADPAD@Z ; std::_Unfancy<char>
  0007e	83 c4 04	 add	 esp, 4
  00081	50		 push	 eax
  00082	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	e8 00 00 00 00	 call	 ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
  0008a	50		 push	 eax
  0008b	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
  00090	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@Tidy:

; 2257 : 					_Unfancy(_Ptr), _Newsize);
; 2258 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00093	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  0009b	8b 00		 mov	 eax, DWORD PTR [eax]
  0009d	83 c0 01	 add	 eax, 1
  000a0	50		 push	 eax
  000a1	8b 4d ec	 mov	 ecx, DWORD PTR __Ptr$1[ebp]
  000a4	51		 push	 ecx
  000a5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  000ad	8b c8		 mov	 ecx, eax
  000af	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2259 : 			}
; 2260 : 		this->_Myres() = this->_BUF_SIZE - 1;

  000b4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b7	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  000bc	c7 00 0f 00 00
	00		 mov	 DWORD PTR [eax], 15	; 0000000fH

; 2261 : 		_Eos(_Newsize);

  000c2	8b 45 0c	 mov	 eax, DWORD PTR __Newsize$[ebp]
  000c5	50		 push	 eax
  000c6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c9	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2262 : 		}

  000ce	5f		 pop	 edi
  000cf	5e		 pop	 esi
  000d0	5b		 pop	 ebx
  000d1	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000d7	3b ec		 cmp	 ebp, esp
  000d9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000de	8b e5		 mov	 esp, ebp
  000e0	5d		 pop	 ebp
  000e1	c2 08 00	 ret	 8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2238 : 		{	// test if _Ptr points inside string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2239 : 		if (_Ptr == nullptr_t{} || _Ptr < this->_Myptr()
; 2240 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  00023	83 7d 08 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  00027	74 26		 je	 SHORT $LN4@Inside
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  00031	39 45 08	 cmp	 DWORD PTR __Ptr$[ebp], eax
  00034	72 19		 jb	 SHORT $LN4@Inside
  00036	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  0003e	8b f0		 mov	 esi, eax
  00040	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  00048	03 30		 add	 esi, DWORD PTR [eax]
  0004a	3b 75 08	 cmp	 esi, DWORD PTR __Ptr$[ebp]
  0004d	77 06		 ja	 SHORT $LN2@Inside
$LN4@Inside:

; 2241 : 			return (false);	// don't ask

  0004f	32 c0		 xor	 al, al
  00051	eb 04		 jmp	 SHORT $LN1@Inside

; 2242 : 		else

  00053	eb 02		 jmp	 SHORT $LN1@Inside
$LN2@Inside:

; 2243 : 			return (true);

  00055	b0 01		 mov	 al, 1
$LN1@Inside:

; 2244 : 		}

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00060	3b ec		 cmp	 ebp, esp
  00062	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 04 00	 ret	 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv140 = -208						; size = 4
tv133 = -208						; size = 4
_this$ = -8						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2224 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2225 : 		if (max_size() < _Newsize)

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0002b	3b 45 08	 cmp	 eax, DWORD PTR __Newsize$[ebp]
  0002e	73 08		 jae	 SHORT $LN2@Grow

; 2226 : 			_Xlen();	// result too long

  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Grow:

; 2227 : 		if (this->_Myres() < _Newsize)

  00038	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  00040	8b 00		 mov	 eax, DWORD PTR [eax]
  00042	3b 45 08	 cmp	 eax, DWORD PTR __Newsize$[ebp]
  00045	73 19		 jae	 SHORT $LN3@Grow

; 2228 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  00047	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  0004f	8b 00		 mov	 eax, DWORD PTR [eax]
  00051	50		 push	 eax
  00052	8b 4d 08	 mov	 ecx, DWORD PTR __Newsize$[ebp]
  00055	51		 push	 ecx
  00056	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  0005e	eb 5b		 jmp	 SHORT $LN4@Grow
$LN3@Grow:

; 2229 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

  00060	0f b6 45 0c	 movzx	 eax, BYTE PTR __Trim$[ebp]
  00064	85 c0		 test	 eax, eax
  00066	74 43		 je	 SHORT $LN5@Grow
  00068	83 7d 08 10	 cmp	 DWORD PTR __Newsize$[ebp], 16 ; 00000010H
  0006c	73 3d		 jae	 SHORT $LN5@Grow

; 2230 : 			_Tidy(true,	// copy and deallocate if trimming to small string

  0006e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  00076	8b 4d 08	 mov	 ecx, DWORD PTR __Newsize$[ebp]
  00079	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0007b	73 0b		 jae	 SHORT $LN9@Grow
  0007d	8b 55 08	 mov	 edx, DWORD PTR __Newsize$[ebp]
  00080	89 95 30 ff ff
	ff		 mov	 DWORD PTR tv133[ebp], edx
  00086	eb 10		 jmp	 SHORT $LN10@Grow
$LN9@Grow:
  00088	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  00090	8b 00		 mov	 eax, DWORD PTR [eax]
  00092	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv133[ebp], eax
$LN10@Grow:
  00098	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv133[ebp]
  0009e	51		 push	 ecx
  0009f	6a 01		 push	 1
  000a1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a4	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
  000a9	eb 10		 jmp	 SHORT $LN4@Grow
$LN5@Grow:

; 2231 : 				_Newsize < this->_Mysize() ? _Newsize : this->_Mysize());
; 2232 : 		else if (_Newsize == 0)

  000ab	83 7d 08 00	 cmp	 DWORD PTR __Newsize$[ebp], 0
  000af	75 0a		 jne	 SHORT $LN4@Grow

; 2233 : 			_Eos(0);	// new size is zero, just null terminate

  000b1	6a 00		 push	 0
  000b3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b6	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2234 : 		return (0 < _Newsize);	// return true only if more work to do

  000bb	83 7d 08 00	 cmp	 DWORD PTR __Newsize$[ebp], 0
  000bf	76 0c		 jbe	 SHORT $LN11@Grow
  000c1	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv140[ebp], 1
  000cb	eb 0a		 jmp	 SHORT $LN12@Grow
$LN11@Grow:
  000cd	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv140[ebp], 0
$LN12@Grow:
  000d7	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv140[ebp]
$LN8@Grow:

; 2235 : 		}

  000dd	5f		 pop	 edi
  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx
  000e0	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  000e6	3b ec		 cmp	 ebp, esp
  000e8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ed	8b e5		 mov	 esp, ebp
  000ef	5d		 pop	 ebp
  000f0	c2 08 00	 ret	 8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
$T1 = -221						; size = 1
__Dx$ = -20						; size = 4
_this$ = -8						; size = 4
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00013	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2218 : 		auto& _Dx = this->_Get_data();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
  0002b	89 45 ec	 mov	 DWORD PTR __Dx$[ebp], eax

; 2219 : 		_Traits::assign(_Dx._Myptr()[_Dx._Mysize = _Newsize], _Elem());

  0002e	c6 85 23 ff ff
	ff 00		 mov	 BYTE PTR $T1[ebp], 0
  00035	8b 45 ec	 mov	 eax, DWORD PTR __Dx$[ebp]
  00038	8b 4d 08	 mov	 ecx, DWORD PTR __Newsize$[ebp]
  0003b	89 48 14	 mov	 DWORD PTR [eax+20], ecx
  0003e	8d 95 23 ff ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  00044	52		 push	 edx
  00045	8b 4d ec	 mov	 ecx, DWORD PTR __Dx$[ebp]
  00048	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0004d	03 45 08	 add	 eax, DWORD PTR __Newsize$[ebp]
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
  00056	83 c4 08	 add	 esp, 8

; 2220 : 		}

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  00062	3b ec		 cmp	 ebp, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv217 = -248						; size = 4
tv216 = -248						; size = 4
__Ptr$ = -48						; size = 4
__Newres$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	51		 push	 ecx
  0001c	8d bd 08 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-248]
  00022	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00027	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002c	f3 ab		 rep stosd
  0002e	59		 pop	 ecx
  0002f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00034	33 c5		 xor	 eax, ebp
  00036	50		 push	 eax
  00037	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  0003a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00040	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00043	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

  00046	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00049	83 c8 0f	 or	 eax, 15			; 0000000fH
  0004c	89 45 dc	 mov	 DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

  0004f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00057	3b 45 dc	 cmp	 eax, DWORD PTR __Newres$[ebp]
  0005a	73 08		 jae	 SHORT $LN2@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

  0005c	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0005f	89 45 dc	 mov	 DWORD PTR __Newres$[ebp], eax
  00062	eb 6a		 jmp	 SHORT $LN3@Copy
$LN2@Copy:

; 2186 : 		else if (this->_Myres() / 2 <= _Newres / 3)

  00064	8b 45 dc	 mov	 eax, DWORD PTR __Newres$[ebp]
  00067	33 d2		 xor	 edx, edx
  00069	b9 03 00 00 00	 mov	 ecx, 3
  0006e	f7 f1		 div	 ecx
  00070	8b f0		 mov	 esi, eax
  00072	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  0007a	8b 10		 mov	 edx, DWORD PTR [eax]
  0007c	d1 ea		 shr	 edx, 1
  0007e	3b d6		 cmp	 edx, esi
  00080	77 02		 ja	 SHORT $LN4@Copy
  00082	eb 4a		 jmp	 SHORT $LN3@Copy
$LN4@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres() <= max_size() - this->_Myres() / 2)

  00084	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00087	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  0008c	8b 30		 mov	 esi, DWORD PTR [eax]
  0008e	d1 ee		 shr	 esi, 1
  00090	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00098	8b f8		 mov	 edi, eax
  0009a	2b fe		 sub	 edi, esi
  0009c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009f	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  000a4	39 38		 cmp	 DWORD PTR [eax], edi
  000a6	77 1b		 ja	 SHORT $LN6@Copy

; 2189 : 			_Newres = this->_Myres()

  000a8	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  000b0	8b 30		 mov	 esi, DWORD PTR [eax]
  000b2	d1 ee		 shr	 esi, 1
  000b4	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b7	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  000bc	03 30		 add	 esi, DWORD PTR [eax]
  000be	89 75 dc	 mov	 DWORD PTR __Newres$[ebp], esi

; 2190 : 				+ this->_Myres() / 2;	// grow exponentially if possible
; 2191 : 		else

  000c1	eb 0b		 jmp	 SHORT $LN3@Copy
$LN6@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

  000c3	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c6	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  000cb	89 45 dc	 mov	 DWORD PTR __Newres$[ebp], eax
$LN3@Copy:

; 2193 : 
; 2194 : 		pointer _Ptr;
; 2195 : 		_TRY_BEGIN

  000ce	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

  000d5	8b 45 dc	 mov	 eax, DWORD PTR __Newres$[ebp]
  000d8	83 c0 01	 add	 eax, 1
  000db	50		 push	 eax
  000dc	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000df	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  000e4	8b c8		 mov	 ecx, eax
  000e6	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
  000eb	89 85 08 ff ff
	ff		 mov	 DWORD PTR tv216[ebp], eax
  000f1	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR tv216[ebp]
  000f7	89 4d d0	 mov	 DWORD PTR __Ptr$[ebp], ecx
  000fa	eb 65		 jmp	 SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

  000fc	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  000ff	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00102	89 45 dc	 mov	 DWORD PTR __Newres$[ebp], eax

; 2199 : 			_TRY_BEGIN

  00105	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

  00109	8b 45 dc	 mov	 eax, DWORD PTR __Newres$[ebp]
  0010c	83 c0 01	 add	 eax, 1
  0010f	50		 push	 eax
  00110	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00113	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  00118	8b c8		 mov	 ecx, eax
  0011a	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
  0011f	89 85 08 ff ff
	ff		 mov	 DWORD PTR tv217[ebp], eax
  00125	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR tv217[ebp]
  0012b	89 4d d0	 mov	 DWORD PTR __Ptr$[ebp], ecx
  0012e	eb 1b		 jmp	 SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

  00130	6a 00		 push	 0
  00132	6a 01		 push	 1
  00134	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00137	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

  0013c	6a 00		 push	 0
  0013e	6a 00		 push	 0
  00140	e8 00 00 00 00	 call	 __CxxThrowException@8

; 2204 : 			_CATCH_END

  00145	b8 00 00 00 00	 mov	 eax, $LN17@Copy
  0014a	c3		 ret	 0
$LN14@Copy:
  0014b	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
  00152	eb 07		 jmp	 SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
  00154	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

  0015b	b8 00 00 00 00	 mov	 eax, $LN19@Copy
  00160	c3		 ret	 0
$LN12@Copy:
  00161	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00168	eb 07		 jmp	 SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
  0016a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

  00171	83 7d 0c 00	 cmp	 DWORD PTR __Oldlen$[ebp], 0
  00175	76 22		 jbe	 SHORT $LN10@Copy

; 2208 : 			_Traits::copy(_Unfancy(_Ptr), this->_Myptr(),

  00177	8b 45 0c	 mov	 eax, DWORD PTR __Oldlen$[ebp]
  0017a	50		 push	 eax
  0017b	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0017e	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  00183	50		 push	 eax
  00184	8b 4d d0	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00187	51		 push	 ecx
  00188	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPADPAD@Z ; std::_Unfancy<char>
  0018d	83 c4 04	 add	 esp, 4
  00190	50		 push	 eax
  00191	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
  00196	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@Copy:

; 2209 : 				_Oldlen);	// copy existing elements
; 2210 : 		_Tidy(true);

  00199	6a 00		 push	 0
  0019b	6a 01		 push	 1
  0019d	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  001a0	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(_STD addressof(this->_Bx()._Ptr), _Ptr);

  001a5	8d 45 d0	 lea	 eax, DWORD PTR __Ptr$[ebp]
  001a8	50		 push	 eax
  001a9	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  001ac	e8 00 00 00 00	 call	 ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
  001b1	50		 push	 eax
  001b2	e8 00 00 00 00	 call	 ??$addressof@PAD@std@@YAPAPADAAPAD@Z ; std::addressof<char *>
  001b7	83 c4 04	 add	 esp, 4
  001ba	50		 push	 eax
  001bb	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  001be	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  001c3	8b c8		 mov	 ecx, eax
  001c5	e8 00 00 00 00	 call	 ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres() = _Newres;

  001ca	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  001cd	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  001d2	8b 4d dc	 mov	 ecx, DWORD PTR __Newres$[ebp]
  001d5	89 08		 mov	 DWORD PTR [eax], ecx

; 2213 : 		_Eos(_Oldlen);

  001d7	8b 45 0c	 mov	 eax, DWORD PTR __Oldlen$[ebp]
  001da	50		 push	 eax
  001db	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  001de	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

  001e3	52		 push	 edx
  001e4	8b cd		 mov	 ecx, ebp
  001e6	50		 push	 eax
  001e7	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN23@Copy
  001ed	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001f2	58		 pop	 eax
  001f3	5a		 pop	 edx
  001f4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  001f7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001fe	59		 pop	 ecx
  001ff	5f		 pop	 edi
  00200	5e		 pop	 esi
  00201	5b		 pop	 ebx
  00202	81 c4 f8 00 00
	00		 add	 esp, 248		; 000000f8H
  00208	3b ec		 cmp	 ebp, esp
  0020a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0020f	8b e5		 mov	 esp, ebp
  00211	5d		 pop	 ebp
  00212	c2 08 00	 ret	 8
  00215	0f 1f 00	 npad	 3
$LN23@Copy:
  00218	01 00 00 00	 DD	 1
  0021c	00 00 00 00	 DD	 $LN22@Copy
$LN22@Copy:
  00220	d0 ff ff ff	 DD	 -48			; ffffffd0H
  00224	04 00 00 00	 DD	 4
  00228	00 00 00 00	 DD	 $LN20@Copy
$LN20@Copy:
  0022c	5f		 DB	 95			; 0000005fH
  0022d	50		 DB	 80			; 00000050H
  0022e	74		 DB	 116			; 00000074H
  0022f	72		 DB	 114			; 00000072H
  00230	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 04 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-252]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ch$ = 16						; size = 1
?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign, COMDAT
; _this$ = ecx

; 2174 : 		{	// assign _Count copies of _Ch beginning at _Off

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2175 : 		if (_Count == 1)

  00023	83 7d 0c 01	 cmp	 DWORD PTR __Count$[ebp], 1
  00027	75 1a		 jne	 SHORT $LN2@Chassign

; 2176 : 			_Traits::assign(*(this->_Myptr() + _Off), _Ch);

  00029	8d 45 10	 lea	 eax, DWORD PTR __Ch$[ebp]
  0002c	50		 push	 eax
  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  00035	03 45 08	 add	 eax, DWORD PTR __Off$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
  0003e	83 c4 08	 add	 esp, 8

; 2177 : 		else

  00041	eb 1d		 jmp	 SHORT $LN1@Chassign
$LN2@Chassign:

; 2178 : 			_Traits::assign(this->_Myptr() + _Off, _Count, _Ch);

  00043	0f b6 45 10	 movzx	 eax, BYTE PTR __Ch$[ebp]
  00047	50		 push	 eax
  00048	8b 4d 0c	 mov	 ecx, DWORD PTR __Count$[ebp]
  0004b	51		 push	 ecx
  0004c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  00054	03 45 08	 add	 eax, DWORD PTR __Off$[ebp]
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?assign@?$char_traits@D@std@@SAPADPADID@Z ; std::char_traits<char>::assign
  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@Chassign:

; 2179 : 		}

  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c2 0c 00	 ret	 12			; 0000000cH
?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT
; _this$ = ecx

; 2144 : 		{	// compare [0, _Mysize()) with [_Ptr, <null>)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2145 : 		_DEBUG_POINTER(_Ptr);

  00023	68 61 08 00 00	 push	 2145			; 00000861H
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002d	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ??$_Debug_pointer@$$CBD@std@@YAXPBDPB_WI@Z ; std::_Debug_pointer<char const >
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2146 : 		return (_Traits_compare(this->_Myptr(), this->_Mysize(),

  00039	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ?length@?$char_traits@D@std@@SAIPBD@Z ; std::char_traits<char>::length
  00042	83 c4 04	 add	 esp, 4
  00045	50		 push	 eax
  00046	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00049	51		 push	 ecx
  0004a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  00052	8b 10		 mov	 edx, DWORD PTR [eax]
  00054	52		 push	 edx
  00055	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ?_Traits_compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAHQBDI0I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Traits_compare
  00063	83 c4 10	 add	 esp, 16			; 00000010H

; 2147 : 			_Ptr, _Traits::length(_Ptr)));
; 2148 : 		}

  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx
  00069	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006f	3b ec		 cmp	 ebp, esp
  00071	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c2 04 00	 ret	 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z
_TEXT	SEGMENT
__Max_effective_size$ = -20				; size = 4
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__Size$ = 12						; size = 4
?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size, COMDAT
; _this$ = ecx

; 2111 : 		{	// trims _Size to the longest it can be assuming a string starting at _Off

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2112 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  0002b	8b 00		 mov	 eax, DWORD PTR [eax]
  0002d	2b 45 08	 sub	 eax, DWORD PTR __Off$[ebp]
  00030	89 45 ec	 mov	 DWORD PTR __Max_effective_size$[ebp], eax

; 2113 : 		if (_Size <= _Max_effective_size)

  00033	8b 45 0c	 mov	 eax, DWORD PTR __Size$[ebp]
  00036	3b 45 ec	 cmp	 eax, DWORD PTR __Max_effective_size$[ebp]
  00039	77 07		 ja	 SHORT $LN2@Clamp_suff

; 2114 : 			return (_Size);

  0003b	8b 45 0c	 mov	 eax, DWORD PTR __Size$[ebp]
  0003e	eb 05		 jmp	 SHORT $LN1@Clamp_suff

; 2115 : 		else

  00040	eb 03		 jmp	 SHORT $LN1@Clamp_suff
$LN2@Clamp_suff:

; 2116 : 			return (_Max_effective_size);

  00042	8b 45 ec	 mov	 eax, DWORD PTR __Max_effective_size$[ebp]
$LN1@Clamp_suff:

; 2117 : 		}

  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Traits_compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAHQBDI0I@Z
_TEXT	SEGMENT
tv65 = -220						; size = 4
__Ans$ = -20						; size = 4
__Min_size$ = -8					; size = 4
__Left$ = 8						; size = 4
__Left_size$ = 12					; size = 4
__Right$ = 16						; size = 4
__Right_size$ = 20					; size = 4
?_Traits_compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAHQBDI0I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Traits_compare, COMDAT

; 2094 : 		{	// compare [_Left, _Left + _Left_size) to [_Right, _Right + _Right_size) using _Traits

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00012	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 2095 : 		const size_type _Min_size = _Left_size < _Right_size ? _Left_size : _Right_size;

  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Left_size$[ebp]
  00021	3b 45 14	 cmp	 eax, DWORD PTR __Right_size$[ebp]
  00024	73 0b		 jae	 SHORT $LN6@Traits_com
  00026	8b 4d 0c	 mov	 ecx, DWORD PTR __Left_size$[ebp]
  00029	89 8d 24 ff ff
	ff		 mov	 DWORD PTR tv65[ebp], ecx
  0002f	eb 09		 jmp	 SHORT $LN7@Traits_com
$LN6@Traits_com:
  00031	8b 55 14	 mov	 edx, DWORD PTR __Right_size$[ebp]
  00034	89 95 24 ff ff
	ff		 mov	 DWORD PTR tv65[ebp], edx
$LN7@Traits_com:
  0003a	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv65[ebp]
  00040	89 45 f8	 mov	 DWORD PTR __Min_size$[ebp], eax

; 2096 : 		const int _Ans = _Traits::compare(_Left, _Right, _Min_size);

  00043	8b 45 f8	 mov	 eax, DWORD PTR __Min_size$[ebp]
  00046	50		 push	 eax
  00047	8b 4d 10	 mov	 ecx, DWORD PTR __Right$[ebp]
  0004a	51		 push	 ecx
  0004b	8b 55 08	 mov	 edx, DWORD PTR __Left$[ebp]
  0004e	52		 push	 edx
  0004f	e8 00 00 00 00	 call	 ?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
  00054	83 c4 0c	 add	 esp, 12			; 0000000cH
  00057	89 45 ec	 mov	 DWORD PTR __Ans$[ebp], eax

; 2097 : 
; 2098 : 		if (_Ans != 0)

  0005a	83 7d ec 00	 cmp	 DWORD PTR __Ans$[ebp], 0
  0005e	74 05		 je	 SHORT $LN2@Traits_com

; 2099 : 			return (_Ans);

  00060	8b 45 ec	 mov	 eax, DWORD PTR __Ans$[ebp]
  00063	eb 1e		 jmp	 SHORT $LN1@Traits_com
$LN2@Traits_com:

; 2100 : 
; 2101 : 		if (_Left_size < _Right_size)

  00065	8b 45 0c	 mov	 eax, DWORD PTR __Left_size$[ebp]
  00068	3b 45 14	 cmp	 eax, DWORD PTR __Right_size$[ebp]
  0006b	73 05		 jae	 SHORT $LN3@Traits_com

; 2102 : 			return (-1);

  0006d	83 c8 ff	 or	 eax, -1
  00070	eb 11		 jmp	 SHORT $LN1@Traits_com
$LN3@Traits_com:

; 2103 : 
; 2104 : 		if (_Left_size > _Right_size)

  00072	8b 45 0c	 mov	 eax, DWORD PTR __Left_size$[ebp]
  00075	3b 45 14	 cmp	 eax, DWORD PTR __Right_size$[ebp]
  00078	76 07		 jbe	 SHORT $LN4@Traits_com

; 2105 : 			return (1);

  0007a	b8 01 00 00 00	 mov	 eax, 1
  0007f	eb 02		 jmp	 SHORT $LN1@Traits_com
$LN4@Traits_com:

; 2106 : 
; 2107 : 		return (0);

  00081	33 c0		 xor	 eax, eax
$LN1@Traits_com:

; 2108 : 		}

  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  0008c	3b ec		 cmp	 ebp, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
?_Traits_compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAHQBDI0I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Traits_compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Size$1 = -20						; size = 4
_this$ = -8						; size = 4
__Newcap$ = 8						; size = 4
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve, COMDAT
; _this$ = ecx

; 1793 : 		{	// determine new minimum length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1794 : 		if (this->_Mysize() <= _Newcap && this->_Myres() != _Newcap)

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  0002b	8b 00		 mov	 eax, DWORD PTR [eax]
  0002d	3b 45 08	 cmp	 eax, DWORD PTR __Newcap$[ebp]
  00030	77 3d		 ja	 SHORT $LN1@reserve
  00032	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  0003a	8b 00		 mov	 eax, DWORD PTR [eax]
  0003c	3b 45 08	 cmp	 eax, DWORD PTR __Newcap$[ebp]
  0003f	74 2e		 je	 SHORT $LN1@reserve

; 1795 : 			{	// change reservation
; 1796 : 			size_type _Size = this->_Mysize();

  00041	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  00049	8b 00		 mov	 eax, DWORD PTR [eax]
  0004b	89 45 ec	 mov	 DWORD PTR __Size$1[ebp], eax

; 1797 : 			if (_Grow(_Newcap, true))

  0004e	6a 01		 push	 1
  00050	8b 45 08	 mov	 eax, DWORD PTR __Newcap$[ebp]
  00053	50		 push	 eax
  00054	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
  0005c	0f b6 c8	 movzx	 ecx, al
  0005f	85 c9		 test	 ecx, ecx
  00061	74 0c		 je	 SHORT $LN1@reserve

; 1798 : 				_Eos(_Size);

  00063	8b 45 ec	 mov	 eax, DWORD PTR __Size$1[ebp]
  00066	50		 push	 eax
  00067	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@reserve:

; 1799 : 			}
; 1800 : 		}

  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	5b		 pop	 ebx
  00072	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00078	3b ec		 cmp	 ebp, esp
  0007a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 04 00	 ret	 4
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
tv75 = -232						; size = 4
$T1 = -221						; size = 1
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1769 : 		{	// return maximum possible length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00013	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1770 : 		const size_type _Num = this->_Getal().max_size();

  00023	0f b6 85 23 ff
	ff ff		 movzx	 eax, BYTE PTR $T1[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  00033	8b c8		 mov	 ecx, eax
  00035	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<char> >::max_size
  0003a	89 45 ec	 mov	 DWORD PTR __Num$[ebp], eax

; 1771 : 		return (_Num <= 1 ? 1 : _Num - 1);

  0003d	83 7d ec 01	 cmp	 DWORD PTR __Num$[ebp], 1
  00041	77 0c		 ja	 SHORT $LN3@max_size
  00043	c7 85 18 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv75[ebp], 1
  0004d	eb 0c		 jmp	 SHORT $LN4@max_size
$LN3@max_size:
  0004f	8b 45 ec	 mov	 eax, DWORD PTR __Num$[ebp]
  00052	83 e8 01	 sub	 eax, 1
  00055	89 85 18 ff ff
	ff		 mov	 DWORD PTR tv75[ebp], eax
$LN4@max_size:
  0005b	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR tv75[ebp]

; 1772 : 		}

  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
  00064	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1764 : 		{	// return length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1765 : 		return (this->_Mysize());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  0002b	8b 00		 mov	 eax, DWORD PTR [eax]

; 1766 : 		}

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx

; 1742 : 		{	// return pointer to null-terminated nonmutable array

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1743 : 		return (this->_Myptr());

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr

; 1744 : 		}

  0004a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00054	59		 pop	 ecx
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
_TEXT	SEGMENT
__Mydata$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin, COMDAT
; _this$ = ecx

; 1594 : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00021	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1595 : 		auto _Mydata = &this->_Get_data();

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
  0004a	89 45 e0	 mov	 DWORD PTR __Mydata$[ebp], eax

; 1596 : 		return (iterator(this->_Getal().address(*_Mydata->_Myptr()), _Mydata));

  0004d	8b 45 e0	 mov	 eax, DWORD PTR __Mydata$[ebp]
  00050	50		 push	 eax
  00051	8b 4d e0	 mov	 ecx, DWORD PTR __Mydata$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00059	50		 push	 eax
  0005a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  00062	8b c8		 mov	 ecx, eax
  00064	e8 00 00 00 00	 call	 ?address@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEPADAAD@Z ; std::_Wrap_alloc<std::allocator<char> >::address
  00069	50		 push	 eax
  0006a	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0006d	e8 00 00 00 00	 call	 ??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >
  00072	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1597 : 		}

  00075	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00078	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007f	59		 pop	 ecx
  00080	5f		 pop	 edi
  00081	5e		 pop	 esi
  00082	5b		 pop	 ebx
  00083	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  00089	3b ec		 cmp	 ebp, esp
  0008b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 18 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-232]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -32					; size = 4
__Ptr$2 = -20						; size = 4
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1347 : 		{	// erase elements [_Off, _Off + _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00013	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1348 : 		_Check_offset(_Off);

  00023	8b 45 08	 mov	 eax, DWORD PTR __Off$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset

; 1349 : 		if (this->_Mysize() - _Off <= _Count)

  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  00037	8b 00		 mov	 eax, DWORD PTR [eax]
  00039	2b 45 08	 sub	 eax, DWORD PTR __Off$[ebp]
  0003c	3b 45 0c	 cmp	 eax, DWORD PTR __Count$[ebp]
  0003f	77 0e		 ja	 SHORT $LN2@erase

; 1350 : 			_Eos(_Off);	// erase elements [_Off, ...)

  00041	8b 45 08	 mov	 eax, DWORD PTR __Off$[ebp]
  00044	50		 push	 eax
  00045	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
  0004d	eb 4a		 jmp	 SHORT $LN3@erase
$LN2@erase:

; 1351 : 		else if (0 < _Count)

  0004f	83 7d 0c 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00053	76 44		 jbe	 SHORT $LN3@erase

; 1352 : 			{	// move elements down
; 1353 : 			value_type *_Ptr = this->_Myptr() + _Off;

  00055	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  0005d	03 45 08	 add	 eax, DWORD PTR __Off$[ebp]
  00060	89 45 ec	 mov	 DWORD PTR __Ptr$2[ebp], eax

; 1354 : 			size_type _Newsize = this->_Mysize() - _Count;

  00063	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  0006b	8b 00		 mov	 eax, DWORD PTR [eax]
  0006d	2b 45 0c	 sub	 eax, DWORD PTR __Count$[ebp]
  00070	89 45 e0	 mov	 DWORD PTR __Newsize$1[ebp], eax

; 1355 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

  00073	8b 45 e0	 mov	 eax, DWORD PTR __Newsize$1[ebp]
  00076	2b 45 08	 sub	 eax, DWORD PTR __Off$[ebp]
  00079	50		 push	 eax
  0007a	8b 4d ec	 mov	 ecx, DWORD PTR __Ptr$2[ebp]
  0007d	03 4d 0c	 add	 ecx, DWORD PTR __Count$[ebp]
  00080	51		 push	 ecx
  00081	8b 55 ec	 mov	 edx, DWORD PTR __Ptr$2[ebp]
  00084	52		 push	 edx
  00085	e8 00 00 00 00	 call	 ?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1356 : 			_Eos(_Newsize);

  0008d	8b 45 e0	 mov	 eax, DWORD PTR __Newsize$1[ebp]
  00090	50		 push	 eax
  00091	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN3@erase:

; 1357 : 			}
; 1358 : 		return (*this);

  00099	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 1359 : 		}

  0009c	5f		 pop	 edi
  0009d	5e		 pop	 esi
  0009e	5b		 pop	 ebx
  0009f	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  000a5	3b ec		 cmp	 ebp, esp
  000a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 08 00	 ret	 8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1340 : 		{	// erase elements [_Off, ...)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1341 : 		_Check_offset(_Off);

  00023	8b 45 08	 mov	 eax, DWORD PTR __Off$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset

; 1342 : 		_Eos(_Off);

  0002f	8b 45 08	 mov	 eax, DWORD PTR __Off$[ebp]
  00032	50		 push	 eax
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1343 : 		return (*this);

  0003b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 1344 : 		}

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
__Ch$ = 12						; size = 1
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1186 : 		{	// assign _Count * _Ch

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1187 : 		if (_Count == npos)

  00023	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
  0002c	75 08		 jne	 SHORT $LN2@assign

; 1188 : 			_Xlen();	// result too long

  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@assign:

; 1189 : 
; 1190 : 		if (_Grow(_Count))

  00036	6a 00		 push	 0
  00038	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
  00044	0f b6 c8	 movzx	 ecx, al
  00047	85 c9		 test	 ecx, ecx
  00049	74 1f		 je	 SHORT $LN3@assign

; 1191 : 			{	// make room and assign new stuff
; 1192 : 			_Chassign(0, _Count, _Ch);

  0004b	0f b6 45 0c	 movzx	 eax, BYTE PTR __Ch$[ebp]
  0004f	50		 push	 eax
  00050	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00053	51		 push	 ecx
  00054	6a 00		 push	 0
  00056	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign

; 1193 : 			_Eos(_Count);

  0005e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00061	50		 push	 eax
  00062	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN3@assign:

; 1194 : 			}
; 1195 : 		return (*this);

  0006a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
$LN4@assign:

; 1196 : 		}

  0006d	5f		 pop	 edi
  0006e	5e		 pop	 esi
  0006f	5b		 pop	 ebx
  00070	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00076	3b ec		 cmp	 ebp, esp
  00078	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c2 08 00	 ret	 8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1180 : 		{	// assign [_Ptr, <null>)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1181 : 		_DEBUG_POINTER(_Ptr);

  00023	68 9d 04 00 00	 push	 1181			; 0000049dH
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002d	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ??$_Debug_pointer@$$CBD@std@@YAXPBDPB_WI@Z ; std::_Debug_pointer<char const >
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1182 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00039	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ?length@?$char_traits@D@std@@SAIPBD@Z ; std::char_traits<char>::length
  00042	83 c4 04	 add	 esp, 4
  00045	50		 push	 eax
  00046	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00049	51		 push	 ecx
  0004a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1183 : 		}

  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5b		 pop	 ebx
  00055	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0005b	3b ec		 cmp	 ebp, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 04 00	 ret	 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
tv68 = -205						; size = 1
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1165 : 		{	// assign [_Ptr, _Ptr + _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1166 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);

  00023	83 7d 0c 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00027	74 09		 je	 SHORT $LN5@assign
  00029	c6 85 33 ff ff
	ff 01		 mov	 BYTE PTR tv68[ebp], 1
  00030	eb 07		 jmp	 SHORT $LN6@assign
$LN5@assign:
  00032	c6 85 33 ff ff
	ff 00		 mov	 BYTE PTR tv68[ebp], 0
$LN6@assign:
  00039	68 8e 04 00 00	 push	 1166			; 0000048eH
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00043	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00046	50		 push	 eax
  00047	0f b6 8d 33 ff
	ff ff		 movzx	 ecx, BYTE PTR tv68[ebp]
  0004e	51		 push	 ecx
  0004f	e8 00 00 00 00	 call	 ??$_Debug_pointer_if@$$CBD@std@@YAX_NPBDPB_WI@Z ; std::_Debug_pointer_if<char const >
  00054	83 c4 10	 add	 esp, 16			; 00000010H

; 1167 : 		if (_Inside(_Ptr))

  00057	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0005a	50		 push	 eax
  0005b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	e8 00 00 00 00	 call	 ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
  00063	0f b6 c8	 movzx	 ecx, al
  00066	85 c9		 test	 ecx, ecx
  00068	74 20		 je	 SHORT $LN2@assign

; 1168 : 			return (assign(*this,

  0006a	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  0006d	50		 push	 eax
  0006e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  00076	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00079	2b c8		 sub	 ecx, eax
  0007b	51		 push	 ecx
  0007c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0007f	52		 push	 edx
  00080	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00088	eb 3d		 jmp	 SHORT $LN1@assign
$LN2@assign:

; 1169 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1170 : 
; 1171 : 		if (_Grow(_Count))

  0008a	6a 00		 push	 0
  0008c	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  0008f	50		 push	 eax
  00090	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
  00098	0f b6 c8	 movzx	 ecx, al
  0009b	85 c9		 test	 ecx, ecx
  0009d	74 25		 je	 SHORT $LN3@assign

; 1172 : 			{	// make room and assign new stuff
; 1173 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

  0009f	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  000a2	50		 push	 eax
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  000a6	51		 push	 ecx
  000a7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  000af	50		 push	 eax
  000b0	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
  000b5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1174 : 			_Eos(_Count);

  000b8	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  000bb	50		 push	 eax
  000bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN3@assign:

; 1175 : 			}
; 1176 : 		return (*this);

  000c4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
$LN1@assign:

; 1177 : 		}

  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	5b		 pop	 ebx
  000ca	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  000d0	3b ec		 cmp	 ebp, esp
  000d2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d7	8b e5		 mov	 esp, ebp
  000d9	5d		 pop	 ebp
  000da	c2 08 00	 ret	 8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1149 : 		{	// assign _Right [_Roff, _Roff + _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1150 : 		_Right._Check_offset(_Roff);

  00023	8b 45 0c	 mov	 eax, DWORD PTR __Roff$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0002a	e8 00 00 00 00	 call	 ?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset

; 1151 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);

  0002f	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  00032	50		 push	 eax
  00033	8b 4d 0c	 mov	 ecx, DWORD PTR __Roff$[ebp]
  00036	51		 push	 ecx
  00037	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0003a	e8 00 00 00 00	 call	 ?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
  0003f	89 45 10	 mov	 DWORD PTR __Count$[ebp], eax

; 1152 : 
; 1153 : 		if (this == &_Right)

  00042	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00045	3b 45 08	 cmp	 eax, DWORD PTR __Right$[ebp]
  00048	75 1f		 jne	 SHORT $LN2@assign

; 1154 : 			erase((size_type)(_Roff + _Count)), erase(0, _Roff);	// substring

  0004a	8b 45 0c	 mov	 eax, DWORD PTR __Roff$[ebp]
  0004d	03 45 10	 add	 eax, DWORD PTR __Count$[ebp]
  00050	50		 push	 eax
  00051	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00059	8b 4d 0c	 mov	 ecx, DWORD PTR __Roff$[ebp]
  0005c	51		 push	 ecx
  0005d	6a 00		 push	 0
  0005f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00067	eb 42		 jmp	 SHORT $LN3@assign
$LN2@assign:

; 1155 : 		else if (_Grow(_Count))

  00069	6a 00		 push	 0
  0006b	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  0006e	50		 push	 eax
  0006f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
  00077	0f b6 c8	 movzx	 ecx, al
  0007a	85 c9		 test	 ecx, ecx
  0007c	74 2d		 je	 SHORT $LN3@assign

; 1156 : 			{	// make room and assign new stuff
; 1157 : 			_Traits::copy(this->_Myptr(),

  0007e	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  00081	50		 push	 eax
  00082	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00085	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  0008a	03 45 0c	 add	 eax, DWORD PTR __Roff$[ebp]
  0008d	50		 push	 eax
  0008e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00091	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  00096	50		 push	 eax
  00097	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
  0009c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1158 : 				_Right._Myptr() + _Roff, _Count);
; 1159 : 			_Eos(_Count);

  0009f	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  000a2	50		 push	 eax
  000a3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a6	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN3@assign:

; 1160 : 			}
; 1161 : 		return (*this);

  000ab	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 1162 : 		}

  000ae	5f		 pop	 edi
  000af	5e		 pop	 esi
  000b0	5b		 pop	 ebx
  000b1	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000b7	3b ec		 cmp	 ebp, esp
  000b9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000be	8b e5		 mov	 esp, ebp
  000c0	5d		 pop	 ebp
  000c1	c2 0c 00	 ret	 12			; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z
_TEXT	SEGMENT
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
__Ch$ = 12						; size = 1
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 1111 : 		{	// append _Count * _Ch

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1112 : 		if (npos - this->_Mysize() <= _Count)

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  0002b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
  00031	2b 08		 sub	 ecx, DWORD PTR [eax]
  00033	3b 4d 08	 cmp	 ecx, DWORD PTR __Count$[ebp]
  00036	77 08		 ja	 SHORT $LN2@append

; 1113 : 			_Xlen();	// result too long

  00038	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@append:

; 1114 : 
; 1115 : 		const size_type _Num = this->_Mysize() + _Count;

  00040	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  00048	8b 00		 mov	 eax, DWORD PTR [eax]
  0004a	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  0004d	89 45 ec	 mov	 DWORD PTR __Num$[ebp], eax

; 1116 : 		if (0 < _Count && _Grow(_Num))

  00050	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00054	76 3d		 jbe	 SHORT $LN3@append
  00056	6a 00		 push	 0
  00058	8b 45 ec	 mov	 eax, DWORD PTR __Num$[ebp]
  0005b	50		 push	 eax
  0005c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
  00064	0f b6 c8	 movzx	 ecx, al
  00067	85 c9		 test	 ecx, ecx
  00069	74 28		 je	 SHORT $LN3@append

; 1117 : 			{	// make room and append new stuff using assign
; 1118 : 			_Chassign(this->_Mysize(), _Count, _Ch);

  0006b	0f b6 45 0c	 movzx	 eax, BYTE PTR __Ch$[ebp]
  0006f	50		 push	 eax
  00070	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00073	51		 push	 ecx
  00074	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  0007c	8b 10		 mov	 edx, DWORD PTR [eax]
  0007e	52		 push	 edx
  0007f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00082	e8 00 00 00 00	 call	 ?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign

; 1119 : 			_Eos(_Num);

  00087	8b 45 ec	 mov	 eax, DWORD PTR __Num$[ebp]
  0008a	50		 push	 eax
  0008b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008e	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN3@append:

; 1120 : 			}
; 1121 : 		return (*this);

  00093	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
$LN4@append:

; 1122 : 		}

  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	5b		 pop	 ebx
  00099	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0009f	3b ec		 cmp	 ebp, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 08 00	 ret	 8
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 1105 : 		{	// append [_Ptr, <null>)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1106 : 		_DEBUG_POINTER(_Ptr);

  00023	68 52 04 00 00	 push	 1106			; 00000452H
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002d	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ??$_Debug_pointer@$$CBD@std@@YAXPBDPB_WI@Z ; std::_Debug_pointer<char const >
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1107 : 		return (append(_Ptr, _Traits::length(_Ptr)));

  00039	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ?length@?$char_traits@D@std@@SAIPBD@Z ; std::char_traits<char>::length
  00042	83 c4 04	 add	 esp, 4
  00045	50		 push	 eax
  00046	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00049	51		 push	 ecx
  0004a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 1108 : 		}

  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5b		 pop	 ebx
  00055	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0005b	3b ec		 cmp	 ebp, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 04 00	 ret	 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
tv68 = -217						; size = 1
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 1087 : 		{	// append [_Ptr, _Ptr + _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1088 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);

  00023	83 7d 0c 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00027	74 09		 je	 SHORT $LN6@append
  00029	c6 85 27 ff ff
	ff 01		 mov	 BYTE PTR tv68[ebp], 1
  00030	eb 07		 jmp	 SHORT $LN7@append
$LN6@append:
  00032	c6 85 27 ff ff
	ff 00		 mov	 BYTE PTR tv68[ebp], 0
$LN7@append:
  00039	68 40 04 00 00	 push	 1088			; 00000440H
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00043	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00046	50		 push	 eax
  00047	0f b6 8d 27 ff
	ff ff		 movzx	 ecx, BYTE PTR tv68[ebp]
  0004e	51		 push	 ecx
  0004f	e8 00 00 00 00	 call	 ??$_Debug_pointer_if@$$CBD@std@@YAX_NPBDPB_WI@Z ; std::_Debug_pointer_if<char const >
  00054	83 c4 10	 add	 esp, 16			; 00000010H

; 1089 : 		if (_Inside(_Ptr))

  00057	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0005a	50		 push	 eax
  0005b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	e8 00 00 00 00	 call	 ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
  00063	0f b6 c8	 movzx	 ecx, al
  00066	85 c9		 test	 ecx, ecx
  00068	74 20		 je	 SHORT $LN2@append

; 1090 : 			return (append(*this,

  0006a	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  0006d	50		 push	 eax
  0006e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  00076	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00079	2b c8		 sub	 ecx, eax
  0007b	51		 push	 ecx
  0007c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0007f	52		 push	 edx
  00080	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
  00088	eb 7c		 jmp	 SHORT $LN5@append
$LN2@append:

; 1091 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1092 : 		if (npos - this->_Mysize() <= _Count)

  0008a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008d	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  00092	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
  00098	2b 08		 sub	 ecx, DWORD PTR [eax]
  0009a	3b 4d 0c	 cmp	 ecx, DWORD PTR __Count$[ebp]
  0009d	77 08		 ja	 SHORT $LN3@append

; 1093 : 			_Xlen();	// result too long

  0009f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a2	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN3@append:

; 1094 : 
; 1095 : 		const size_type _Num = this->_Mysize() + _Count;

  000a7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  000af	8b 00		 mov	 eax, DWORD PTR [eax]
  000b1	03 45 0c	 add	 eax, DWORD PTR __Count$[ebp]
  000b4	89 45 ec	 mov	 DWORD PTR __Num$[ebp], eax

; 1096 : 		if (0 < _Count && _Grow(_Num))

  000b7	83 7d 0c 00	 cmp	 DWORD PTR __Count$[ebp], 0
  000bb	76 46		 jbe	 SHORT $LN4@append
  000bd	6a 00		 push	 0
  000bf	8b 45 ec	 mov	 eax, DWORD PTR __Num$[ebp]
  000c2	50		 push	 eax
  000c3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c6	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
  000cb	0f b6 c8	 movzx	 ecx, al
  000ce	85 c9		 test	 ecx, ecx
  000d0	74 31		 je	 SHORT $LN4@append

; 1097 : 			{	// make room and append new stuff
; 1098 : 			_Traits::copy(this->_Myptr() + this->_Mysize(), _Ptr, _Count);

  000d2	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  000d5	50		 push	 eax
  000d6	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  000d9	51		 push	 ecx
  000da	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000dd	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  000e2	8b f0		 mov	 esi, eax
  000e4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e7	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  000ec	03 30		 add	 esi, DWORD PTR [eax]
  000ee	56		 push	 esi
  000ef	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
  000f4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1099 : 			_Eos(_Num);

  000f7	8b 45 ec	 mov	 eax, DWORD PTR __Num$[ebp]
  000fa	50		 push	 eax
  000fb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000fe	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@append:

; 1100 : 			}
; 1101 : 		return (*this);

  00103	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@append:

; 1102 : 		}

  00106	5f		 pop	 edi
  00107	5e		 pop	 esi
  00108	5b		 pop	 ebx
  00109	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  0010f	3b ec		 cmp	 ebp, esp
  00111	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00116	8b e5		 mov	 esp, ebp
  00118	5d		 pop	 ebp
  00119	c2 08 00	 ret	 8
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 1070 : 		{	// append _Right [_Roff, _Roff + _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1071 : 		_Right._Check_offset(_Roff);

  00023	8b 45 0c	 mov	 eax, DWORD PTR __Roff$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0002a	e8 00 00 00 00	 call	 ?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset

; 1072 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);

  0002f	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  00032	50		 push	 eax
  00033	8b 4d 0c	 mov	 ecx, DWORD PTR __Roff$[ebp]
  00036	51		 push	 ecx
  00037	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0003a	e8 00 00 00 00	 call	 ?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
  0003f	89 45 10	 mov	 DWORD PTR __Count$[ebp], eax

; 1073 : 		if (npos - this->_Mysize() <= _Count)

  00042	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  0004a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
  00050	2b 08		 sub	 ecx, DWORD PTR [eax]
  00052	3b 4d 10	 cmp	 ecx, DWORD PTR __Count$[ebp]
  00055	77 08		 ja	 SHORT $LN2@append

; 1074 : 			_Xlen();	// result too long

  00057	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@append:

; 1075 : 
; 1076 : 		const size_type _Num = this->_Mysize() + _Count;

  0005f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  00067	8b 00		 mov	 eax, DWORD PTR [eax]
  00069	03 45 10	 add	 eax, DWORD PTR __Count$[ebp]
  0006c	89 45 ec	 mov	 DWORD PTR __Num$[ebp], eax

; 1077 : 		if (0 < _Count && _Grow(_Num))

  0006f	83 7d 10 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00073	76 4e		 jbe	 SHORT $LN3@append
  00075	6a 00		 push	 0
  00077	8b 45 ec	 mov	 eax, DWORD PTR __Num$[ebp]
  0007a	50		 push	 eax
  0007b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
  00083	0f b6 c8	 movzx	 ecx, al
  00086	85 c9		 test	 ecx, ecx
  00088	74 39		 je	 SHORT $LN3@append

; 1078 : 			{	// make room and append new stuff
; 1079 : 			_Traits::copy(this->_Myptr() + this->_Mysize(),

  0008a	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  0008d	50		 push	 eax
  0008e	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00091	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  00096	03 45 0c	 add	 eax, DWORD PTR __Roff$[ebp]
  00099	50		 push	 eax
  0009a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009d	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  000a2	8b f0		 mov	 esi, eax
  000a4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a7	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  000ac	03 30		 add	 esi, DWORD PTR [eax]
  000ae	56		 push	 esi
  000af	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
  000b4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1080 : 				_Right._Myptr() + _Roff, _Count);
; 1081 : 			_Eos(_Num);

  000b7	8b 45 ec	 mov	 eax, DWORD PTR __Num$[ebp]
  000ba	50		 push	 eax
  000bb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN3@append:

; 1082 : 			}
; 1083 : 		return (*this);

  000c3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
$LN4@append:

; 1084 : 		}

  000c6	5f		 pop	 edi
  000c7	5e		 pop	 esi
  000c8	5b		 pop	 ebx
  000c9	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000cf	3b ec		 cmp	 ebp, esp
  000d1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c2 0c 00	 ret	 12			; 0000000cH
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 1064 : 		{	// append _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1065 : 		return (append(_Right, 0, npos));

  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
  00028	50		 push	 eax
  00029	6a 00		 push	 0
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 1066 : 		}

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ch$ = 8						; size = 1
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx

; 1059 : 		{	// append 1 * _Ch

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1060 : 		return (append((size_type)1, _Ch));

  00023	0f b6 45 08	 movzx	 eax, BYTE PTR __Ch$[ebp]
  00027	50		 push	 eax
  00028	6a 01		 push	 1
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 1061 : 		}

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx

; 1054 : 		{	// append [_Ptr, <null>)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1055 : 		return (append(_Ptr));

  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 1056 : 		}

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx

; 1049 : 		{	// append _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1050 : 		return (append(_Right));

  00023	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 1051 : 		}

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 1016 : 		{	// destroy the string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1017 : 		_Tidy(true);

  00042	6a 00		 push	 0
  00044	6a 01		 push	 1
  00046	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 1018 : 		}

  0004e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
  00064	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv, COMDAT
; _this$ = ecx

; 961  : 		{	// assign by moving _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 962  : 		if (_Right._Myres() < this->_BUF_SIZE)

  00023	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  0002b	83 38 10	 cmp	 DWORD PTR [eax], 16	; 00000010H
  0002e	73 2a		 jae	 SHORT $LN2@Assign_rv

; 963  : 			_Traits::move(this->_Bx()._Buf, _Right._Bx()._Buf,

  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  00038	8b 00		 mov	 eax, DWORD PTR [eax]
  0003a	83 c0 01	 add	 eax, 1
  0003d	50		 push	 eax
  0003e	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00041	e8 00 00 00 00	 call	 ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
  00046	50		 push	 eax
  00047	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
  00055	83 c4 0c	 add	 esp, 12			; 0000000cH

; 964  : 				_Right._Mysize() + 1);
; 965  : 		else

  00058	eb 38		 jmp	 SHORT $LN3@Assign_rv
$LN2@Assign_rv:

; 966  : 			{	// copy pointer
; 967  : 			this->_Getal().construct(_STD addressof(this->_Bx()._Ptr), _Right._Bx()._Ptr);

  0005a	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0005d	e8 00 00 00 00	 call	 ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
  00062	50		 push	 eax
  00063	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	e8 00 00 00 00	 call	 ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ??$addressof@PAD@std@@YAPAPADAAPAD@Z ; std::addressof<char *>
  00071	83 c4 04	 add	 esp, 4
  00074	50		 push	 eax
  00075	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  0007d	8b c8		 mov	 ecx, eax
  0007f	e8 00 00 00 00	 call	 ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 968  : 			_Right._Bx()._Ptr = pointer();

  00084	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00087	e8 00 00 00 00	 call	 ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
  0008c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN3@Assign_rv:

; 969  : 			}
; 970  : 		this->_Mysize() = _Right._Mysize();

  00092	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00095	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  0009a	8b f0		 mov	 esi, eax
  0009c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009f	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  000a4	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000a6	89 08		 mov	 DWORD PTR [eax], ecx

; 971  : 		this->_Myres() = _Right._Myres();

  000a8	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  000ab	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  000b0	8b f0		 mov	 esi, eax
  000b2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b5	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  000ba	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000bc	89 08		 mov	 DWORD PTR [eax], ecx

; 972  : 		_Right._Tidy();

  000be	6a 00		 push	 0
  000c0	6a 00		 push	 0
  000c2	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  000c5	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 973  : 		}

  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx
  000cd	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000d3	3b ec		 cmp	 ebp, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c2 04 00	 ret	 4
?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 911  : 		{	// construct by moving _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 910  : 		: _Mybase(_STD move(_Right._Getal()))

  00042	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00045	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ??$move@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<char> > &>
  00050	83 c4 04	 add	 esp, 4
  00053	50		 push	 eax
  00054	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	e8 00 00 00 00	 call	 ??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>

; 912  : 		_Tidy();

  0005c	6a 00		 push	 0
  0005e	6a 00		 push	 0
  00060	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 913  : 		_Assign_rv(_STD forward<_Myt>(_Right));

  00068	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00071	83 c4 04	 add	 esp, 4
  00074	50		 push	 eax
  00075	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	e8 00 00 00 00	 call	 ?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv

; 914  : 		}

  0007d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00080	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00083	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008a	59		 pop	 ecx
  0008b	5f		 pop	 edi
  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Count$ = 8						; size = 4
__Ch$ = 12						; size = 1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 850  : 		{	// construct from _Count * _Ch

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 849  : 		: _Mybase()

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 851  : 		_Tidy();

  00051	6a 00		 push	 0
  00053	6a 00		 push	 0
  00055	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 852  : 		assign(_Count, _Ch);

  0005d	0f b6 45 0c	 movzx	 eax, BYTE PTR __Ch$[ebp]
  00061	50		 push	 eax
  00062	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00065	51		 push	 ecx
  00066	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 853  : 		}

  0006e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00075	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00078	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00082	59		 pop	 ecx
  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0008c	3b ec		 cmp	 ebp, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 836  : 		{	// construct from [_Ptr, <null>)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 835  : 		: _Mybase()

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 837  : 		_Tidy();

  00051	6a 00		 push	 0
  00053	6a 00		 push	 0
  00055	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 838  : 		assign(_Ptr);

  0005d	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00060	50		 push	 eax
  00061	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 839  : 		}

  00069	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00070	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00073	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00076	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007d	59		 pop	 ecx
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	5b		 pop	 ebx
  00081	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00087	3b ec		 cmp	 ebp, esp
  00089	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008e	8b e5		 mov	 esp, ebp
  00090	5d		 pop	 ebp
  00091	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 794  : 		{	// construct empty string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 793  : 		: _Mybase()

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >

; 795  : 		_Tidy();

  0004a	6a 00		 push	 0
  0004c	6a 00		 push	 0
  0004e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 796  : 		}

  00056	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00059	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00063	59		 pop	 ecx
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	5b		 pop	 ebx
  00067	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0006d	3b ec		 cmp	 ebp, esp
  0006f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
$T2 = -233						; size = 1
$T3 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 780  : 		{	// construct by copying _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00021	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 777  : 		: _Mybase(_Right._Getal().select_on_container_copy_construction())

  00042	0f b6 85 23 ff
	ff ff		 movzx	 eax, BYTE PTR $T3[ebp]
  00049	50		 push	 eax
  0004a	8d 8d 17 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00050	51		 push	 ecx
  00051	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@U_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction
  00060	50		 push	 eax
  00061	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	e8 00 00 00 00	 call	 ??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>
  00069	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 781  : 		_Tidy();

  00070	6a 00		 push	 0
  00072	6a 00		 push	 0
  00074	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 782  : 		assign(_Right, 0, npos);

  0007c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
  00081	50		 push	 eax
  00082	6a 00		 push	 0
  00084	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00087	51		 push	 ecx
  00088	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 783  : 		}

  00090	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00097	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0009a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a4	59		 pop	 ecx
  000a5	5f		 pop	 edi
  000a6	5e		 pop	 esi
  000a7	5b		 pop	 ebx
  000a8	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  000ae	3b ec		 cmp	 ebp, esp
  000b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 0c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-244]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 319  : 		{	// return const reference to second

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 320  : 		return (_Myval2);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 321  : 		}

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 314  : 		{	// return reference to second

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 315  : 		return (_Myval2);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 316  : 		}

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 299  : 		{	// return const reference to first

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 300  : 		return (*this);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 301  : 		}

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 294  : 		{	// return reference to first

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 295  : 		return (*this);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 296  : 		}

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres, COMDAT
; _this$ = ecx

; 733  : 		{	// return reference to _Myres

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 734  : 		return (_Get_data()._Myres);

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
  0002b	83 c0 18	 add	 eax, 24			; 00000018H

; 735  : 		}

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize, COMDAT
; _this$ = ecx

; 728  : 		{	// return const reference to _Mysize

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 729  : 		return (_Get_data()._Mysize);

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
  0002b	83 c0 14	 add	 eax, 20			; 00000014H

; 730  : 		}

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize, COMDAT
; _this$ = ecx

; 723  : 		{	// return reference to _Mysize

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 724  : 		return (_Get_data()._Mysize);

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
  0002b	83 c0 14	 add	 eax, 20			; 00000014H

; 725  : 		}

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx, COMDAT
; _this$ = ecx

; 713  : 		{	// return reference to _Bx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 714  : 		return (_Get_data()._Bx);

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
  0002b	83 c0 04	 add	 eax, 4

; 715  : 		}

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT
; _this$ = ecx

; 706  : 		{	// return const reference to _String_val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 707  : 		return (_Mypair._Get_second());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second

; 708  : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT
; _this$ = ecx

; 701  : 		{	// return reference to _String_val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 702  : 		return (_Mypair._Get_second());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second

; 703  : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 696  : 		{	// return const reference to allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 697  : 		return (_Mypair._Get_first());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 698  : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 691  : 		{	// return reference to allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 692  : 		return (_Mypair._Get_first());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 693  : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all, COMDAT
; _this$ = ecx

; 681  : 		{	// orphan all iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 682  : 		_Get_data()._Orphan_all();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
  0002b	8b c8		 mov	 ecx, eax
  0002d	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 683  : 		}

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy, COMDAT
; _this$ = ecx

; 670  : 		{	// return reference to _Myproxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 671  : 		return (_Get_data()._Myproxy);

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data

; 672  : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Free_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -17					; size = 1
_this$ = -8						; size = 4
?_Free_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Free_proxy, COMDAT
; _this$ = ecx

; 655  : 		{	// destroy proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 656  : 		typename _Alty::template rebind<_Container_proxy>::other
; 657  : 			_Alproxy(_Getal());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  0002b	50		 push	 eax
  0002c	8d 4d ef	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0002f	e8 00 00 00 00	 call	 ??$?0AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<char> > &>

; 658  : 		_Orphan_all();

  00034	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all

; 659  : 		_Alproxy.destroy(_Myproxy());

  0003c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
  00044	8b 00		 mov	 eax, DWORD PTR [eax]
  00046	50		 push	 eax
  00047	8d 4d ef	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0004a	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>

; 660  : 		_Alproxy.deallocate(_Alproxy.address(*_Myproxy()), 1);

  0004f	6a 01		 push	 1
  00051	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
  00059	8b 00		 mov	 eax, DWORD PTR [eax]
  0005b	50		 push	 eax
  0005c	8d 4d ef	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0005f	e8 00 00 00 00	 call	 ?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
  00064	50		 push	 eax
  00065	8d 4d ef	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00068	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate

; 661  : 		_Myproxy() = 0;

  0006d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	e8 00 00 00 00	 call	 ?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
  00075	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 662  : 		}

  0007b	52		 push	 edx
  0007c	8b cd		 mov	 ecx, ebp
  0007e	50		 push	 eax
  0007f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00085	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0008a	58		 pop	 eax
  0008b	5a		 pop	 edx
  0008c	5f		 pop	 edi
  0008d	5e		 pop	 esi
  0008e	5b		 pop	 ebx
  0008f	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00095	3b ec		 cmp	 ebp, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c3		 ret	 0
$LN5@Free_proxy:
  000a0	01 00 00 00	 DD	 1
  000a4	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  000a8	ef ff ff ff	 DD	 -17			; ffffffefH
  000ac	01 00 00 00	 DD	 1
  000b0	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  000b4	5f		 DB	 95			; 0000005fH
  000b5	41		 DB	 65			; 00000041H
  000b6	6c		 DB	 108			; 0000006cH
  000b7	70		 DB	 112			; 00000070H
  000b8	72		 DB	 114			; 00000072H
  000b9	6f		 DB	 111			; 0000006fH
  000ba	78		 DB	 120			; 00000078H
  000bb	79		 DB	 121			; 00000079H
  000bc	00		 DB	 0
?_Free_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -228						; size = 8
__Alproxy$ = -17					; size = 1
_this$ = -8						; size = 4
?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy, COMDAT
; _this$ = ecx

; 646  : 		{	// construct proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00013	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 647  : 		typename _Alty::template rebind<_Container_proxy>::other
; 648  : 			_Alproxy(_Getal());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  0002b	50		 push	 eax
  0002c	8d 4d ef	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0002f	e8 00 00 00 00	 call	 ??$?0AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<char> > &>

; 649  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

  00034	6a 01		 push	 1
  00036	8d 4d ef	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00039	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  00044	83 c4 04	 add	 esp, 4
  00047	8b f0		 mov	 esi, eax
  00049	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
  00051	89 30		 mov	 DWORD PTR [eax], esi

; 650  : 		_Alproxy.construct(_Myproxy(), _Container_proxy());

  00053	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00059	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  0005e	50		 push	 eax
  0005f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	e8 00 00 00 00	 call	 ?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
  00067	8b 00		 mov	 eax, DWORD PTR [eax]
  00069	50		 push	 eax
  0006a	8d 4d ef	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0006d	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>

; 651  : 		_Myproxy()->_Mycont = &_Get_data();

  00072	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
  0007a	8b f0		 mov	 esi, eax
  0007c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
  00084	8b 00		 mov	 eax, DWORD PTR [eax]
  00086	89 30		 mov	 DWORD PTR [eax], esi

; 652  : 		}

  00088	52		 push	 edx
  00089	8b cd		 mov	 ecx, ebp
  0008b	50		 push	 eax
  0008c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00092	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00097	58		 pop	 eax
  00098	5a		 pop	 edx
  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	5b		 pop	 ebx
  0009c	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  000a2	3b ec		 cmp	 ebp, esp
  000a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a9	8b e5		 mov	 esp, ebp
  000ab	5d		 pop	 ebp
  000ac	c3		 ret	 0
  000ad	0f 1f 00	 npad	 3
$LN5@Alloc_prox:
  000b0	01 00 00 00	 DD	 1
  000b4	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  000b8	ef ff ff ff	 DD	 -17			; ffffffefH
  000bc	01 00 00 00	 DD	 1
  000c0	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  000c4	5f		 DB	 95			; 0000005fH
  000c5	41		 DB	 65			; 00000041H
  000c6	6c		 DB	 108			; 0000006cH
  000c7	70		 DB	 112			; 00000070H
  000c8	72		 DB	 114			; 00000072H
  000c9	6f		 DB	 111			; 0000006fH
  000ca	78		 DB	 120			; 00000078H
  000cb	79		 DB	 121			; 00000079H
  000cc	00		 DB	 0
?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 627  : 		{	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 628  : 		_Free_proxy();

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?_Free_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Free_proxy

; 629  : 		}

  0004a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005c	59		 pop	 ecx
  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi
  0005f	5b		 pop	 ebx
  00060	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00066	3b ec		 cmp	 ebp, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 613  : 		{	// default construct allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00021	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 612  : 		: _Mypair(_Zero_then_variadic_args_t())

  00042	0f b6 85 23 ff
	ff ff		 movzx	 eax, BYTE PTR $T2[ebp]
  00049	50		 push	 eax
  0004a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>
  00052	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 614  : 		_Alloc_proxy();

  00059	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy

; 615  : 		}

  00061	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00068	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00075	59		 pop	 ecx
  00076	5f		 pop	 edi
  00077	5e		 pop	 esi
  00078	5b		 pop	 ebx
  00079	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  0007f	3b ec		 cmp	 ebp, esp
  00081	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
__ehhandler$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 18 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-232]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr, COMDAT
; _this$ = ecx

; 582  : 		{	// determine current pointer to buffer for nonmutable string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 583  : 		return (_Get_data()._Myptr());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
  0002b	8b c8		 mov	 ecx, eax
  0002d	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr

; 584  : 		}

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr, COMDAT
; _this$ = ecx

; 577  : 		{	// determine current pointer to buffer for mutable string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Get_data()._Myptr());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
  0002b	8b c8		 mov	 ecx, eax
  0002d	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr

; 579  : 		}

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	83 c1 04	 add	 ecx, 4
  00029	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ??1_Container_base12@std@@QAE@XZ ; std::_Container_base12::~_Container_base12
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003f	3b ec		 cmp	 ebp, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT
; _this$ = ecx

; 533  : 			{	// user-provided, for fancy pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 534  : 			}

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT
; _this$ = ecx

; 528  : 		_Bxty()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 529  : 			{	// user-provided, for fancy pointers
; 530  : 			}

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 520  : 		{	// determine current pointer to buffer for nonmutable string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 521  : 		return (this->_BUF_SIZE <= _Myres

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 18 10	 cmp	 DWORD PTR [eax+24], 16	; 00000010H
  0002a	72 17		 jb	 SHORT $LN3@Myptr
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00032	52		 push	 edx
  00033	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPADPAD@Z ; std::_Unfancy<char>
  00038	83 c4 04	 add	 esp, 4
  0003b	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv72[ebp], eax
  00041	eb 0c		 jmp	 SHORT $LN4@Myptr
$LN3@Myptr:
  00043	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00046	83 c0 04	 add	 eax, 4
  00049	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv72[ebp], eax
$LN4@Myptr:
  0004f	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv72[ebp]

; 522  : 			? _Unfancy(_Bx._Ptr)
; 523  : 			: _Bx._Buf);
; 524  : 		}

  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 513  : 		{	// determine current pointer to buffer for mutable string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 514  : 		return (this->_BUF_SIZE <= _Myres

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 18 10	 cmp	 DWORD PTR [eax+24], 16	; 00000010H
  0002a	72 17		 jb	 SHORT $LN3@Myptr
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00032	52		 push	 edx
  00033	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPADPAD@Z ; std::_Unfancy<char>
  00038	83 c4 04	 add	 esp, 4
  0003b	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv72[ebp], eax
  00041	eb 0c		 jmp	 SHORT $LN4@Myptr
$LN3@Myptr:
  00043	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00046	83 c0 04	 add	 eax, 4
  00049	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv72[ebp], eax
$LN4@Myptr:
  0004f	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv72[ebp]

; 515  : 			? _Unfancy(_Bx._Ptr)
; 516  : 			: _Bx._Buf);
; 517  : 		}

  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 498  : 		{	// initialize values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QAE@XZ ; std::_Container_base12::_Container_base12
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 495  : 		: _Bx(),

  00051	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	83 c1 04	 add	 ecx, 4
  00057	e8 00 00 00 00	 call	 ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty

; 496  : 		_Mysize(0),

  0005c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 497  : 		_Myres(0)

  00066	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00069	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0

; 499  : 		}

  00070	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00077	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0007a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00084	59		 pop	 ecx
  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	5b		 pop	 ebx
  00088	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0008e	3b ec		 cmp	 ebp, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00095	8b e5		 mov	 esp, ebp
  00097	5d		 pop	 ebp
  00098	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_Container_base12@std@@QAE@XZ ; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1007 : 		{	// get maximum size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1008 : 		return (_Mytraits::max_size(*this));

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
  0002c	83 c4 04	 add	 esp, 4

; 1009 : 		}

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 986  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 987  : 		_Mybase::deallocate(_Ptr, _Count);

  00023	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 988  : 		}

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 975  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 976  : 		return (_Mybase::allocate(_Count));

  00023	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QAEPADI@Z ; std::allocator<char>::allocate

; 977  : 		}

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAU01@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 946  : 		{	// construct by moving

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 945  : 		: _Mybase(_STD move(_Right))

  00023	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$move@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<char> > &>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QAE@ABV01@@Z ; std::allocator<char>::allocator<char>

; 947  : 		}

  00038	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAU01@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 936  : 		{	// construct default allocator (do nothing)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 935  : 		: _Mybase()

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QAE@XZ ; std::allocator<char>::allocator<char>

; 937  : 		}

  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?address@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEPADAAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?address@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEPADAAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::address, COMDAT
; _this$ = ecx

; 925  : 		{	// return address of mutable _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 926  : 		return (pointer_traits<pointer>::pointer_to(_Val));

  00023	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z ; std::pointer_traits<char *>::pointer_to
  0002c	83 c4 04	 add	 esp, 4

; 927  : 		}

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?address@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEPADAAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::address
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@U_Nil@2@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 1
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@U_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction, COMDAT
; _this$ = ecx

; 912  : 		{	// get allocator to use

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 913  : 		return (_Mytraits::select_on_container_copy_construction(*this));

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	50		 push	 eax
  00027	8d 8d 2f ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  0002d	51		 push	 ecx
  0002e	e8 00 00 00 00	 call	 ?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction
  00033	83 c4 08	 add	 esp, 8
  00036	50		 push	 eax
  00037	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0003a	e8 00 00 00 00	 call	 ??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAV?$allocator@D@1@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> >
  0003f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 914  : 		}

  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 08 00	 ret	 8
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@U_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Al$ = 12						; size = 4
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z PROC ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction, COMDAT

; 874  : 		{	// get allocator to use

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 875  : 		return (_Al);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Al$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00025	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QAE@ABV01@@Z ; std::allocator<char>::allocator<char>
  0002a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 876  : 		}

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ENDP ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 868  : 		{	// get maximum size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 869  : 		return (_Al.max_size());

  0001e	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00021	e8 00 00 00 00	 call	 ?max_size@?$allocator@D@std@@QBEIXZ ; std::allocator<char>::max_size

; 870  : 		}

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002f	3b ec		 cmp	 ebp, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 748  : 		{	// estimate maximum array size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 749  : 		return ((size_t)(-1) / sizeof (_Ty));

  00023	83 c8 ff	 or	 eax, -1

; 750  : 		}

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 724  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 725  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

  00023	6a 01		 push	 1
  00025	6a 01		 push	 1
  00027	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ?_Allocate@std@@YAPAXII_N@Z ; std::_Allocate
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH

; 726  : 		}

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 719  : 		{	// deallocate object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 720  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  00023	6a 01		 push	 1
  00025	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00028	50		 push	 eax
  00029	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002c	51		 push	 ecx
  0002d	e8 00 00 00 00	 call	 ?_Deallocate@std@@YAXPAXII@Z ; std::_Deallocate
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH

; 721  : 		}

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 703  : 	allocator(const allocator<_Ty>&) _THROW0()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 704  : 		{	// construct by copying (do nothing)
; 705  : 		}

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 699  : 	allocator() _THROW0()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 700  : 		{	// construct default allocator (do nothing)
; 701  : 		}

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xatomic0.h
;	COMDAT ?_Init_atomic_counter@std@@YAXAAKK@Z
_TEXT	SEGMENT
__Counter$ = 8						; size = 4
__Value$ = 12						; size = 4
?_Init_atomic_counter@std@@YAXAAKK@Z PROC		; std::_Init_atomic_counter, COMDAT

; 62   : 	{	// non-atomically initialize counter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 63   : 	_Counter = _Value;

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Counter$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR __Value$[ebp]
  00024	89 08		 mov	 DWORD PTR [eax], ecx

; 64   : 	}

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?_Init_atomic_counter@std@@YAXAAKK@Z ENDP		; std::_Init_atomic_counter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?_Deallocate@std@@YAXPAXII@Z
_TEXT	SEGMENT
__Ptr_container$1 = -44					; size = 4
__Ptr_ptr$2 = -32					; size = 4
__Ptr_user$3 = -20					; size = 4
__User_size$ = -8					; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Sz$ = 16						; size = 4
?_Deallocate@std@@YAXPAXII@Z PROC			; std::_Deallocate, COMDAT

; 92   : 	{	// deallocate storage for _Count elements of size _Sz

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00012	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 93   :  #if defined(_M_IX86) || defined(_M_X64)
; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0001e	83 c8 ff	 or	 eax, -1
  00021	33 d2		 xor	 edx, edx
  00023	f7 75 10	 div	 DWORD PTR __Sz$[ebp]
  00026	39 45 0c	 cmp	 DWORD PTR __Count$[ebp], eax
  00029	76 6e		 jbe	 SHORT $LN2@Deallocate
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BN@HMCJOMKN@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5_Sz?$AA@
  00030	85 c0		 test	 eax, eax
  00032	74 04		 je	 SHORT $LN10@Deallocate
  00034	33 c9		 xor	 ecx, ecx
  00036	75 35		 jne	 SHORT $LN11@Deallocate
$LN10@Deallocate:
  00038	8b f4		 mov	 esi, esp
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_1EI@MLOBABC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AA_?$AAS?$AAz?$AA?$CC?$AA?5?$AA?$CG@
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00044	6a 00		 push	 0
  00046	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
  0004c	83 c2 02	 add	 edx, 2
  0004f	52		 push	 edx
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00055	6a 02		 push	 2
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0005d	83 c4 18	 add	 esp, 24			; 00000018H
  00060	3b f4		 cmp	 esi, esp
  00062	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00067	83 f8 01	 cmp	 eax, 1
  0006a	75 01		 jne	 SHORT $LN11@Deallocate
  0006c	cc		 int	 3
$LN11@Deallocate:
  0006d	8b f4		 mov	 esi, esp
  0006f	6a 00		 push	 0
  00071	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
  00076	83 c0 02	 add	 eax, 2
  00079	50		 push	 eax
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0007f	68 00 00 00 00	 push	 OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
  00089	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0008f	83 c4 14	 add	 esp, 20			; 00000014H
  00092	3b f4		 cmp	 esi, esp
  00094	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Deallocate:

; 95   : 	const size_t _User_size = _Count * _Sz;

  00099	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  0009c	0f af 45 10	 imul	 eax, DWORD PTR __Sz$[ebp]
  000a0	89 45 f8	 mov	 DWORD PTR __User_size$[ebp], eax

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  000a3	81 7d f8 00 10
	00 00		 cmp	 DWORD PTR __User_size$[ebp], 4096 ; 00001000H
  000aa	0f 82 7d 02 00
	00		 jb	 $LN3@Deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);

  000b0	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  000b3	89 45 ec	 mov	 DWORD PTR __Ptr_user$3[ebp], eax

; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  000b6	8b 45 ec	 mov	 eax, DWORD PTR __Ptr_user$3[ebp]
  000b9	83 e0 1f	 and	 eax, 31			; 0000001fH
  000bc	74 6e		 je	 SHORT $LN4@Deallocate
  000be	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@
  000c3	85 c0		 test	 eax, eax
  000c5	74 04		 je	 SHORT $LN12@Deallocate
  000c7	33 c9		 xor	 ecx, ecx
  000c9	75 35		 jne	 SHORT $LN13@Deallocate
$LN12@Deallocate:
  000cb	8b f4		 mov	 esi, esp
  000cd	68 00 00 00 00	 push	 OFFSET ??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@
  000d2	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  000d7	6a 00		 push	 0
  000d9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
  000df	83 c2 08	 add	 edx, 8
  000e2	52		 push	 edx
  000e3	68 00 00 00 00	 push	 OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000e8	6a 02		 push	 2
  000ea	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  000f0	83 c4 18	 add	 esp, 24			; 00000018H
  000f3	3b f4		 cmp	 esi, esp
  000f5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000fa	83 f8 01	 cmp	 eax, 1
  000fd	75 01		 jne	 SHORT $LN13@Deallocate
  000ff	cc		 int	 3
$LN13@Deallocate:
  00100	8b f4		 mov	 esi, esp
  00102	6a 00		 push	 0
  00104	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
  00109	83 c0 08	 add	 eax, 8
  0010c	50		 push	 eax
  0010d	68 00 00 00 00	 push	 OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00112	68 00 00 00 00	 push	 OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
  0011c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00122	83 c4 14	 add	 esp, 20			; 00000014H
  00125	3b f4		 cmp	 esi, esp
  00127	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@Deallocate:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);

  0012c	8b 45 ec	 mov	 eax, DWORD PTR __Ptr_user$3[ebp]
  0012f	83 e8 04	 sub	 eax, 4
  00132	89 45 e0	 mov	 DWORD PTR __Ptr_ptr$2[ebp], eax

; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00135	8b 45 e0	 mov	 eax, DWORD PTR __Ptr_ptr$2[ebp]
  00138	8b 08		 mov	 ecx, DWORD PTR [eax]
  0013a	89 4d d4	 mov	 DWORD PTR __Ptr_container$1[ebp], ecx

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(

  0013d	b8 04 00 00 00	 mov	 eax, 4
  00142	6b c8 ff	 imul	 ecx, eax, -1
  00145	8b 55 e0	 mov	 edx, DWORD PTR __Ptr_ptr$2[ebp]
  00148	81 3c 0a fa fa
	fa fa		 cmp	 DWORD PTR [edx+ecx], -84215046 ; fafafafaH
  0014f	74 6e		 je	 SHORT $LN5@Deallocate
  00151	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@
  00156	85 c0		 test	 eax, eax
  00158	74 04		 je	 SHORT $LN14@Deallocate
  0015a	33 c9		 xor	 ecx, ecx
  0015c	75 35		 jne	 SHORT $LN15@Deallocate
$LN14@Deallocate:
  0015e	8b f4		 mov	 esi, esp
  00160	68 00 00 00 00	 push	 OFFSET ??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@
  00165	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  0016a	6a 00		 push	 0
  0016c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
  00172	83 c2 12	 add	 edx, 18			; 00000012H
  00175	52		 push	 edx
  00176	68 00 00 00 00	 push	 OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0017b	6a 02		 push	 2
  0017d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00183	83 c4 18	 add	 esp, 24			; 00000018H
  00186	3b f4		 cmp	 esi, esp
  00188	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018d	83 f8 01	 cmp	 eax, 1
  00190	75 01		 jne	 SHORT $LN15@Deallocate
  00192	cc		 int	 3
$LN15@Deallocate:
  00193	8b f4		 mov	 esi, esp
  00195	6a 00		 push	 0
  00197	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
  0019c	83 c0 12	 add	 eax, 18			; 00000012H
  0019f	50		 push	 eax
  001a0	68 00 00 00 00	 push	 OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  001a5	68 00 00 00 00	 push	 OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
  001aa	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
  001af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  001b5	83 c4 14	 add	 esp, 20			; 00000014H
  001b8	3b f4		 cmp	 esi, esp
  001ba	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@Deallocate:

; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  001bf	8b 45 d4	 mov	 eax, DWORD PTR __Ptr_container$1[ebp]
  001c2	3b 45 ec	 cmp	 eax, DWORD PTR __Ptr_user$3[ebp]
  001c5	72 6e		 jb	 SHORT $LN6@Deallocate
  001c7	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@
  001cc	85 c0		 test	 eax, eax
  001ce	74 04		 je	 SHORT $LN16@Deallocate
  001d0	33 c9		 xor	 ecx, ecx
  001d2	75 35		 jne	 SHORT $LN17@Deallocate
$LN16@Deallocate:
  001d4	8b f4		 mov	 esi, esp
  001d6	68 00 00 00 00	 push	 OFFSET ??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
  001db	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  001e0	6a 00		 push	 0
  001e2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
  001e8	83 c2 16	 add	 edx, 22			; 00000016H
  001eb	52		 push	 edx
  001ec	68 00 00 00 00	 push	 OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  001f1	6a 02		 push	 2
  001f3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  001f9	83 c4 18	 add	 esp, 24			; 00000018H
  001fc	3b f4		 cmp	 esi, esp
  001fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00203	83 f8 01	 cmp	 eax, 1
  00206	75 01		 jne	 SHORT $LN17@Deallocate
  00208	cc		 int	 3
$LN17@Deallocate:
  00209	8b f4		 mov	 esi, esp
  0020b	6a 00		 push	 0
  0020d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
  00212	83 c0 16	 add	 eax, 22			; 00000016H
  00215	50		 push	 eax
  00216	68 00 00 00 00	 push	 OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0021b	68 00 00 00 00	 push	 OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
  00220	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
  00225	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0022b	83 c4 14	 add	 esp, 20			; 00000014H
  0022e	3b f4		 cmp	 esi, esp
  00230	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN6@Deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)

  00235	8b 45 ec	 mov	 eax, DWORD PTR __Ptr_user$3[ebp]
  00238	2b 45 d4	 sub	 eax, DWORD PTR __Ptr_container$1[ebp]
  0023b	83 f8 08	 cmp	 eax, 8
  0023e	73 6e		 jae	 SHORT $LN7@Deallocate
  00240	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@
  00245	85 c0		 test	 eax, eax
  00247	74 04		 je	 SHORT $LN18@Deallocate
  00249	33 c9		 xor	 ecx, ecx
  0024b	75 35		 jne	 SHORT $LN19@Deallocate
$LN18@Deallocate:
  0024d	8b f4		 mov	 esi, esp
  0024f	68 00 00 00 00	 push	 OFFSET ??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@
  00254	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00259	6a 00		 push	 0
  0025b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
  00261	83 c2 1a	 add	 edx, 26			; 0000001aH
  00264	52		 push	 edx
  00265	68 00 00 00 00	 push	 OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0026a	6a 02		 push	 2
  0026c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00272	83 c4 18	 add	 esp, 24			; 00000018H
  00275	3b f4		 cmp	 esi, esp
  00277	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0027c	83 f8 01	 cmp	 eax, 1
  0027f	75 01		 jne	 SHORT $LN19@Deallocate
  00281	cc		 int	 3
$LN19@Deallocate:
  00282	8b f4		 mov	 esi, esp
  00284	6a 00		 push	 0
  00286	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
  0028b	83 c0 1a	 add	 eax, 26			; 0000001aH
  0028e	50		 push	 eax
  0028f	68 00 00 00 00	 push	 OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00294	68 00 00 00 00	 push	 OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
  00299	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
  0029e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  002a4	83 c4 14	 add	 esp, 20			; 00000014H
  002a7	3b f4		 cmp	 esi, esp
  002a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN7@Deallocate:

; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)
; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  002ae	8b 45 ec	 mov	 eax, DWORD PTR __Ptr_user$3[ebp]
  002b1	2b 45 d4	 sub	 eax, DWORD PTR __Ptr_container$1[ebp]
  002b4	83 f8 27	 cmp	 eax, 39			; 00000027H
  002b7	76 6e		 jbe	 SHORT $LN8@Deallocate
  002b9	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@
  002be	85 c0		 test	 eax, eax
  002c0	74 04		 je	 SHORT $LN20@Deallocate
  002c2	33 c9		 xor	 ecx, ecx
  002c4	75 35		 jne	 SHORT $LN21@Deallocate
$LN20@Deallocate:
  002c6	8b f4		 mov	 esi, esp
  002c8	68 00 00 00 00	 push	 OFFSET ??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@
  002cd	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  002d2	6a 00		 push	 0
  002d4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
  002da	83 c2 22	 add	 edx, 34			; 00000022H
  002dd	52		 push	 edx
  002de	68 00 00 00 00	 push	 OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  002e3	6a 02		 push	 2
  002e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  002eb	83 c4 18	 add	 esp, 24			; 00000018H
  002ee	3b f4		 cmp	 esi, esp
  002f0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002f5	83 f8 01	 cmp	 eax, 1
  002f8	75 01		 jne	 SHORT $LN21@Deallocate
  002fa	cc		 int	 3
$LN21@Deallocate:
  002fb	8b f4		 mov	 esi, esp
  002fd	6a 00		 push	 0
  002ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
  00304	83 c0 22	 add	 eax, 34			; 00000022H
  00307	50		 push	 eax
  00308	68 00 00 00 00	 push	 OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0030d	68 00 00 00 00	 push	 OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
  00312	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
  00317	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0031d	83 c4 14	 add	 esp, 20			; 00000014H
  00320	3b f4		 cmp	 esi, esp
  00322	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN8@Deallocate:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  00327	8b 45 d4	 mov	 eax, DWORD PTR __Ptr_container$1[ebp]
  0032a	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
$LN3@Deallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  0032d	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00330	50		 push	 eax
  00331	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00336	83 c4 04	 add	 esp, 4

; 133  : 	}

  00339	5f		 pop	 edi
  0033a	5e		 pop	 esi
  0033b	5b		 pop	 ebx
  0033c	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  00342	3b ec		 cmp	 ebp, esp
  00344	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00349	8b e5		 mov	 esp, ebp
  0034b	5d		 pop	 ebp
  0034c	c3		 ret	 0
?_Deallocate@std@@YAXPAXII@Z ENDP			; std::_Deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?_Allocate@std@@YAPAXII_N@Z
_TEXT	SEGMENT
__Ptr_container$1 = -44					; size = 4
__Block_size$2 = -32					; size = 4
__User_size$ = -20					; size = 4
__Ptr$ = -8						; size = 4
__Count$ = 8						; size = 4
__Sz$ = 12						; size = 4
__Try_aligned_allocation$ = 16				; size = 1
?_Allocate@std@@YAPAXII_N@Z PROC			; std::_Allocate, COMDAT

; 48   : 	{	// allocate storage for _Count elements of size _Sz

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00012	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 49   : 	void *_Ptr = 0;

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0

; 50   : 
; 51   : 	if (_Count == 0)

  00025	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00029	75 08		 jne	 SHORT $LN2@Allocate

; 52   : 		return (_Ptr);

  0002b	8b 45 f8	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0002e	e9 9c 01 00 00	 jmp	 $LN9@Allocate
$LN2@Allocate:

; 53   : 
; 54   : 	// check overflow of multiply
; 55   : 	if ((size_t)(-1) / _Sz < _Count)

  00033	83 c8 ff	 or	 eax, -1
  00036	33 d2		 xor	 edx, edx
  00038	f7 75 0c	 div	 DWORD PTR __Sz$[ebp]
  0003b	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0003e	73 0f		 jae	 SHORT $LN3@Allocate

; 56   : 		_Xbad_alloc();	// report no memory

  00040	8b f4		 mov	 esi, esp
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  00048	3b f4		 cmp	 esi, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:

; 57   : 	const size_t _User_size = _Count * _Sz;

  0004f	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00052	0f af 45 0c	 imul	 eax, DWORD PTR __Sz$[ebp]
  00056	89 45 ec	 mov	 DWORD PTR __User_size$[ebp], eax

; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  00059	0f b6 45 10	 movzx	 eax, BYTE PTR __Try_aligned_allocation$[ebp]
  0005d	85 c0		 test	 eax, eax
  0005f	0f 84 e4 00 00
	00		 je	 $LN4@Allocate
  00065	81 7d ec 00 10
	00 00		 cmp	 DWORD PTR __User_size$[ebp], 4096 ; 00001000H
  0006c	0f 82 d7 00 00
	00		 jb	 $LN4@Allocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  00072	8b 45 ec	 mov	 eax, DWORD PTR __User_size$[ebp]
  00075	83 c0 27	 add	 eax, 39			; 00000027H
  00078	89 45 e0	 mov	 DWORD PTR __Block_size$2[ebp], eax

; 66   : 		if (_Block_size <= _User_size)

  0007b	8b 45 e0	 mov	 eax, DWORD PTR __Block_size$2[ebp]
  0007e	3b 45 ec	 cmp	 eax, DWORD PTR __User_size$[ebp]
  00081	77 0f		 ja	 SHORT $LN6@Allocate

; 67   : 			_Xbad_alloc();	// report no memory

  00083	8b f4		 mov	 esi, esp
  00085	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  0008b	3b f4		 cmp	 esi, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN6@Allocate:

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  00092	8b 45 e0	 mov	 eax, DWORD PTR __Block_size$2[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0009b	83 c4 04	 add	 esp, 4
  0009e	89 45 d4	 mov	 DWORD PTR __Ptr_container$1[ebp], eax

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  000a1	83 7d d4 00	 cmp	 DWORD PTR __Ptr_container$1[ebp], 0
  000a5	75 6e		 jne	 SHORT $LN7@Allocate
  000a7	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@
  000ac	85 c0		 test	 eax, eax
  000ae	74 04		 je	 SHORT $LN10@Allocate
  000b0	33 c9		 xor	 ecx, ecx
  000b2	75 35		 jne	 SHORT $LN11@Allocate
$LN10@Allocate:
  000b4	8b f4		 mov	 esi, esp
  000b6	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
  000bb	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  000c0	6a 00		 push	 0
  000c2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA
  000c8	83 c2 16	 add	 edx, 22			; 00000016H
  000cb	52		 push	 edx
  000cc	68 00 00 00 00	 push	 OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000d1	6a 02		 push	 2
  000d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  000d9	83 c4 18	 add	 esp, 24			; 00000018H
  000dc	3b f4		 cmp	 esi, esp
  000de	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e3	83 f8 01	 cmp	 eax, 1
  000e6	75 01		 jne	 SHORT $LN11@Allocate
  000e8	cc		 int	 3
$LN11@Allocate:
  000e9	8b f4		 mov	 esi, esp
  000eb	6a 00		 push	 0
  000ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA
  000f2	83 c0 16	 add	 eax, 22			; 00000016H
  000f5	50		 push	 eax
  000f6	68 00 00 00 00	 push	 OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000fb	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
  00100	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
  00105	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0010b	83 c4 14	 add	 esp, 20			; 00000014H
  0010e	3b f4		 cmp	 esi, esp
  00110	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN7@Allocate:

; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  00115	8b 45 d4	 mov	 eax, DWORD PTR __Ptr_container$1[ebp]
  00118	83 c0 27	 add	 eax, 39			; 00000027H
  0011b	83 e0 e0	 and	 eax, -32		; ffffffe0H
  0011e	89 45 f8	 mov	 DWORD PTR __Ptr$[ebp], eax

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  00121	b8 04 00 00 00	 mov	 eax, 4
  00126	6b c8 ff	 imul	 ecx, eax, -1
  00129	8b 55 f8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0012c	8b 45 d4	 mov	 eax, DWORD PTR __Ptr_container$1[ebp]
  0012f	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax

; 74   : 
; 75   :  #ifdef _DEBUG
; 76   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;

  00132	b8 04 00 00 00	 mov	 eax, 4
  00137	6b c8 fe	 imul	 ecx, eax, -2
  0013a	8b 55 f8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0013d	c7 04 0a fa fa
	fa fa		 mov	 DWORD PTR [edx+ecx], -84215046 ; fafafafaH

; 77   :  #endif /* _DEBUG */
; 78   : 		}
; 79   : 	else

  00144	e9 83 00 00 00	 jmp	 $LN5@Allocate
$LN4@Allocate:

; 80   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 81   : 
; 82   : 		{	// allocate normal block
; 83   : 		_Ptr = ::operator new(_User_size);

  00149	8b 45 ec	 mov	 eax, DWORD PTR __User_size$[ebp]
  0014c	50		 push	 eax
  0014d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00152	83 c4 04	 add	 esp, 4
  00155	89 45 f8	 mov	 DWORD PTR __Ptr$[ebp], eax

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  00158	83 7d f8 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0015c	75 6e		 jne	 SHORT $LN5@Allocate
  0015e	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_09GLJCAGLP@_Ptr?5?$CB?$DN?50?$AA@
  00163	85 c0		 test	 eax, eax
  00165	74 04		 je	 SHORT $LN12@Allocate
  00167	33 c9		 xor	 ecx, ecx
  00169	75 35		 jne	 SHORT $LN13@Allocate
$LN12@Allocate:
  0016b	8b f4		 mov	 esi, esp
  0016d	68 00 00 00 00	 push	 OFFSET ??_C@_1CC@GKJLLHIM@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
  00172	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00177	6a 00		 push	 0
  00179	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA
  0017f	83 c2 24	 add	 edx, 36			; 00000024H
  00182	52		 push	 edx
  00183	68 00 00 00 00	 push	 OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00188	6a 02		 push	 2
  0018a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00190	83 c4 18	 add	 esp, 24			; 00000018H
  00193	3b f4		 cmp	 esi, esp
  00195	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0019a	83 f8 01	 cmp	 eax, 1
  0019d	75 01		 jne	 SHORT $LN13@Allocate
  0019f	cc		 int	 3
$LN13@Allocate:
  001a0	8b f4		 mov	 esi, esp
  001a2	6a 00		 push	 0
  001a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA
  001a9	83 c0 24	 add	 eax, 36			; 00000024H
  001ac	50		 push	 eax
  001ad	68 00 00 00 00	 push	 OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  001b2	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
  001b7	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
  001bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  001c2	83 c4 14	 add	 esp, 20			; 00000014H
  001c5	3b f4		 cmp	 esi, esp
  001c7	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@Allocate:

; 85   : 		}
; 86   : 	return (_Ptr);

  001cc	8b 45 f8	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN9@Allocate:

; 87   : 	}

  001cf	5f		 pop	 edi
  001d0	5e		 pop	 esi
  001d1	5b		 pop	 ebx
  001d2	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  001d8	3b ec		 cmp	 ebp, esp
  001da	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001df	8b e5		 mov	 esp, ebp
  001e1	5d		 pop	 ebp
  001e2	c3		 ret	 0
?_Allocate@std@@YAPAXII_N@Z ENDP			; std::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -20						; size = 4
_this$ = -8						; size = 4
?_Orphan_me@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT
; _this$ = ecx

; 193  : 		{	// cut ties with parent

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 194  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 195  : 		if (_Myproxy != 0)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 38 00	 cmp	 DWORD PTR [eax], 0
  00029	74 67		 je	 SHORT $LN1@Orphan_me

; 196  : 			{	// adopted, remove self from list
; 197  : 			_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;

  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	83 c1 04	 add	 ecx, 4
  00033	89 4d ec	 mov	 DWORD PTR __Pnext$1[ebp], ecx
$LN2@Orphan_me:

; 198  : 			while (*_Pnext != 0 && *_Pnext != this)

  00036	8b 45 ec	 mov	 eax, DWORD PTR __Pnext$1[ebp]
  00039	83 38 00	 cmp	 DWORD PTR [eax], 0
  0003c	74 17		 je	 SHORT $LN3@Orphan_me
  0003e	8b 45 ec	 mov	 eax, DWORD PTR __Pnext$1[ebp]
  00041	8b 08		 mov	 ecx, DWORD PTR [eax]
  00043	3b 4d f8	 cmp	 ecx, DWORD PTR _this$[ebp]
  00046	74 0d		 je	 SHORT $LN3@Orphan_me

; 199  : 				_Pnext = &(*_Pnext)->_Mynextiter;

  00048	8b 45 ec	 mov	 eax, DWORD PTR __Pnext$1[ebp]
  0004b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004d	83 c1 04	 add	 ecx, 4
  00050	89 4d ec	 mov	 DWORD PTR __Pnext$1[ebp], ecx
  00053	eb e1		 jmp	 SHORT $LN2@Orphan_me
$LN3@Orphan_me:

; 200  : 
; 201  : 			if (*_Pnext == 0)

  00055	8b 45 ec	 mov	 eax, DWORD PTR __Pnext$1[ebp]
  00058	83 38 00	 cmp	 DWORD PTR [eax], 0
  0005b	75 21		 jne	 SHORT $LN5@Orphan_me

; 202  : 				_DEBUG_ERROR("ITERATOR LIST CORRUPTED!");

  0005d	8b f4		 mov	 esi, esp
  0005f	68 ca 00 00 00	 push	 202			; 000000caH
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_1JA@MHADJNIL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
  0006e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00074	83 c4 0c	 add	 esp, 12			; 0000000cH
  00077	3b f4		 cmp	 esi, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@Orphan_me:

; 203  : 			*_Pnext = _Mynextiter;

  0007e	8b 45 ec	 mov	 eax, DWORD PTR __Pnext$1[ebp]
  00081	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00087	89 10		 mov	 DWORD PTR [eax], edx

; 204  : 			_Myproxy = 0;

  00089	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN1@Orphan_me:

; 205  : 			}
; 206  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 207  : 		}

  00092	5f		 pop	 edi
  00093	5e		 pop	 esi
  00094	5b		 pop	 ebx
  00095	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0009b	3b ec		 cmp	 ebp, esp
  0009d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c3		 ret	 0
?_Orphan_me@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ PROC	; std::_Iterator_base12::_Getpnext, COMDAT
; _this$ = ecx

; 188  : 		{	// get address of remaining iterator chain

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 189  : 		return (&_Mynextiter);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c0 04	 add	 eax, 4

; 190  : 		}

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ENDP	; std::_Iterator_base12::_Getpnext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx

; 183  : 		{	// get owning container

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 184  : 		return (_Myproxy == 0 ? 0 : _Myproxy->_Mycont);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 38 00	 cmp	 DWORD PTR [eax], 0
  00029	75 0c		 jne	 SHORT $LN3@Getcont
  0002b	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv68[ebp], 0
  00035	eb 0d		 jmp	 SHORT $LN4@Getcont
$LN3@Getcont:
  00037	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003c	8b 02		 mov	 eax, DWORD PTR [edx]
  0003e	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv68[ebp], eax
$LN4@Getcont:
  00044	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv68[ebp]

; 185  : 		}

  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Clrcont@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Clrcont@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Clrcont, COMDAT
; _this$ = ecx

; 178  : 		{	// disown owning container

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 179  : 		_Myproxy = 0;

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 180  : 		}

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?_Clrcont@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Clrcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$2 = -56						; size = 4
__Parent_proxy$3 = -44					; size = 4
__Lock$4 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx

; 149  : 		{	// adopt this iterator by parent

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 04 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-252]
  00021	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 150  : 		if (_Parent == 0)

  00042	83 7d 08 00	 cmp	 DWORD PTR __Parent$[ebp], 0
  00046	75 3e		 jne	 SHORT $LN2@Adopt

; 151  : 			{	// no future parent, just disown current parent
; 152  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 153  : 			_Lockit _Lock(_LOCK_DEBUG);

  00048	8b f4		 mov	 esi, esp
  0004a	6a 03		 push	 3
  0004c	8d 4d e0	 lea	 ecx, DWORD PTR __Lock$4[ebp]
  0004f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  00055	3b f4		 cmp	 esi, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 154  : 			_Orphan_me();

  00063	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 155  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 156  : 			}

  0006b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00072	8b f4		 mov	 esi, esp
  00074	8d 4d e0	 lea	 ecx, DWORD PTR __Lock$4[ebp]
  00077	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0007d	3b f4		 cmp	 esi, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 157  : 		else

  00084	eb 6b		 jmp	 SHORT $LN1@Adopt
$LN2@Adopt:

; 158  : 			{	// have a parent, do adoption
; 159  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;

  00086	8b 45 08	 mov	 eax, DWORD PTR __Parent$[ebp]
  00089	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008b	89 4d d4	 mov	 DWORD PTR __Parent_proxy$3[ebp], ecx

; 160  : 
; 161  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 162  : 			if (_Myproxy != _Parent_proxy)

  0008e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00091	8b 08		 mov	 ecx, DWORD PTR [eax]
  00093	3b 4d d4	 cmp	 ecx, DWORD PTR __Parent_proxy$3[ebp]
  00096	74 59		 je	 SHORT $LN1@Adopt

; 163  : 				{	// change parentage
; 164  : 				_Lockit _Lock(_LOCK_DEBUG);

  00098	8b f4		 mov	 esi, esp
  0009a	6a 03		 push	 3
  0009c	8d 4d c8	 lea	 ecx, DWORD PTR __Lock$2[ebp]
  0009f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  000a5	3b f4		 cmp	 esi, esp
  000a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ac	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 165  : 				_Orphan_me();

  000b3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b6	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 166  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;

  000bb	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000be	8b 4d d4	 mov	 ecx, DWORD PTR __Parent_proxy$3[ebp]
  000c1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c4	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 167  : 				_Parent_proxy->_Myfirstiter = this;

  000c7	8b 45 d4	 mov	 eax, DWORD PTR __Parent_proxy$3[ebp]
  000ca	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000cd	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 168  : 				_Myproxy = _Parent_proxy;

  000d0	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000d3	8b 4d d4	 mov	 ecx, DWORD PTR __Parent_proxy$3[ebp]
  000d6	89 08		 mov	 DWORD PTR [eax], ecx

; 169  : 				}

  000d8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000df	8b f4		 mov	 esi, esp
  000e1	8d 4d c8	 lea	 ecx, DWORD PTR __Lock$2[ebp]
  000e4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000ea	3b f4		 cmp	 esi, esp
  000ec	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@Adopt:

; 170  : 
; 171  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 172  : 			_Myproxy = _Parent_proxy;
; 173  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 174  : 			}
; 175  : 		}

  000f1	52		 push	 edx
  000f2	8b cd		 mov	 ecx, ebp
  000f4	50		 push	 eax
  000f5	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@Adopt
  000fb	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00100	58		 pop	 eax
  00101	5a		 pop	 edx
  00102	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00105	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0010c	59		 pop	 ecx
  0010d	5f		 pop	 edi
  0010e	5e		 pop	 esi
  0010f	5b		 pop	 ebx
  00110	81 c4 fc 00 00
	00		 add	 esp, 252		; 000000fcH
  00116	3b ec		 cmp	 ebp, esp
  00118	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011d	8b e5		 mov	 esp, ebp
  0011f	5d		 pop	 ebp
  00120	c2 04 00	 ret	 4
  00123	90		 npad	 1
$LN12@Adopt:
  00124	02 00 00 00	 DD	 2
  00128	00 00 00 00	 DD	 $LN11@Adopt
$LN11@Adopt:
  0012c	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00130	04 00 00 00	 DD	 4
  00134	00 00 00 00	 DD	 $LN8@Adopt
  00138	c8 ff ff ff	 DD	 -56			; ffffffc8H
  0013c	04 00 00 00	 DD	 4
  00140	00 00 00 00	 DD	 $LN9@Adopt
$LN9@Adopt:
  00144	5f		 DB	 95			; 0000005fH
  00145	4c		 DB	 76			; 0000004cH
  00146	6f		 DB	 111			; 0000006fH
  00147	63		 DB	 99			; 00000063H
  00148	6b		 DB	 107			; 0000006bH
  00149	00		 DB	 0
$LN8@Adopt:
  0014a	5f		 DB	 95			; 0000005fH
  0014b	4c		 DB	 76			; 0000004cH
  0014c	6f		 DB	 111			; 0000006fH
  0014d	63		 DB	 99			; 00000063H
  0014e	6b		 DB	 107			; 0000006bH
  0014f	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e0	 lea	 ecx, DWORD PTR __Lock$4[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1:
  00012	8b f4		 mov	 esi, esp
  00014	8d 4d c8	 lea	 ecx, DWORD PTR __Lock$2[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0001d	3b f4		 cmp	 esi, esp
  0001f	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z:
  00024	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00028	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002b	8b 8a 00 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-256]
  00031	33 c8		 xor	 ecx, eax
  00033	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00038	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
  0003d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx

; 141  : 		{	// destroy the iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1_Iterator_base12@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00021	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 142  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 143  : 		_Lockit _Lock(_LOCK_DEBUG);

  00042	8b f4		 mov	 esi, esp
  00044	6a 03		 push	 3
  00046	8d 4d e0	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 144  : 		_Orphan_me();

  00056	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 145  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 146  : 		}

  0005e	8b f4		 mov	 esi, esp
  00060	8d 4d e0	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00069	3b f4		 cmp	 esi, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	52		 push	 edx
  00071	8b cd		 mov	 ecx, ebp
  00073	50		 push	 eax
  00074	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@Iterator_b
  0007a	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0007f	58		 pop	 eax
  00080	5a		 pop	 edx
  00081	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00084	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008b	59		 pop	 ecx
  0008c	5f		 pop	 edi
  0008d	5e		 pop	 esi
  0008e	5b		 pop	 ebx
  0008f	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  00095	3b ec		 cmp	 ebp, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c3		 ret	 0
$LN6@Iterator_b:
  000a0	01 00 00 00	 DD	 1
  000a4	00 00 00 00	 DD	 $LN5@Iterator_b
$LN5@Iterator_b:
  000a8	e0 ff ff ff	 DD	 -32			; ffffffe0H
  000ac	04 00 00 00	 DD	 4
  000b0	00 00 00 00	 DD	 $LN3@Iterator_b
$LN3@Iterator_b:
  000b4	5f		 DB	 95			; 0000005fH
  000b5	4c		 DB	 76			; 0000004cH
  000b6	6f		 DB	 111			; 0000006fH
  000b7	63		 DB	 99			; 00000063H
  000b8	6b		 DB	 107			; 0000006bH
  000b9	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Iterator_base12@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 18 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-232]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
__Lock$2 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z PROC		; std::_Iterator_base12::operator=, COMDAT
; _this$ = ecx

; 124  : 		{	// assign an iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00021	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 125  : 		if (_Myproxy == _Right._Myproxy)

  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00048	8b 10		 mov	 edx, DWORD PTR [eax]
  0004a	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0004c	75 02		 jne	 SHORT $LN2@operator
  0004e	eb 56		 jmp	 SHORT $LN3@operator
$LN2@operator:

; 126  : 			;
; 127  : 		else if (_Right._Myproxy != 0)

  00050	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00053	83 38 00	 cmp	 DWORD PTR [eax], 0
  00056	74 12		 je	 SHORT $LN4@operator

; 128  : 			_Adopt(_Right._Myproxy->_Mycont);

  00058	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0005b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005f	52		 push	 edx
  00060	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 129  : 		else

  00068	eb 3c		 jmp	 SHORT $LN3@operator
$LN4@operator:

; 130  : 			{	// becoming invalid, disown current parent
; 131  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 132  : 			_Lockit _Lock(_LOCK_DEBUG);

  0006a	8b f4		 mov	 esi, esp
  0006c	6a 03		 push	 3
  0006e	8d 4d e0	 lea	 ecx, DWORD PTR __Lock$2[ebp]
  00071	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  00077	3b f4		 cmp	 esi, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 133  : 			_Orphan_me();

  00085	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 134  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 135  : 			}

  0008d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00094	8b f4		 mov	 esi, esp
  00096	8d 4d e0	 lea	 ecx, DWORD PTR __Lock$2[ebp]
  00099	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@operator:

; 136  : 
; 137  : 		return (*this);

  000a6	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]

; 138  : 		}

  000a9	52		 push	 edx
  000aa	8b cd		 mov	 ecx, ebp
  000ac	50		 push	 eax
  000ad	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@operator
  000b3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000b8	58		 pop	 eax
  000b9	5a		 pop	 edx
  000ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c4	59		 pop	 ecx
  000c5	5f		 pop	 edi
  000c6	5e		 pop	 esi
  000c7	5b		 pop	 ebx
  000c8	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  000ce	3b ec		 cmp	 ebp, esp
  000d0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 04 00	 ret	 4
  000db	90		 npad	 1
$LN11@operator:
  000dc	01 00 00 00	 DD	 1
  000e0	00 00 00 00	 DD	 $LN10@operator
$LN10@operator:
  000e4	e0 ff ff ff	 DD	 -32			; ffffffe0H
  000e8	04 00 00 00	 DD	 4
  000ec	00 00 00 00	 DD	 $LN8@operator
$LN8@operator:
  000f0	5f		 DB	 95			; 0000005fH
  000f1	4c		 DB	 76			; 0000004cH
  000f2	6f		 DB	 111			; 0000006fH
  000f3	63		 DB	 99			; 00000063H
  000f4	6b		 DB	 107			; 0000006bH
  000f5	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e0	 lea	 ecx, DWORD PTR __Lock$2[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a 18 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-232]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
  0002b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ENDP		; std::_Iterator_base12::operator=
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0_Iterator_base12@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??0_Iterator_base12@std@@QAE@ABU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 119  : 		{	// copy an iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 118  : 		: _Myproxy(0), _Mynextiter(0)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 120  : 		*this = _Right;

  00036	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00039	50		 push	 eax
  0003a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=

; 121  : 		}

  00042	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
??0_Iterator_base12@std@@QAE@ABU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 114  : 		{	// construct orphaned iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 113  : 		: _Myproxy(0), _Mynextiter(0)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 115  : 		}

  00036	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -32						; size = 4
__Lock$2 = -20						; size = 4
_this$ = -8						; size = 4
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx

; 215  : 	{	// orphan all iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00013	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 216  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 217  : 	if (_Myproxy != 0)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 38 00	 cmp	 DWORD PTR [eax], 0
  00029	74 61		 je	 SHORT $LN1@Orphan_all

; 218  : 		{	// proxy allocated, drain it
; 219  : 		_Lockit _Lock(_LOCK_DEBUG);

  0002b	8b f4		 mov	 esi, esp
  0002d	6a 03		 push	 3
  0002f	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$2[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  00038	3b f4		 cmp	 esi, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 220  : 
; 221  : 		for (_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;

  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	8b 08		 mov	 ecx, DWORD PTR [eax]
  00044	83 c1 04	 add	 ecx, 4
  00047	89 4d e0	 mov	 DWORD PTR __Pnext$1[ebp], ecx
  0004a	eb 0d		 jmp	 SHORT $LN4@Orphan_all
$LN2@Orphan_all:

; 222  : 			*_Pnext != 0; *_Pnext = (*_Pnext)->_Mynextiter)

  0004c	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$1[ebp]
  0004f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00051	8b 55 e0	 mov	 edx, DWORD PTR __Pnext$1[ebp]
  00054	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00057	89 02		 mov	 DWORD PTR [edx], eax
$LN4@Orphan_all:
  00059	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$1[ebp]
  0005c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0005f	74 0d		 je	 SHORT $LN3@Orphan_all

; 223  : 			(*_Pnext)->_Myproxy = 0;

  00061	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$1[ebp]
  00064	8b 08		 mov	 ecx, DWORD PTR [eax]
  00066	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
  0006c	eb de		 jmp	 SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 224  : 		_Myproxy->_Myfirstiter = 0;

  0006e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00071	8b 08		 mov	 ecx, DWORD PTR [eax]
  00073	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 225  : 		}

  0007a	8b f4		 mov	 esi, esp
  0007c	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$2[ebp]
  0007f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00085	3b f4		 cmp	 esi, esp
  00087	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@Orphan_all:

; 226  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 227  : 	}

  0008c	52		 push	 edx
  0008d	8b cd		 mov	 ecx, ebp
  0008f	50		 push	 eax
  00090	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@Orphan_all
  00096	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0009b	58		 pop	 eax
  0009c	5a		 pop	 edx
  0009d	5f		 pop	 edi
  0009e	5e		 pop	 esi
  0009f	5b		 pop	 ebx
  000a0	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  000a6	3b ec		 cmp	 ebp, esp
  000a8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ad	8b e5		 mov	 esp, ebp
  000af	5d		 pop	 ebp
  000b0	c3		 ret	 0
  000b1	0f 1f 00	 npad	 3
$LN10@Orphan_all:
  000b4	01 00 00 00	 DD	 1
  000b8	00 00 00 00	 DD	 $LN9@Orphan_all
$LN9@Orphan_all:
  000bc	ec ff ff ff	 DD	 -20			; ffffffecH
  000c0	04 00 00 00	 DD	 4
  000c4	00 00 00 00	 DD	 $LN8@Orphan_all
$LN8@Orphan_all:
  000c8	5f		 DB	 95			; 0000005fH
  000c9	4c		 DB	 76			; 0000004cH
  000ca	6f		 DB	 111			; 0000006fH
  000cb	63		 DB	 99			; 00000063H
  000cc	6b		 DB	 107			; 0000006bH
  000cd	00		 DB	 0
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Container_base12::_Getpfirst, COMDAT
; _this$ = ecx

; 99   : 		{	// get address of iterator chain

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 100  : 		return (_Myproxy == 0 ? 0 : &_Myproxy->_Myfirstiter);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 38 00	 cmp	 DWORD PTR [eax], 0
  00029	75 0c		 jne	 SHORT $LN3@Getpfirst
  0002b	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv68[ebp], 0
  00035	eb 0e		 jmp	 SHORT $LN4@Getpfirst
$LN3@Getpfirst:
  00037	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003c	83 c2 04	 add	 edx, 4
  0003f	89 95 30 ff ff
	ff		 mov	 DWORD PTR tv68[ebp], edx
$LN4@Getpfirst:
  00045	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv68[ebp]

; 101  : 		}

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Container_base12::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??1_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::~_Container_base12, COMDAT
; _this$ = ecx

; 94   : 		{	// destroy the container

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1_Container_base12@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 95   : 		_Orphan_all();

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 96   : 		}

  0004a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00054	59		 pop	 ecx
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Container_base12@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1_Container_base12@std@@QAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::~_Container_base12
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx

; 80   : 		{	// construct childless container

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 79   : 		: _Myproxy(0)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 81   : 		}

  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx

; 68   : 		{	// construct from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 67   : 		: _Mycont(0), _Myfirstiter(0)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 69   : 		}

  00036	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$char_traits@D@std@@SAHXZ PROC			; std::char_traits<char>::eof, COMDAT

; 605  : 		{	// return end-of-file metacharacter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 606  : 		return (EOF);

  0001e	83 c8 ff	 or	 eax, -1

; 607  : 		}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?eof@?$char_traits@D@std@@SAHXZ ENDP			; std::char_traits<char>::eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?not_eof@?$char_traits@D@std@@SAHABH@Z
_TEXT	SEGMENT
tv68 = -200						; size = 4
tv69 = -196						; size = 4
__Meta$ = 8						; size = 4
?not_eof@?$char_traits@D@std@@SAHABH@Z PROC		; std::char_traits<char>::not_eof, COMDAT

; 600  : 		{	// return anything but EOF

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c8 00 00
	00		 sub	 esp, 200		; 000000c8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 38 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-200]
  00012	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 601  : 		return (_Meta != eof() ? _Meta : !eof());

  0001e	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00023	8b 4d 08	 mov	 ecx, DWORD PTR __Meta$[ebp]
  00026	39 01		 cmp	 DWORD PTR [ecx], eax
  00028	74 0d		 je	 SHORT $LN5@not_eof
  0002a	8b 55 08	 mov	 edx, DWORD PTR __Meta$[ebp]
  0002d	8b 02		 mov	 eax, DWORD PTR [edx]
  0002f	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv69[ebp], eax
  00035	eb 2b		 jmp	 SHORT $LN6@not_eof
$LN5@not_eof:
  00037	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  0003c	85 c0		 test	 eax, eax
  0003e	75 0c		 jne	 SHORT $LN3@not_eof
  00040	c7 85 38 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv68[ebp], 1
  0004a	eb 0a		 jmp	 SHORT $LN4@not_eof
$LN3@not_eof:
  0004c	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv68[ebp], 0
$LN4@not_eof:
  00056	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR tv68[ebp]
  0005c	89 8d 3c ff ff
	ff		 mov	 DWORD PTR tv69[ebp], ecx
$LN6@not_eof:
  00062	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv69[ebp]

; 602  : 		}

  00068	5f		 pop	 edi
  00069	5e		 pop	 esi
  0006a	5b		 pop	 ebx
  0006b	81 c4 c8 00 00
	00		 add	 esp, 200		; 000000c8H
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
?not_eof@?$char_traits@D@std@@SAHABH@Z ENDP		; std::char_traits<char>::not_eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z
_TEXT	SEGMENT
tv65 = -196						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z PROC	; std::char_traits<char>::eq_int_type, COMDAT

; 594  : 		{	// test for metacharacter equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 595  : 		return (_Left == _Right);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  00024	8b 10		 mov	 edx, DWORD PTR [eax]
  00026	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00028	75 0c		 jne	 SHORT $LN3@eq_int_typ
  0002a	c7 85 3c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv65[ebp], 1
  00034	eb 0a		 jmp	 SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
  00036	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv65[ebp], 0
$LN4@eq_int_typ:
  00040	8a 85 3c ff ff
	ff		 mov	 al, BYTE PTR tv65[ebp]

; 596  : 		}

  00046	5f		 pop	 edi
  00047	5e		 pop	 esi
  00048	5b		 pop	 ebx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ENDP	; std::char_traits<char>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?to_int_type@?$char_traits@D@std@@SAHABD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 4
?to_int_type@?$char_traits@D@std@@SAHABD@Z PROC		; std::char_traits<char>::to_int_type, COMDAT

; 588  : 		{	// convert character to metacharacter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 589  : 		return ((unsigned char)_Ch);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ch$[ebp]
  00021	0f b6 00	 movzx	 eax, BYTE PTR [eax]

; 590  : 		}

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?to_int_type@?$char_traits@D@std@@SAHABD@Z ENDP		; std::char_traits<char>::to_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?to_char_type@?$char_traits@D@std@@SADABH@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?to_char_type@?$char_traits@D@std@@SADABH@Z PROC	; std::char_traits<char>::to_char_type, COMDAT

; 582  : 		{	// convert metacharacter to character

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 583  : 		return ((_Elem)_Meta);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Meta$[ebp]
  00021	8a 00		 mov	 al, BYTE PTR [eax]

; 584  : 		}

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?to_char_type@?$char_traits@D@std@@SADABH@Z ENDP	; std::char_traits<char>::to_char_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 564  : 		{	// assign an element

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 565  : 		_Left = _Right;

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  00024	8a 11		 mov	 dl, BYTE PTR [ecx]
  00026	88 10		 mov	 BYTE PTR [eax], dl

; 566  : 		}

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAPADPADID@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ch$ = 16						; size = 1
?assign@?$char_traits@D@std@@SAPADPADID@Z PROC		; std::char_traits<char>::assign, COMDAT

; 559  : 		{	// assign _Count * _Ch to [_First, ...)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 560  : 		return ((_Elem *)_CSTD memset(_First, _Ch, _Count));

  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00021	50		 push	 eax
  00022	0f be 4d 10	 movsx	 ecx, BYTE PTR __Ch$[ebp]
  00026	51		 push	 ecx
  00027	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0002a	52		 push	 edx
  0002b	e8 00 00 00 00	 call	 _memset
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH

; 561  : 		}

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
?assign@?$char_traits@D@std@@SAPADPADID@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 552  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 553  : 		return (_Count == 0 ? _First1

  0001e	83 7d 10 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00022	75 0b		 jne	 SHORT $LN3@move
  00024	8b 45 08	 mov	 eax, DWORD PTR __First1$[ebp]
  00027	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv69[ebp], eax
  0002d	eb 24		 jmp	 SHORT $LN4@move
$LN3@move:
  0002f	8b f4		 mov	 esi, esp
  00031	8b 4d 10	 mov	 ecx, DWORD PTR __Count$[ebp]
  00034	51		 push	 ecx
  00035	8b 55 0c	 mov	 edx, DWORD PTR __First2$[ebp]
  00038	52		 push	 edx
  00039	8b 45 08	 mov	 eax, DWORD PTR __First1$[ebp]
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  00043	83 c4 0c	 add	 esp, 12			; 0000000cH
  00046	3b f4		 cmp	 esi, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv69[ebp], eax
$LN4@move:
  00053	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv69[ebp]

; 554  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));
; 555  : 		}

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  00062	3b ec		 cmp	 ebp, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c3		 ret	 0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 529  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 530  : 		return (_Count == 0 ? _First1

  0001e	83 7d 10 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00022	75 0b		 jne	 SHORT $LN3@copy
  00024	8b 45 08	 mov	 eax, DWORD PTR __First1$[ebp]
  00027	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv69[ebp], eax
  0002d	eb 1a		 jmp	 SHORT $LN4@copy
$LN3@copy:
  0002f	8b 4d 10	 mov	 ecx, DWORD PTR __Count$[ebp]
  00032	51		 push	 ecx
  00033	8b 55 0c	 mov	 edx, DWORD PTR __First2$[ebp]
  00036	52		 push	 edx
  00037	8b 45 08	 mov	 eax, DWORD PTR __First1$[ebp]
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 _memcpy
  00040	83 c4 0c	 add	 esp, 12			; 0000000cH
  00043	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv69[ebp], eax
$LN4@copy:
  00049	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv69[ebp]

; 531  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));
; 532  : 		}

  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -196						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 522  : 		{	// find length of null-terminated string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 523  : 		return (*_First == 0 ? 0

  0001e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00021	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00024	85 c9		 test	 ecx, ecx
  00026	75 0c		 jne	 SHORT $LN3@length
  00028	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv68[ebp], 0
  00032	eb 12		 jmp	 SHORT $LN4@length
$LN3@length:
  00034	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 _strlen
  0003d	83 c4 04	 add	 esp, 4
  00040	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv68[ebp], eax
$LN4@length:
  00046	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv68[ebp]

; 524  : 			: _CSTD strlen(_First));
; 525  : 		}

  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5b		 pop	 ebx
  0004f	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  00055	3b ec		 cmp	 ebp, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?compare@?$char_traits@D@std@@SAHPBD0I@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?compare@?$char_traits@D@std@@SAHPBD0I@Z PROC		; std::char_traits<char>::compare, COMDAT

; 516  : 		{	// compare [_First1, _First1 + _Count) with [_First2, ...)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 517  : 		return (_Count == 0 ? 0

  0001e	83 7d 10 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00022	75 0c		 jne	 SHORT $LN3@compare
  00024	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv69[ebp], 0
  0002e	eb 1a		 jmp	 SHORT $LN4@compare
$LN3@compare:
  00030	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  00033	50		 push	 eax
  00034	8b 4d 0c	 mov	 ecx, DWORD PTR __First2$[ebp]
  00037	51		 push	 ecx
  00038	8b 55 08	 mov	 edx, DWORD PTR __First1$[ebp]
  0003b	52		 push	 edx
  0003c	e8 00 00 00 00	 call	 _memcmp
  00041	83 c4 0c	 add	 esp, 12			; 0000000cH
  00044	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv69[ebp], eax
$LN4@compare:
  0004a	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv69[ebp]

; 518  : 			: _CSTD memcmp(_First1, _First2, _Count));
; 519  : 		}

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  00059	3b ec		 cmp	 ebp, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
?compare@?$char_traits@D@std@@SAHPBD0I@Z ENDP		; std::char_traits<char>::compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_new.h
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 93   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 94   :         return;
; 95   :     }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 87   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 88   :         (void)_Size;
; 89   :         return _Where;

  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 90   :     }

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0e		 je	 SHORT $LN2@scalar
  00033	6a 0c		 push	 12			; 0000000cH
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003e	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 88   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 89   :         return _Data._What ? _Data._What : "Unknown exception";

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002a	74 0e		 je	 SHORT $LN3@what
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00032	89 95 30 ff ff
	ff		 mov	 DWORD PTR tv69[ebp], edx
  00038	eb 0a		 jmp	 SHORT $LN4@what
$LN3@what:
  0003a	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv69[ebp], OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception?$AA@
$LN4@what:
  00044	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv69[ebp]

; 90   :     }

  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 83   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 84   :         __std_exception_destroy(&_Data);

  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c0 04	 add	 eax, 4
  00032	8b f4		 mov	 esi, esp
  00034	50		 push	 eax
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____std_exception_destroy
  0003b	83 c4 04	 add	 esp, 4
  0003e	3b f4		 cmp	 esi, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 85   :     }

  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 66   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 65   :         : _Data()

  0002c	33 c0		 xor	 eax, eax
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	83 c1 04	 add	 ecx, 4
  00034	89 01		 mov	 DWORD PTR [ecx], eax
  00036	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 67   :         __std_exception_copy(&_Other._Data, &_Data);

  00039	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	83 c0 04	 add	 eax, 4
  0003f	8b f4		 mov	 esi, esp
  00041	50		 push	 eax
  00042	8b 4d 08	 mov	 ecx, DWORD PTR __Other$[ebp]
  00045	83 c1 04	 add	 ecx, 4
  00048	51		 push	 ecx
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____std_exception_copy
  0004f	83 c4 08	 add	 esp, 8
  00052	3b f4		 cmp	 esi, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 68   :     }

  00059	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00065	3b ec		 cmp	 ebp, esp
  00067	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@QBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Message$ = 8						; size = 4
___formal$ = 12						; size = 4
??0exception@std@@QAE@QBDH@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 60   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 59   :         : _Data()

  0002c	33 c0		 xor	 eax, eax
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	83 c1 04	 add	 ecx, 4
  00034	89 01		 mov	 DWORD PTR [ecx], eax
  00036	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 61   :         _Data._What = _Message;

  00039	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR __Message$[ebp]
  0003f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 62   :     }

  00042	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 08 00	 ret	 8
??0exception@std@@QAE@QBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\corecrt_memcpy_s.h
;	COMDAT _memcpy_s
_TEXT	SEGMENT
tv79 = -232						; size = 4
tv75 = -232						; size = 4
tv66 = -232						; size = 4
__Expr_val$1 = -32					; size = 4
__Expr_val$2 = -20					; size = 4
__Expr_val$3 = -8					; size = 4
__Destination$ = 8					; size = 4
__DestinationSize$ = 12					; size = 4
__Source$ = 16						; size = 4
__SourceSize$ = 20					; size = 4
_memcpy_s PROC						; COMDAT

; 41   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00012	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 42   :         if (_SourceSize == 0)

  0001e	83 7d 14 00	 cmp	 DWORD PTR __SourceSize$[ebp], 0
  00022	75 07		 jne	 SHORT $LN2@memcpy_s

; 43   :         {
; 44   :             return 0;

  00024	33 c0		 xor	 eax, eax
  00026	e9 48 01 00 00	 jmp	 $LN1@memcpy_s
$LN2@memcpy_s:

; 45   :         }
; 46   : 
; 47   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Destination != NULL, EINVAL);

  0002b	83 7d 08 00	 cmp	 DWORD PTR __Destination$[ebp], 0
  0002f	74 0c		 je	 SHORT $LN9@memcpy_s
  00031	c7 85 18 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv66[ebp], 1
  0003b	eb 0a		 jmp	 SHORT $LN10@memcpy_s
$LN9@memcpy_s:
  0003d	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv66[ebp], 0
$LN10@memcpy_s:
  00047	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR tv66[ebp]
  0004d	89 45 f8	 mov	 DWORD PTR __Expr_val$3[ebp], eax
  00050	83 7d f8 00	 cmp	 DWORD PTR __Expr_val$3[ebp], 0
  00054	75 2e		 jne	 SHORT $LN3@memcpy_s
  00056	8b f4		 mov	 esi, esp
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___errno
  0005e	3b f4		 cmp	 esi, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
  0006b	8b f4		 mov	 esi, esp
  0006d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter_noinfo
  00073	3b f4		 cmp	 esi, esp
  00075	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007a	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  0007f	e9 ef 00 00 00	 jmp	 $LN1@memcpy_s
$LN3@memcpy_s:

; 48   :         if (_Source == NULL || _DestinationSize < _SourceSize)

  00084	83 7d 10 00	 cmp	 DWORD PTR __Source$[ebp], 0
  00088	74 0c		 je	 SHORT $LN5@memcpy_s
  0008a	8b 45 0c	 mov	 eax, DWORD PTR __DestinationSize$[ebp]
  0008d	3b 45 14	 cmp	 eax, DWORD PTR __SourceSize$[ebp]
  00090	0f 83 c7 00 00
	00		 jae	 $LN4@memcpy_s
$LN5@memcpy_s:

; 49   :         {
; 50   :             memset(_Destination, 0, _DestinationSize);

  00096	8b 45 0c	 mov	 eax, DWORD PTR __DestinationSize$[ebp]
  00099	50		 push	 eax
  0009a	6a 00		 push	 0
  0009c	8b 4d 08	 mov	 ecx, DWORD PTR __Destination$[ebp]
  0009f	51		 push	 ecx
  000a0	e8 00 00 00 00	 call	 _memset
  000a5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 51   : 
; 52   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Source != NULL,                 EINVAL);

  000a8	83 7d 10 00	 cmp	 DWORD PTR __Source$[ebp], 0
  000ac	74 0c		 je	 SHORT $LN11@memcpy_s
  000ae	c7 85 18 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv75[ebp], 1
  000b8	eb 0a		 jmp	 SHORT $LN12@memcpy_s
$LN11@memcpy_s:
  000ba	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN12@memcpy_s:
  000c4	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR tv75[ebp]
  000ca	89 45 ec	 mov	 DWORD PTR __Expr_val$2[ebp], eax
  000cd	83 7d ec 00	 cmp	 DWORD PTR __Expr_val$2[ebp], 0
  000d1	75 2b		 jne	 SHORT $LN6@memcpy_s
  000d3	8b f4		 mov	 esi, esp
  000d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___errno
  000db	3b f4		 cmp	 esi, esp
  000dd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e2	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
  000e8	8b f4		 mov	 esi, esp
  000ea	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter_noinfo
  000f0	3b f4		 cmp	 esi, esp
  000f2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f7	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  000fc	eb 75		 jmp	 SHORT $LN1@memcpy_s
$LN6@memcpy_s:

; 53   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_DestinationSize >= _SourceSize, ERANGE);

  000fe	8b 45 0c	 mov	 eax, DWORD PTR __DestinationSize$[ebp]
  00101	3b 45 14	 cmp	 eax, DWORD PTR __SourceSize$[ebp]
  00104	72 0c		 jb	 SHORT $LN13@memcpy_s
  00106	c7 85 18 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv79[ebp], 1
  00110	eb 0a		 jmp	 SHORT $LN14@memcpy_s
$LN13@memcpy_s:
  00112	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv79[ebp], 0
$LN14@memcpy_s:
  0011c	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR tv79[ebp]
  00122	89 4d e0	 mov	 DWORD PTR __Expr_val$1[ebp], ecx
  00125	83 7d e0 00	 cmp	 DWORD PTR __Expr_val$1[ebp], 0
  00129	75 2b		 jne	 SHORT $LN7@memcpy_s
  0012b	8b f4		 mov	 esi, esp
  0012d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___errno
  00133	3b f4		 cmp	 esi, esp
  00135	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0013a	c7 00 22 00 00
	00		 mov	 DWORD PTR [eax], 34	; 00000022H
  00140	8b f4		 mov	 esi, esp
  00142	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter_noinfo
  00148	3b f4		 cmp	 esi, esp
  0014a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014f	b8 22 00 00 00	 mov	 eax, 34			; 00000022H
  00154	eb 1d		 jmp	 SHORT $LN1@memcpy_s
$LN7@memcpy_s:

; 54   : 
; 55   :             // Unreachable, but required to suppress /analyze warnings:
; 56   :             return EINVAL;

  00156	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  0015b	eb 16		 jmp	 SHORT $LN1@memcpy_s
$LN4@memcpy_s:

; 57   :         }
; 58   : 
; 59   :         memcpy(_Destination, _Source, _SourceSize);

  0015d	8b 45 14	 mov	 eax, DWORD PTR __SourceSize$[ebp]
  00160	50		 push	 eax
  00161	8b 4d 10	 mov	 ecx, DWORD PTR __Source$[ebp]
  00164	51		 push	 ecx
  00165	8b 55 08	 mov	 edx, DWORD PTR __Destination$[ebp]
  00168	52		 push	 edx
  00169	e8 00 00 00 00	 call	 _memcpy
  0016e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 60   :         return 0;

  00171	33 c0		 xor	 eax, eax
$LN1@memcpy_s:

; 61   :     }

  00173	5f		 pop	 edi
  00174	5e		 pop	 esi
  00175	5b		 pop	 ebx
  00176	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  0017c	3b ec		 cmp	 ebp, esp
  0017e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00183	8b e5		 mov	 esp, ebp
  00185	5d		 pop	 ebp
  00186	c3		 ret	 0
_memcpy_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\main.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File s:\chris\onedrive - uat\c++ programming ii\pete_final\pete_final\main.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
